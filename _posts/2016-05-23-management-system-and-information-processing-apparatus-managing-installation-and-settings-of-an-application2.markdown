---

title: Management system and information processing apparatus managing installation and settings of an application
abstract: An information processing apparatus comprises: an obtainment unit that obtains an application-related job from a management apparatus; a control unit that controls an application for the information processing apparatus in accordance with the obtained job; and a setting unit that changes, along with the control by the control unit, at least one of settings of the information processing apparatus and settings of the application in accordance with setting information included in the obtained job, wherein in a case where the obtained job represents an instruction to install the application, the control unit obtains, from the distribution apparatus, an application file and a license file that correspond to the application designated by the job, and installs the application using the application file and the license file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09635207&OS=09635207&RS=09635207
owner: Canon Kabushiki Kaisha
number: 09635207
owner_city: Tokyo
owner_country: JP
publication_date: 20160523
---
The present invention relates to a management system an information processing apparatus and a non transitory computer readable medium.

In recent years application platforms typically a Java platform have been provided in mobile telephone terminals multi function peripherals and similar information processing apparatuses. Various techniques have been proposed to provide expandable applications by taking advantage of the program portability of Java . One known example of such techniques to provide expandable applications is the Open Services Gateway initiative OSGi which is a Java application platform for embedded devices.

The OSGi defines a unit of software module management as a bundle and defines the specifications for managing a life cycle of a bundle including installed starting stopping and uninstalled. Note that a bundle is an OSGi module unit and is synonymous with an application in the present invention.

The aforementioned technique enables application life cycle management but requires work to change settings of applications and information processing apparatuses hereinafter changing of application related settings which is necessary for the applications to run in harmony with a user environment to be performed separately. Thus there is the problem of such work being time consuming to the user.

In view of the above problem the present invention aims to improve the efficiency of work related to application management by performing control of application installation and changing of application related settings simultaneously.

According to one aspect of the present invention there is provided a management system comprising an information processing apparatus a management apparatus that manages an application for the information processing apparatus and a distribution apparatus that distributes data related to the application wherein the information processing apparatus includes an obtainment unit configured to obtain a job related to the application from the management apparatus a control unit configured to control the application for the information processing apparatus in accordance with the job obtained by the obtainment unit and a setting unit configured to change along with the control by the control unit at least one of settings of the information processing apparatus and settings of the application in accordance with setting information included in the job obtained by the obtainment unit and in a case where the job obtained by the obtainment unit represents an instruction to install the application the control unit obtains from the distribution apparatus an application file and a license file that correspond to the application designated by the job and installs the application using the application file and the license file.

According to another aspect of the present invention there is provided an information processing apparatus connected to a management apparatus that performs application management and to a distribution apparatus that distributes application related data the information processing apparatus comprising an obtainment unit configured to obtain an application related job from the management apparatus a control unit configured to control an application for the information processing apparatus in accordance with the job obtained by the obtainment unit and a setting unit configured to change along with the control by the control unit at least one of settings of the information processing apparatus and settings of the application in accordance with setting information included in the job obtained by the obtainment unit wherein in a case where the job obtained by the obtainment unit represents an instruction to install the application the control unit obtains from the distribution apparatus an application file and a license file that correspond to the application designated by the job and installs the application using the application file and the license file.

According to another aspect of the present invention there is provided a non transitory computer readable medium storing a program that causes a computer to function as an obtainment unit configured to obtain an application related job a control unit configured to control an application for the computer in accordance with the job obtained by the obtainment unit and a setting unit configured to change along with the control by the control unit at least one of settings of the computer and settings of the application in accordance with setting information included in the job obtained by the obtainment unit wherein in a case where the job obtained by the obtainment unit represents an instruction to install the application the control unit obtains from a distribution apparatus an application file and a license file that correspond to the application designated by the job and installs the application using the application file and the license file.

The present invention enables control of application installation and changing of application related settings using one instruction thereby improving the efficiency of work related to application management.

Further features of the present invention will become apparent from the following description of an exemplary embodiment with reference to the attached drawings .

The following describes an embodiment of the present invention with reference to the drawings. Note that the following embodiment depicts but is not limited to an example in which a single body multi function peripheral having a plurality of functions such as copy facsimile and printer functions is used as an information processing apparatus. For example the present invention is applicable to an information processing apparatus that can add and delete applications without stopping a system of a mobile telephone terminal or the like.

The multi function peripheral MFP is obtained by integrating a plurality of functions such as scanner printer facsimile and file transmission functions into a copy machine. The multi function peripheral is located in an internal network such as a local area network LAN and is connected to the firewall .

The management server remotely manages the multi function peripheral . The management server is placed in for example a service center of a company that has developed or sells the multi function peripheral and includes a multi function peripheral management database not shown that stores various types of management data. The multi function peripheral management database stores for each client management information related to a multi function peripheral to be managed on the client side. The management information can specify the multi function peripheral to be managed and the states of applications and includes for example the configuration of the multi function peripheral the type of the multi function peripheral a peripheral identification number information of a location where the multi function peripheral is placed and information of installed or uninstalled applications.

Similar to the management server the application distribution server is placed in for example the service center of the company that has developed or sells the multi function peripheral and includes an application management database not shown that manages applications that can be additionally installed to the multi function peripheral. The application management database stores for example the names of the applications IDs for uniquely identifying the applications identification information and information for identifying an authority to use the applications hereinafter application usage right ID . The application distribution server also has a function of issuing an application usage right ID to a designated application and a function of issuing a license file necessary for installing an application to the multi function peripheral.

In order to realize remote management the remote management system according to the present embodiment has a function of exchanging with each apparatus a request and a response with respect to processing related to methods of an application that is mutually implemented via a remote procedure call RPC . Furthermore in order to realize an RPC the remote management system can use protocols such as hypertext transfer protocol HTTP and simple object access protocol SOAP . Note that the functions and protocols for remote management are not limited to those mentioned above and other methods and environments may be used.

In the foregoing connection environment as the firewall is located between the multi function peripheral and the network a request transmitted directly from the management server to the multi function peripheral is blocked by the firewall . In view of this at first a request is transmitted from the multi function peripheral to the management server and then a request from the management server is included in a response to the transmitted request taking this measure enables the request from the management server to pass through the firewall and arrive at the multi function peripheral .

The controller unit includes a central processing unit CPU that controls the overall operations of the management server . The CPU starts up an operating system OS using a boot program stored in a read only memory ROM . The CPU also executes various types of processing by executing on the OS a management program not shown for managing various types of applications which is stored in a hard disk drive HDD . A random access memory RAM is used as a working memory for the CPU . The HDD stores the management program application related setting job information for instructing the multi function peripheral to set an application and the like. Note that in the invention of the present application an application related setting job denotes a job that is issued by the management server based on an instruction from a user or the like for control related to an application for the multi function peripheral. The above will be described in detail later with reference to .

The ROM the RAM a manipulation unit I F a display unit I F and a network I F are connected to a system bus . The manipulation unit I F is an interface with the manipulation unit which includes a pointing device a keyboard and the like and transmits information input from the user via the manipulation unit to the CPU . The display unit I F outputs to the display unit screen data to be displayed on the display unit which includes a display and the like. The network I F exchanges data with an external apparatus connected to the management server via the network .

The controller unit includes a CPU that controls the overall operations of the application distribution server . The CPU starts up an OS using a boot program stored in a ROM . The CPU also executes various types of processing by executing on the OS an application distribution program not shown for distributing various types of applications which is stored in an HDD . A RAM is used as a working memory for the CPU . The HDD stores the application distribution program information related to distributable applications and the like.

The ROM the RAM a manipulation unit I F a display unit I F and a network I F are connected to a system bus . The manipulation unit I F is an interface with the manipulation unit which includes a pointing device a keyboard and the like and transmits information input from a user via the manipulation unit to the CPU . The display unit I F outputs to the display unit screen data to be displayed on the display unit which includes a display and the like. The network I F exchanges data with an external apparatus connected to the application distribution server via the network .

The application distribution server accepts as an application obtainment request from the multi function peripheral an identification number and an application usage right ID of the multi function peripheral . In response the application distribution server returns to the multi function peripheral an application file of an application corresponding to the application usage right ID and a license file necessary for installing the application.

The controller unit performs for example control for realizing a copy function for producing a printout of image data read by the scanner using the printer . The controller unit includes a CPU . The CPU starts up an OS using a boot program stored in a ROM . The CPU also executes various types of processing by executing on the OS programs stored in an HDD . A RAM is used as a working area for the CPU . The RAM provides not only the working area but also an image memory area for temporarily storing image data. The HDD stores various types of programs and image data.

The ROM the RAM a manipulation unit I F a network I F a USB host I F and an image bus I F are connected to the CPU via a system bus . The manipulation unit I F is an interface with the manipulation unit which includes a touchscreen and outputs image data to be displayed on the manipulation unit to the manipulation unit . The manipulation unit I F is an interface for sending to the CPU information input by a user via the manipulation unit . The network I F is an interface for establishing connection between the multi function peripheral and the external networks.

The USB host I F is an interface for communicating with a USB storage . The USB host I F is an interface for outputting data stored in the HDD to the USB storage . The USB host I F also obtains data stored in the USB storage and passes the obtained data to the CPU . A plurality of USB devices including the USB storage can be connected to the USB host I F . The USB storage is an external storage apparatus that stores data and is attachable to and removable from the USB host I F .

The image bus I F is a bus bridge for establishing a connection between the system bus and an image bus that transfers image data at high speed and for converting a data format. For example the image bus is constituted by a PCI bus or in accordance with an IEEE 1394. A device I F a scanner image processing unit and a printer image processing unit are provided on the image bus .

The scanner and the printer are connected to the device I F and the device I F applies synchronous asynchronous conversion to image data. The scanner image processing unit corrects processes and edits input image data. The printer image processing unit corrects printout image data converts the resolution of the printout image data and so on in accordance with the printer .

The multi function peripheral includes an OS platform and an application platform is configured on the OS platform . The application platform is configured as a runtime environment for a Java VM and composed of the Java VM as an interpreter a library an OSGi framework and system applications .

The library is composed of a Java standard application programming interface API library. The OSGi framework is a module for implementing the OSGi specifications. The OSGi framework allows a plurality of applications to run on the single Java VM performs application life cycle management and provides an inter application communication function and the like.

The system applications collectively refer to applications that are preinstalled in the multi function peripheral for managing general applications and providing an API as a service when the general applications manipulate the multi function peripheral . A description is given below of an installation control application and an application management application as examples of the system applications .

The installation control application is an application for managing an application that is not described in the OSGi specifications and a license to use that application in association with each other. The installation control application executes for example processing for decrypting an encrypted Java application file using key information included in a license file and installing the Java application file in the OSGi framework .

The application management application provides a manipulation screen for installing starting stopping and uninstalling an application as a web page using the installation control application . The screen provided by the application management application can be used via for example a browser not shown that is installed in a management PC not shown connected to the same LAN as the multi function peripheral . Examples of the screen provided by the application management application will be described later with reference to .

A login application identifies a user of the multi function peripheral and provides other applications with information including a user name and an email address of the user who is currently logged into the multi function peripheral . The general applications collectively refer to applications for expanding the functions of the multi function peripheral running on the application platform .

A management server communication application is an application for communicating with the management server and obtaining application related setting job information. When the remote management system includes a plurality of management servers one of the management servers from which the application related setting job information is obtained may be set in advance and communication may be performed based on that setting.

A life cycle management application obtains the application related setting job information from the management server using the management server communication application and configures settings in accordance with the application related setting job information. Similar to the application management application the life cycle management application uses the installation control application when changing the states of applications.

A stock printing application is an application for temporarily storing print jobs within the multi function peripheral and enabling printing of only necessary print jobs while print settings are checked on a screen not shown displayed on the manipulation unit of the multi function peripheral . The stock printing application imports and uses print jobs that have been input to the multi function peripheral as print jobs of the stock printing application . Therefore although settings need not be changed on the print job input side it is necessary to change the settings of the multi function peripheral so as not to print the print jobs. This enables the user to achieve stock printing using the stock printing application . Meanwhile printing cannot be performed by directly inputting print jobs to the multi function peripheral unless such settings to disable printing of the print jobs are reversed. Note that the stock printing application will be referred to in a later description as an exemplary target for application life cycle management.

A client or a worker who belongs to for example the company that sells the multi function peripheral accesses the multi function peripheral using a browser installed in a PC not shown of a hub internal network of the client. Consequently application life cycle management can be performed using the application management application . The following describes application management using the application management application with reference to . The states of applications as well as relationships between applications and licenses will also be described.

First the application management screen will be described. In the present example the following three applications are managed an application A an application B and an application C .

An application name shows the names of applications that are installed in the multi function peripheral using the installation control application . An installation date shows the installation date of the applications in the multi function peripheral . An application ID shows IDs identification information that are uniquely allocated to the applications. Note that the IDs allocated to the applications are shared in the remote management system according to the invention of the present application. A state shows the states of the applications. Specifically it shows started if the applications are in a started state and stopped if the applications are in a stopped state. A license shows the states of licenses of the applications. Specifically it shows installed if the licenses are in an installed state and not installed if the licenses are in an inactivated or deleted state.

Buttons to are instruction buttons for switching between start and stop of the applications. Specifically they are displayed as stop buttons if the applications are in the started state and as start buttons if the applications are in the stopped state. Pressing the button of the application in the started state application A in the present example will change the state of that application to stopped . On the other hand pressing the button of the application in the stopped state application B in the present example will change the state of that application to started .

In the present example control is performed in such a manner that the button is inactivated and hence cannot be pressed because the corresponding license is not installed. With such control starting of an application whose license is not installed is disabled.

An uninstall button is an instruction button for uninstalling the corresponding application. Pressing the uninstall button which corresponds to the application C will uninstall the application C . At this time data including setting information generated by the application C is also deleted simultaneously. Uninstall buttons are inactivated thereby indicating that the corresponding applications cannot be uninstalled because the corresponding applications are in the started state or in the stopped state with their licenses remaining in the installed state.

The installation screen will now be described. Pressing a browse button will display a screen not shown for designating a file path to a location where an application file is stored. Once the application file has been designated via the screen the path to the application file is input to an input area of an application file path .

In general an application file is encrypted for security and business reasons. Therefore installation of an application requires a license file including key information for decrypting an encrypted application file. Pressing a browse button on the installation screen will display a screen not shown for designating a file path to a location where a license file is stored. Similar to application designation once the license file has been designated via the screen the path to the license file is input to an input area of a license file path .

Pressing an installation button will start installation of the application file designated by the application file path as well as the license file designated by the license file path .

The license management screen will now be described. The license management screen is provided for installed applications on a per application basis. Pressing a browse button will display a screen not shown for designating a file path to a location where a license file is stored. Once the path to the license file has been designated via the displayed screen the path to the license file is input to an input area of a license file path . Pressing an installation button will start installation of a license using the license file designated by the license file path . An application that cannot be started because its license is not installed can be started by additionally installing the license.

An inactivation button enables inactivation of the license. In order to inactivate the license the corresponding application needs to be in the stopped state. When the license has an expiration date e.g. when the license is valid only for 30 days inactivation of the license enables delay of expiration of the license. Therefore even if the license has been inactivated its license file is continuously stored. In inactivating the license the consumption status of the license at the time of inactivation may be stored.

A download button enables downloading of the inactivated license. A downloaded license file can be reinstalled only in a multi function peripheral that has downloaded the license file. That is to say a downloaded license can be controlled to disable transfer thereof to other multi function peripherals. A delete button enables deletion of the inactivated license. If the inactivated license is deleted without being downloaded a license file needs to be newly acquired and installed to restart the corresponding application. Here an inquiry may be made to the management server or the like to automatically authenticate the user or multi function peripheral.

Applications are externally managed by an operator who belongs to for example the company that sells the multi function peripheral using a browser not shown installed in for example a PC not shown placed in the company that sells the multi function peripheral . Specifically in order to control an application of the remote multi function peripheral the operator accesses a management system manipulation screen provided by the management server and registers an application related setting job in the management server . Then the management server communication application and the life cycle management application which have been installed in the remote multi function peripheral obtain the registered job through periodic polling and update the settings of the multi function peripheral in accordance with an instruction of the job so that the settings reflect the registered job.

The client management screen is composed of a client name a device ID a product name a state and browse buttons . The client name shows the names of the clients. The device ID shows IDs identification information for uniquely identifying the multi function peripherals operating on the clients side. The product name shows the product names of the multi function peripherals operating on the clients side. The state shows the state of manipulation applied to the multi function peripherals operating on the clients side. These states include awaiting processing and processing complete . Awaiting processing denotes a state from registration of an application related setting job until completion of setting processing in the corresponding multi function peripheral whereas processing complete denotes a state in which the corresponding multi function peripheral has given notice of the state of the corresponding application after completion of the setting processing. The browse buttons enable transition to the multi function peripheral management screen that corresponds to each of the devices identified by the device IDs.

The multi function peripheral management screen is provided for each multi function peripheral and displayed upon pressing of detail buttons on the client management screen . In the example of the multi function peripheral management screen corresponds to a multi function peripheral to which a device ID XXX00001 is allocated. The multi function peripheral management screen includes a client name a device ID a product name synchronization time an application ID an application name a state a state manipulation state manipulation buttons and an application installation button .

The client name shows the name of the client who owns the multi function peripheral. The device ID shows an ID identification information for uniquely identifying the multi function peripheral. The product name shows the product name of the multi function peripheral. The synchronization time shows the time of notification of the states of applications for the multi function peripheral.

The application ID shows IDs identification information for uniquely identifying applications that are installed or scheduled to be installed in the multi function peripheral. Note that the application IDs are shared in the remote management system according to the invention of the present application and correspond to the application IDs shown in . The application name shows the names of the applications that are installed or scheduled to be installed in the multi function peripheral. The state shows the states of the applications that are installed or scheduled to be installed in the multi function peripheral. The state manipulation shows buttons indicating state manipulations that can be applied to the applications that are installed or scheduled to be installed in the multi function peripheral. The state manipulation buttons enable transition to the state manipulation setting screen . An application installation button enables transition to the installation setting screen .

The installation setting screen includes a device ID an application selection pull down a setting file path a browse button and a registration button .

The device ID shows an ID identification information for uniquely identifying a multi function peripheral that is to select an application to be installed. The application selection pull down is a pull down menu for selecting an application that can be installed in the multi function peripheral identified by the device ID. The names of new applications that can be installed are displayed in a selectable manner in the application selection pull down . The names of applications that are already installed are not displayed. Alternatively in order to clearly indicate that such applications are already installed the names of such applications may be displayed in a list of unselectable applications. This prevents a user from erroneously selecting an application that is already installed. After an application to be installed has been selected the name of the selected application is displayed.

The setting file path displays a path to a location where a setting file is stored. The browse button enables selection of the setting file by displaying a screen not shown for selecting the path to the location where the setting file is stored. Once the setting file has been designated via the screen that is displayed upon pressing of the browse button the path to the location where the setting file is stored is input to an input area of the setting file path . Note that the setting file stores information for changing the settings of the application and the multi function peripheral. For example in the case of the aforementioned stock printing application the setting file includes information for configuring settings that disable printing of received print jobs and as needed settings of the application.

The registration button enables registration of an installation job for installing the selected application.

The job properties are fundamental properties of the application related setting job. The job properties are composed of an application ID a job type and an application usage right ID . The application ID is an ID of an application whose state is to be manipulated. The job type is the type of the application related setting job. A setting value indicating the type of the application related setting job is install in the case of an installation job start in the case of a start job stop in the case of a stop job update in the case of an update job and uninstall in the case of an uninstallation job. Application related processing is executed on the multi function peripheral side based on this value designated in accordance with the type of the job.

The application usage right ID is necessary for obtaining the application from the application distribution server . This information is required only in the case of the installation job. That is to say the application usage right ID is information used in installing the corresponding application.

The setting file is used to change settings of the multi function peripheral and the application. When there is no need to change settings of the multi function peripheral and the application along with changing of the state of the application the setting file may not be provided. The setting file includes a multi function peripheral setting file and an application setting file . Note that both or only one of the multi function peripheral setting file and the application setting file may be provided as needed.

The application quantity information indicates the number of applications managed by the life cycle management application . The individual application information is information of the applications managed by the life cycle management application . The individual application information includes application ID information state information and version information . The application ID information shows IDs identification information for uniquely identifying the applications. The state information shows the states of the applications. Specifically it shows Started in the case of the started state Stopped in the case of the stopped state and Installed in the case of the installed state. The version information shows the versions of the applications. It is assumed that the versions of distributed applications together with the past update statuses of the applications and information of the latest versions are managed on the management server side and the application distribution server side.

The management server communication application includes a communication processing unit . The communication processing unit communicates with the management server using the HTTP or a similar protocol and receives application related setting job information from the management server via a response. The communication processing unit also transmits information of applications installed in the multi function peripheral .

The life cycle management application includes a cyclic processing unit a last communication time management unit a management target application management unit an application obtainment processing unit an installation processing unit an uninstallation processing unit an application start processing unit an application stop processing unit and a setting processing unit .

The cyclic processing unit periodically communicates with the management server using the communication processing unit included in the management server communication application . When the cyclic processing unit has received the application related setting job information it configures settings of the multi function peripheral in accordance with the application related setting job information. When the cyclic processing unit has not been able to communicate with the management server for a certain period it stops an application that was installed in accordance with the application related setting job information received from the management server .

The last communication time management unit stores information of the date and time of the last successful communication with the management server . The management target application management unit stores information that uniquely identifies the application that was installed in accordance with the application related setting job information received from the management server . The application obtainment processing unit communicates with the application distribution server using the HTTP or a similar protocol and obtains an application file and a license file from the application distribution server . The installation processing unit installs the application file and the license file in the multi function peripheral using the installation control application .

The uninstallation processing unit uninstalls applications and licenses from the multi function peripheral using the installation control application . The application start processing unit starts applications in the stopped state using the installation control application . The application stop processing unit stops applications in the started state using the installation control application . An application that has been stopped by the application stop processing unit cannot be started by the application management application . That is to say when the application stop processing unit has stopped an application installed in the multi function peripheral in accordance with an application related setting job registered on the management server side the application cannot be started by an instruction from the multi function peripheral side. In this case this application can be restarted in accordance with an application related setting job for a starting purpose registered on the management server side.

The setting processing unit imports setting information included in the application related setting job information into the multi function peripheral and changes settings of the multi function peripheral . An application information obtainment processing unit obtains information of applications that are installed using the installation control application . A license management unit stores license files that have been exported by the application stop processing unit using the installation control application .

In step S the cyclic processing unit determines whether a polling termination instruction has been issued. If a polling termination instruction has been issued YES of step S the present processing flow ends. If not NO of step S the present processing flow proceeds to step S.

In step S the cyclic processing unit executes application related setting job execution processing. The details of this processing will be described later with reference to .

In step S the cyclic processing unit sleeps for a certain period and then the present processing flow proceeds to step S.

In step S the cyclic processing unit attempts to obtain new application related setting job information from the management server by polling the management server using the communication processing unit .

In step S the cyclic processing unit determines whether the application related setting job information has been obtained in step S. If the application related setting job information has been obtained YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow proceeds to step S.

In step S the cyclic processing unit analyzes the application related setting job information that the communication processing unit received from the management server .

In step S the cyclic processing unit determines the type job type of a job designated by the application related setting job information. If the job is an installation job the present processing flow proceeds to step S. If the job is a stop job the present processing flow proceeds to step S. If the job is a start job the present processing flow proceeds to step S. If the job is an uninstallation job the present processing flow proceeds to step S. If the job is an update job the present processing flow proceeds to step S.

In step S the cyclic processing unit the application obtainment processing unit and the installation processing unit execute installation processing. The details of this processing will be described later with reference to . Thereafter the present processing flow proceeds to step S.

In step S the cyclic processing unit and the application stop processing unit execute stop processing. The details of this processing will be described later with reference to . Thereafter the present processing flow proceeds to step S.

In step S the cyclic processing unit and the application start processing unit execute start processing. The details of this processing will be described later with reference to . Thereafter the present processing flow proceeds to step S.

In step S the cyclic processing unit and the uninstallation processing unit execute uninstallation processing. The details of this processing will be described later with reference to . Thereafter the present processing flow proceeds to step S.

In step S the cyclic processing unit executes update processing. The details of this processing will be described later with reference to . Thereafter the present processing flow proceeds to step S.

In step S the cyclic processing unit and the application stop processing unit execute forced stop processing. The details of this processing will be described later with reference to . Thereafter the present processing flow proceeds to step S.

In step S the cyclic processing unit obtains information of installed applications using the application information obtainment processing unit and transmits the information of the applications to the management server using the communication processing unit . In this way the multi function peripheral notifies the management server of the latest application information of the multi function peripheral . Thereafter the present processing flow ends.

In step S the cyclic processing unit retrieves an application usage right ID from the application related setting job information and passes the application usage right ID to the application obtainment processing unit .

In step S using the application usage right ID received from the cyclic processing unit the application obtainment processing unit obtains an application file and a license file from the application distribution server and passes the application file and the license file to the installation processing unit . At this time the application distribution server distributes the application file and the license file corresponding to the application usage right ID to the multi function peripheral in reply to a request transmitted from the multi function peripheral including the application usage right ID. When the application usage right ID is unauthorized the application distribution server may give notice of its unauthorized state.

In step S using the installation control application the installation processing unit installs the application file and the license file received from the application obtainment processing unit .

In step S the cyclic processing unit determines whether the installation processing in step S has been successful. If the installation has been successful YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S the cyclic processing unit stores identification information application ID and the application usage right ID of the installed application to the management target application management unit .

In step S the cyclic processing unit determines whether the application related setting job information includes setting information setting file . If the setting information is included YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S the cyclic processing unit determines whether initial settings are stored. Note that the initial settings denote settings prior to implementation of settings based on the application related setting job information received from the management server . If the initial settings are stored YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow proceeds to step S.

In step S the cyclic processing unit obtains and stores the current settings using the setting processing unit . Here the current settings are stored to for example the HDD of the multi function peripheral and before the settings are changed pre change settings are stored. Note that related information such as the date and time settings were changed may be stored as well.

In step S using the setting processing unit the cyclic processing unit imports the setting information included in the application related setting job information and changes the settings of the multi function peripheral . Thereafter the present processing flow ends.

Through the foregoing processing an application can be installed in the multi function peripheral by remotely registering an application related setting job for an installation purpose.

In step S the cyclic processing unit retrieves from the application related setting job information identification information application ID of the application to be stopped and passes the identification information to the application stop processing unit .

In step S the application stop processing unit places the application identified by the identification information received from the cyclic processing unit in the stopped state.

In step S using the installation control application the application stop processing unit inactivates and exports the license of the application placed in the stopped state.

In step S the application stop processing unit passes and stores the license file exported in step S to the license management unit . The inactivated and stored license file is installed and rendered usable again only when the stopped application is started again by an application related setting job obtained from the management server .

In step S the cyclic processing unit determines whether the application related setting job information includes setting information setting file . If the setting information is included YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S using the setting processing unit the cyclic processing unit imports the setting information included in the application related setting job information and changes the settings of the multi function peripheral . Thereafter the present processing flow ends.

Through the foregoing processing an application running on the multi function peripheral can be placed in the stopped state by remotely registering an application related setting job for a stopping purpose. Once the application has been placed in the stopped state using this method its license is temporarily placed in an uninstalled state this prevents starting of the application on the multi function peripheral side using the application management application .

In step S the cyclic processing unit retrieves from the application related setting job information identification information application ID of the application to be started and passes the identification information to the application start processing unit .

In step S the application start processing unit passes the identification information received from the cyclic processing unit i.e. the identification information of the application to be started to the license management unit and determines whether a license file of the application to be started is stored. If the license file is stored YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow proceeds to step S. The license file is stored if for example it was stored in step S of upon placing the application in the stopped state.

In step S the application start processing unit obtains the license file of the application to be started from the license management unit and installs the license file using the installation control application .

In step S using the installation control application the application start processing unit places the application to be started which is identified by the identification information received from the cyclic processing unit i.e. the identification information of the application to be started in the started state. If the license is not stored starting of the application fails.

In step S the cyclic processing unit determines whether the start processing in step S has been successful. If the starting process has been successful YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S the cyclic processing unit determines whether the application related setting job information includes setting information. If the setting information is included YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S using the setting processing unit the cyclic processing unit imports the setting information included in the application related setting job information and changes the settings of the multi function peripheral . Thereafter the present processing flow ends.

Through the foregoing processing an application that is installed in the multi function peripheral but is in the stopped state can be placed in the started state by remotely registering an application related setting job for a starting purpose.

In step S the cyclic processing unit obtains from the last communication time management unit information of the date and time of the last successful communication with the management server and calculates a period from the last successful communication with the management server to the current date and time based on the current date and time. Then the cyclic processing unit determines whether the calculated period exceeds a predetermined threshold e.g. 30 days . If the threshold is exceeded YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends. This threshold related to the period may be set in advance and changed as needed by for example the company that has developed or sells the multi function peripheral.

In step S the cyclic processing unit obtains from the management target application management unit a list of information that identifies applications that have been installed based on application related setting job information obtained from the management server and passes the list to the application stop processing unit . Specifically this list is a list of application IDs hereinafter application list .

In step S the application stop processing unit determines whether the applications indicated by the application list received from the cyclic processing unit include an application to which the stop processing has not yet been applied. If the application to which the stop processing has not yet been applied is included YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow proceeds to step S.

In step S the application stop processing unit places the applications indicated by the application list received from the cyclic processing unit in the stopped state.

In step S using the installation control application the application stop processing unit inactivates and exports the licenses of the applications placed in the stopped state.

In step S the application stop processing unit passes and stores the license files exported in step S to the license management unit .

In step S the cyclic processing unit determines whether initial settings are stored. If the initial settings are stored YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends. The initial settings are stored if the settings were stored in step S of the installation processing shown in .

In step S using the setting processing unit the cyclic processing unit imports the initial settings and changes the settings of the multi function peripheral . Thereafter the present processing flow ends.

As described above if the multi function peripheral is out of communication with the management server for a certain period control is performed to inactivate applications that have been installed in accordance with instructions jobs from the management server .

In step S the cyclic processing unit retrieves from the application related setting job information identification information application ID of the application to be updated.

In step S based on the retrieved identification information of the application the cyclic processing unit extracts a corresponding application usage right ID from among stored application usage right IDs. Then the cyclic processing unit passes the extracted application usage right ID to the application obtainment processing unit .

In step S using the application usage right ID received from the cyclic processing unit the application obtainment processing unit obtains application information from the application distribution server . At this time the application distribution server distributes the application information corresponding to the application usage right ID to the multi function peripheral in reply to a request transmitted from the multi function peripheral including the application usage right ID. The application information indicates for example the identification information of the application and information of the latest version of the application. When the application usage right ID is unauthorized the application distribution server may give notice of its unauthorized state.

In step S the application obtainment processing unit retrieves the application ID from the application information that was received from the application distribution server in step S and determines whether the application having the same application ID is installed. If the application having the same application ID is installed YES of step S the present processing flow proceeds to step S if not NO of step S the present processing proceeds to step S.

In step S using the installation control application the application obtainment processing unit obtains version information of the application having the same application ID as the application ID retrieved in step S. Then the application obtainment processing unit compares the obtained version information with the version information included in the application information that was received from the application distribution server in step S. If the version information included in the application information that was received from the application distribution server in step S is newer YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S using the application usage right ID received from the cyclic processing unit the application obtainment processing unit obtains an update specific application file and an update specific license file from the application distribution server and passes the update specific application file and the update specific license file to the installation processing unit . The obtained update specific application file and license file are of the version designated by the application information obtained in step S. This version of the application may be the latest version or may be a version corresponding to the application usage right ID.

In step S using the installation control application the installation processing unit installs the application file and the license file received from the application obtainment processing unit .

In step S the cyclic processing unit determines whether the application related setting job information includes setting information. If the setting information is included YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S using the setting processing unit the cyclic processing unit imports the setting information included in the application related setting job information and changes the settings of the multi function peripheral .

Through the foregoing processing an application installed in the multi function peripheral can be updated by remotely registering an application related setting job for an update purpose.

In step S the cyclic processing unit retrieves from the application related setting job information an application ID of the application to be uninstalled and passes the application ID to the uninstallation processing unit .

In step S using the installation control application the uninstallation processing unit uninstalls the application and the license corresponding to the application ID received from the cyclic processing unit .

In step S the cyclic processing unit deletes an application usage right ID that is stored in correspondence with the application ID retrieved in step S.

In step S the cyclic processing unit determines whether the application related setting job information includes setting information. If the setting information is included YES of step S the present processing flow proceeds to step S if not NO of step S the present processing flow ends.

In step S using the setting processing unit the cyclic processing unit imports the setting information included in the application related setting job information and changes the settings of the multi function peripheral . Thereafter the present processing flow ends.

Through the foregoing processing an application installed in the multi function peripheral can be uninstalled by remotely registering an application related setting job for uninstallation.

In the present invention the above described units enable application life cycle management and changing of application related settings remotely and simultaneously thereby improving the efficiency of work related to application management.

Embodiment s of the present invention can also be realized by a computer of a system or apparatus that reads out and executes computer executable instructions e.g. one or more programs recorded on a storage medium which may also be referred to more fully as a non transitory computer readable storage medium to perform the functions of one or more of the above described embodiment s and or that includes one or more circuits e.g. application specific integrated circuit ASIC for performing the functions of one or more of the above described embodiment s and by a method performed by the computer of the system or apparatus by for example reading out and executing the computer executable instructions from the storage medium to perform the functions of one or more of the above described embodiment s and or controlling the one or more circuits to perform the functions of one or more of the above described embodiment s . The computer may comprise one or more processors e.g. central processing unit CPU micro processing unit MPU and may include a network of separate computers or separate processors to read out and execute the computer executable instructions. The computer executable instructions may be provided to the computer for example from a network or the storage medium. The storage medium may include for example one or more of a hard disk a random access memory RAM a read only memory ROM a storage of distributed computing systems an optical disk such as a compact disc CD digital versatile disc DVD or Blu ray Disc BD a flash memory device a memory card and the like.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2015 116028 filed Jun. 8 2015 which is hereby incorporated by reference herein in its entirety.

