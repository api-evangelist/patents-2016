---

title: Dynamic modeling of geospatial words in social media
abstract: Dynamically modelling geospatial words in social media, in one aspect, generates a word set based on frequencies of words occurring in GPS annotated text data generated by a GPS-enabled device containing latitude and longitude coordinates. Locations are partitioned by mapping GPS coordinates in the GPS annotated text data to a set of discrete non-overlapped locations. A text stream contained in the GPS annotated text data is segmented into time windows. Footprints of locations in time windows are generated. Geospatial weights associated with words in the word set may be generated based on localness of words determined based on the footprints. Words in a text message are extracted and scores are determined for the set of discrete non-overlapped locations associated with the words.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09569551&OS=09569551&RS=09569551
owner: International Business Machines Corporation
number: 09569551
owner_city: Armonk
owner_country: US
publication_date: 20160706
---
This application is a continuation of U.S. patent application Ser. No. 14 710 915 filed May 13 2015 the entire content and disclosure of which is incorporated herein by reference.

The present application relates generally to computers and computer applications and more particularly to dynamic modelling of geospatial words in social media.

Geospatial information is useful to a number of applications such as targeted advertising regional sentiment analysis and situational awareness. Due to a lack of sufficient and reliable geographical information in social media e.g. Internet Protocol IP addresses mapped to locations various geotagging methods have been utilized to infer geographical location based on text data. Such geotagging methods leverage location indicative words to determine location. For instance by knowing local sports event footy and a local transportation tram the most probable location inferred is City X Country Y because these words together are mostly used by City X residents.

Streaming text data in social media is dynamic i.e. its content and topics change rapidly making geotagging a non trivial task. Existing geotagging models are often trained in an off line manner and this implies these models do not capture the temporal variance of geospatial words when time invariant geospatial words are persistently associated with a location while other words are only temporarily associated with a location.

A dynamic geospatial word modelling that keeps geotagging models up to date is presented. A method of dynamically modeling geospatial words for example in social media data in one aspect may comprise receiving GPS annotated text data generated by a GPS enabled device containing latitude and longitude coordinates. The method may also include generating a word set based on frequencies of words occurring in the GPS annotated text data. The method may further include partitioning locations by mapping GPS coordinates in the GPS annotated text data to a set of discrete non overlapped locations. The method may also include segmenting a text stream contained in the GPS annotated text data into time windows. The method may further include generating footprints of locations in time windows. The method may further include determining geospatial weights associated with words in the word set based on localness of words determined based on the footprints. The method may also include dynamically integrating in geotagging by extracting words in a text message and determining scores associated with the set of discrete non overlapped locations.

A system for dynamically modeling geospatial words for example in social media in one aspect may comprise a data collector operable to execute on a processor and further operable to receive GPS annotated text data generated by a GPS enabled device containing latitude and longitude coordinates. A model trainer may be operable to execute on the processor and further operable to generate a word set based on frequencies of words occurring in the GPS annotated text data. The model trainer may be further operable to partition locations by mapping GPS coordinates in the GPS annotated text data to a set of discrete non overlapped locations. The model trainer may be further operable to segment a text stream contained in the GPS annotated text data into time windows. The model trainer may be further operable to generate footprints of locations in time windows. The model trainer may be further operable to determine geospatial weights associated with words in the word set based on localness of words determined based on the footprints. The model trainer may be further operable to dynamically integrate geotagging by extracting words in a text message and determining scores associated with the set of discrete non overlapped locations. A storage device coupled to the processor may be operable to store the footprints and GPS labeled data the GPS labeled data generated based on mapping the words in the word set to a respective location in the set of discrete non overlapped locations.

A computer readable storage medium storing a program of instructions executable by a machine to perform one or more methods described herein also may be provided.

Further features as well as the structure and operation of various embodiments are described in detail below with reference to the accompanying drawings. In the drawings like reference numbers indicate identical or functionally similar elements.

A method and system are presented that leverage location indicative words to determine location. The method and system for example may offset the temporal variance in geospatial word modelling by dynamically weighting word localness scores in social media text stream. A dynamic geospatial word modelling technique in one embodiment keeps geotagging models up to date. In one aspect the techniques keep the models up to date with only fixed computational cost. In one embodiment randomized methods may be applied to generate consecutive location footprints for each word over time. Word localness scores are calculated based on these footprints. In one embodiment the overall word localness can be incrementally updated with only fixed computational cost. A discriminative model in one embodiment then seamlessly incorporates updated localness scores in geotagging. As a result the geotagging model is kept up to date without re training the model on all historical data. Such an approach for example is useful in stream computing environment in which endless data is transmitted and received.

Hence instead of having to retrain a model over all historical data the randomized methods in one embodiment of the present disclosure keep geotagging model up to date with only fixed computational cost. In another aspect a system that implements the methods may be adaptive to the computational capability e.g. by tuning parameters in the system geotagging models can be built with limited resource.

To associate words with locations a set of ground truth data for example global positioning system GPS annotated text may be used. Such data can be obtained or collected via a number of ways for instance social media messages sent from GPS enabled mobile devices that contain latitude and longitude coordinates. At GPS annotated text data is obtained or received. For example social media message generated by a GPS enabled device containing latitude and longitude coordinates may be obtained. In one aspect GPS annotated text data may include a pre existing collection of GPS labeled text corpora. This data may be used at to generate all words i.e. the word set whose localness the system and method of the present disclosure in one embodiment tracks over time forming an initial geotagging model. In one embodiment the GPS labels of the GPS annotated text data are also used in location partition at .

At word set generation is performed for example based on the obtained GPS annotated text data. The word set generation process in one embodiment generates a word type set w i 1 . . . n from a collection of social media data the obtained GPS annotated data. n represents the number of words in a set. Words are tokenized and counted and then a user defined threshold e.g. 100 is applied to preserve sufficiently frequent words. For example words occurring in the collection of data in frequency that meets a frequency threshold are included in the word set.

At location partition is performed. All GPS coordinates in the GPS annotated text data are mapped to a set of discrete non overlapped locations e.g. metropolitan city centers c j 1 . . . m. m represents the number of discrete non overlapped locations in a set of discrete non overlapped locations.

At a live text stream is segmented into time windows. A live text stream refers to new GPS text data that are continuously harvested from social media feed for example now and in the future. In one embodiment the live stream data is used to evaluate the word localness over time. In one embodiment a constant text stream is partitioned into increasing consecutive time windows T p 1 . . . t. t represents the number of time periods or time windows. A time window contains data generated in a time period e.g. hourly daily or weekly. In one embodiment a time window length is user specified or configurable depending on the computational resources and incoming data rates.

At footprint is generated in time windows. For each GPS labeled message in a time window e.g. Tp a bipartite graph is constructed between a word type e.g. wi in the message and the mapped location e.g. cj . An example of a GPS labeled message may include a social media message that includes location or GPS information e.g. a microblog with GPS information such as the geospatial coordinates of where the microblog was generated a social network content posting with embedded with GPS data or another message with embedded data structure with location or GPS information. GPS coordinates for example can be mapped to a point on earth. GPS information or coordinates may be mapped to non overlapped discrete locations. A message with GPS information accordingly may be transformed into a message associated with a non overlapped discrete location. In one embodiment the nearest location in the pre partitioned location set to this point can be determined to be the mapped location. For instance the mapped location for 37.813 144.963 is Melbourne Australia. The association strength is the location distribution of wi i.e. co occurrences of wi and a location normalized by all occurrences of wi in Tp. For example consider that w occurs n j times in cj respectively during Tp. The association strength between w and c may be determined as n  n  n  . . . n m . The denominator is the normalization factor which is the sum of all occurrences of w during Tp. The methodology then selects k 

At word localness calculation is performed for a footprint for example generated at . For each word wi a methodology of the present disclosure in one embodiment calculates localness score in each time window Tp. The localness score can be implemented in various ways provided the location indicativeness can be differentiated. For instance the reciprocal of the footprint entropy with additive smoothing can be applied to calculate the localness score of wi. In one embodiment a localness score of wi may be computed as follows 

As the above formula shows for a word wi pj is the re normalized association strength between wi and cj in the previous k selections. For instance in Words T bipartite graph shown in localness score for w is 1 1 6 10 log 6 10 3 10 log 3 10 1 10 log 1 10 . Entropy herein refers to information entropy which is defined on a discrete probability distribution Entropy P problog prob in which prob is a probability for a possible event j in distribution P. A high localness score indicates a skewed distribution of footprint i.e. a low entropy and therefore wi is a local word. A high localness score means a low entropy as defined in previous localness formula and the information entropy definition and a low entropy indicates a skewed distribution as a property of information entropy. This entropy description is an analog of word frequency in different locations. A low localness score suggests wi occur in many locations i.e. a high entropy and it is unlikely to be location indicative. The localness score is set to zero when a word has fewer than k locations in a time window. In one embodiment time windows are constantly obtained over time i.e. Tp in p p 1 . . . t is increasing. The localness scores of each time window are then added up as the word geospatial weight in one embodiment as follows 

The notations for i and k refer to a word type e.g. w for i from 1 to n and k location selections described above. Localness i p k represents the localness score of word wi during time period Tp when selecting k locations in the calculation.

A time invariant location indicative word would have consecutive high localness scores leading to a high geospatial weight. In contrast the localness scores fluctuate for temporal local words i.e. some time windows have high localness scores while others have low localness scores. The temporal variance of word location indicativeness is therefore captured in the accumulated geospatial weight. The accumulated geospatial weight incurs a fixed computational cost because only localness score of new time windows are required to be calculated and added up.

At dynamic integration of word localness in geotagging is performed. For example geotagging may be performed for text messages which may not include GPS coordinates. When geotagging a text message words are extracted and are used as evidence to score locations. For example a new message or text message that does not include location indication may be received and geographical location associated this new message may be determined or predicted. In one embodiment the geotagging prediction is based on the following formula 

The above formula finds a location among all potential locations with the highest value as computed in the right hand side of the equation. P cj wi the probability of cj given wi can be obtained by the accumulated location distribution over time for word wi. For instance referring to suppose current period is T. Using w as example w occurs 6 8 7 times in c 3 1 1 times in c 1 1 1 times in c and in c. As a result p c w would be 6 8 7 6 8 7 3 1 1 1 1 1 1 . In one embodiment only cj with non zero P cj wi are eligible to be selected as potential predictions. Weight wi is the geospatial weight for wi. Its dynamic values ensure up to date geotagging predictions. The cj with the highest right hand value is determined to be the predicted location in one embodiment. Geotagging takes a text message as the input and outputs a predicted location using words in the text message. In one embodiment these components weight wi and p ci wi which are updated periodically are additive and are only updated when a new time window is obtained.

At time window sampling is performed. Sampling may employ a random selection process. The sampling of time windows in one embodiment samples a fixed number of time windows e.g. to maintain a constant computational cost for the model as the GPS labeled dataset increases with time.

The number of time windows t increases over time. To adapt the system computational capability to different hardware time window sampling is also introduced in one embodiment. For instance instead of using information from all time windows only sampled time windows are used. The sampling strategy can be implemented in various ways depending on application scenarios. For instance reservoir sampling ensures a methodology of the present disclosure get a fixed size unbiased sample of time windows. In contrast a fixed first in first out queue captures the most recent time windows to cope with rapidly changing text stream data. Any one or more of the above sampling or another sampling may be adopted in the present disclosure.

The computer system may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. The computer system may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

The components of computer system may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processor . The processor may include a module that performs the methods described herein. The module may be programmed into the integrated circuits of the processor or loaded from memory storage device or network or combinations thereof.

Bus may represent one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnects PCI bus.

Computer system may include a variety of computer system readable media. Such media may be any available media that is accessible by computer system and it may include both volatile and non volatile media removable and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory or others. Computer system may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media e.g. a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces.

Computer system may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with computer system and or any devices e.g. network card modem etc. that enable computer system to communicate with one or more other computing devices. Such communication can occur via Input Output I O interfaces .

Still yet computer system can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system. Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements if any in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

