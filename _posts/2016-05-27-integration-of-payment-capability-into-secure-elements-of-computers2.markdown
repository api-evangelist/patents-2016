---

title: Integration of payment capability into secure elements of computers
abstract: Methods, secure elements, validation entities, and computer program products for effecting secure communication of payment information to merchants for Internet-based purchases. Payment information for a user's real payment information is installed in a secure element of a computer, the payment information may comprise a pseudo PAN number for the portable consumer device provided by a validation entity. The secure element is shielded from the computer's operating system to thwart hacker attacks. The user accesses the secure element to make a purchase. In response, the secure element contacts the validation entity with the pseudo account number, and in response obtains dynamic payment information that the secure element can used to effect the payment. The dynamic payment information comprises an account number that is different from the pseudo PAN, and which has at least one difference which respect to the user's real payment information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09589268&OS=09589268&RS=09589268
owner: Visa International Service Association
number: 09589268
owner_city: San Francisco
owner_country: US
publication_date: 20160527
---
This application is a continuation of prior application Ser. No. 13 411 400 entitled Integration of Payment Capability into Secure Elements of Computers filed Mar. 2 2012 which is a continuation in part of prior application Ser. No. 12 780 657 entitled Verification of Portable Consumer Devices filed May 14 2010 which is a continuation in part of prior application Ser. No. 12 712 148 entitled Verification of Portable Consumer Devices filed Feb. 24 2010 the contents of which are hereby incorporated in their entirety by reference for all purposes. This application is also a continuation in part of prior application Ser. No. 12 878 947 entitled Secure Communication of Payment Information to Merchants Using a Verification Token filed Sep. 9 2010 the contents of which are hereby incorporated in their entirety by reference for all purposes. In addition this application claims priority to U.S. Provisional Patent Application No. 61 449 507 entitled Integration of Payment Capability into Secure Elements of Computers filed Mar. 4 2011 the contents of which are hereby incorporated in their entirety by reference for all purposes.

Online purchasing of goods and services has grown dramatically over the last decade. Although such purchases are now conducted with communications between a user s computer and a merchant s website being encrypted the users credit card payment information is still susceptible to theft during the online transaction. A common approach used by hackers to steal credit card payment information is to install a malware program on the user s computer without the user s knowledge where the malware program examines the user s keystrokes and browser content to detect payment information e.g. credit card number expiration date card verification value etc. . This is the so called man in the middle attack. Once the payment information is detected the malware program transmits the data to the hacker s remote server where it can be used or sold to conduct fraudulent transactions.

The present invention is directed to ways of evading man in the middle attacks and effecting secure communication of payment information to merchants for purchases made over the Internet.

One exemplary embodiment of the invention pertains to methods of installing user specific payment information in a secure element of a computer the user specific payment information having at least an account number personal account number PAN and one or more of the following a card verification value an expiration date and a billing zip code. An exemplary method comprises receiving at a secure element of a computer an account number and at least one of an expiration date a card verification value or a billing ZIP code of a user specific payment information obtaining an identifier for the secure element sending the received account number the received at least one of an expiration date a card verification value or a billing ZIP code and the obtained identifier for the secure element to a validation entity receiving in response a pseudo account number from the validation entity the received pseudo account number being different from the received account number of the user specific payment information and storing in a memory of the secure element the received pseudo account number. The user specific payment information is uniquely assigned to a user and may be the payment information of a user s portable consumer device e.g. a primary credit card account assigned by a bank or sub account linked to the primary account and limited to particular commerce channels and or particular transactions such as internet purchases or a proxy account number linked to the primary credit card account and limited to use with the secure element. Each of the account number of the user specific payment information and the pseudo account number is recognizable and processable by a card payment processing network that processes credit card and or debit card transactions such as VisaNet . The payment processing network is independent of the bank that issued the user specified payment information and the merchants involved with the user s transactions. Also each account number comprises a sequence of at least eleven numeric digits preferably of at least 13 numeric digits and typically is a sequence of 15 16 17 18 or 19 numeric digits. The identifier for the secure element may be assigned by the manufacturer of the secure element of the computer and written to a non volatile memory of the secure element or may be written to a non volatile memory of the secure element by a payment application installed in the secure element.

Another exemplary embodiment of the invention pertains to methods of using the secure payment information in a secure element of a computer for a user. Such an exemplary method comprises receiving an indication that the payment application in the secure element is to be activated by the user sending from the secure element of the computer a representation of a pseudo account number stored in a computer readable memory of the secure element to a validation entity and receiving in response dynamic payment information from the validation entity the received dynamic payment information having an account number that is different from the pseudo account number. The dynamic payment information is recognizable and processable by a card payment processing network that processes credit card and or debit card transactions such as VisaNet . The dynamic payment information comprises an account number of at least eleven numeric digits preferably of at least 13 numeric digits and typically of 15 16 17 18 or 19 numeric digits.

Additional embodiments of the present invention pertain to computer product products that perform the above methods and secure elements that have computer readable memories that store these computer program products and processors that execute the stored computer program products. For example one such exemplary embodiment pertains to a computer program product embodied on a tangible non transitory computer readable medium. The exemplary product comprises code that directs a data processor to receive an account number and at least one of an expiration date a card verification value or a billing ZIP code of user specific payment information code that directs a data processor to obtain an identifier for a secure element code that directs a data processor to send the received account number the received at least one of an expiration date a card verification value or a billing ZIP code and the obtained identifier for the secure element to a validation entity code that directs a data processor to receive in response a pseudo account number from the validation entity the received pseudo account number being different from the account number of the received user specific payment information and code that directs a data processor to store in a memory of the secure element the received pseudo account number.

Another exemplary embodiment of the invention pertains to methods of providing payment information to a secure element that may be stored by the secure element. Such an exemplary method comprises receiving at a server a request from a secure element of a computer to provide a pseudo account number the request including an identifier of the secure element and an account number and at least one of an expiration date a card verification value or a billing ZIP code of user specific payment information applying at least one validation test pertaining to the received request sending if the at least one validation test is passed a pseudo account number to the secure element and storing the pseudo account number with an indication of at least the received account number.

Another exemplary embodiment of the invention pertains to methods of providing dynamic payment information to a secure element that may be used by the secure element to pay for a transaction. Such an exemplary method comprises receiving at a server a request from a secure element of a computer to provide dynamic payment information the request including a pseudo account number and an identifier of a secure element applying at least one validation test pertaining to the received request and sending if the at least one validation test is passed dynamic payment information to the secure element.

Additional embodiments of the present invention pertain to computer product products that perform the above methods and validation entities that have computer readable memories that store these computer program products and processors that execute the stored computer program products. For example one such exemplary embodiment pertains to a validation entity and comprises a data processor a networking facility coupled to the processor a computer readable medium coupled to the processor and a computer program product embodied on the computer readable medium. An exemplary embodiment of the computer program product comprises code that directs a data processor to receive a request from a secure element of a computer to provide a pseudo account number the request including an identifier of the secure element and an account number and at least one of an expiration date a card verification value or a billing ZIP code of user specific payment information code that directs a data processor to apply at least one validation test pertaining to the received request code that directs a data processor to send if the at least one validation test is passed a pseudo account number to the secure element and code that directs a data processor to store the pseudo account number with an indication of at least the received account number. The exemplary computer program product may further comprise code that directs a data processor to receive a request from a secure element of a computer to provide dynamic payment information the request including a pseudo account number and an identifier of a secure element code that directs the data processor to apply at least one validation test pertaining to the received request and code that directs a data processor to send if the at least one validation test is passed dynamic payment information to the secure element.

Further details regarding embodiments of the invention are provided below in the Detailed Description with reference to the Figures.

The present invention is directed to ways of effecting secure communication of payment information to merchants for purchases made over the Internet. Exemplary embodiments of the present invention involve the incorporation of payment information e.g. credit card or debit card payment information into secure elements of specially designed computers and the use of the incorporated payment information to purchase a product or service from a merchant by way of the merchant s website with a highly improved degree of security. The secure element of the computer is described below in greater detail. As a brief summary the secure element provides a hardware level interface with the user which cannot be controlled or accessed by the operating system running on the computer and is thus immune from being hacked by computer viruses that may be inadvertently installed on the user s computer. The secure element can be accessed by the user by hitting a particular key or sequence of keys on the computer or the computer s keyboard or by the user clicking a button provided on a browser toolbar provided by a special browser plug in. When activated the secure element can access the user interface of the computer e.g. screen keyboard and mouse and can prevent keyboard keystrokes mouse clicks mouse movements and screen cursor position information from being sent to the operating system that is running on the computer. The secure element can also access the networking facility of the user s computer either directly or indirectly through the operating system to securely communicate with a validation server. The validation server assists the user in conveying payment information to a merchant website for a purchase transaction. This server may be provided by an issuing bank or a payment processing network such as VisaNet . The secure element may comprise its own data processor and memory and may further have switching circuitry that selectively connects and disconnects the screen keyboard and mouse from the I O controller of the computer. A payment application is installed on the secure element and executed by the processor of the secure element. The payment application handles the processing of payment information and communicates with the user and the validation entity.

Entity validates the received instance of user specific payment information in action A and sends back a pseudo account number pseudo PAN to the payment application running on the secure element in action A. The pseudo account number pseudo PAN is different from the real account number PAN provided to it by user and preferably cannot be derived from it by using a single mathematical operation. In addition the pseudo PAN preferably has the form of a PAN that can be processed by payment processing network such as network described below being a string sequence of at least 11 numeric digits preferably of at least 13 numeric digits and typically being a sequence of 15 16 17 18 or 19 numeric digits but preferably not more than 20 digits. As part of action A entity creates a computer record that stores and associates the following items the user specific payment information provided by user the pseudo account number pseudo PAN and the unique identifier of the secure element. In action A the payment application provides user with an indication that the payment information has been registered and provides an icon or other representation that the user may click on or select at a later date to send the payment information to a merchant website . This icon or representation may comprise the name of the bank that issued the user specific payment information plus the last 3 to 5 digits of the real PAN of the user specific payment information. Also the payment application may provide an input dialog box that allows user to create a name for the registered payment information. In action A user clicks on an icon or representation in the payment application to close it and further clicks on another icon or representation to exit the secure element the action of which restores the operating system s access to the computer s user interface. To protect the security of the user s real payment information such as from a reverse engineering of secure element the payment application running on the secure element does not permanently store the PAN CVV and expiration date of the user specific payment information that was provided to it by the user. Instead the payment application can relay this information to the validation server without any local storage of the information.

At a later time user shops at merchant website finds one or more products or services to purchase and navigates to the website s checkout page to pay for the transaction. These actions are indicated at A in the figure. At the checkout page user activates the secure element in action A by pressing a special key on the browser which may be set up in a tool bar provided by a browser plug in or by pressing a special key or a combination regular keys on the computer s keyboard as indicated above. At action A the secure element displays the secure screen and asks for the user s password as described above. In action A user enters the password which allows full access to the secure element when correctly entered. Upon confirmation of the correct password the secure element takes action A to automatically start the payment application or to present the secure desktop screen to enable user to start the payment application. Once started if the user has previous registered a number of instances of user specific payment information e.g. a number of portable consumer devices with the payment application the payment application may present a dialog box to user with icons representations of each of them to enable the user to select one of them e.g. one of the portable consumer devices or cards to use for payment. If only one instance of user specific payment information has been registered the payment application may present a dialog box to confirm use of the instance and to allow another instance or portable consumer device to be registered and used if desired or the payment application may be configured to proceed to use the sole registered instance e.g. portable consumer device without confirmation from the user. These interactions are indicated at A in the figure. Once the payment application has selected a portable consumer device to use for payment the payment application generates a cryptogram based on the pseudo PAN and other info and sends the cryptogram to validation entity through a networking facility of the user s computer as denoted by action A in the figure. The cryptogram sent in action A can also have the previously described identifier that uniquely identifies the secure element. This identifier can be used by entity to ensure that it is communicating with a trusted entity. As a further security feature one of actions A A can include obtaining a unique identifier for merchant and action can include the merchant identifier in the cryptogram or transmit it along with the cryptogram. Entity may then use the merchant identifier to either directly communicate payment information to the merchant or to instruct the payment processing network described below to only process the transaction with the merchant indicated by the identifier. The merchant identifier may be obtained from the active web browser either as the URL of the merchant checkout page or a data field in the contents of the checkout page and may be displayed to the user within the secure environment of the secure element to confirm the identity of the merchant.

Validation entity determines if the cryptogram is valid as denoted by action A and if valid it generates return payment information and associates the return information to the user s account. The validation process includes accessing the previously stored record for the user s user specific payment information e.g. the user s portable consumer device based on the value of the received pseudo PAN and may include comparing the received identifier of the secure element with identifier of the secure element that was previously stored in the accessed record. The validation process may also include checking a database of fraudulent activity related to the pseudo PAN and the corresponding real account number of the user and or the identity of the secure element. The return payment information may comprise a dynamic PAN number dPAN plus a dynamic card verification value dCVV2 or the real PAN number plus a dCVV2 value or a dPAN or real PAN plus a dynamic expiration date with an optional dCVV2 value. The dynamic PAN is different from the pseudo PAN and the corresponding real PAN of the user s user specific payment information e.g. the payment information for portable consumer device . The dPAN dCVV2 and dynamic expiration date are referred to as being dynamic since their values vary with time. Each may have the same value over a designated period of time or each may change with each request made to validation entity . The return payment information may be referred to as a dynamic payment information because at least one of its data fields has a value that varies with time. The use of the dynamic dPAN is currently preferred over the use of the real PAN. In action A validation entity sends the return dynamic payment information to the payment application running on the secure element of computer . Action A may also include sending shipping information. Previous action A preferably includes storing the return payment information in entity with an indication of the user s user specific payment information e.g. the real account information and optionally with an indication of the merchant identifier. This will facilitate the processing of the transaction through the card payment system as described below in greater detail.

At this point payment for the transaction with merchant may be completed in several different ways. As a first way the payment application may cause the returned dynamic payment information to be displayed in a window of the browser or another type of window of the operating system so that the user can copy the dynamic payment information into the merchant s checkout page either by hand or by cut and paste tools of the operating system. To do this the payment application may pass the dynamic payment information to a companion application running under the computer s operating system and the companion application may display the dynamic payment information to the user. As a second way the payment application can pass the dynamic payment information to a companion application running under the operating system and the companion application can locate the merchant s checkout page on computer and insert form fill the dynamic payment information into the fields of the checkout page. In either case user can exit from the secure element interface and return to the interface provided by the operating system and then submit the checkout page with the filled in payment information to merchant for processing. This action is denoted by action A in the figure. Merchant website may then sends the received dynamic payment information to acquiring bank to process the transaction. As a third way validation entity may send the dynamic payment information directly to merchant website as shown by action A A in the figure along with information about user and or the user s browser session with the merchant that may have been previously collected in one or more of actions A A and sent to entity in action A. Merchant website can use this additional information to correlate the received dynamic payment information to the user s browser session and can resend the checkout page to computer with an indication that the PAN CVV and expiration date data have been received such as showing asterisks in these fields . As another approach entity can provide merchant with the user s name and a portion of the user s real PAN and merchant can determine if the user has previously set up an account with the merchant the user would have provided the portion of the real PAN when the account was set up and merchant would have stored the portion . If so and if user had logged into her account prior to navigating to the checkout page then merchant can easily identify the user s purchasing session from all of the active purchasing sessions and can correlate the payment information from entity to the correct purchase session and correct checkout page.

Once merchant receives the dynamic payment information the purchase transaction may be completed through the conventional credit card debit card processing channels. In action A merchant sends the transaction information including the dynamic payment information for the user to its acquiring bank the acquiring bank records the information for later settlement purposes and forwards the transaction information in action A to a payment processing network which may be VisaNet as one example. If payment processing network recognizes the PAN provided in the transaction information as a dynamic PAN it may contact validation entity in action A to ask for the real payment information. Validation entity can check the dynamic PAN received from network against its records and provide network with the corresponding real payment information in action A. As another approach validation entity may forward the user s dynamic payment information along with the user s real payment information when the dynamic payment information is generated in action A thereby enabling actions A and A to be omitted. Network may then check each transaction it receives against the information sets that it has received from entity to find a match of the sets of dynamic payment information and to substitute real payment information for the received dynamic payment information if a match is found. Network and entity may be owned and operated by the same service provider and each may have their messages funneled through e.g. passed through a gateway server. Each of the authorization code and the decline code has a different format from that of the each of the above described PANs. An authorization decline code is less than 13 characters in length and is typically 5 to 9 characters in length and may include alpha characters and well as numeric digits.

Once payment processing network has the real payment information it can contact the issuing bank for user to seek approval for the transaction as shown by action A in the figure. In some cases issuing bank may have previously given network a set of criteria that network can use to approve transactions on its own without seeking approval from the issuing bank for each transaction. If so network can approve or disapprove the transaction on its own using the pre supplied criteria as part of action A. In action A payment network sends along with an indication of the transaction an authorization code to acquiring bank if the transaction is approved or a declined code if the transaction is not approved. In action A acquiring bank finds the record for the transaction based on the indication of the transaction sent by network stores the authorization code or declined code in the found record and forwards the received code to merchant along with an indication of the transaction. Upon receiving the authorization or declined code the merchant website can send an indication to user in action A as to whether the transaction was approved or declined.

Computer and merchant website may communicate with one another over a public communication network which may include the Internet. Also computer and validation entity may communicate with one another over a public communications network which may include the Internet. Entitles and may communicate with one another over a combination of one or more public and private communications networks which may include the Internet. Virtual private networks may be established between these components particularly over the segments that are public networks. Each of the above possible combinations of communication networks is generally denoted herein and in the figures by reference number .

An advantage of using dynamic payment information is that the real payment information e.g. the above mentioned user specific payment information is not compromised if a hacker is able to receive and decrypt the request message for dynamic payment information sent from secure element to validation entity . This allows user to continue to use her user specific payment information e.g. portable consumer device in other commerce channels such as in store purchases even if the hacker tries to use the dynamic payment information in a transaction. Enhanced protection is provided by using a dPAN instead of the real PAN in the dynamic payment information. Using the pseudo PAN in the request messages to obtain dynamic payment information also has the above advantages of protecting the real PAN. As an additional advantage of using the pseudo PAN payment processing network can be configured to send an alert message to validation entity whenever a transaction is attempted to be processed through network with the pseudo PAN and entity can flag the user s account for potential fraud and the operator of entity can send the user an updated payment application program to install on secure element with the updated payment application program having new encryption keys and optionally a new unique identifier for secure element . In this manner with the pseudo PAN having the form of a PAN that can be processed by payment processing network the pseudo PAN further provides the advantage of detecting the hacking of communication messages between secure element and validation entity . To further aid in this detection secure element may include a fake expiration date and fake CW value along with the pseudo PAN in the request messages that it sends to entity . As indicated above the account number of the user specific payment information and pseudo PAN and the dynamic PAN are each recognizable and processable by a card payment processing network that processes credit card and or debit card transactions such as VisaNet . The payment processing network is independent of the bank that issued the user specified payment information and the merchants involved with the user s transactions. Also each of the above account numbers PAN comprises a sequence of at least eleven numeric digits preferably of 13 digits and typically is a sequence of 15 16 17 18 or 19 digits. These features of the account numbers enable the above requests to establish and receive a pseudo PAN to receive a dynamic PAN and to use a dynamic PAN to all be processed through existing and legacy card payment networks without the need for significant changes the existing payment processing networks.

Having this provided a description of overall systems and methods descriptions of the specific components is now provided. The user s computer may comprise a desktop computer a laptop computer a smart phone or any portable electronic device that has a networking facility. Referring to an exemplary implementation of computer has one or more processors a tangible non transitory computer readable medium coupled to processor s that stores instruction codes software that direct processor s and that stores data used by processor s an I O controller that interfaces processor s to a user interface and a networking facility . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. for user to receive information from computer and to provide input to computer . Networking facility may comprise software and hardware that enable a process running on computer to communicate with a communications network so as to send and receive messages data and the like to one or more entities coupled to the communications network. The above components are found in conventional computers. As an unconventional feature the exemplary implementation of computer shown in further comprises a secure element of the type described above with reference to . Secure element has its own processor and memory as described below or multiplexes the use of processor s and computer readable medium in a secure manner that prevents the operating system from controlling it or accessing its memory. The above described payment application is loaded into the memory of secure element and executed by the processor of element . The data flowing between I O controller and user interface goes through secure element so that secure element can provide visual information to the user via the computer s screen and can receive user inputs from user interface and prevent the inputs from being received by I O controller when secure element is actively interfacing with the user. Secure element can be integrally assembled with processor s of computer such as on the same semiconductor die or in the same semiconductor package so that the processor has to be damaged or destroyed in order to obtain the data and encryption keys stored in secure element .

Computer readable medium of computer may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory. Computer readable medium stores an operating system for computer which enables processes and applications to be run by processor s . The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility peripheral interface and other components of computer . The operating system may be complex and full featured such as found on desk top computers or simplified such as found on cell phones PDAs and many other types of portable electronic devices.

The companion application for element s payment application is loaded onto computer readable medium and is executed by processor s . Access to a small portion of computer readable medium may be shared with the processor of secure element . The payment application running on secure element and the companion application running on processor s can communicate with one another using the shared portion of medium . For example each application may be assigned a mail box section and a flag section in the shared portion with both sections being readable and writable by each application. When the payment application wants to send data and instructions to the companion application it can write the instructions and or data into the mailbox section for the companion application and then write a data word to the flag section for the companion application that indicates that the mailbox has just been written to. The companion application can periodically check its flag section for such a data word and when found it can read its mail box then erase the contents of its mail box section and reset its flag section to zero. The data word written to the flag section may be a non zero integer value that indicates the number of words or bytes written to the mail box section. Before writing to the mailbox section of the companion application the payment application can periodically read the flag section of the companion application and can write the instructions and or date when the flag section has a zero word value. In a similar manner when the companion application wants to send data and instructions to the payment application it can write the instructions and or data into the mailbox section for the payment application and then write a data word to the flag section for the payment application that indicates that the mailbox has just been written to. The payment application can periodically check its flag section for such a data word and when found it can read its mail box then erase the contents of its mail box section and reset its flag section to zero. As above the data word written to the flag section may be a non zero integer value that indicates the number of words or bytes written to the mail box section. Before writing to the mailbox section of the payment application the companion application can periodically read the flag section of the payment application and can write the instructions and or data when the flag section has a zero word value. The companion application may be downloaded and installed by the user before starting the set up process outlined in e.g. before action A . The companion application may be configured by the operating system registry to run as a low CPU level background process each time the computer is booted up.

The companion application is stored on the computer s medium and comprises code that directs the computer s processor s to establish and handle communications with validation entity using networking facilities of computer and the shared portion of computer readable medium . The companion application may also comprise code that directs the computer s processor s to obtain the merchant identifier from the web browser running on the operating system and to provide the merchant identifier to the secure element through the shared portion of medium . The companion application may also comprise code that directs the computer s processor s to receive display dynamic payment information from secure element through the shared memory and to display it to the user or to form fill the dynamic information into the checkout page of the merchant as displayed by the user s browser. The companion application may also comprise code that directs the computer s processor s to detect a specific keyboard sequence or combination of keys of the keyboard and to send a message to secure element to start its interface with the user and to decouple user interface from the operating system. In view of this description one of ordinary skill in the computer software art can readily create a set of instructions to implement the companion program without undue experimentation.

With regard to computer networking facility of computer may comprise software and hardware that enable a process running on computer to communicate with a communications network such as network to send and receive messages data and the like to one or more entities coupled to the communications network. The hardware of facility may comprise dedicated hardware separate from processor s or the shared use of processor s or a combination thereof. The software of facility may comprise firmware software stored in computer readable medium or another computer readable medium portions of the operating system or a combination of any of the preceding items. Networking facility is preferably a non exclusive resource allowing access to the communications network by other processes and applications being run by computer .

The operating system of computer comprises one or more software modules and application programs generically called network services modules herein that can access networking facility and set up communications sessions to entities on communications network . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels the OS Services Layer and the Base Services Layer of the Symbian operating system Internet browsers and the like. Each of these network services modules is non exclusive e.g. capable of serving more than one processor and more than one process application and provides an application programming interface API to a collection of functions that a processor can access using respective function calls. With these API facilities a collection of function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The companion application can have such a collection of function calls to the API of a network services module of computer including one or more function calls that provide the universal resource identifier URID for validation entity as passed to the companion application by the payment application and an instruction to establish a session with the validation entity. The session may be a secure socket layer or secure transport layer session e.g. SSL session STL session with mutual authentication. As part of establishing the session in some implementations the companion application may include directing data processor to provide or to cause to be provided a network address for the computer s network services module to validation entity . The network address may be static or dynamic the latter of which may be obtained through API function calls to the computer s network services module. The network address may an IP address.

If the companion application wishes to use an Internet browser for a network services module it may further comprise API function calls to the computer s operating system to initiate an instance of the browser and provide it with access to the browser instance. In some implementations such as when the payment application in secure element stores the URID of validation entity the companion application may direct the data processor to establish communications with validation entity well before user invokes secure element to request it to pay for a transaction. The companion application and validation entity may keep the communications session active until the user makes such a request and between requests by intermittently exchanging heartbeat messages. For example the companion application may periodically aperiodically or randomly send messages to validation entity confirming its presence in the session and validation entity may send a reply message confirming its presence in the session.

Referring back to secure element comprises various codes embodied on computer readable medium that direct data processor to perform respective actions. A first code directs data processor to communicate with computer by way of the companion application so as to gain access networking facility of computer . The first code may comprise code that directs data processor to send and receive instruction and data by way of the above described mailbox and flag section of the shared portion of medium and may include instructions the direct processor to carry out the above described actions of the exchange protocol. The companion application may comprises a collection of instructions that enables the element s data processor to make function calls to various application program interfaces API s of the computer s operating system such as those related to networking and accessing networking facility . In this manner the element s data processor can sent function calls intended for computer to the companion application and the companion application can submit the function calls to the operating system of computer on behalf of the processor and can receive the results of the function calls and forward them to processor .

Another code of the payment application on secure element directs data processor to establish communications with validation entity using networking facility of computer . This can be done by providing a URL of entity to the companion application and directing the companion application to establish the communications with entity .

Other codes of the payment application direct data processor to establish a first secure interface with user to receive the information described above pertaining to the user s portable consumer device to encrypt this information and an identifier of the secure element with an encryption key stored in medium to provide this encrypted information to the companion application with an instruction that it is to send it to validation entity so as to obtain a pseudo PAN to receive back an encrypted message from entity by way of the companion application to decrypt the encrypted message and extract the pseudo PAN and to store the pseudo PAN. These codes may comprises code that directs data processor to receive a real account number and at least one of an expiration date a card verification value or a billing ZIP code of user specific payment information code that directs data processor to obtain an identifier for secure element code that directs data processor to send the received real account number the received at least one of an expiration date a card verification value or a billing ZIP code and the obtained identifier for the secure element to validation entity code that directs data processor to receive in response a pseudo account number from the validation entity the received pseudo account number being different from the real account number of the user specific payment information and code that directs data processor to store in memory of the secure element the received pseudo account number. The payment application may be stored in a non volatile section of memory and may contain the unique identifier for secure element . This allows the value of the identifier to be updated with a reloading of the payment application such as when fraudulent activity is detected by entity . As another approach the unique identifier for secure element may be stored by the manufacturer of element in non volatile part of memory that is separate from the location where the payment application is stored. As another approach the identifier may be a combination of a number stored with the payment application and a number stored by the manufacturer in a part of memory that is separate from the payment application.

Additional codes of the payment application direct data processor to establish a second secure interface with user at a later date to receive a request to obtain dynamic payment information which may include receiving a selection of an pseudo PAN account from the user to encrypt this pseudo PAN and an identifier of the secure element with an encryption key stored in medium to provide this encrypted information to the companion application with an instruction that it is to send it to validation entity so as to obtain the dynamic payment information to receive back an encrypted message from entity by way of the companion application to decrypt the encrypted message and extract the dynamic payment information. These codes may also include instructions that direct data processor to send a message to the companion application with an instruction to find and provide it with the merchant identifier associated with the active merchant checkout page encrypting the merchant identifier and sending the encrypted merchant identifier to entity with the other data in the request. Additional instructions may direct data processor to display the decrypted dynamic payment information to the user or to send the decrypted dynamic payment information to the companion application with an instruction that the companion application display the dynamic payment information in a window or to direct the companion application to fill the dynamic payment information into the merchant checkout page. These codes collectively comprise at least code that directs data processor to send from the secure element of a computer a representation of the pseudo account number to a validation entity and code that directs data processor to receive in response dynamic payment information from the validation entity the received dynamic payment information having an account number that is different from the pseudo account number.

In establishing the above secure interfaces with the user data processor can send and instruction to multiplexer unit by way of I O controller to prevent inputs from user interface from reaching the I O controller of computer .

The above codes instructions and actions of the payment application and the companion application can be readily implemented with conventional I O instructions database function calls network function calls memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure these codes instructions and actions may be implemented by one of ordinary skill in the art without undue experimentation. Data processor may be implemented with one CPU or multiple CPUs.

Having described various embodiments and implementations of secure element various embodiments and implementations of validation entity are now described with reference to . Validation entity comprises a system having one or more servers coupled to a communications network that can receive a request from a secure element to process and to provide the appropriate data depending upon the request as described above. One of the servers of entity is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a user interface one or more databases and a networking facility the latter of which is coupled to one or more communications networks so that it can communicate to computer merchant payment processing network and banks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of entity to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory. Data processor may be implemented with one CPU or multiple CPUs.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of entity . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of entity also comprises one or more network services modules that can access networking facility and set up communications sessions to entities on the communications networks . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Validation entity conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Validation entity can process requests transmitted from a plurality of different secure elements e.g. millions of elements and can process any number of transmissions by a particular element . As described above there are two basic types of requests 1 a request to obtain a pseudo PAN for a real account e.g. account of portable consumer device and 2 a request to obtain dynamic payment information e.g. a d PAN corresponding to a pseudo PAN. The former may be referred to as a pseudo PAN request and the latter may be referred to as a dynamic information request. Validation entity applies one or more validation tests to secure element and or the information in its requests to obtain a level of confidence that the requests are legitimate. When the one or more validation tests are passed and preferably when none of the tests are failed validation entity sends the requested data to secure element and optionally to payment processing network along with the real account number e.g. real PAN associated with the request. For these tasks validation entity may comprise code embodied on computer readable medium that directs data processor to communicate with computer and secure element using networking facility over communications network . This code may include instructions that establish a communications session with computer including the option of establishing an SSL STL session with mutual authentication and encryption based on a triple DES algorithm and instructions for sending and receiving messages to secure element through the communications session. Validation entity may further comprise code embodied on computer readable medium that directs data processor to receive encrypted requests sent by secure element and code that directs data processor to decrypt the encrypted information in the requests. This information may be encrypted by a session key of an SSL STL session or by an encryption key stored in secure element and known to validation entity or may be doubly encrypted by both keys. The latter key may be uniquely assigned to the secure element. Validation entity may further comprise code embodied on computer readable medium that directs data processor to apply one or more validation tests as described below and to send the requested data to secure element and optionally to payment processing network if a selected number of validation tests are passed. Data processor may access databases in performing the one or more validation tests. The validation tests and codes therefor are described below in greater detail. The above codes and codes described below for validation entity may be implemented in any number of programming languages. They can be implemented with conventional I O instructions database function calls network function calls memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. Furthermore one of ordinary skill in the art will be readily able to construct instructions to implement these codes in view of this disclosure without undue experimentation.

A first validation test that validation entity may apply pertains to verifying that secure element is authentic. Validation entity may maintain a first database of valid identifiers of the secure elements and this database may also include indications of whether a valid identifier has been associated with fraudulent activity. The first validation test may comprise determined whether the received identifier of secure element is in the first database of valid identifiers. If it is the first validation test is passed if not it is failed. If the first validation test is failed validation entity may record the identifier of the failed secure element and the source IP address from which the failed secure element made the request in a third database described below. A second validation test that validation entity may apply pertains to verifying that secure element has not been involved in fraudulent transactions. For this validation entity may also have a second database that tracks the identifiers of secure elements that have been used in fraudulent activities and may check the identifier of secure element against this database. If the identifier in the request is found in the second database the second validation test is deemed to have failed. The second validation test may further comprise checking the element s identifier and or the IP address from which an incoming request was originated the source IP address of the message against the previously described third database that stores element identifiers and IP addresses associated with requests that have failed the first validation test. If an element identifier or IP address is found in this database the second validation test is deemed to have been failed. Checking the element identifiers and or the IP addresses in this way prevents replay attacks by fraudsters. It may be appreciated that the second and third databases into a single database generically termed as a database of identifiers of suspicious secure elements. If the first and second validation tests are passed validation entity may send the pseudo account number or dynamic payment information depending upon the type of received request to secure element or may apply the additional validation tests described below before sending the information.

When validation entity receives a pseudo PAN request from secure element for a pseudo PAN the request will have the real account number e.g. real PAN of the portable consumer device and additional information which is at least one of an expiration date a card verification value or a billing ZIP code associated with device . As a third validation test in addition to conducting the above first and second validation tests entity may access its database of user account information or contact the bank that issued the user specific payment information e.g. device thereby obtaining the information record for the real PAN provided in the pseudo PAN request and can compare the additional information provided in the pseudo PAN request e.g. expiration date card verification value and or a billing ZIP code against the values in the obtained information record. If the additional information in the pseudo PAN request does not fully match the information in the obtained information record the third validation test can be deemed to have been failed and the pseudo PAN request is rejected. If the additional information fully matches the information in the obtained information record third validation is passed and validation entity may proceed to provide secure element with a pseudo PAN corresponding to the real PAN and may create a record in a fourth database that associates the issued pseudo PAN with the user account of device e.g. with the real PAN of the user specific payment information and with the received identifier for secure element . As an option validation entity may conduct a fourth validation test after the third test before providing the pseudo PAN to secure element . In this test the issuing bank and or payment network and or validation entity may limit the number of computers with secure elements that user can use with a particular instance of user specific payment information e.g. that user can use with a particular portable consumer device . As the forth validation test entity may access a fifth database to determine if a limit on the number of secure elements has been placed on the received instance of user specific payment information e.g. device . if so entity can access the aforementioned fourth database to see how many secure elements have already been associated with the received instance of user specific payment information e.g. with the real PAN for device . If the limit has not yet been reached entity proceeds with providing the pseudo PAN to secure element and updating the fourth database to include the new pseudo PAN and the identifier of the secure element to which the pseudo PAN has been provided. Entity also updates the fourth database to increment the number of secure elements associated with device . It may be appreciated that the fourth and fifth databases may be combined together into a single database.

When validation entity receives a dynamic information request from secure element for dynamic payment information the request will have pseudo PAN and the identifier of secure element that made the request. As a fifth validation test in addition to conducting the above first and second validation tests entity may access its fourth database to obtain the record for the received pseudo PAN obtain the identifiers for all of the secure elements that have been previously associated with the received pseudo PAN as associated by the processing of the above pseudo PAN requests and to compare the identifier for secure element received in the dynamic information request against the identifier s in the accessed record for a match of identifiers. If no match is found the fifth validation test is deemed to have failed and validation entity can record the received identifier for element in the above mentioned second database of secure elements associated with fraudulent transactions. If a match is found validation entity can send the dynamic payment information e.g. d PAN dCVV2 and dynamic expiration date to secure element can record the contents of the issued dynamic payment information and the indication of the corresponding customer account for device e.g. with the real PAN of the user specific payment information in a sixth database and can optionally send the dynamic payment information and the real payment information i.e. the user specific payment information to payment processing network with an indication that the dynamic data will be used soon in a transaction to be processed by network .

As described above validation entity may send to secure element the user s shipping address information and or billing address information that has been previously associated to user . The association may be stored in a database of validation entity or at the issuing bank for the user s portable consumer device . Validation entity may further comprise code that directs data processor to obtain address information for the consumer account indicated by the pseudo account number in the received request either from a database or from an issuing bank and to send the address information to element along with the dynamic payment information when the selected number of validation tests have been passed as described above. The above codes and actions can be implemented with conventional I O instructions database function calls network function calls memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As indicated above validation entity may be configured to send a dynamic account number dPAN to secure element and the payment processing network along with a dCVV2 value and or a dynamic expiration date. Validation entity may contact the issuing bank for device to obtain the dPAN or may read it from a list of dPANs previously sent to entity by bank or created by entity or network or may generate it from an algorithm previously provided to entity by bank . Validation entity may comprise code embodied on computer readable medium that directs data processor to execute these actions as desired by the issuing bank. When payment processing network received the dCCV2 value dPAN value and the account number for device it may forward all three datum to the issuing bank so that the issuing bank can correlate the dPAN to the account number of device .

To perform the above actions and tasks validation entity may comprises a computer program product installed on its computer readable memory . The computer program product may comprise code that directs data processor to receive a request from a secure element of a computer to provide a pseudo account number the request including an identifier of the secure element and a real account number PAN and at least one of an expiration date a card verification value or a billing ZIP code of an instance of user specific payment information code that directs data processor to apply at least one validation test pertaining to the received request code that directs data processor to send if the at least one validation test is passed a pseudo account number to the secure element and code that directs data processor to store the pseudo account number with an indication of at least the received real account number in one of its databases . The program may further comprise code that directs data processor to receive a request from a secure element of a computer to provide dynamic payment information the request including a pseudo account number and an identifier of the secure element code that directs data processor to apply at least one validation test pertaining to the received request and code that directs data processor to send if the at least one validation test is passed dynamic payment information to the secure element. The computer program product may further comprise code that directs data processor to receive a request from a payment processing network to provide real payment information corresponding to an instance of dynamic payment information and code that directs data processor to provide the requested real payment information to the payment processing network .

The further embodiments of the computer program product may be adapted to convey the payment information directly to the merchant and to a payment processing network. For example a further computer program product may comprise code that directs data processor to receive a request from a secure element of a computer to provide dynamic payment information the request including a pseudo account number an identifier of the secure element and an identifier of a merchant code that directs data processor to apply at least one validation test pertaining to the received request and code that directs data processor to send if the at least one validation test is passed dynamic payment information to a merchant indicated by the received merchant identifier. In another embodiment such a computer program produce may comprise code that directs data processor to receive a request from a secure element of a computer to provide dynamic payment information the request including a pseudo account number an identifier of the secure element and an identifier of a merchant code that directs data processor to apply at least one validation test pertaining to the received request code that directs data processor to send if the at least one validation test is passed dynamic payment information to secure element and code that directs data processor to send if the at least one validation test is passed the dynamic payment information and an indication of the identity of the merchant to a payment processing network .

The above described validation tests can be implemented by the following instructions of the computer program product. The first validation test can be implemented by instructions that direct data processor to compare the receive identifier of the secure element against a database of valid identifiers to find a match the first validation test being passed if a match is found otherwise failed. The second validation test can be implemented by instructions that direct data processor to compare the receive identifier of the secure element against a database of identifiers of secure elements involved in prior fraudulent activity the second validation test being failed if a match is found otherwise passed. The instructions for the second validation test may also include instructions that direct data processor to compare the IP address of the request sent by the secure element against a database of IP addresses that have been associated with fraudulent activity the second validation test being failed if a match in this database is found. The third validation test may be implemented by first instructions that direct data processor to obtain the real payment information for the received account number of the user specific payment information e.g. portable consumer device from a database or the bank that issued the user specific payment information e.g. device and second instructions that direct data processor to compare the received at least one of an expiration date a card verification value or a billing ZIP code to the real payment information for the received account number for a match the third validation test being passed if a match is found otherwise failed.

The fourth validation test can be implemented by first instructions that direct data processor to access a database to determine the limit on the number of secure elements has been placed on the received real account number second instructions that direct data processor to access a database to determine the current number secure elements have already been associated to the received real account number and third instructions that direct the data processor to compare the current number to the limit to determine if an additional association of a secure element would exceed the limit. If the limit would be exceeded the fourth validation test is failed otherwise it is passed. If a real account number is not eligible to be used with secure elements e.g. the portable consumer device is not enrolled in the program then the limit for the account number may be set to zero or the limit may be taken as zero if the account number is not in the database.

The fifth validation test can be implemented by first instructions that direct data processor to access a database to obtain the record for the received pseudo account number second instructions that direct data processor to obtain from the record the identifiers for all of the secure elements that have been previously associated with the received pseudo account number and third instructions direct the data processor to compare the identifier for the secure element received in the request against each identifier in the accessed record for a match. If a match is found the fifth validation test is passed otherwise it is failed.

Validation entity may further comprise code that directs data processor to receive a message from a payment processing network that a transaction using a pseudo PAN has been attempted and code that directs data processor to send an alert notification to the user to which the pseudo PAN has been assigned or the issuing bank of the user specific payment information to which the pseudo PAN has been assigned. The alert notification can indication that user s payment application should be replaced so as to provide new encryption keys and optionally a new identifier for the secure element.

The above codes of the various embodiments of computer program products can be implemented with conventional I O instructions memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

It should be understood that various embodiments of the present invention as described above can be implemented in the form of control logic using computer software in a modular or integrated manner. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will know and appreciate other ways and or methods to implement embodiments of the present invention using hardware and a combination of hardware and software.

Any of the software components or functions described in this patent application may be implemented as software code to be executed by a processor using any suitable computer language such as for example C C C Java C or Perl using for example conventional or object oriented techniques. The software code may be stored as a series of instructions or commands on a computer readable medium such as a random access memory RAM a read only memory ROM a magnetic medium such as a hard drive or a floppy disk or an optical medium such as a CD ROM. Any such computer readable medium may reside on or within a single computational apparatus and may be present on or within different computational apparatuses within a system or network.

The above description is illustrative and is not restrictive. Many variations of the invention and embodiments thereof will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention should therefore be determined not with reference to the above description but instead should be determined with reference to the pending claims along with their full scope or equivalents.

One or more features from any embodiment may be combined with one or more features of any other embodiment without departing from the scope of the invention.

A recitation of a an or the is intended to mean one or more unless specifically indicated to the contrary.

All patents patent applications publications and descriptions mentioned above are herein incorporated by reference in their entirety for all purposes. None is admitted to be prior art.

