---

title: Inmate information center for correctional facility processing
abstract: Systems, methods, and machine-readable media are provided for correctional facility content management. An inmate computing device provides user interfaces and includes a network interface to connect to processors via a network. A platform application facilitates an inmate interface via the inmate computing device and operates in an application layer. Native modules, designed for the platform application, operate in the application layer. At least one module controls access by the inmate computing device to content from a remote source transmitting the content to facilitate playing and displaying of the content with the inmate computing device. Access regimes define rules regulating the modules. At least one access regime defines rules regulating the access to the content. Each access regime is a function of one or more of an identity of third-party module, an identity of native module, an identity of inmate computing device, an identity of inmate, or a location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09596247&OS=09596247&RS=09596247
owner: CORE SYSTEMS (NI) LIMITED
number: 09596247
owner_city: Belfast
owner_country: IE
publication_date: 20160322
---
This application is a Continuation Application of U.S. patent application Ser. No. 14 694 923 filed on Apr. 23 2015 entitled INMATE INFORMATION CENTER FOR CORRECTIONAL FACILITY PROCESSING now U.S. Pat. No. 9 325 763 which is a Continuation Application of U.S. patent application Ser. No. 13 889 117 filed on May 7 2013 now U.S. Pat. No. 9 043 813 entitled INMATE INFORMATION CENTER FOR CORRECTIONAL FACILITY PROCESSING which is a Continuation Application of U.S. patent application Ser. No. 12 859 728 filed on Aug. 19 2010 now U.S. Pat. No. 8 458 732 entitled INMATE INFORMATION CENTER FOR CORRECTIONAL FACILITY PROCESSING which claims the benefit of and is a non provisional of U.S. Provisional Application Ser. No. 61 235 286 filed on Aug. 19 2009 entitled INMATE INFORMATION CENTER which are each hereby expressly incorporated by reference in its entirety for all purposes.

This disclosure relates in general to correctional facility processing and but not by way of limitation to operation of inmate accessed computing devices.

In the current economic climate corrections facilities are seeking more cost effective ways to incarcerate and supervise criminal offenders. By streamlining procedures staff can use their time efficiently. Within the corrections facility there is a range of services available from many technology vendors. Retrieving information from a variety of sources can be prolonged as it is not always readily available. There is no common way to access to a range of software services to provide useful information at the touch of a button.

Many corrections facilities have integrated software systems to automate and streamline many tasks using any number of technology vendors. These software systems do not interact well with each other or legacy software systems. Different vendors have different capabilities for auditing use of their software or perhaps a few modules they might offer. Implementation of control over a number of software systems from different vendors requires each to independently add functionality. Choreographing multiple technology vendors is difficult and results are mixed.

With the increase in prison populations and cutbacks in expenditure staff are pressed to be more efficient with their time. Inmates have a constant need for basic information and this is predominantly provided by corrections staff. The requirement to answer the same questions day in day out can be demoralizing and time consuming for corrections staff. Inmates are also frustrated by the situation as they are highly reliant on corrections staff. Response rates to inmate queries are dependent on corrections staff availability. Ideally inmates would like immediate access to information they want without having to rely on someone else to provide it.

When dealing with high risk offenders staff minimize physical interaction with them. A kiosk or information center can provide much of the day to day information to significantly reduce the need for corrections staff to manually provide day to day information to offenders. Different vendors provide different kiosks such that the offenders are given access to a few information centers that require independent maintenance configuration and support. Kiosks are not interoperable and have many overlapping functionality where each operates in a separate silo.

In one embodiment the present disclosure provides a platform application that integrates both native and third party modules into an integrated environment on an inmate computing device. Third party modules or systems can be applications meant to operate independent from the platform application. Information is communicated between the platform application and third party module or system to add audit alarm and other functions across all modules or systems controlled by the platform software. The third party module or system is audited to allow triggering of rules that cause remedial action to be taken. Triggers can be on actions not monitored by a particular third party module or system.

In another embodiment the present disclosure provides an inmate computing device for correctional facilities. The inmate computing device includes a platform application native modules a number of application programming interface API translation profiles an audit function a number of alarm rules and an alarm function. The platform application runs on the inmate computing device. The platform application operates at least partially in an application layer of the inmate computing device. Native modules are designed for the platform application and operate in the application layer. The number of API translation profiles is configured to integrate a plurality of third party modules which are not designed to natively interact with the platform application. The plurality of third party modules uses the plurality of API translation profiles to integrate into the platform application. Each of the plurality of third party modules is designed to operate independently from each other in the application layer. The audit function is configured to monitor the plurality of third party modules. The plurality of alarm rules defines a plurality of triggers and a plurality of remedial actions. The alarm function is configured to perform the plurality of remedial actions upon activation of the plurality of triggers.

In still another embodiment the present disclosure provides a method for providing computing resources to inmates at correctional facilities. In one step a platform application is run on an inmate computing device. The platform application is configured to operate at least partially in an application layer of the inmate computing device. Information is communicated with an application programming interface API of a third party module. The third party module is not natively designed to interact with the platform application and designed to operate independently in the application layer. The information is processed with the platform application. The third party module is monitored with an audit function. An alarm rule is loaded for the third party module before processing the alarm rule. Violation of the alarm rule is detected before performing a remedial action associated with the alarm rule.

In yet another embodiment the present disclosure provides a computer program product embodied on one or more storage media for providing computing resources to inmates at correctional facilities. There is code for the computer program product doing various functions. A platform application is has code for running on an inmate computing device. The platform application is configured with code to operate at least partially in an application layer of the inmate computing device. Information is communicated with an application programming interface API of a third party module using code. The third party module is not natively designed to interact with the platform application and designed to operate independently in the application layer. The information is processed with the platform application using code. The third party module is monitored with an audit function using code. An alarm rule is loaded for the third party module using code before processing the alarm rule. Violation of the alarm rule is detected with code before performing a remedial action associated with the alarm rule.

Further areas of applicability of the present disclosure will become apparent from the detailed description provided hereinafter. It should be understood that the detailed description and specific examples while indicating various embodiments are intended for purposes of illustration only and are not intended to necessarily limit the scope of the disclosure.

In the appended figures similar components and or features may have the same reference label. Where the reference label is used in the specification the description is applicable to any one of the similar components having the same reference label.

The ensuing description provides preferred exemplary embodiment s only and is not intended to limit the scope applicability or configuration of the disclosure. Rather the ensuing description of the preferred exemplary embodiment s will provide those skilled in the art with an enabling description for implementing a preferred exemplary embodiment. It is understood that various changes may be made in the function and arrangement of elements without departing from the spirit and scope as set forth in the appended claims.

Referring first to a block diagram of an embodiment of a correctional facility processing CFP system is shown. There can be many different configurations of CFP systems customized for particular requirements of a facility. Different facilities will have different customizations of the various blocks according to those legacy systems desired functionality regulatory requirements etc. Generally a correctional facility will have a legacy inmate management system correctional facility security system third party modules third party systems when a platform application with its service modules staff and inmate interfaces are grafted into the CFP system . A new CFP system could have much more of the functionality in service modules rather than having to use legacy functionality.

A special purpose computer interacts with third party systems an inmate management system and a correctional facility security system in this embodiment. The special purpose computer could be a kiosk a handheld computer a desktop computer a tablet computer a smart phone a group of computers a remote computer system in the cloud or otherwise remote to the user etc. The special purpose computer is typically physically hardened if accessible by inmates and might be located in a common area or in a cell. Various input devices like a keyboard a mouse a touch screen a biometric reader a video camera security sensors etc. could be peripherals on the special purpose computer .

The special purpose computer is attached to one or more wired or wireless networks not shown . The special purpose computer communicates with third party systems the inmate management system and correctional facility security system using the one or more networks. A third party system is any system not designed to interoperate with the platform application . The inmate management system and the correctional facility security system are examples of third party systems. Third party systems have interfaces messaging and or application program interfaces APIs to interact with other systems of the CFP system .

The inmate management system typically performs basic functions of the correctional facility relating to inmate management. Inmate accounting commissary sentence planning health records visitation and other custom or legacy functions are part of the inmate management system . On occasion functions of the inmate management system are replaced with functionality elsewhere in the CFP system .

The correctional facility security system has functions to secure the correctional facility. Video surveillance intrusions detection access control biometric authentication login authentication lock operation or other security functionality. The correctional facility security system has an interface to allow the platform application to perform certain remedial actions should an alarm rule be violated. The platform application can request information on valid inmate location command lockdown of an area trigger saving of video surveillance and activate other functions of the correctional facility security system .

An operating system runs on the special purpose computer for example LINUX Windows OS X or UNIX . Other embodiment could use a secure operating system. The operating system in this embodiment is commercial grade and not particularly secure. The platform application provides functionality to allow service and third party modules to operate more securely.

The platform application runs in the application layer of the operating system . Service modules are functional units that can be selected individually to be part of the CFP system if the corresponding functionality is desired for the correctional facility. Service modules could perform most any function not performed elsewhere in the CFP system . The platform application serves as a buffer between the operating system and service and third party modules . The third party modules were designed to operate without the platform application and directly on the operating system . The third party modules are typically designed to be stand alone applications but the platform application provides additional functionality audit alarm cross module interoperability etc. despite little native support for this functionality in the third party modules .

There are two different interfaces in the CFP system that are spread out in various locations of the correctional facility. An inmate interface has limited functionality more controls and security. Inmates can use this interface to access functionality in the service modules the third party modules and third party systems . Many of the third party modules and third party systems are designed to run on different single purpose computers but are now accessible from the inmate interface . Input functions are locked down or filtered on the special purpose computer when the inmate interface is used.

The staff interface is used to program or reconfigure the CFP system and access information and functionality not available to inmates. The staff interfaces may be physically separate from and inaccessible by inmates. There could be different levels of access to the staff interface such that only staff needing access to a particular function would have that access. Through the staff interface staff can remotely view the screen of an inmate view a log of the inmate interaction view one or more active processes of the inmate send a message for display on a screen of the inmate or a plurality of screens for a plurality of inmates that is displayed on top of the one or more active processes and or remotely kill one or more of the active processes.

The special purpose computer has access to non volatile storage in the form of drives network attached storage NAS cloud based storage etc. for storing various information. The information could be in files databases tables etc. This embodiment has an audit database a configuration database an inmate database and a staff database. These may be any type of data structure and could be combined or divided in any number of ways.

The audit database stores audit information gathered as the CFP system operates. The audit information identifies user function used keystrokes and other input screen scrapes time of interaction rule violations etc. Service modules designed for operation with the platform application typically have more integration with the audit functionality when compared to third party modules and systems . Non native functions can still have keystrokes API traffic and screen scrapes recorded in the audit database. Different regimes for the different users can modify the level of audit the amount of audit information gathered and how long the audit information is stored.

The configuration database stores configuration information for the various components of the CFP system . The various functions use configuration parameters and information on how to interact with those functions that is stored in the configuration database . The configuration database can be modified by the staff system administrators and software developers to modify operation of the functionality .

The inmate database stores information on all the inmates that might interact with the CFP system . It may also include information on those civilians that might interact with the inmates. Rights privileges authorizations special accommodations demographic information are all stored in the inmate database . Information used to authenticate the inmate throughout the CFP system is also stored in the inmate database that includes login identification biometric data. Incarceration details like crimes release date prior incarceration history etc. is also stored.

The staff database stores information on the staff that might be used within the CFP system . Authentication authorization access information is stored in the staff database in addition to payroll demographic service record. Third party functions may also store information in any of the databases which may involve translation to accommodate format requirements of these functions not designed to natively operate with the platform application.

With reference to a block diagram of an embodiment of platform application is shown. The platform application is accessed by one of an inmate portal coupled to the inmate interface or the designer or staff portals coupled to the staff interface . A user identification function authenticates the user of the platform application and can accommodate various authentication requirements for example login biometric access card and or any other authentication mechanism.

Once the user is identified and authenticated the access control function regulates how the user can interact with the platform software . The access control function loads one or more access regimes for the user and enforces the associated rules. For example an inmate may have access regimes that define functions or classes or groups of functions time of day week year that access to the platform software time of day week year that the software platform can be accessed the location of access allowed for the user the interface allowed for this user time on system allowed in session day types of content allowed blocked etc. Generally an inmate user would not have access to functions like the facility security system . Access regimes may define a number of rules such as filter regimes audit regimes etc. Table I shows an example of some access regimes for two prisoners.

Through the staff portal a staff member can pull up information on an inmate s interaction in real time any historical interaction stored in the audit database inventory and kill processes and or send messages to the inmate s screen. The staff member can view the processes or functions that are active and kill any of the processes or functions. Additionally the staff member can view all input and output of the inmate portal . Staff members can view inmate interaction from several instances of the platform application simultaneously. For example the staff member may be in a control room where four six eight ten or twelve sub screens are actively showing interaction by inmates. Certain interaction can be masked from this overview unless there is a court order. For example an inmate s interaction with a law library module many have the content masked but other interaction in the law library module is observable and logged.

Once the access regimes define the access the user can interact with the functions . Each user may have different levels of filtering or audit of their interaction with the platform application . Where there are multiple filter or audit regimes specified the higher security restrictions are used. An input filter regulates the user s interaction according to filter regimes assigned to that user and or function . The input filter can block access to a peripheral driver replace the peripheral driver or overlay the peripheral driver to reduce the functionality. The access regime can specify the filter regime to apply for peripheral use. Table II shows an example of some filter regimes . Filter regime might be for a designer that is given relatively unrestricted access in comparison with filter regime . For keyboard access some regimes would limit the interaction possible to prevent hacking or accessing locked out functionality.

Operations of the third party function can be locked out by masking portions of the screen such as menus and window manipulation by skinning the windows. Locking of regions of the screen can be context sensitive such that as the application. Use of the mouse in those sections is blocked such that unauthorized functions cannot be accessed. In some cases the interaction is intercepted and filtered. For example activation of a print button could cause an e mail to be sent with a virtual representation of the printout attached.

A designer accesses the platform application to add access to functions through a module definition function . The designer selects service modules and configures them according to requirements for the correctional facility. For third party functions the designer formulates workflows and translation of information such that the platform application integrates the third party function cohesively. The information for melding the third party functions is stored in an API translation store . For example an authentication function in a third party system could use login but the user identification function could use biometric access. The designer would enter the proper login information for the third party system if the biometric verification was successful.

A third party module interface and a third party system interface couple the platform application to any third party functions . When third party functions are accessed the input is filtered according to the filter regimes and API translation is performed. The third party functions can be instantiated into a virtual machine in some embodiments. In other embodiments the displayed interface is taken from the third party function and presented to the user through the platform application .

The designer can additionally design navigation menus to present the functionality to the users. A navigation menu designer is used the by the designer to embed the various functions into the graphical user interface GUI . The user interacts with the GUI to choose an application to use. Different users have access to different functions such that the GUI will present different options to different users as defined by the access regime s active for the user.

The platform application provides audit and alarm functionality for native service modules as well as third party functions . Service modules designed to operate with the platform software and fully support audit functionality. All functions can be audited even when there may be little or no audit functionality designed into the function . Different users or classes of users can have different audit regimes applied to their use of the platform application . Table III gives examples of some audit regimes . For audit regime all possible audit is performed along with key capture for one month retention. Other embodiments could keep different audit information for different periods of time.

An alarm function monitors the audit information to determine if remedial action should be taken. Alarm rules define what conditions or steps would trigger remedial action. Table IV gives examples of some rules. The audit regime defines which rules will be applied for different functions and or users. Some rules are universal but others are specific to users or groups of users. The alarm function can integrate with any number of functions to determine triggers. For example the correctional facility security system uses card keys to know who is physically located in a particular area. Should a user not be known by the correctional facility security system to be in a particular area where they are accessing the platform software the inmate management system could be notified and a third party system that captures video could be commanded to capture additional video and retain it.

Referring next to a block diagram of an embodiment of various service modules is shown that can be selected for a given correctional facility using the platform application. These service modules can be added or removed according to the design of the CFP system . Additionally some of the different service modules can be customized for a given correctional facility. Where there are existing third party functions the equivalent service module may not be used but could later be substituted. Some correctional facilities will require additional service modules to be designed for a particular application.

Common to most installations are a scheduling module a inmate details module a case management module and a banking module. The scheduling module allows both inmates and staff to schedule appointments. An inmate can access the scheduling module to request appointments see what appointments have been scheduled by staff and add other events to their calendar. An inmate details module has demographic information on an inmate along with incarceration details location information for the inmate etc. The case management module lets the inmate look up their release date rehabilitation goals parole board information etc. The banking module holds the trust account for the inmate. Contributions to the trust account can be accessed through the banking module and used for payment when using other functions .

Any number of other modules are possible. This embodiment includes a service module a messaging module a commissary module an education module a phone module media module a television TV module and a law library module . The service module has various forms that allow for example making complaints and requesting service. The messaging module allows communication within the correctional facility and outside the correctional facility for some inmates with the appropriate access regime . Friends and relatives can use the messaging module through another portal accessible outside the correctional system.

The commissary module allows the inmate to interact with the commissary for special dietary requirements and scheduling. The education module is used for scheduling live education or performing remote teaching. Phone services are provided through a phone module . Music and video can be ordered and played through the media module . Access to the TV is provided through the TV module. The law library module provides information for inmates to use in their legal defense.

With reference to a diagram of an embodiment of software layer structure A for an inmate computing device is shown. There is a driver layer an operating system layer and an application layer . Third party modules are designed to run independent from the platform application within the application layer . After the platform application is loaded and properly configured the third modules are buffered from direct interaction with the operating system and driver layers in whole or in part. The platform application can encapsulate the third party module within a virtual machine for example where interaction can be captured and or modified. The interfaces include the inmate interface s and staff interface s and possibly an interface for friends and relatives of the inmates.

Most of the detail in the platform application is not shown here except the input filter and the third party module interface . The input filter communicates with one or more drivers in the driver layer to screen out some input. For example a keyboard driver in the driver layer sends keystrokes to the input filter which may or may not pass the information based upon the active filter regime s . In one example the inmate may press control alt delete key combination that would normally cause the operating system to give the user access to system level functions but the input filter would prevent those keystrokes from reaching the operating system layer .

The third party modules have their input and output taken over by a third party module interface in whole or in part. The instantiation of the third party module can be better controlled by the platform application through interception of the traffic intending to go directly to the operating system or drive layers . Some third party modules have APIs to accommodate data and command exchange and the third party module interface . Those third party modules without known APIs can have their traffic intercepted and changed as necessary.

With reference to a diagram of another embodiment of software layer structure B for an inmate computing device is shown. In this embodiment the third party module is less buffered from direct interaction with the operating system layer . The third party module interface interacts with known APIs in the third party modules and performs some input filtering but the third party modules can otherwise directly interface with the operating system layer . The input filter could be drivers that proxy between the third party modules the driver layer filtering certain things but otherwise appearing to the third party modules as a normal driver.

Referring next to a flowchart of an embodiment of a process for controlling inmate access to the inmate computing device is shown. The depicted portion of the process begins in block where the special purpose computer is booted and the applications and drivers are loaded. The platform software is loaded prior to the service modules and third party modules . The service modules and third party modules operate through the platform software . The relevant API translations are loaded in block to graft the third party modules and systems into the platform application . At this point the CFP system is ready for use.

In block a user passes through the user identification function and is identified individually and as part of any groups. Access filter and audit regimes are loaded along with alarm rules for the user any groups and relevant functions . These various regimes and rules customize the user experience with the CFP system in block . As interaction happens it is audited by the audit function according to the audit regimes in block . The alarm function observes the audit information from the audit function to check for alarm rules being violated.

In block it is determined if a alarm rule is violated. These checks are continual in normal operation. Where no alarm rule is triggered processing loops back to block . Where it is determined in block that a rule has been violated processing goes to block to perform the specified remedial action. Unless the remedial action specifies otherwise processing goes to block after the remedial action is performed. Although not shown the CFP system waits for another user after looping back to block when the current user stops interaction or logs out.

Referring next to an exemplary environment with which embodiments of the invention may be implemented is shown with a correctional facility system that can be used by a designer to design for example electronic circuits. The correctional facility system can include a computer keyboard a network router a printer and a monitor . The monitor processor and keyboard are part of a computer system which can be a laptop computer desktop computer handheld computer mainframe computer etc. The monitor can be a CRT flat screen etc.

A circuit designer can input commands into the computer using various input devices such as a mouse keyboard track ball touch screen etc. If the correctional facility system comprises a mainframe a designer can access the computer using for example a terminal or terminal interface. Additionally the computer system may be connected to a printer and a server using a network router which may connect to the Internet or a WAN.

The server may for example be used to store additional software programs and data. In one embodiment software implementing the systems and methods described herein can be stored on a storage medium in the server . Thus the software can be run from the storage medium in the server . In another embodiment software implementing the systems and methods described herein can be stored on a storage medium in the computer . Thus the software can be run from the storage medium in the computer system . Therefore in this embodiment the software can be used whether or not computer is connected to network router . Printer may be connected directly to computer in which case the computer system can print whether or not it is connected to network router .

With reference to an embodiment of a special purpose computer system is shown. The above methods may be implemented by computer program products that direct a computer system to perform the actions of the above described methods and components. Each such computer program product may comprise sets of instructions codes embodied on a computer readable medium that directs the processor of a computer system to perform corresponding actions. The instructions may be configured to run in sequential order or in parallel such as under different processing threads or in a combination thereof. After loading the computer program products on a general purpose computer system it is transformed into the special purpose computer system to perform correctional facility processing.

Special purpose computer system comprises a computer a monitor coupled to computer one or more additional user output devices optional coupled to computer one or more user input devices e.g. keyboard mouse track ball touch screen coupled to computer an optional communications interface coupled to computer a computer program product stored in a tangible computer readable memory in computer . Computer program product directs system to perform the above described methods. Computer may include one or more processors that communicate with a number of peripheral devices via a bus subsystem . These peripheral devices may include user output device s user input device s communications interface and a storage subsystem such as random access memory RAM and non volatile storage drive e.g. disk drive optical drive solid state drive which are forms of tangible computer readable memory.

Computer program product may be stored in non volatile storage drive or another computer readable medium accessible to computer and loaded into memory . Each processor may comprise a microprocessor such as a microprocessor from Intel or Advanced Micro Devices Inc. or the like. To support computer program product the computer runs an operating system that handles the communications of product with the above noted components as well as the communications between the above noted components in support of the computer program product . Exemplary operating systems include Windows or the like from Microsoft Corporation Solaris from Sun Microsystems LINUX UNIX and the like.

User input devices include all possible types of devices and mechanisms to input information to computer system . These may include a keyboard a keypad a mouse a scanner a digital drawing pad a touch screen incorporated into the display audio input devices such as voice recognition systems microphones and other types of input devices. In various embodiments user input devices are typically embodied as a computer mouse a trackball a track pad a joystick wireless remote a drawing tablet a voice command system. User input devices typically allow a user to select objects icons text and the like that appear on the monitor via a command such as a click of a button or the like. User output devices include all possible types of devices and mechanisms to output information from computer . These may include a display e.g. monitor printers non visual displays such as audio output devices etc.

Communications interface provides an interface to other communication networks and devices and may serve as an interface to receive data from and transmit data to other systems WANs and or the Internet . Embodiments of communications interface typically include an Ethernet card a modem telephone satellite cable ISDN a asynchronous digital subscriber line DSL unit a FireWire interface a USB interface a wireless network adapter and the like. For example communications interface may be coupled to a computer network to a FireWire bus or the like. In other embodiments communications interface may be physically integrated on the motherboard of computer and or may be a software program or the like.

RAM and non volatile storage drive are examples of tangible computer readable media configured to store data such as computer program product embodiments of the present invention including executable computer code human readable code or the like. Other types of tangible computer readable media include floppy disks removable hard disks optical storage media such as CD ROMs DVDs bar codes semiconductor memories such as flash memories read only memories ROMs battery backed volatile memories networked storage devices and the like. RAM and non volatile storage drive may be configured to store the basic programming and data constructs that provide the functionality of various embodiments of the present invention as described above.

Software instruction sets that provide the functionality of the present invention may be stored in RAM and non volatile storage drive . These instruction sets or code may be executed by the processor s . RAM and non volatile storage drive may also provide a repository to store data and data structures used in accordance with the present invention. RAM and non volatile storage drive may include a number of memories including a main random access memory RAM to store of instructions and data during program execution and a read only memory ROM in which fixed instructions are stored. RAM and non volatile storage drive may include a file storage subsystem providing persistent non volatile storage of program and or data files. RAM and non volatile storage drive may also include removable storage systems such as removable flash memory.

Bus subsystem provides a mechanism to allow the various components and subsystems of computer communicate with each other as intended. Although bus subsystem is shown schematically as a single bus alternative embodiments of the bus subsystem may utilize multiple busses or communication paths within the computer .

A number of variations and modifications of the disclosed embodiments can also be used. For example different functions can be located at different locations. Some functions can be shared within a prison system. For example the messaging module could be used systemwide and available to multiple correctional facilities at the same time. Some of the platform application may be distributed among a number of computing devices. For example a staff portal may be on a different computer than the inmate portal.

While the principles of the disclosure have been described above in connection with specific apparatuses and methods it is to be clearly understood that this description is made only by way of example and not as limitation on the scope of the disclosure.

