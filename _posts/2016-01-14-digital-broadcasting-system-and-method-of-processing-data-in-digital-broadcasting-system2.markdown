---

title: Digital broadcasting system and method of processing data in digital broadcasting system
abstract: A method of transmitting a broadcast signal includes encoding mobile data for FEC (Forward Error Correction); encoding signaling information for signaling the mobile data; allocating the encoded mobile data and signaling data into a transmission frame; and transmitting the broadcast signal including the transmission frame, wherein the transmission frame includes a service signaling table having service_type information identifying a type of a service of the mobile data and hidden information indicating whether the service of the mobile data is hidden or not.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09590659&OS=09590659&RS=09590659
owner: LG ELECTRONICS INC.
number: 09590659
owner_city: Seoul
owner_country: KR
publication_date: 20160114
---
This application is a continuation of U.S. patent application Ser. No. 14 084 185 filed on Nov. 19 2013 now U.S. Pat. No. 9 281 919 which is a continuation of U.S. patent application Ser. No. 12 670 394 filed on Jan. 27 2010 now U.S. Pat. No. 8 656 261 which is the National Stage filing under 35 U.S.C. 371 of International Application No. PCT KR2008 004316 filed on Jul. 23 2008 which claims the benefit of earlier filing date and right of priority to Korean Patent Application No. 10 2008 0071360 filed on Jul. 22 2008 and also claims the benefit of U.S. Provisional Application No. 60 951 449 filed on Jul. 23 2007 60 957 714 filed on Aug. 24 2007 60 974 084 filed on Sep. 21 2007 and 60 977 379 filed on Oct. 4 2007 the contents of which are all hereby incorporated by reference herein in their entirety.

The present invention relates to a digital broadcasting system and more particularly to a digital broadcasting system and a data processing method.

The Vestigial Sideband VSB transmission mode which is adopted as the standard for digital broadcasting in North America and the Republic of Korea is a system using a single carrier method. Therefore the receiving performance of the digital broadcast receiving system may be deteriorated in a poor channel environment. Particularly since resistance to changes in channels and noise is more highly required when using portable and or mobile broadcast receivers the receiving performance may be even more deteriorated when transmitting mobile service data by the VSB transmission mode.

An object of the present invention is to provide a digital broadcasting system and a data processing method that are highly resistant to channel changes and noise.

Another object of the present invention is to provide a digital broadcasting system and a data processing method that can enhance the receiving performance of the receiving system by performing additional encoding on mobile service data and by transmitting the processed data to the receiving system.

A further object of the present invention is to provide a digital broadcasting system and a data processing method that can also enhance the receiving performance of the receiving system by inserting known data already known in accordance with a pre agreement between the receiving system and the transmitting system in a predetermined region within a data region.

To achieve these objects and other advantages and in accordance with the purpose of the invention as embodied and broadly described herein a digital broadcast transmitting system may include a service multiplexer and a transmitter. The service multiplexer may multiplex mobile service data and main service data at a predetermined coding rate and may transmit the multiplexed data to the transmitter. The transmitter may perform additional encoding on the mobile service data being transmitted from the service multiplexer. The transmitter may also group a plurality of additionally encoded mobile service data packets so as to form a data group. The transmitter may multiplex mobile service data packets including mobile service data and main service data packets including main service data in packet units and may transmit the multiplexed data packets to a digital broadcast receiving system.

Herein the data group may be divided into a plurality of regions depending upon a degree of interference of the main service data. Also a long known data sequence may be periodically inserted in regions without interference of the main service data.

Also a digital broadcast receiving system according to an embodiment of the present invention may be used for modulating and channel equalizing the known data sequence.

In another aspect of the present invention a receiving system may include a signal receiving unit a demodulating unit a data processor and a middleware engine. The signal receiving unit receives a broadcasting signal which includes IP packets payload of the IP packets including a DSM CC module data part and a DSM CC header the DSM CC module data part including a plurality of DSM CC objects and the DSM CC header including identification information for identifying the DSM CC module. The demodulating unit demodulates the received broadcasting signal including IP packets. The data processor extracts a plurality of DSM CC objects of a corresponding payload with reference to DSM CC header information of the IP packets demodulated by the demodulating unit and configuring a DSM CC module which includes identification information and the extracted DSM CC objects. The middleware engine provides a data broadcasting service by driving application corresponding to the DSM CC module.

The DSM CC header includes carousel indication information indicating whether the DSM CC objects received to the DSM CC module data part are data carousel or object carousel and module identification information for identifying the corresponding DSM CC module.

The DSM CC header further includes additional information of the object carousel if the carousel indication information indicates object carousel.

The additional information includes at least one of information for identifying root directory constituting the object carousel language information of the object carousel and name information.

The module identification information includes at least one of unique identifier for identifying the corresponding DSM CC module size of the corresponding DSM CC module and version number of the corresponding DSM CC module.

The broadcasting signal further includes program table information and the data processor extracts address information of IP packet which transmits DSM CC data from the program table information and receives IP packet corresponding to the extracted address information.

The data processor extracts the address information of the IP packet which transmits DSM CC data with reference to virtual channel table VCT and data service table DST of the program table information.

The data processor extracts the address information of the IP packet which transmits DSM CC data with reference to program map table PMT and IP MAC information notification table INT of the program table information.

The broadcasting signal includes main service data and RS frame comprised of a plurality of MPH service data packets each of which includes MPH header of M byte and payload of N M byte the MPH header including identification information and the payload including DSM CC data of IP packet type.

The MPH header includes at least one of data type information indicating whether data received to payload within the corresponding MPH service data packet is IP datagram of mobile service data stuff indication information indicating whether stuffing data has been inserted into payload within the corresponding MPH service data packet and pointer field information indicating position information where new data starts in the corresponding MPH service data packet.

The payload of the IP packet includes a DSM CC module data part and identification information the DSM CC module data part including a plurality of DSM CC objects and the identification identifying the DSM CC module.

In another aspect of the present invention a data processing method for a receiving system may include receiving a broadcasting signal which includes IP packets payload of the IP packets including a DSM CC module data part and a DSM CC header the DSM CC module data part including a plurality of DSM CC objects and the DSM CC header including identification information for identifying the DSM CC module demodulating the received broadcasting signal including IP packets extracting a plurality of DSM CC objects of a corresponding payload with reference to DSM CC header information of the demodulated IP packets and configuring a DSM CC module which includes identification information and the extracted DSM CC objects and providing a data broadcasting service by driving application corresponding to the DSM CC module.

It is to be understood that both the foregoing general description and the following detailed description of the present invention are exemplary and explanatory and are intended to provide further explanation of the invention as claimed.

The present invention has advantages in that it is robust error when mobile service data are transmitted through a channel and it is compatible with an existing receiver.

The present invention has advantages in that it can receive mobile service data without any error even in a channel having ghost and strong noise.

The present invention can improve receiving performance of a receiving system in an environment where channel change is frequent by transmitting base data to a specific position of a data region. Particularly the present invention is more effective when it is applied to a portable and mobile receiver which has frequent channel change and requires robustness to noise.

Furthermore in the present invention DSM CC data can be transmitted in a unit of DSM CC module which includes a plurality of DSM CC objects. At this time the DSM CC module can be transmitted by encapsulation in a format of IP packet. Payload of the IP packet which transmits the DSM CC data includes a DSM CC header and a DSM CC module data part. Whether to update the DSM CC object included in the corresponding DSM CC module data part and module ID and version number for identifying the corresponding DSM CC module are represented in the DSM CC header. In this case the receiving system can provide a constant data broadcasting service regardless of change of a low transmission protocol through an existing middleware. Also the present invention can provide various transmission methods of data broadcasting using DSM CC data by applying to the fields of IPTV and broadcasting IP hybrid TV.

Reference will now be made in detail to the preferred embodiments of the present invention examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts. In addition although the terms used in the present invention are selected from generally known and used terms some of the terms mentioned in the description of the present invention have been selected by the applicant at his or her discretion the detailed meanings of which are described in relevant parts of the description herein. Furthermore it is required that the present invention is understood not simply by the actual terms used but by the meaning of each term lying within.

Among the terms used in the description of the present invention main service data correspond to data that can be received by a fixed receiving system and may include audio video A V data. More specifically the main service data may include A V data of high definition HD or standard definition SD levels and may also include diverse data types required for data broadcasting. Also the known data correspond to data pre known in accordance with a pre arranged agreement between the receiving system and the transmitting system. Additionally among the terms used in the present invention MPH corresponds to the initials of mobile pedestrian and handheld and represents the opposite concept of a fixed type system. Furthermore the MPH service data may include at least one of mobile service data pedestrian service data and handheld service data and will also be referred to as mobile service data for simplicity. Herein the mobile service data not only correspond to MPH service data but may also include any type of service data with mobile or portable characteristics. Therefore the mobile service data according to the present invention are not limited only to the MPH service data.

The above described mobile service data may correspond to data having information such as program execution files stock information and so on and may also correspond to A V data. Most particularly the mobile service data may correspond to A V data having lower resolution and lower data rate as compared to the main service data. For example if an A V codec that is used for a conventional main service corresponds to a MPEG 2 codec a MPEG 4 advanced video coding AVC or scalable video coding SVC having better image compression efficiency may be used as the A V codec for the mobile service. Furthermore any type of data may be transmitted as the mobile service data. For example transport protocol expert group TPEG data for broadcasting real time transportation information may be transmitted as the main service data.

Also a data service using the mobile service data may include weather forecast services traffic information services stock information services viewer participation quiz programs real time polls and surveys interactive education broadcast programs gaming services services providing information on synopsis character background music and filming sites of soap operas or series services providing information on past match scores and player profiles and achievements and services providing information on product information and programs classified by service medium time and theme enabling purchase orders to be processed. Herein the present invention is not limited only to the services mentioned above. In the present invention the transmitting system provides backward compatibility in the main service data so as to be received by the conventional receiving system. Herein the main service data and the mobile service data are multiplexed to the same physical channel and then transmitted.

Furthermore the digital broadcast transmitting system according to the present invention performs additional encoding on the mobile service data and inserts the data already known by the receiving system and transmitting system e.g. known data thereby transmitting the processed data. Therefore when using the transmitting system according to the present invention the receiving system may receive the mobile service data during a mobile state and may also receive the mobile service data with stability despite various distortion and noise occurring within the channel.

In the embodiment of the present invention the mobile service data are first multiplexed with main service data in MPH frame units and then modulated in a VSB mode and transmitted to the receiving system. At this point one MPH frame consists of K1 number of sub frames wherein one sub frame includes K2 number of slots. Also each slot may be configured of K3 number of data packets. In the embodiment of the present invention K1 will be set to 5 K2 will be set to 16 and K3 will be set to 156 i.e. K1 5 K2 16 and K3 156 . The values for K1 K2 and K3 presented in this embodiment either correspond to values according to a preferred embodiment or are merely exemplary. Therefore the above mentioned values will not limit the scope of the present invention.

Meanwhile one data group may be divided into at least one or more hierarchical regions. And depending upon the characteristics of each hierarchical region the type of mobile service data being inserted in each region may vary. For example the data group within each region may be divided or categorized based upon the receiving performance. In an example given in the present invention a data group is divided into regions A B C and D in a data configuration prior to data deinterleaving.

Herein the data group is divided into a plurality of regions to be used for different purposes. More specifically a region of the main service data having no interference or a very low interference level may be considered to have a more resistant or stronger receiving performance as compared to regions having higher interference levels. Additionally when using a system inserting and transmitting known data in the data group wherein the known data are known based upon an agreement between the transmitting system and the receiving system and when consecutively long known data are to be periodically inserted in the mobile service data the known data having a predetermined length may be periodically inserted in the region having no interference from the main service data i.e. a region wherein the main service data are not mixed . However due to interference from the main service data it is difficult to periodically insert known data and also to insert consecutively long known data to a region having interference from the main service data.

Referring to MPH block 4 B4 to MPH block 7 B7 correspond to regions without interference of the main service data. MPH block 4 B4 to MPH block 7 B7 within the data group shown in correspond to a region where no interference from the main service data occurs. In this example a long known data sequence is inserted at both the beginning and end of each MPH block. In the description of the present invention the region including MPH block 4 B4 to MPH block 7 B7 will be referred to as region A B4 B5 B6 B7 . As described above when the data group includes region A having a long known data sequence inserted at both the beginning and end of each MPH block the receiving system is capable of performing equalization by using the channel information that can be obtained from the known data. Therefore the strongest equalizing performance may be yielded or obtained from one of region A to region D.

In the example of the data group shown in MPH block 3 B3 and MPH block 8 B8 correspond to a region having little interference from the main service data. Herein a long known data sequence is inserted in only one side of each MPH block B3 and B8. More specifically due to the interference from the main service data a long known data sequence is inserted at the end of MPH block 3 B3 and another long known data sequence is inserted at the beginning of MPH block 8 B8 . In the present invention the region including MPH block 3 B3 and MPH block 8 B8 will be referred to as region B B3 B8 . As described above when the data group includes region B having a long known data sequence inserted at only one side beginning or end of each MPH block the receiving system is capable of performing equalization by using the channel information that can be obtained from the known data. Therefore a stronger equalizing performance as compared to region C D may be yielded or obtained .

Referring to MPH block 2 B2 and MPH block 9 B9 correspond to a region having more interference from the main service data as compared to region B. A long known data sequence cannot be inserted in any side of MPH block 2 B2 and MPH block 9 B9 . Herein the region including MPH block 2 B2 and MPH block 9 B9 will be referred to as region C B2 B9 . Finally in the example shown in MPH block 1 B1 and MPH block 10 B10 correspond to a region having more interference from the main service data as compared to region C. Similarly a long known data sequence cannot be inserted in any side of MPH block 1 B1 and MPH block 10 B10 . Herein the region including MPH block 1 B1 and MPH block 10 B10 will be referred to as region D B1 B10 . Since region C D is spaced further apart from the known data sequence when the channel environment undergoes frequent and abrupt changes the receiving performance of region C D may be deteriorated.

For example when it is assumed that 3 data groups are assigned to a sub frame the data groups are assigned to a 1slot Slot 0 a 5slot Slot 4 and a 9slot Slot 8 in the sub frame respectively. illustrates an example of assigning 16 data groups in one sub frame using the above described pattern or rule . In other words each data group is serially assigned to 16 slots corresponding to the following numbers 0 8 4 12 1 9 5 13 2 10 6 14 3 11 7 and 15. math figure 1 below shows the above described rule or pattern for assigning data groups in a sub frame. 40 mod 1 Math Figure 1 

Herein j indicates the slot number within a sub frame. The value of j may range from 0 to 15 i.e. 0 j 15 . Also variable i indicates the data group number. The value of i may range from 0 to 15 i.e. 0 j 15 .

In the present invention a collection of data groups included in a MPH frame will be referred to as a parade . Based upon the RS frame mode the parade transmits data of at least one specific RS frame. The mobile service data within one RS frame may be assigned either to all of regions A B C D within the corresponding data group or to at least one of regions A B C D. In the embodiment of the present invention the mobile service data within one RS frame may be assigned either to all of regions A B C D or to at least one of regions A B and regions C D. If the mobile service data are assigned to the latter case i.e. one of regions A B and regions C D the RS frame being assigned to regions A B and the RS frame being assigned to regions C D within the corresponding data group are different from one another.

In the description of the present invention the RS frame being assigned to regions A B within the corresponding data group will be referred to as a primary RS frame and the RS frame being assigned to regions C D within the corresponding data group will be referred to as a secondary RS frame for simplicity. Also the primary RS frame and the secondary RS frame form or configure one parade. More specifically when the mobile service data within one RS frame are assigned either to all of regions A B C D within the corresponding data group one parade transmits one RS frame. Conversely when the mobile service data within one RS frame are assigned either to at least one of regions A B and regions C D one parade may transmit up to 2 RS frames. More specifically the RS frame mode indicates whether a parade transmits one RS frame or whether the parade transmits two RS frames. Table 1 below shows an example of the RS frame mode.

Table 1 illustrates an example of allocating 2 bits in order to indicate the RS frame mode. For example referring to Table 1 when the RS frame mode value is equal to 00 this indicates that one parade transmits one RS frame. And when the RS frame mode value is equal to 01 this indicates that one parade transmits two RS frames i.e. the primary RS frame and the secondary RS frame. More specifically when the RS frame mode value is equal to 01 data of the primary RS frame for regions A B are assigned and transmitted to regions A B of the corresponding data group. Similarly data of the secondary RS frame for regions C D are assigned and transmitted to regions C D of the corresponding data group.

Additionally one RS frame transmits one ensemble. Herein the ensemble is a collection of services requiring the same quality of service QOS and being encoded with the same FEC codes. More specifically when one parade is configured of one RS frame then one parade transmits one ensemble. Conversely when one parade is configured of two RS frames i.e. when one parade is configured of a primary RS frame and a secondary RS frame then one parade transmits two ensembles i.e. a primary ensemble and a secondary ensemble . More specifically the primary ensemble is transmitted through a primary RS frame of a parade and the secondary ensemble is transmitted through a secondary RS frame of a parade. The RS frame is a 2 dimensional data frame through which an ensemble is RS CRC encoded.

As described in the assignment of data groups the parades are also assigned to be spaced as far apart from one another as possible within the sub frame. Thus the system can be capable of responding promptly and effectively to any burst error that may occur within a sub frame. Furthermore the method of assigning parades may be identically applied to all sub frames or differently applied to each sub frame. According to the embodiment of the present invention the parades may be assigned differently for each MPH frame and identically for all sub frames within an MPH frame. More specifically the MPH frame structure may vary by MPH frame units. Thus an ensemble rate may be adjusted on a more frequent and flexible basis.

For example when it is assumed that one parade transmits one RS frame and that a RS frame encoder located in a later block performs RS encoding on the corresponding RS frame thereby adding 24 bytes of parity data to the corresponding RS frame and transmitting the processed RS frame the parity data occupy approximately 11.37 24 187 24 100 of the total code word length. Meanwhile when one sub frame includes 3 data groups and when the data groups included in the parade are assigned as shown in a total of 15 data groups form an RS frame. Accordingly even when an error occurs in an entire data group due to a burst noise within a channel the percentile is merely 6.67 1 15 100 . Therefore the receiving system may correct all errors by performing an erasure RS decoding process. More specifically when the erasure RS decoding is performed a number of channel errors corresponding to the number of RS parity bytes may be corrected. By doing so the receiving system may correct the error of at least one data group within one parade. Thus the minimum burst noise length correctable by a RS frame is over 1 VSB frame.

Meanwhile when data groups of a parade are assigned as described above either main service data may be assigned between each data group or data groups corresponding to different parades may be assigned between each data group. More specifically data groups corresponding to multiple parades may be assigned to one MPH frame. Basically the method of assigning data groups corresponding to multiple parades is very similar to the method of assigning data groups corresponding to a single parade. In other words data groups included in other parades that are to be assigned to an MPH frame are also respectively assigned according to a cycle period of 4 slots. At this point data groups of a different parade may be sequentially assigned to the respective slots in a circular method. Herein the data groups are assigned to slots starting from the ones to which data groups of the previous parade have not yet been assigned. For example when it is assumed that data groups corresponding to a parade are assigned as shown in data groups corresponding to the next parade may be assigned to a sub frame starting either from the 12slot of a sub frame. However this is merely exemplary. In another example the data groups of the next parade may also be sequentially assigned to a different slot within a sub frame at a cycle period of 4 slots starting from the 3slot.

As described above data groups of multiple parades may be assigned to a single MPH frame and in each sub frame the data groups are serially allocated to a group space having 4 slots from left to right. Therefore a number of groups of one parade per sub frame NOG may correspond to any one integer from 1 to 8 . Herein since one MPH frame includes 5 sub frames the total number of data groups within a parade that can be allocated to an MPH frame may correspond to any one multiple of 5 ranging from 5 to 40 .

Herein the digital broadcast transmitting includes a service multiplexer and a transmitter . Herein the service multiplexer is located in the studio of each broadcast station and the transmitter is located in a site placed at a predetermined distance from the studio. The transmitter may be located in a plurality of different locations. Also for example the plurality of transmitters may share the same frequency. And in this case the plurality of transmitters receives the same signal. Accordingly in the receiving system a channel equalizer may compensate signal distortion which is caused by a reflected wave so as to recover the original signal. In another example the plurality of transmitters may have different frequencies with respect to the same channel.

A variety of methods may be used for data communication each of the transmitters which are located in remote positions and the service multiplexer. For example an interface standard such as a synchronous serial interface for transport of MPEG 2 data SMPTE 310M . In the SMPTE 310M interface standard a constant data rate is decided as an output data rate of the service multiplexer. For example in case of the 8VSB mode the output data rate is 19.39 Mbps and in case of the 16VSB mode the output data rate is 38.78 Mbps. Furthermore in the conventional 8VSB mode transmitting system a transport stream TS packet having a data rate of approximately 19.39 Mbps may be transmitted through a single physical channel. Also in the transmitting system according to the present invention provided with backward compatibility with the conventional transmitting system additional encoding is performed on the mobile service data. Thereafter the additionally encoded mobile service data are multiplexed with the main service data to a TS packet form which is then transmitted. At this point the data rate of the multiplexed TS packet is approximately 19.39 Mbps.

At this point the service multiplexer receives at least one type of mobile service data and program specific information program and system information protocol PSI PSIP table data for each mobile service so as to encapsulate the received data to each TS packet. Also the service multiplexer receives at least one type of main service data and PSI PSIP table data for each main service and encapsulates the received data to a transport stream TS packet. Subsequently the TS packets are multiplexed according to a predetermined multiplexing rule and outputs the multiplexed packets to the transmitter .

The transport multiplexer may include a main service multiplexer and a transport stream TS packet multiplexer .

Referring to at least one type of compression encoded main service data and the PSI PSIP table data generated from the PSI PSIP generator for the main service are inputted to the main service multiplexer of the transport multiplexer . The main service multiplexer encapsulates each of the inputted main service data and PSI PSIP table data to MPEG 2 TS packet forms. Then the MPEG 2 TS packets are multiplexed and outputted to the TS packet multiplexer . Herein the data packet being outputted from the main service multiplexer will be referred to as a main service data packet for simplicity.

Thereafter at least one type of the compression encoded mobile service data and the PSI PSIP table data generated from the PSI PSIP generator for the mobile service are inputted to the mobile service multiplexer .

The mobile service multiplexer encapsulates each of the inputted mobile service data and PSI PSIP table data to MPEG 2 TS packet forms. Then the MPEG 2 TS packets are multiplexed and outputted to the TS packet multiplexer . Herein the data packet being outputted from the mobile service multiplexer will be referred to as a mobile service data packet for simplicity.

At this point the transmitter requires identification information in order to identify and process the main service data packet and the mobile service data packet. Herein the identification information may use values pre decided in accordance with an agreement between the transmitting system and the receiving system or may be configured of a separate set of data or may modify predetermined location value with in the corresponding data packet.

As an example of the present invention a different packet identifier PID may be assigned to identify each of the main service data packet and the mobile service data packet.

In another example by modifying a synchronization data byte within a header of the mobile service data the service data packet may be identified by using the synchronization data byte value of the corresponding service data packet. For example the synchronization byte of the main service data packet directly outputs the value decided by the ISO IEC13818 1 standard i.e. 0x47 without any modification. The synchronization byte of the mobile service data packet modifies and outputs the value thereby identifying the main service data packet and the mobile service data packet. Conversely the synchronization byte of the main service data packet is modified and outputted whereas the synchronization byte of the mobile service data packet is directly outputted without being modified thereby enabling the main service data packet and the mobile service data packet to be identified.

A plurality of methods may be applied in the method of modifying the synchronization byte. For example each bit of the synchronization byte may be inversed or only a portion of the synchronization byte may be inversed.

As described above any type of identification information may be used to identify the main service data packet and the mobile service data packet. Therefore the scope of the present invention is not limited only to the example set forth in the description of the present invention.

Meanwhile a transport multiplexer used in the conventional digital broadcasting system may be used as the transport multiplexer according to the present invention. More specifically in order to multiplex the mobile service data and the main service data and to transmit the multiplexed data the data rate of the main service is limited to a data rate of 19.39 K Mbps. Then K Mbps which corresponds to the remaining data rate is assigned as the data rate of the mobile service. Thus the transport multiplexer which is already being used may be used as it is without any modification.

Herein the transport multiplexer multiplexes the main service data packet being outputted from the main service multiplexer and the mobile service data packet being outputted from the mobile service multiplexer . Thereafter the transport multiplexer transmits the multiplexed data packets to the transmitter .

However in some cases the output data rate of the mobile service multiplexer may not be equal to K Mbps. In this case the mobile service multiplexer multiplexes and outputs null data packets generated from the null packet generator so that the output data rate can reach K Mbps. More specifically in order to match the output data rate of the mobile service multiplexer to a constant data rate the null packet generator generates null data packets which are then outputted to the mobile service multiplexer .

For example when the service multiplexer assigns K Mbps of the 19.39 Mbps to the mobile service data and when the remaining 19.39 K Mbps is therefore assigned to the main service data the data rate of the mobile service data that are multiplexed by the service multiplexer actually becomes lower than K Mbps. This is because in case of the mobile service data the pre processor of the transmitting system performs additional encoding thereby increasing the amount of data. Eventually the data rate of the mobile service data which may be transmitted from the service multiplexer becomes smaller than K Mbps.

For example since the pre processor of the transmitter performs an encoding process on the mobile service data at a coding rate of at least 1 2 the amount of the data outputted from the pre processor is increased to more than twice the amount of the data initially inputted to the pre processor. Therefore the sum of the data rate of the main service data and the data rate of the mobile service data both being multiplexed by the service multiplexer becomes either equal to or smaller than 19.39 Mbps.

Therefore in order to match the data rate of the data that are finally outputted from the service multiplexer to a constant data rate e.g. 19.39 Mbps an amount of null data packets corresponding to the amount of lacking data rate is generated from the null packet generator and outputted to the mobile service multiplexer .

Accordingly the mobile service multiplexer encapsulates each of the mobile service data and the PSI PSIP table data that are being inputted to a MPEG 2 TS packet form. Then the above described TS packets are multiplexed with the null data packets and then outputted to the TS packet multiplexer .

Thereafter the TS packet multiplexer multiplexes the main service data packet being outputted from the main service multiplexer and the mobile service data packet being outputted from the mobile service multiplexer and transmits the multiplexed data packets to the transmitter at a data rate of 19.39 Mbps.

According to an embodiment of the present invention the mobile service multiplexer receives the null data packets. However this is merely exemplary and does not limit the scope of the present invention. In other words according to another embodiment of the present invention the TS packet multiplexer may receive the null data packets so as to match the data rate of the finally outputted data to a constant data rate. Herein the output path and multiplexing rule of the null data packet is controlled by the controller . The controller controls the multiplexing processed performed by the mobile service multiplexer the main service multiplexer of the transport multiplexer and the TS packet multiplexer and also controls the null data packet generation of the null packet generator . At this point the transmitter discards the null data packets transmitted from the service multiplexer instead of transmitting the null data packets.

Further in order to allow the transmitter to discard the null data packets transmitted from the service multiplexer instead of transmitting them identification information for identifying the null data packet is required. Herein the identification information may use values pre decided in accordance with an agreement between the transmitting system and the receiving system. For example the value of the synchronization byte within the header of the null data packet may be modified so as to be used as the identification information. Alternatively a transport error indicator flag may also be used as the identification information.

In the description of the present invention an example of using the transport error indicator flag as the identification information will be given to describe an embodiment of the present invention. In this case the transport error indicator flag of the null data packet is set to 1 and the transport error indicator flag of the remaining data packets are reset to 0 so as to identify the null data packet. More specifically when the null packet generator generates the null data packets if the transport error indicator flag from the header field of the null data packet is set to 1 and then transmitted the null data packet may be identified and therefore be discarded. In the present invention any type of identification information for identifying the null data packets may be used. Therefore the scope of the present invention is not limited only to the examples set forth in the description of the present invention.

According to another embodiment of the present invention a transmission parameter may be included in at least a portion of the null data packet or at least one table or an operations and maintenance OM packet or OMP of the PSI PSIP table for the mobile service. In this case the transmitter extracts the transmission parameter and outputs the extracted transmission parameter to the corresponding block and also transmits the extracted parameter to the receiving system if required. More specifically a packet referred to as an OMP is defined for the purpose of operating and managing the transmitting system. For example the OMP is configured in accordance with the MPEG 2 TS packet format and the corresponding PID is given the value of 0x1FFA. The OMP is configured of a 4 byte header and a 184 byte payload. Herein among the 184 bytes the first byte corresponds to an OM type field which indicates the type of the OM packet.

In the present invention the transmission parameter may be transmitted in the form of an OMP. And in this case among the values of the reserved fields within the OM type field a pre arranged value is used thereby indicating that the transmission parameter is being transmitted to the transmitter in the form of an OMP. More specifically the transmitter may find or identify the OMP by referring to the PID. Also by parsing the OM type field within the OMP the transmitter can verify whether a transmission parameter is included after the OM type field of the corresponding packet. The transmission parameter corresponds to supplemental data required for processing mobile service data from the transmitting system and the receiving system.

The transmission parameter corresponds to supplemental data required for processing mobile service data from the transmitting system and the receiving system. Herein the transmission parameter may include data group information region information within the data group block information RS frame information super frame information MPH frame information parade information ensemble information information associated with serial concatenated convolution code SCCC and RS code information. The significance of some information within the transmission parameters has already been described in detail. Descriptions of other information that have not yet been described will be in detail in a later process.

The transmission parameter may also include information on how signals of a symbol domain are encoded in order to transmit the mobile service data and multiplexing information on how the main service data and the mobile service data or various types of mobile service data are multiplexed.

The information included in the transmission parameter are merely exemplary to facilitate the understanding of the present invention. And the adding and deleting of the information included in the transmission parameter may be easily modified and changed by anyone skilled in the art. Therefore the present invention is not limited to the examples proposed in the description set forth herein.

Furthermore the transmission parameters may be provided from the service multiplexer to the transmitter . Alternatively the transmission parameters may also be set up by an internal controller not shown within the transmitter or received from an external source.

The pre processor performs an additional encoding process of the mobile service data included in the service data packet which is demultiplexed and outputted from the demultiplexer . The pre processor also performs a process of configuring a data group so that the data group may be positioned at a specific place in accordance with the purpose of the data which are to be transmitted on a transmission frame. This is to enable the mobile service data to respond swiftly and strongly against noise and channel changes. The pre processor may also refer to the transmission parameter when performing the additional encoding process. Also the pre processor groups a plurality of mobile service data packets to configure a data group. Thereafter known data mobile service data RS parity data and MPEG header are allocated to pre determined regions within the data group.

When the RS frame mode value is equal to 01 i.e. when the data of the primary RS frame are assigned to regions A B of the corresponding data group and data of the secondary RS frame are assigned to regions C D of the corresponding data group each RS frame encoder creates a primary RS frame and a secondary RS frame for each parade. Conversely when the RS frame mode value is equal to 00 when the data of the primary RS frame are assigned to all of regions A B C D each RS frame encoder creates a RS frame i.e. a primary RS frame for each parade. Also each RS frame encoder divides each RS frame into several portions. Each portion of the RS frame is equivalent to a data amount that can be transmitted by a data group.

The output multiplexer MUX multiplexes portions within M number of RS frame encoders to M 1 are multiplexed and then outputted to the block processor . For example if one parade transmits two RS frames portions of primary RS frames within M number of RS frame encoders to M 1 are multiplexed and outputted. Thereafter portions of secondary RS frames within M number of RS frame encoders to M 1 are multiplexed and transmitted. The input demultiplexer DEMUX and the output multiplexer MUX operate based upon the control of the control unit . The control unit may provide necessary or required FEC modes to each RS frame encoder. The FEC mode includes the RS code mode which will be described in detail in a later process.

More specifically the data randomizer of the primary encoder receives mobile service data of a primary ensemble outputted from the output demultiplexer DEMUX . Then after randomizing the received mobile service data the data randomizer outputs the randomized data to the RS CRC encoder . At this point since the data randomizer performs the randomizing process on the mobile service data the randomizing process that is to be performed by the data randomizer of the post processor on the mobile service data may be omitted. The data randomizer may also discard the synchronization byte within the mobile service data packet and perform the randomizing process. This is an option that may be chosen by the system designer. In the example given in the present invention the randomizing process is performed without discarding the synchronization byte within the corresponding mobile service data packet.

The RS CRC encoder uses at least one of a Reed Solomon RS code and a cyclic redundancy check CRC code so as to perform forward error collection FEC encoding on the randomized primary ensemble thereby forming a primary RS frame. Therefore the RS CRC encoder outputs the newly formed primary RS frame to the RS frame divider . The RS CRC encoder groups a plurality of mobile service data packets that is randomized and inputted so as to create a RS frame. Then the RS CRC encoder performs at least one of an error correction encoding process and an error detection encoding process in RS frame units. Accordingly robustness may be provided to the mobile service data thereby scattering group error that may occur during changes in a frequency environment thereby enabling the mobile service data to respond to the frequency environment which is extremely vulnerable and liable to frequent changes. Also the RS CRC encoder groups a plurality of RS frame so as to create a super frame thereby performing a row permutation process in super frame units. The row permutation process may also be referred to as a row interleaving process . Hereinafter the process will be referred to as row permutation for simplicity.

More specifically when the RS CRC encoder performs the process of permuting each row of the super frame in accordance with a pre determined rule the position of the rows within the super frame before and after the row permutation process is changed. If the row permutation process is performed by super frame units and even though the section having a plurality of errors occurring therein becomes very long and even though the number of errors included in the RS frame which is to be decoded exceeds the extent of being able to be corrected the errors become dispersed within the entire super frame. Thus the decoding ability is even more enhanced as compared to a single RS frame.

At this point as an example of the present invention RS encoding is applied for the error correction encoding process and a cyclic redundancy check CRC encoding is applied for the error detection process in the RS CRC encoder . When performing the RS encoding parity data that are used for the error correction are generated. And when performing the CRC encoding CRC data that are used for the error detection are generated. The CRC data generated by CRC encoding may be used for indicating whether or not the mobile service data have been damaged by the errors while being transmitted through the channel. In the present invention a variety of error detection coding methods other than the CRC encoding method may be used or the error correction coding method may be used to enhance the overall error correction ability of the receiving system. Herein the RS CRC encoder refers to a pre determined transmission parameter provided by the control unit and or a transmission parameter provided from the service multiplexer so as to perform operations including RS frame configuration RS encoding CRC encoding super frame configuration and row permutation in super frame units.

 a of illustrates an example of an RS frame being generated from the RS CRC encoder according to the present invention. According to this embodiment in the RS frame the length of a column i.e. number of rows is set to 187 bytes and the length of a row i.e. number of column is set to N bytes. At this point the value of N which corresponds to the number of columns within an RS frame can be decided according to Math figure 2.

Herein NoG indicates the number of data groups assigned to a sub frame. PL represents the number of SCCC payload data bytes assigned to a data group. And P signifies the number of RS parity data bytes added to each column of the RS frame. Finally X is the greatest integer that is equal to or smaller than X.

More specifically in Math figure 2 PL corresponds to the length of an RS frame portion. The value of PL is equivalent to the number of SCCC payload data bytes that are assigned to the corresponding data group. Herein the value of PL may vary depending upon the RS frame mode SCCC block mode and SCCC outer code mode. Table 2 to Table 5 below respectively show examples of PL values which vary in accordance with the RS frame mode SCCC block mode and SCCC outer code mode. The SCCC block mode and the SCCC outer code mode will be described in detail in a later process.

Table 2 shows an example of the PL values for each data group within an RS frame wherein each PL value varies depending upon the SCCC outer code mode when the RS frame mode value is equal to 00 and when the SCCC block mode value is equal to 00 . For example when it is assumed that each SCCC outer code mode value of regions A B C D within the data group is equal to 00 i.e. the block processor of a later block performs encoding at a coding rate of 1 2 the PL value within each data group of the corresponding RS frame may be equal to 9624 bytes. More specifically 9624 bytes of mobile service data within one RS frame may be assigned to regions A B C D of the corresponding data group.

Table 3 shows an example of the PL values for each data group within an RS frame wherein each PL value varies depending upon the SCCC outer code mode when the RS frame mode value is equal to 00 and when the SCCC block mode value is equal to 01 .

Table 4 shows an example of the PL values for each data group within a primary RS frame wherein each PL value varies depending upon the SCCC outer code mode when the RS frame mode value is equal to 01 and when the SCCC block mode value is equal to 00 . For example when each SCCC outer code mode value of regions A B is equal to 00 7644 bytes of mobile service data within a primary RS frame may be assigned to regions A B of the corresponding data group.

Table 5 shows an example of the PL values for each data group within a secondary RS frame wherein each PL value varies depending upon the SCCC outer code mode when the RS frame mode value is equal to 01 and when the SCCC block mode value is equal to 00 . For example when each SCCC outer code mode value of regions C D is equal to 00 1980 bytes of mobile service data within a secondary RS frame may be assigned to regions C D of the corresponding data group.

According to the embodiment of the present invention the value of N is equal to or greater than 187 i.e. N 187 . More specifically the RS frame of a of has the size of N row 187 column bytes. More specifically the RS CRC encoder first divides the inputted mobile service data bytes to units of a predetermined length. The predetermined length is decided by the system designer. And in the example of the present invention the predetermined length is equal to 187 bytes and therefore the 187 byte unit will be referred to as a packet for simplicity. For example the inputted mobile service data may correspond either to an MPEG transport stream TS packet configured of 188 byte units or to an IP datagram. Alternatively the IP datagram may be encapsulated to a TS packet of 188 byte units and then inputted.

When the mobile service data that are being inputted correspond to a MPEG transport packet stream configured of 188 byte units the first synchronization byte is removed so as to configure a 187 byte unit. Then N number of packets are grouped to form an RS frame. Herein the synchronization byte is removed because each mobile service data packet has the same value. Meanwhile when the input mobile service data of the RS frame do not correspond to the MPEG TS packet format the mobile service data are inputted N number of times in 187 byte units without being processed with the removing of the MPEG synchronization byte thereby creating a RS frame.

In addition when the input data format of the RS frame supports both the input data corresponding to the MPEG TS packet and the input data not corresponding to the MPEG TS packet such information may be included in a transmission parameter transmitted from the service multiplexer thereby being sent to the transmitter . Accordingly the RS CRC encoder of the transmitter receives this information to be able to control whether or not to perform the process of removing the MPEG synchronization byte. Also the transmitter provides such information to the receiving system so as to control the process of inserting the MPEG synchronization byte that is to be performed by the RS frame decoder of the receiving system. Herein the process of removing the synchronization byte may be performed during a randomizing process of the data randomizer in an earlier process. In this case the process of the removing the synchronization byte by the RS CRC encoder may be omitted.

Moreover when adding synchronization bytes from the receiving system the process may be performed by the data derandomizer instead of the RS frame decoder. Therefore if a removable fixed byte e.g. synchronization byte does not exist within the mobile service data packet that is being inputted to the RS CRC encoder or if the mobile service data that are being inputted are not configured in a packet format the mobile service data that are being inputted are divided into 187 byte units thereby configuring a packet for each 187 byte unit.

Subsequently N number of packets configured of 187 bytes is grouped to configure a RS frame. At this point the RS frame is configured as a RS frame having the size of N row 187 column bytes in which 187 byte packets are sequentially inputted in a row direction. More specifically each of the N number of columns included in the RS frame includes 187 bytes. When the RS frame is created as shown in a of the RS CRC encoder performs a Nc Kc RS encoding process on each column so as to generate Nc Kc P number of parity bytes. Then the RS CRC encoder adds the newly generated P number of parity bytes after the very last byte of the corresponding column thereby creating a column of 187 P bytes. Herein as shown in a of Kc is equal to 187 i.e. Kc 187 and Nc is equal to 187 P i.e. Nc 187 P . Herein the value of P may vary depending upon the RS code mode. Table 6 below shows an example of an RS code mode as one of the RS encoding information.

Table 6 shows an example of 2 bits being assigned in order to indicate the RS code mode. The RS code mode represents the number of parity bytes corresponding to the RS frame. For example when the RS code mode value is equal to 10 235 187 RS encoding is performed on the RS frame of a of so as to generate 48 parity data bytes. Thereafter the 48 parity bytes are added after the last data byte of the corresponding column thereby creating a column of 235 data bytes. When the RS frame mode value is equal to 00 in Table 1 i.e. when the RS frame mode indicates a single RS frame only the RS code mode of the corresponding RS frame is indicated. However when the RS frame mode value is equal to 01 in Table 1 i.e. when the RS frame mode indicates multiple RS frames the RS code mode corresponding to a primary RS frame and a secondary RS frame. More specifically it is preferable that the RS code mode is independently applied to the primary RS frame and the secondary RS frame.

When such RS encoding process is performed on all N number of columns a RS frame having the size of N row 187 P column bytes may be created as shown in b of . Each row of the RS frame is configured of N bytes. However depending upon channel conditions between the transmitting system and the receiving system error may be included in the RS frame. When errors occur as described above CRC data or CRC code or CRC checksum may be used on each row unit in order to verify whether error exists in each row unit. The RS CRC encoder may perform CRC encoding on the mobile service data being RS encoded so as to create or generate the CRC data. The CRC data being generated by CRC encoding may be used to indicate whether the mobile service data have been damaged while being transmitted through the channel.

The present invention may also use different error detection encoding methods other than the CRC encoding method. Alternatively the present invention may use the error correction encoding method to enhance the overall error correction ability of the receiving system. c of illustrates an example of using a 2 byte i.e. 16 bit CRC checksum as the CRC data. Herein a 2 byte CRC checksum is generated for N number of bytes of each row thereby adding the 2 byte CRC checksum at the end of the N number of bytes. Thus each row is expanded to N 2 number of bytes. Math figure 3 below corresponds to an exemplary equation for generating a 2 byte CRC checksum for each row being configured of N number of bytes. 1 Math Figure 3 

The process of adding a 2 byte checksum in each row is only exemplary. Therefore the present invention is not limited only to the example proposed in the description set forth herein. As described above when the process of RS encoding and CRC encoding are completed the N 187 byte RS frame is expanded to a N 2 187 P byte RS frame. Based upon an error correction scenario of a RS frame expanded as described above the data bytes within the RS frame are transmitted through a channel in a row direction. At this point when a large number of errors occur during a limited period of transmission time errors also occur in a row direction within the RS frame being processed with a decoding process in the receiving system. However in the perspective of RS encoding performed in a column direction the errors are shown as being scattered. Therefore error correction may be performed more effectively. At this point a method of increasing the number of parity data bytes P may be used in order to perform a more intense error correction process. However using this method may lead to a decrease in transmission efficiency. Therefore a mutually advantageous method is required. Furthermore when performing the decoding process an erasure decoding process may be used to enhance the error correction performance.

Additionally the RS CRC encoder according to the present invention also performs a row permutation or interleaving process in super frame units in order to further enhance the error correction performance when error correction the RS frame. a to d of illustrate an example of performing a row permutation process in super frame units according to the present invention. More specifically G number of RS frames RS CRC encoded is grouped to form a super frame as shown in a of . At this point since each RS frame is formed of N 2 187 P number of bytes one super frame is configured to have the size of N 2 187 P G bytes.

When a row permutation process permuting each row of the super frame configured as described above is performed based upon a pre determined permutation rule the positions of the rows prior to and after being permuted or interleaved within the super frame may be altered. More specifically the irow of the super frame prior to the interleaving process as shown in b of is positioned in the jrow of the same super frame after the row permutation process as shown in c of . The above described relation between i and j can be easily understood with reference to a permutation rule as shown in Math figure 4 below. mod 187 187 187 mod Math Figure 4 

Herein each row of the super frame is configured of N 2 number of data bytes even after being row permuted in super frame units.

When all row permutation processes in super frame units are completed the super frame is once again divided into G number of row permuted RS frames as shown in d of and then provided to the RS frame divider . Herein the number of RS parity bytes and the number of columns should be equally provided in each of the RS frames which configure a super frame. As described in the error correction scenario of a RS frame in case of the super frame a section having a large number of error occurring therein is so long that even when one RS frame that is to be decoded includes an excessive number of errors i.e. to an extent that the errors cannot be corrected such errors are scattered throughout the entire super frame. Therefore in comparison with a single RS frame the decoding performance of the super frame is more enhanced.

The above description of the present invention corresponds to the processes of forming or creating and encoding an RS frame when a data group is divided into regions A B C D and when data of an RS frame are assigned to all of regions A B C D within the corresponding data group. More specifically the above description corresponds to an embodiment of the present invention wherein one RS frame is transmitted using one parade. In this embodiment the secondary encoder does not operate or is not active .

Meanwhile 2 RS frames are transmitting using one parade the data of the primary RS frame may be assigned to regions A B within the data group and be transmitted and the data of the secondary RS frame may be assigned to regions C D within the data group and be transmitted. At this point the primary encoder receives the mobile service data that are to be assigned to regions A B within the data group so as to form the primary RS frame thereby performing RS encoding and CRC encoding. Similarly the secondary encoder receives the mobile service data that are to be assigned to regions C D within the data group so as to form the secondary RS frame thereby performing RS encoding and CRC encoding. More specifically the primary RS frame and the secondary RS frame are created independently.

 b of illustrates an example of the RS CRC encoder of the secondary encoder receiving mobile service data of the secondary ensemble that are to be assigned to regions C D within the corresponding data group so as to create an RS frame having the size of N2 row 187 column . Then in this example the secondary encoder performs RS encoding on each column of the RS frame created as described above thereby adding P2 number of parity data bytes in each column. Finally the secondary encoder performs CRC encoding on each row thereby adding a 2 byte checksum in each row. At this point each of the RS CRC encoders and may refer to a pre determined transmission parameter provided by the control unit and or a transmission parameter provided from the service multiplexer the RS CRC encoders and may be informed of RS frame information including RS frame mode RS encoding information including RS code mode SCCC information including SCCC block information and SCCC outer code mode data group information and region information within a data group. The RS CRC encoders and may refer to the transmission parameters for the purpose of RS frame configuration error correction encoding error detection encoding. Furthermore the transmission parameters should also be transmitted to the receiving system so that the receiving system can perform a normal decoding process.

The data of the primary RS frame which is encoded by RS frame units and row permuted by super frame units from the RS CRC encoder of the primary encoder are outputted to the RS frame divider . If the secondary encoder also operates in the embodiment of the present invention the data of the secondary RS frame which is encoded by RS frame units and row permuted by super frame units from the RS CRC encoder of the secondary encoder are outputted to the RS frame divider . The RS frame divider of the primary encoder divides the primary RS frame into several portions which are then outputted to the output multiplexer MUX . Each portion of the primary RS frame is equivalent to a data amount that can be transmitted by one data group. Similarly the RS frame divider of the secondary encoder divides the secondary RS frame into several portions which are then outputted to the output multiplexer MUX .

Hereinafter the RS frame divider of the primary RS encoder will now be described in detail. Also in order to simplify the description of the present invention it is assumed that an RS frame having the size of N row 187 column as shown in a to c of that P number of parity data bytes are added to each column by RS encoding the RS frame and that a 2 byte checksum is added to each row by CRC encoding the RS frame. Accordingly the RS frame divider divides or partitions the encoded RS frame having the size of N 2 row 187 column into several portions each having the size of PL wherein PL corresponds to the length of the RS frame portion .

At this point as shown in Table 2 to Table 5 the value of PL may vary depending upon the RS frame mode SCCC block mode and SCCC outer coder mode. Also the total number of data bytes of the RS encoded and CRC encoded RS frame is equal to or smaller than 5 NoG PL. In this case the RS frame is divided or partitioned into 5 NoG 1 number of portions each having the size of PL and one portion having a size equal to smaller than PL. More specifically with the exception of the last portion of the RS frame each of the remaining portions of the RS frame has an equal size of PL. If the size of the last portion is smaller than PL a stuffing byte or dummy byte may be inserted in order to fill or replace the lacking number of data bytes thereby enabling the last portion of the RS frame to also be equal to PL. Each portion of an RS frame corresponds to the amount of data that are to be SCCC encoded and mapped into a single data group of a parade.

 a and b of respectively illustrate examples of adding S number of stuffing bytes when an RS frame having the size of N 2 row 187 P column is divided into 5 NoG number of portions each having the size of PL. More specifically the RS encoded and CRC encoded RS frame shown in a of is divided into several portions as shown in b of . The number of divided portions at the RS frame is equal to 5 NoG . Particularly the first 5 NoG 1 number of portions each has the size of PL and the last portion of the RS frame may be equal to or smaller than PL. If the size of the last portion is smaller than PL a stuffing byte or dummy byte may be inserted in order to fill or replace the lacking number of data bytes as shown in Math figure 5 below thereby enabling the last portion of the RS frame to also be equal to PL. 5 2 187 Math Figure 5 

Herein each portion including data having the size of PL passes through the output multiplexer of the MPH frame encoder which is then outputted to the block processor .

At this point the mapping order of the RS frame portions to a parade of data groups in not identical with the group assignment order defined in Math figure 1. When given the group positions of a parade in an MPH frame the SCCC encoded RS frame portions will be mapped in a time order i.e. in a left to right direction . For example as shown in data groups of the 2parade Parade 1 are first assigned or allocated to the 13slot Slot 12 and then assigned to the 3slot Slot 2 . However when the data are actually placed in the assigned slots the data are placed in a time sequence or time order i.e. in a left to right direction . More specifically the 1data group of Parade 1 is placed in Slot 2 and the 2data group of Parade 1 is placed in Slot 12.

Meanwhile the block processor performs an SCCC outer encoding process on the output of the MPH frame encoder . More specifically the block processor receives the data of each error correction encoded portion. Then the block processor encodes the data once again at a coding rate of 1 H wherein H is an integer equal to or greater than 2 i.e. H 2 thereby outputting the 1 H rate encoded data to the group formatter . According to the embodiment of the present invention the input data are encoded either at a coding rate of 1 2 also referred to as 1 2 rate encoding or at a coding rate of 1 4 also referred to as 1 4 rate encoding . The data of each portion outputted from the MPH frame encoder may include at least one of pure mobile service data RS parity data CRC data and stuffing data. However in a broader meaning the data included in each portion may correspond to data for mobile services. Therefore the data included in each portion will all be considered as mobile service data and described accordingly.

The group formatter inserts the mobile service data SCCC outer encoded and outputted from the block processor in the corresponding region within the data group which is formed in accordance with a pre defined rule. Also in association with the data deinterleaving process the group formatter inserts various place holders or known data place holders in the corresponding region within the data group. Thereafter the group formatter deinterleaves the data within the data group and the place holders.

According to the present invention with reference to data after being data interleaved as shown in a data groups is configured of 10 MPH blocks B1 to B10 and divided into 4 regions A B C and D . Also as shown in when it is assumed that the data group is divided into a plurality of hierarchical regions as described above the block processor may encode the mobile service data which are to be inserted to each region based upon the characteristic of each hierarchical region at different coding rates. For example the block processor may encode the mobile service data which are to be inserted in region A B within the corresponding data group at a coding rate of 1 2. Then the group formatter may insert the 1 2 rate encoded mobile service data to region A B. Also the block processor may encode the mobile service data which are to be inserted in region C D within the corresponding data group at a coding rate of 1 4 having higher or stronger error correction ability than the 1 2 coding rate. Thereafter the group formatter may insert the 1 2 rate encoded mobile service data to region C D. In another example the block processor may encode the mobile service data which are to be inserted in region C D at a coding rate having higher error correction ability than the 1 4 coding rate. Then the group formatter may either insert the encoded mobile service data to region C D as described above or leave the data in a reserved region for future usage.

According to another embodiment of the present invention the block processor may perform a 1 H rate encoding process in SCCC block units. Herein the SCCC block includes at least one MPH block. At this point when 1 H rate encoding is performed in MPH block units the MPH blocks B1 to B10 and the SCCC block SCB1 to SCB10 become identical to one another i.e. SCB1 B1 SCB2 B2 SCB3 B3 SCB4 B4 SCB5 B5 SCB6 B6 SCB7 B7 SCB8 B8 SCB9 B9 and SCB10 B10 . For example the MPH block 1 B1 may be encoded at the coding rate of 1 2 the MPH block 2 B2 may be encoded at the coding rate of 1 4 and the MPH block 3 B3 may be encoded at the coding rate of 1 2. The coding rates are applied respectively to the remaining MPH blocks.

Alternatively a plurality of MPH blocks within regions A B C and D may be grouped into one SCCC block thereby being encoded at a coding rate of 1 H in SCCC block units. Accordingly the receiving performance of region C D may be enhanced. For example MPH block 1 B1 to MPH block 5 B5 may be grouped into one SCCC block and then encoded at a coding rate of 1 2. Thereafter the group formatter may insert the 1 2 rate encoded mobile service data to a section starting from MPH block 1 B1 to MPH block 5 B5 . Furthermore MPH block 6 B6 to MPH block 10 B10 may be grouped into one SCCC block and then encoded at a coding rate of 1 4. Thereafter the group formatter may insert the 1 4 rate encoded mobile service data to another section starting from MPH block 6 B6 to MPH block 10 B10 . In this case one data group may consist of two SCCC blocks.

According to another embodiment of the present invention one SCCC block may be formed by grouping two MPH blocks. For example MPH block 1 B1 and MPH block 6 B6 may be grouped into one SCCC block SCB1 . Similarly MPH block 2 B2 and MPH block 7 B7 may be grouped into another SCCC block SCB2 . Also MPH block 3 B3 and MPH block 8 B8 may be grouped into another SCCC block SCB3 . And MPH block 4 B4 and MPH block 9 B9 may be grouped into another SCCC block SCB4 . Furthermore MPH block 5 B5 and MPH block 10 B10 may be grouped into another SCCC block SCB5 . In the above described example the data group may consist of 10 MPH blocks and 5 SCCC blocks. Accordingly in a data or signal receiving environment undergoing frequent and severe channel changes the receiving performance of regions C and D which is relatively more deteriorated than the receiving performance of region A may be reinforced. Furthermore since the number of mobile service data symbols increases more and more from region A to region D the error correction encoding performance becomes more and more deteriorated. Therefore when grouping a plurality of MPH block to form one SCCC block such deterioration in the error correction encoding performance may be reduced.

As described above when the block processor performs encoding at a 1 H coding rate information associated with SCCC should be transmitted to the receiving system in order to accurately recover the mobile service data. Table 7 below shows an example of a SCCC block mode which indicating the relation between an MPH block and an SCCC block among diverse SCCC block information.

More specifically Table 4 shows an example of 2 bits being allocated in order to indicate the SCCC block mode. For example when the SCCC block mode value is equal to 00 this indicates that the SCCC block and the MPH block are identical to one another. Also when the SCCC block mode value is equal to 01 this indicates that each SCCC block is configured of 2 MPH blocks.

As described above if one data group is configured of 2 SCCC blocks although it is not indicated in Table 7 this information may also be indicated as the SCCC block mode. For example when the SCCC block mode value is equal to 10 this indicates that each SCCC block is configured of 5 MPH blocks and that one data group is configured of 2 SCCC blocks. Herein the number of MPH blocks included in an SCCC block and the position of each MPH block may vary depending upon the settings made by the system designer. Therefore the present invention will not be limited to the examples given herein. Accordingly the SCCC mode information may also be expanded.

An example of a coding rate information of the SCCC block i.e. SCCC outer code mode is shown in Table 8 below.

More specifically Table 8 shows an example of 2 bits being allocated in order to indicate the coding rate information of the SCCC block. For example when the SCCC outer code mode value is equal to 00 this indicates that the coding rate of the corresponding SCCC block is 1 2. And when the SCCC outer code mode value is equal to 01 this indicates that the coding rate of the corresponding SCCC block is 1 4.

If the SCCC block mode value of Table 7 indicates 00 the SCCC outer code mode may indicate the coding rate of each MPH block with respect to each MPH block. In this case since it is assumed that one data group includes 10 MPH blocks and that 2 bits are allocated for each SCCC block mode a total of 20 bits are required for indicating the SCCC block modes of the 10 MPH modes. In another example when the SCCC block mode value of Table 7 indicates 00 the SCCC outer code mode may indicate the coding rate of each region with respect to each region within the data group. In this case since it is assumed that one data group includes 4 regions i.e. regions A B C and D and that 2 bits are allocated for each SCCC block mode a total of 8 bits are required for indicating the SCCC block modes of the 4 regions. In another example when the SCCC block mode value of Table 7 is equal to 01 each of the regions A B C and D within the data group has the same SCCC outer code mode.

Meanwhile an example of an SCCC output block length SOBL for each SCCC block when the SCCC block mode value is equal to 00 is shown in Table 9 below.

More specifically when given the SCCC output block length SOBL for each SCCC block an SCCC input block length SIBL for each corresponding SCCC block may be decided based upon the outer coding rate of each SCCC block. The SOBL is equivalent to the number of SCCC output or outer encoded bytes for each SCCC block. And the SIBL is equivalent to the number of SCCC input or payload bytes for each SCCC block. Table 10 below shows an example of the SOBL and SIBL for each SCCC block when the SCCC block mode value is equal to 01 .

In order to do so as shown in the block processor includes a RS frame portion SCCC block converter a byte bit converter a convolution encoder a symbol interleaver a symbol byte converter and an SCCC block MPH block converter . The convolutional encoder and the symbol interleaver are virtually concatenated with the trellis encoding module in the post processor in order to configure an SCCC block. More specifically the RS frame portion SCCC block converter divides the RS frame portions which are being inputted into multiple SCCC blocks using the SIBL of Table 9 and Table 10 based upon the RS code mode SCCC block mode and SCCC outer code mode. Herein the MPH frame encoder may output only primary RS frame portions or both primary RS frame portions and secondary RS frame portions in accordance with the RS frame mode.

When the RS Frame mode is set to 00 a portion of the primary RS Frame equal to the amount of data which are to be SCCC outer encoded and mapped to 10 MPH blocks B1 to B10 of a data group will be provided to the block processor . When the SCCC block mode value is equal to 00 then the primary RS frame portion will be split into 10 SCCC Blocks according to Table 9. Alternatively when the SCCC block mode value is equal to 01 then the primary RS frame will be split into 5 SCCC blocks according to Table 10.

When the RS frame mode value is equal to 01 then the block processor may receive two RS frame portions. The RS frame mode value of 01 will not be used with the SCCC block mode value of 01 . The first portion from the primary RS frame will be SCCC outer encoded as SCCC Blocks SCB3 SCB4 SCB5 SCB6 SCB7 and SCB8 by the block processor . The SCCC Blocks S3 and S8 will be mapped to region B and the SCCC blocks SCB4 SCB5 SCB6 and SCB7 shall be mapped to region A by the group formatter . The second portion from the secondary RS frame will also be SCCC outer encoded as SCB1 SCB2 SCB9 and SCB10 by the block processor . The group formatter will map the SCCC blocks SCB1 and SCB10 to region D as the MPH blocks B1 and B10 respectively. Similarly the SCCC blocks SCB2 and SCB9 will be mapped to region C as the MPH blocks B2 and B9.

The byte bit converter identifies the mobile service data bytes of each SCCC block outputted from the RS frame portion SCCC block converter as data bits which are then outputted to the convolution encoder . The convolution encoder performs one of 1 2 rate encoding and 1 4 rate encoding on the inputted mobile service data bits.

The first adder adds the input data bit U and the output bit of the first delay unit and then outputs the added bit to the second delay unit . Then the data bit delayed by a pre determined time e.g. by 1 clock in the second delay unit is outputted as a lower bit u and simultaneously fed back to the first delay unit . The first delay unit delays the data bit fed back from the second delay unit by a pre determined time e.g. by 1 clock . Then the first delay unit outputs the delayed data bit as a lower bit u and at the same time outputs the fed back data to the first adder and the second adder . The second adder adds the data bits outputted from the first and second delay units and and outputs the added data bits as a lower bit u. The third adder adds the input data bit U and the output of the second delay unit and outputs the added data bit as a lower bit u.

At this point the first and second delay units and are reset to 0 at the starting point of each SCCC block. The convolution encoder of may be used as a 1 2 rate encoder or a 1 4 rate encoder. More specifically when a portion of the output bit of the convolution encoder shown in is selected and outputted the convolution encoder may be used as one of a 1 2 rate encoder and a 1 4 rate encoder. Table 11 below shown an example of output symbols of the convolution encoder .

For example at the 1 2 coding rate 1 output symbol i.e. u and u bits may be selected and outputted. And at the 1 4 coding rate depending upon the SCCC block mode 2 output symbols i.e. 4 bits may be selected and outputted. For example when the SCCC block mode value is equal to 01 and when an output symbol configured of u and u and another output symbol configured of u and u are selected and outputted a 1 4 rate coding result may be obtained.

The mobile service data encoded at the coding rate of 1 2 or 1 4 by the convolution encoder are outputted to the symbol interleaver . The symbol interleaver performs block interleaving in symbol units on the output data symbol of the convolution encoder . More specifically the symbol interleaver is a type of block interleaver. Any interleaver performing structural rearrangement or realignment may be applied as the symbol interleaver of the block processor. However in the present invention a variable length symbol interleaver that can be applied even when a plurality of lengths is provided for the symbol so that its order may be rearranged may also be used.

In the present invention when performing the symbol intereleaving process the conditions of L 2 wherein m is an integer and of L B should be satisfied. If there is a difference in value between B and L L B number of null or dummy symbols is added thereby creating an interleaving pattern as shown in P i of . Therefore B becomes a block size of the actual symbols that are inputted to the symbol interleaver in order to be interleaved. L becomes an interleaving unit when the interleaving process is performed by an interleaving pattern created from the symbol interleaver .

Math figure 6 shown below describes the process of sequentially receiving B number of symbols the order of which is to be rearranged and obtaining an L value satisfying the conditions of L 2 wherein m is an integer and of L B thereby creating the interleaving so as to realign or rearrange the symbol order. In relation to all places wherein 0 i B 1 89 1 2 mod Math Figure 6 

As shown in P i of the order of B number of input symbols and L B number of null symbols is rearranged by using the above mentioned Math figure 6. Then as shown in P i of the null byte places are removed so as to rearrange the order. Starting with the lowest value of i the P i are shifted to the left in order to fill the empty entry locations. Thereafter the symbols of the aligned interleaving pattern P i are outputted to the symbol byte converter in order. Herein the symbol byte converter converts to bytes the mobile service data symbols having the rearranging of the symbol order completed and then outputted in accordance with the rearranged order and thereafter outputs the converted bytes to the SCCC block MPH block converter . The SCCC block MPH block converter converts the symbol interleaved SCCC blocks to MPH blocks which are then outputted to the group formatter .

If the SCCC block mode value is equal to 00 the SCCC block is mapped at a one to one 1 1 correspondence with each MPH block within the data group. In another example if the SCCC block mode value is equal to 01 each SCCC block is mapped with two MPH blocks within the data group. For example the SCCC block SCB1 is mapped with B1 B6 the SCCC block SCB2 is mapped with B2 B7 the SCCC block SCB3 is mapped with B3 B8 the SCCC block SCB4 is mapped with B4 B9 and the SCCC block SCB5 is mapped with B5 B10 . The MPH block that is outputted from the SCCC block MPH block converter is configured of mobile service data and FEC redundancy. In the present invention the mobile service data as well as the FEC redundancy of the MPH block will be collectively considered as mobile service data.

The group formatter inserts data of MPH blocks outputted from the block processor to the corresponding MPH blocks within the data group which is formed in accordance with a pre defined rule. Also in association with the data deinterleaving process the group formatter inserts various place holders or known data place holders in the corresponding region within the data group. More specifically apart from the encoded mobile service data outputted from the block processor the group formatter also inserts MPEG header place holders non systematic RS parity place holders main service data place holders which are associated with the data deinterleaving in a later process as shown in .

Herein the main service data place holders are inserted because the mobile service data bytes and the main service data bytes are alternately mixed with one another in regions B to D based upon the input of the data deinterleaver as shown in . For example based upon the data outputted after data deinterleaving the place holder for the MPEG header may be allocated at the very beginning of each packet. Also in order to configure an intended group format dummy bytes may also be inserted. Furthermore the group formatter inserts place holders for initializing the trellis encoding module in the corresponding regions. For example the initialization data place holders may be inserted in the beginning of the known data sequence. Additionally the group formatter may also insert signaling information which are encoded and outputted from the signaling encoder in corresponding regions within the data group. At this point reference may be made to the signaling information when the group formatter inserts each data type and respective place holders in the data group. The process of encoding the signaling information and inserting the encoded signaling information to the data group will be described in detail in a later process.

After inserting each data type and respective place holders in the data group the group formatter may deinterleave the data and respective place holders which have been inserted in the data group as an inverse process of the data interleaver thereby outputting the deinterleaved data and respective place holders to the packet formatter . More specifically when the data and respective place holders within the data group which is configured or structured as shown in are deinterleaved by the group formatter and outputted to the packet formatter the structure of the data group may be identical to the structure shown in . In order to do so the group formatter may include a group format organizer and a data deinterleaver as shown in . The group format organizer inserts data and respective place holders in the corresponding regions within the data group as described above. And the data deinterleaver deinterleaves the inserted data and respective place holders as an inverse process of the data interleaver.

The packet formatter removes the main service data place holders and the RS parity place holders that were allocated for the deinterleaving process from the deinterleaved data being inputted. Then the packet formatter groups the remaining portion and inserts the 3 byte MPEG header place holder in an MPEG header having a null packet PID or an unused PID from the main service data packet . Furthermore the packet formatter adds a synchronization data byte at the beginning of each 187 byte data packet. Also when the group formatter inserts known data place holders the packet formatter may insert actual known data in the known data place holders or may directly output the known data place holders without any modification in order to make replacement insertion in a later process. Thereafter the packet formatter identifies the data within the packet formatted data group as described above as a 188 byte unit mobile service data packet i.e. MPEG TS packet which is then provided to the packet multiplexer .

Based upon the control of the control unit the packet multiplexer multiplexes the data group packet formatted and outputted from the packet formatter and the main service data packet outputted from the packet jitter mitigator . Then the packet multiplexer outputs the multiplexed data packets to the data randomizer of the post processor . More specifically the control unit controls the time multiplexing of the packet multiplexer . If the packet multiplexer receives 118 mobile service data packets from the packet formatter 37 mobile service data packets are placed before a place for inserting VSB field synchronization. Then the remaining 81 mobile service data packets are placed after the place for inserting VSB field synchronization. The multiplexing method may be adjusted by diverse variables of the system design. The multiplexing method and multiplexing rule of the packet multiplexer will be described in more detail in a later process.

Also since a data group including mobile service data in between the data bytes of the main service data is multiplexed or allocated during the packet multiplexing process the shifting of the chronological position or place of the main service data packet becomes relative. Also a system object decoder i.e. MPEG decoder for processing the main service data of the receiving system receives and decodes only the main service data and recognizes the mobile service data packet as a null data packet.

Therefore when the system object decoder of the receiving system receives a main service data packet that is multiplexed with the data group a packet jitter occurs.

At this point since a multiple level buffer for the video data exists in the system object decoder and the size of the buffer is relatively large the packet jitter generated from the packet multiplexer does not cause any serious problem in case of the video data. However since the size of the buffer for the audio data in the object decoder is relatively small the packet jitter may cause considerable problem. More specifically due to the packet jitter an overflow or underflow may occur in the buffer for the main service data of the receiving system e.g. the buffer for the audio data . Therefore the packet jitter mitigator re adjusts the relative position of the main service data packet so that the overflow or underflow does not occur in the system object decoder.

In the present invention examples of repositioning places for the audio data packets within the main service data in order to minimize the influence on the operations of the audio buffer will be described in detail. The packet jitter mitigator repositions the audio data packets in the main service data section so that the audio data packets of the main service data can be as equally and uniformly aligned and positioned as possible. Additionally when the positions of the main service data packets are relatively re adjusted associated program clock reference PCR values may also be modified accordingly. The PCR value corresponds to a time reference value for synchronizing the time of the MPEG decoder. Herein the PCR value is inserted in a specific region of a TS packet and then transmitted.

In the example of the present invention the packet jitter mitigator also performs the operation of modifying the PCR value. The output of the packet jitter mitigator is inputted to the packet multiplexer . As described above the packet multiplexer multiplexes the main service data packet outputted from the packet jitter mitigator with the mobile service data packet outputted from the pre processor into a burst structure in accordance with a pre determined multiplexing rule. Then the packet multiplexer outputs the multiplexed data packets to the data randomizer of the post processor .

If the inputted data correspond to the main service data packet the data randomizer performs the same randomizing process as that of the conventional randomizer. More specifically the synchronization byte within the main service data packet is deleted. Then the remaining 187 data bytes are randomized by using a pseudo random byte generated from the data randomizer . Thereafter the randomized data are outputted to the RS encoder non systematic RS encoder .

On the other hand if the inputted data correspond to the mobile service data packet the data randomizer may randomize only a portion of the data packet. For example if it is assumed that a randomizing process has already been performed in advance on the mobile service data packet by the pre processor the data randomizer deletes the synchronization byte from the 4 byte MPEG header included in the mobile service data packet and then performs the randomizing process only on the remaining 3 data bytes of the MPEG header. Thereafter the randomized data bytes are outputted to the RS encoder non systematic RS encoder . More specifically the randomizing process is not performed on the remaining portion of the mobile service data excluding the MPEG header. In other words the remaining portion of the mobile service data packet is directly outputted to the RS encoder non systematic RS encoder without being randomized. Also the data randomizer may or may not perform a randomizing process on the known data or known data place holders and the initialization data place holders included in the mobile service data packet.

The RS encoder non systematic RS encoder performs an RS encoding process on the data being randomized by the data randomizer or on the data bypassing the data randomizer so as to add 20 bytes of RS parity data. Thereafter the processed data are outputted to the data interleaver . Herein if the inputted data correspond to the main service data packet the RS encoder non systematic RS encoder performs the same systematic RS encoding process as that of the conventional broadcasting system thereby adding the 20 byte RS parity data at the end of the 187 byte data. Alternatively if the inputted data correspond to the mobile service data packet the RS encoder non systematic RS encoder performs a non systematic RS encoding process. At this point the 20 byte RS parity data obtained from the non systematic RS encoding process are inserted in a pre decided parity byte place within the mobile service data packet.

The data interleaver corresponds to a byte unit convolutional interleaver. The output of the data interleaver is inputted to the parity replacer and to the non systematic RS encoder . Meanwhile a process of initializing a memory within the trellis encoding module is primarily required in order to decide the output data of the trellis encoding module which is located after the parity replacer as the known data pre defined according to an agreement between the receiving system and the transmitting system. More specifically the memory of the trellis encoding module should first be initialized before the received known data sequence is trellis encoded. At this point the beginning portion of the known data sequence that is received corresponds to the initialization data place holder and not to the actual known data. Herein the initialization data place holder has been included in the data by the group formatter within the pre processor in an earlier process. Therefore the process of generating initialization data and replacing the initialization data place holder of the corresponding memory with the generated initialization data are required to be performed immediately before the inputted known data sequence is trellis encoded.

Additionally a value of the trellis memory initialization data is decided and generated based upon a memory status of the trellis encoding module . Further due to the newly replaced initialization data a process of newly calculating the RS parity and replacing the RS parity which is outputted from the data interleaver with the newly calculated RS parity is required. Therefore the non systematic RS encoder receives the mobile service data packet including the initialization data place holders which are to be replaced with the actual initialization data from the data interleaver and also receives the initialization data from the trellis encoding module .

Among the inputted mobile service data packet the initialization data place holders are replaced with the initialization data and the RS parity data that are added to the mobile service data packet are removed and processed with non systematic RS encoding. Thereafter the new RS parity obtained by performing the non systematic RS encoding process is outputted to the parity replacer . Accordingly the parity replacer selects the output of the data interleaver as the data within the mobile service data packet and the parity replacer selects the output of the non systematic RS encoder as the RS parity. The selected data are then outputted to the trellis encoding module .

Meanwhile if the main service data packet is inputted or if the mobile service data packet which does not include any initialization data place holders that are to be replaced is inputted the parity replacer selects the data and RS parity that are outputted from the data interleaver . Then the parity replacer directly outputs the selected data to the trellis encoding module without any modification. The trellis encoding module converts the byte unit data to symbol units and performs a 12 way interleaving process so as to trellis encode the received data. Thereafter the processed data are outputted to the synchronization multiplexer .

Since 2 symbols i.e. 4 bits are required for trellis initialization the last 2 symbols i.e. 4 bits from the trellis initialization bytes are not used for trellis initialization and are considered as a symbol from a known data byte and processed accordingly. When the trellis encoder is in the initialization mode the input comes from an internal trellis status or state and not from the parity replacer . When the trellis encoder is in the normal mode the input symbol provided from the parity replacer will be processed. The trellis encoder provides the converted or modified input data for trellis initialization to the non systematic RS encoder .

More specifically when a selection signal designates a normal mode the first multiplexer selects an upper bit X of the input symbol. And when a selection signal designates an initialization mode the first multiplexer selects the output of the first memory and outputs the selected output data to the first adder . The first adder adds the output of the first multiplexer and the output of the first memory thereby outputting the added result to the first memory and at the same time as a most significant or uppermost bit Z. The first memory delays the output data of the first adder by 1 clock thereby outputting the delayed data to the first multiplexer and the first adder .

Meanwhile when a selection signal designates a normal mode the second multiplexer selects a lower bit X of the input symbol. And when a selection signal designates an initialization mode the second multiplexer selects the output of the second memory thereby outputting the selected result to the second adder and at the same time as a lower bit Z. The second adder adds the output of the second multiplexer and the output of the second memory thereby outputting the added result to the third memory . The third memory delays the output data of the second adder by 1 clock thereby outputting the delayed data to the second memory and at the same time as a least significant or lowermost bit Z. The second memory delays the output data of the third memory by 1 clock thereby outputting the delayed data to the second adder and the second multiplexer .

The synchronization multiplexer inserts a field synchronization signal and a segment synchronization signal to the data outputted from the trellis encoding module and then outputs the processed data to the pilot inserter of the transmission unit . Herein the data having a pilot inserted therein by the pilot inserter are modulated by the modulator in accordance with a pre determined modulating method e.g. a VSB method . Thereafter the modulated data are transmitted to each receiving system though the radio frequency RF up converter .

Data of the error correction encoded and 1 H rate encoded primary RS frame i.e. when the RS frame mode value is equal to 00 or primary secondary RS frame i.e. when the RS frame mode value is equal to 01 are divided into a plurality of data groups by the group formatter . Then the divided data portions are assigned to at least one of regions A to D of each data group or to an MPH block among the MPH blocks B1 to B10 thereby being deinterleaved. Then the deinterleaved data group passes through the packet formatter thereby being multiplexed with the main service data by the packet multiplexer based upon a de decided multiplexing rule. The packet multiplexer multiplexes a plurality of consecutive data groups so that the data groups are assigned to be spaced as far apart from one another as possible within the sub frame. For example when it is assumed that 3 data groups are assigned to a sub frame the data groups are assigned to a 1slot Slot 0 a 5slot Slot 4 and a 9slot Slot 8 in the sub frame respectively.

As described above in the assignment of the plurality of consecutive data groups a plurality of parades are multiplexed and outputted so as to be spaced as far apart from one another as possible within a sub MPH frame. For example the method of assigning data groups and the method of assigning parades may be identically applied to all sub frames for each MPH frame or differently applied to each MPH frame.

When data groups of a parade are assigned as shown in the packet multiplexer may either assign main service data to each data group or assign data groups corresponding to different parades between each data group. More specifically the packet multiplexer may assign data groups corresponding to multiple parades to one MPH frame. Basically the method of assigning data groups corresponding to multiple parades is very similar to the method of assigning data groups corresponding to a single parade. In other words the packet multiplexer may assign data groups included in other parades to an MPH frame according to a cycle period of 4 slots. At this point data groups of a different parade may be sequentially assigned to the respective slots in a circular method. Herein the data groups are assigned to slots starting from the ones to which data groups of the previous parade have not yet been assigned. For example when it is assumed that data groups corresponding to a parade are assigned as shown in data groups corresponding to the next parade may be assigned to a sub frame starting either from the 12slot of a sub frame.

As described above the packet multiplexer may multiplex and output data groups of multiple parades to a single MPH frame and in each sub frame the multiplexing process of the data groups may be performed serially with a group space of 4 slots from left to right. Therefore a number of groups of one parade per sub frame NOG may correspond to any one integer from 1 to 8 . Herein since one MPH frame includes 5 sub frames the total number of data groups within a parade that can be allocated to an MPH frame may correspond to any one multiple of 5 ranging from 5 to 40 .

The present invention assigns signaling information areas for inserting signaling information to some areas within each data group. illustrates an example of assigning signaling information areas for inserting signaling information starting from the 1segment of the 4MPH block B4 to a portion of the 2segment. More specifically 276 207 69 bytes of the 4MPH block B4 in each data group are assigned as the signaling information area. In other words the signaling information area consists of 207 bytes of the 1segment and the first 69 bytes of the 2segment of the 4MPH block B4 . For example the 1segment of the 4MPH block B4 corresponds to the 17or 173segment of a VSB field. The signaling information that is to be inserted in the signaling information area is FEC encoded by the signaling encoder thereby inputted to the group formatter .

The group formatter inserts the signaling information which is FEC encoded and outputted by the signaling encoder in the signaling information area within the data group. Herein the signaling information may be identified by two different types of signaling channels a transmission parameter channel TPC and a fast information channel FIC . Herein the TPC information corresponds to signaling information including transmission parameters such as RS frame associated information SCCC associated information and MPH frame associated information. However the signaling information presented herein is merely exemplary. And since the adding or deleting of signaling information included in the TPC may be easily adjusted and modified by one skilled in the art the present invention will therefore not be limited to the examples set forth herein. Furthermore the FIC is provided to enable a fast service acquisition of data receivers and the FIC includes cross layer information between the physical layer and the upper layer s .

Herein the block interleaver corresponds to a variable length block interleaver. The block interleaver interleaves the FIC data within each sub frame in TNoG column 51 row block units and then outputs the interleaved data to the multiplexer . Herein the TNoG corresponds to the total number of data groups being assigned to all sub frames within an MPH frame. The block interleaver is synchronized with the first set of FIC data in each sub frame. The block interleaver writes 51 bytes of incoming or inputted RS codewords in a row direction i.e. row by row and left to right and up to down directions and reads 51 bytes of RS codewords in a column direction i.e. column by column and left to right and up to down directions thereby outputting the RS codewords.

The multiplexer multiplexes the RS encoded TPC data from the TPC encoder and the block interleaved FIC data from the block interleaver along a time axis. Then the multiplexer outputs 69 bytes of the multiplexed data to the signaling randomizer . The signaling randomizer randomizes the multiplexed data and outputs the randomized data to the PCCC encoder . The signaling randomizer may use the same generator polynomial of the randomizer used for mobile service data. Also initialization occurs in each data group. The PCCC encoder corresponds to an inner encoder performing PCCC encoding on the randomized data i.e. signaling information data . The PCCC encoder may include 6 even component encoders and 6 odd component encoders.

The sub frame number field corresponds to the current sub frame number within the MPH frame which is transmitted for MPH frame synchronization. The value of the sub frame number field may range from 0 to 4. The Slot number field indicates the current slot number within the sub frame which is transmitted for MPH frame synchronization. Also the value of the sub frame number field may range from 0 to 15. The Parade id field identifies the parade to which this group belongs. The value of this field may be any 7 bit value. Each parade in a MPH transmission shall have a unique Parade id field.

Communication of the Parade id between the physical layer and the management layer may be performed by means of an Ensemble id field formed by adding one bit to the left of the Parade id field. If the Ensemble id field is used for the primary Ensemble delivered through this parade the added MSB shall be equal to 0 . Otherwise if the Ensemble id field is used for the secondary ensemble the added MSB shall be equal to 1 . Assignment of the Parade id field values may occur at a convenient level of the system usually in the management layer. The starting group number SGN field shall be the first Slot number for a parade to which this group belongs as determined by Math figure 1 i.e. after the Slot numbers for all preceding parades have been calculated . The SGN and NoG shall be used according to Math figure 1 to obtain the slot numbers to be allocated to a parade within the sub frame.

The number of Groups NoG field shall be the number of groups in a sub frame assigned to the parade to which this group belongs minus 1 e.g. NoG 0 implies that one group is allocated or assigned to this parade in a sub frame. The value of NoG may range from 0 to 7. This limits the amount of data that a parade may take from the main legacy service data and consequently the maximum data that can be carried by one parade. The slot numbers assigned to the corresponding Parade can be calculated from SGN and NoG using Math figure 1. By taking each parade in sequence the specific slots for each parade will be determined and consequently the SGN for each succeeding parade. For example if for a specific parade SGN 3 and NoG 3 010b for 3 bit field of NoG substituting i 3 4 and 5 in Math figure 1 provides slot numbers 12 2 and 6. The Parade repetition cycle PRC field corresponds to the cycle time over which the parade is transmitted minus 1 specified in units of MPH frames as described in Table 12.

The RS Frame mode field shall be as defined in Table 1. The RS code mode primary field shall be the RS code mode for the primary RS frame. Herein the RS code mode is defined in Table 6. The RS code mode secondary field shall be the RS code mode for the secondary RS frame. Herein the RS code mode is defined in Table 6. The SCCC Block mode field shall be as defined in Table 7. The SCCC outer code mode A field corresponds to the SCCC outer code mode for Region A. The SCCC outer code mode is defined in Table 8. The SCCC outer code mode B field corresponds to the SCCC outer code mode for Region B. The SCCC outer code mode C field corresponds be the SCCC outer code mode for Region C. And the SCCC outer code mode D field corresponds to the SCCC outer code mode for Region D.

The FIC version field may be supplied by the management layer which also supplies the FIC data . The Parade continuity counter field counter may increase from 0 to 15 and then repeat its cycle. This counter shall increment by 1 every PRC 1 MPH frames. For example as shown in Table 12 PRC 011 decimal implies that Parade continuity counter increases every fourth MPH frame. The TNoG field may be identical for all sub frames in an MPH Frame. However the information included in the TPC data presented herein is merely exemplary. And since the adding or deleting of information included in the TPC may be easily adjusted and modified by one skilled in the art the present invention will therefore not be limited to the examples set forth herein.

Since the TPC parameters excluding the sub frame number field and the Slot number field for each parade do not change their values during an MPH frame the same information is repeatedly transmitted through all MPH groups belonging to the corresponding parade during an MPH frame. This allows very robust and reliable reception of the TPC data. Because the sub frame number and the Slot number are increasing counter values they also are robust due to the transmission of regularly expected values.

Furthermore the FIC information is provided to enable a fast service acquisition of data receivers and the FIC information includes cross layer information between the physical layer and the upper layer s .

For example when Parade repetition cycle 000 the values of the 3 4 and 5sub frames of the current MPH frame correspond to the next MPH frame. Also when Parade repetition cycle 011 the values of the 3 4 and 5sub frames of the current MPH frame correspond to the 4MPH frame and beyond. The FIC version field and the FIC data field may have values that apply to the current MPH Frame during the 1sub frame and the 2sub frame and they shall have values corresponding to the MPH frame immediately following the current MPH frame during the 3 4 and 5sub frames of the current MPH frame.

Meanwhile the receiving system may turn the power on only during a slot to which the data group of the designated or desired parade is assigned and the receiving system may turn the power off during the remaining slots thereby reducing power consumption of the receiving system. Such characteristic is particularly useful in portable or mobile receivers which require low power consumption. For example it is assumed that data groups of a 1parade with NOG 3 a 2parade with NOG 2 and a 3parade with NOG 3 are assigned to one MPH frame as shown in . It is also assumed that the user has selected a mobile service included in the 1parade using the keypad provided on the remote controller or terminal. In this case the receiving system turns the power on only during a slot that data groups of the 1st parade is assigned as shown in and turns the power off during the remaining slots thereby reducing power consumption as described above. At this point the power is required to be turned on briefly earlier than the slot to which the actual designated data group is assigned or allocated . This is to enable the tuner or demodulator to converge in advance.

In addition to the payload data the MPH transmission system inserts long and regularly spaced training sequences into each group. The regularity is an especially useful feature since it provides the greatest possible benefit for a given number of training symbols in high Doppler rate conditions. The length of the training sequences is also chosen to allow fast acquisition of the channel during bursted power saving operation of the demodulator. Each group contains 6 training sequences. The training sequences are specified before trellis encoding. The training sequences are then trellis encoded and these trellis encoded sequences also are known sequences. This is because the trellis encoder memories are initialized to pre determined values at the beginning of each sequence. The form of the 6 training sequences at the byte level before trellis encoding is shown in . This is the arrangement of the training sequence at the group formatter .

The 1training sequence is located at the last 2 segments of the 3MPH block B3 . The 2training sequence may be inserted at the 2and 3segments of the 4MPH block B4 . The 2training sequence is next to the signaling area as shown in . Then the 3training sequence the 4training sequence the 5training sequence and the 6training sequence may be placed at the last 2 segments of the 4 5 6 and 7MPH blocks B4 B5 B6 and B7 respectively. As shown in the 1training sequence the 3training sequence the 4training sequence the 5training sequence and the 6training sequence are spaced 16 segments apart from one another. Referring to the dotted area indicates trellis initialization data bytes the lined area indicates training data bytes and the white area includes other bytes such as the FEC coded MPH service data bytes FEC coded signaling data main service data bytes RS parity data bytes for backwards compatibility with legacy ATSC receivers and or dummy data bytes.

After the trellis encoding process the last 1416 588 828 symbols of the 1training sequence the 3training sequence the 4training sequence the 5training sequence and the 6training sequence commonly share the same data pattern. Including the data segment synchronization symbols in the middle of and after each sequence the total length of each common training pattern is 1424 symbols. The 2training sequence has a first 528 symbol sequence and a second 528 symbol sequence that have the same data pattern. More specifically the 528 symbol sequence is repeated after the 4 symbol data segment synchronization signal. At the end of each training sequence the memory contents of the twelve modified trellis encoders shall be set to zero 0 .

Referring to the demodulating unit includes a demodulator an equalizer a known sequence detector a block decoder a RS frame decoder a derandomizer . The demodulating unit may further include a data deinterleaver a RS decoder and a data derandomizer . The demodulating unit may further include a signaling information decoder . The receiving system also may further include a power controller for controlling power supply of the demodulating unit.

Herein for simplicity of the description of the present invention the RS frame decoder and the derandomizer will be collectively referred to as a mobile service data processing unit. And the data deinterleaver the RS decoder and the data derandomizer will be collectively referred to as a main service data processing unit. More specifically a frequency of a particular channel tuned by a tuner down converts to an intermediate frequency IF signal. Then the down converted data outputs the down converted IF signal to the demodulator and the known sequence detector . At this point the down converted data is inputted to the demodulator and the known sequence detector via analog digital converter ADC not shown . The ADC converts pass band analog IF signal into pass band digital IF signal.

The demodulator performs self gain control carrier recovery and timing recovery processes on the inputted pass band digital IF signal thereby modifying the IF signal to a base band signal. Then the demodulator outputs the newly created base band signal to the equalizer and the known sequence detector . The equalizer compensates the distortion of the channel included in the demodulated signal and then outputs the error compensated signal to the block decoder .

At this point the known sequence detector detects the known sequence place inserted by the transmitting end from the input output data of the demodulator i.e. the data prior to the demodulation process or the data after the demodulation process . Thereafter the place information along with the symbol sequence of the known data which are generated from the detected place is outputted to the demodulator and the equalizer . Also the known data detector outputs a set of information to the block decoder . This set of information is used to allow the block decoder of the receiving system to identify the mobile service data that are processed with additional encoding from the transmitting system and the main service data that are not processed with additional encoding. In addition although the connection status is not shown in the information detected from the known data detector may be used throughout the entire receiving system and may also be used in the RS frame decoder .

The demodulator uses the known data symbol sequence during the timing and or carrier recovery thereby enhancing the demodulating performance. Similarly the equalizer uses the known data so as to enhance the equalizing performance. Moreover the decoding result of the block decoder may be fed back to the equalizer thereby enhancing the equalizing performance.

The data demodulated in the demodulator or the data equalized in the channel equalizer is inputted to the signaling information decoder . The known data information detected in the known sequence detector is inputted to the signaling information decoder .

The signaling information decoder extracts and decodes signaling information from the inputted data the decoded signaling information provides to blocks requiring the signaling information. For example the SCCC associated information may output to the block decoder and the RS frame associated information may output to the RS frame decoder . The MPH frame associated information may output to the known sequence detector and the power controller .

Herein the RS frame associated information may include RS frame mode information and RS code mode information. The SCCC associated information may include SCCC block mode information and SCCC outer code mode information. The MPH frame associated information may include sub frame count information slot count information parade id information SGN information NoG information and so on as shown in .

More specifically the signaling information between first known data area and second known data area can know by using known data information being outputted in the known sequence detector . Therefore the signaling information decoder may extract and decode signaling information from the data being outputted in the demodulator or the channel equalizer .

The power controller is inputted the MPH frame associated information from the signaling information decoder and controls power of the tuner and the demodulating unit.

According to the embodiment of the present invention the power controller turns the power on only during a slot to which a slot of the parade including user selected mobile service is assigned. The power controller then turns the power off during the remaining slots.

For example it is assumed that data groups of a 1parade with NOG 3 a 2parade with NOG 2 and a 3parade with NOG 3 are assigned to one MPH frame as shown in . It is also assumed that the user has selected a mobile service included in the 1parade using the keypad provided on the remote controller or terminal. In this case the power controller turns the power on only during a slot that data groups of the 1parade is assigned as shown in and turns the power off during the remaining slots thereby reducing power consumption.

At this point the transmitting system may receive a data frame or VSB frame including a data group which known data sequence or training sequence is periodically inserted therein. Herein the data group is divided into regions A to D as shown in . More specifically in the example of the present invention each region A B C and D are further divided into MPH blocks B4 to B7 MPH blocks B3 and B8 MPH blocks B2 and B9 MPH blocks B1 and B10 respectively.

Referring to known data sequence having the same pattern are included in each known data section that is being periodically inserted. Herein the length of the known data sequence having identical data patterns may be either equal to or different from the length of the entire or total known data sequence of the corresponding known data section or block . If the two lengths are different from one another the length of the entire known data sequence should be longer than the length of the known data sequence having identical data patterns. In this case the same known data sequences are included in the entire known data sequence. The known sequence detector detects the position of the known data being periodically inserted and transmitted as described above. At the same time the known sequence detector may also estimate initial frequency offset during the process of detecting known data. In this case the demodulator may estimate with more accuracy carrier frequency offset from the information on the known data position or known sequence position indicator and initial frequency offset estimation value thereby compensating the estimated initial frequency offset.

The first multiplier multiplies the I and Q pass band digital signals which are outputted from the phase splitter to a complex signal having a frequency proportional to a constant being outputted from the NCO thereby changing the I and Q pass band digital signals to baseband digital complex signals. Then the baseband digital signals of the first multiplier are inputted to the resampler . The resampler resamples the signals being outputted from the first multiplier so that the signal corresponds to the timing clock provided by the timing recovery unit . Thereafter the resampler outputs the resampled signals to the second multiplier .

For example when the analog digital converter uses a 25 MHz fixed oscillator the baseband digital signal having a frequency of 25 MHz which is created by passing through the analog digital converter the phase splitter and the first multiplier is processed with an interpolation process by the resampler . Thus the interpolated signal is recovered to a baseband digital signal having a frequency twice that of the receiving signal of a symbol clock i.e. a frequency of 21.524476 MHz . Alternatively if the analog digital converter uses the timing clock of the timing recovery unit as the sampling frequency i.e. if the analog digital converter uses a variable frequency in order to perform an A D conversion process the resampler is not required and may be omitted.

The second multiplier multiplies an output frequency of the carrier recovery unit with the output of the resampler so as to compensate any remaining carrier included in the output signal of the resampler . Thereafter the compensated carrier is outputted to the matched filter and the timing recovery unit . The signal matched filtered by the matched filter is inputted to the DC remover the known sequence detector and initial frequency offset estimator and the carrier recovery unit .

The known sequence detector and initial frequency offset estimator detects the place or position of the known data sequences that are being periodically or non periodically transmitted. Simultaneously the known sequence detector and initial frequency offset estimator estimates an initial frequency offset during the known sequence detection process. More specifically while the transmission data frame is being received as shown in the known sequence detector and initial frequency offset estimator detects the position or place of the known data included in the transmission data frame. Then the known sequence detector and initial frequency offset estimator outputs the detected information on the known data place i.e. a known sequence position indicator to the timing recovery unit the carrier recovery unit and the phase compensator of the demodulator and the equalizer . Furthermore the known sequence detector and initial frequency offset estimator estimates the initial frequency offset which is then outputted to the carrier recovery unit . At this point the known sequence detector and initial frequency offset estimator may either receive the output of the matched filter or receive the output of the resampler . This may be optionally decided depending upon the design of the system designer.

The timing recovery unit uses the output of the second multiplier and the known sequence position indicator detected from the known sequence detector and initial frequency offset estimator so as to detect the timing error and then to output a sampling clock being in proportion with the detected timing error to the resampler thereby adjusting the sampling timing of the resampler . At this point the timing recovery unit may receive the output of the matched filter instead of the output of the second multiplier . This may also be optionally decided depending upon the design of the system designer.

Meanwhile the DC remover removes a pilot tone signal i.e. DC signal which has been inserted by the transmitting system from the matched filtered signal. Thereafter the DC remover outputs the processed signal to the phase compensator . The phase compensator uses the data having the DC removed by the DC remover and the known sequence position indicator detected by the known sequence detector and initial frequency offset estimator to estimate the frequency offset and then to compensate the phase change included in the output of the DC remover . The data having its phase change compensated are inputted to the equalizer . Herein the phase compensator is optional. If the phase compensator is not provided then the output of the DC remover is inputted to the equalizer instead.

Herein the decimators correspond to components required when a signal being inputted to the demodulator is oversampled to N times by the analog digital converter. More specifically the integer N represents the sampling rate of the received signal. For example when the input signal is oversampled to 2 times i.e. when N 2 by the analog digital converter this indicates that two samples are included in one symbol. In this case each of the decimators corresponds to a decimator. Depending upon whether or not the oversampling process of the received signal has been performed the signal may bypass the decimators.

Meanwhile the output of the second multiplier is temporarily stored in the decimator and the buffer both included in the timing recovery unit . Subsequently the temporarily stored output data are inputted to the timing error detector through the decimator and the buffer . Assuming that the output of the second multiplier is oversampled to N times its initial state the decimator decimates the output of the second multiplier at a decimation rate of 1 N. Then the 1 N decimated data are inputted to the buffer . In other words the decimator performs decimation on the input signal in accordance with a VSB symbol cycle. Furthermore the decimator may also receive the output of the matched filter instead of the output of the second multiplier . The timing error detector uses the data prior to or after being processed with matched filtering and the known sequence position indicator outputted from the known sequence detector and initial frequency offset estimator in order to detect a timing error. Thereafter the detected timing error is outputted to the loop filter . Accordingly the detected timing error information is obtained once during each repetition cycle of the known data sequence.

For example if a known data sequence having the same pattern is periodically inserted and transmitted as shown in the timing error detector may use the known data in order to detect the timing error. There exists a plurality of methods for detecting timing error by using the known data. In the example of the present invention the timing error may be detected by using a correlation characteristic between the known data and the received data in the time domain the known data being already known in accordance with a pre arranged agreement between the transmitting system and the receiving system. The timing error may also be detected by using the correlation characteristic of the two known data types being received in the frequency domain. Thus the detected timing error is outputted. In another example a spectral lining method may be applied in order to detect the timing error. Herein the spectral lining method corresponds to a method of detecting timing error by using sidebands of the spectrum included in the received signal.

The loop filter filters the timing error detected by the timing error detector and then outputs the filtered timing error to the holder . The holder holds or maintains the timing error filtered and outputted from the loop filter during a pre determined known data sequence cycle period and outputs the processed timing error to the NCO . Herein the order of positioning of the loop filter and the holder may be switched with one another. In additionally the function of the holder may be included in the loop filter and accordingly the holder may be omitted. The NCO accumulates the timing error outputted from the holder . Thereafter the NCO outputs the phase element i.e. a sampling clock of the accumulated timing error to the resampler thereby adjusting the sampling timing of the resampler .

Meanwhile the buffer of the carrier recovery unit may receive either the data inputted to the matched filter or the data outputted from the matched filter and then temporarily store the received data. Thereafter the temporarily stored data are outputted to the frequency offset estimator . If a decimator is provided in front of the buffer the input data or output data of the matched filter are decimated by the decimator at a decimation rate of 1 N. Thereafter the decimated data are outputted to the buffer . For example when the input data or output data of the matched filter are oversampled to 2 times i.e. when N 2 this indicates that the input data or output data of the matched filter are decimated at a rate of 1 2 by the decimator and then outputted to the buffer . More specifically when a decimator is provided in front of the buffer the carrier recovery unit operates in symbol units. Alternatively if a decimator is not provided the carrier recovery unit operates in oversampling units.

The frequency offset estimator uses the input data or output data of the matched filter and the known sequence position indicator outputted from the known sequence detector and initial frequency offset estimator in order to estimate the frequency offset. Then the estimated frequency offset is outputted to the loop filter . Therefore the estimated frequency offset value is obtained once every repetition period of the known data sequence. The loop filter performs low pass filtering on the frequency offset value estimated by the frequency offset estimator and outputs the low pass filtered frequency offset value to the holder . The holder holds or maintains the low pass filtered frequency offset value during a pre determined known data sequence cycle period and outputs the frequency offset value to the adder . Herein the positions of the loop filter and the holder may be switched from one to the other. Furthermore the function of the holder may be included in the loop filter and accordingly the holder may be omitted.

The adder adds the value of the initial frequency offset estimated by the known sequence detector and initial frequency offset estimator to the frequency offset value outputted from the loop filter or the holder . Thereafter the added offset value is outputted to the NCO . Herein if the adder is designed to also receive the constant being inputted to the NCO the NCO and the first multiplier may be omitted. In this case the second multiplier may simultaneously perform changing signals to baseband signals and removing remaining carrier.

The NCO generates a complex signal corresponding to the frequency offset outputted from the adder which is then outputted to the second multiplier . Herein the NCO may include a ROM. In this case the NCO generates a compensation frequency corresponding to the frequency offset being outputted from the adder . Then the NCO reads a complex cosine corresponding to the compensation frequency from the ROM which is then outputted to the second multiplier . The second multiplier multiplies the output of the NCO included in the carrier recovery unit to the output of the resampler so as to remove the carrier offset included in the output signal of the resampler .

The first N symbol buffer may store a maximum of N number of symbol being inputted thereto. The symbol data that are temporarily stored in the first N symbol buffer are then inputted to the multiplier . At the same time the inputted symbol is inputted to the K symbol delay so as to be delayed by K symbols. Thereafter the delayed symbol passes through the second N symbol buffer so as to be conjugated by the conjugator . Thereafter the conjugated symbol is inputted to the multiplier . The multiplier multiplies the output of the first N symbol buffer and the output of the conjugator . Then the multiplier outputs the multiplied result to the accumulator . Subsequently the accumulator accumulates the output of the multiplier during N symbol periods thereby outputted the accumulated result to the phase detector .

The phase detector extracts the corresponding phase information from the output of the accumulator which is then outputted to the multiplier . The multiplier then divides the phase information by K thereby outputting the divided result to the multiplexer . Herein the result of the phase information divided by becomes the frequency offset estimation value. More specifically at the point where the input of the known data ends or at a desired point the frequency offset estimator accumulates during an N symbol period multiplication of the complex conjugate of N number of the input data stored in the first N symbol buffer and the complex conjugate of the N number of the input data that are delayed by K symbols and stored in the second N symbol buffer . Thereafter the accumulated value is divided by K thereby extracting the frequency offset estimation value.

Based upon a control signal of the controller the multiplexer selects either the output of the multiplier or 0 and then outputs the selected result as the final frequency offset estimation value. The controller receives the known data sequence position indicator from the known sequence detector and initial frequency offset estimator in order to control the output of the multiplexer . More specifically the controller determines based upon the known data sequence position indicator whether the frequency offset estimation value being outputted from the multiplier is valid. If the controller determines that the frequency offset estimation value is valid the multiplexer selects the output of the multiplier . Alternatively if the controller determines that the frequency offset estimation value is invalid the controller generates a control signal so that the multiplexer selects 0 . At this point it is preferable that the input signals stored in the first N symbol buffer and in the second N symbol buffer correspond to signals each being transmitted by the same known data and passing through almost the same channel. Otherwise due to the influence of the transmission channel the frequency offset estimating performance may be largely deteriorated.

Further the values N and K of the frequency offset estimator shown in may be diversely decided. This is because a particular portion of the known data that are identically repeated may be used herein. For example when the data having the structure described in are being transmitted N may be set as BS i.e. N BS and K may be set as AS BS i.e. K AS B S . The frequency offset estimation value range of the frequency offset estimator is decided in accordance with the value K. If the value K is large then the frequency offset estimation value range becomes smaller. Alternatively if the value K is small then the frequency offset estimation value range becomes larger. Therefore when the data having the structure of is transmitted and if the repetition cycle AS BS of the known data is long then the frequency offset estimation value range becomes smaller.

In this case even if the initial frequency offset is estimated by the known sequence detector and initial frequency offset estimator and if the estimated value is compensated by the second multiplier the remaining frequency offset after being compensated will exceed the estimation range of the frequency offset estimator . In order to overcome such problems the known data sequence that is regularly transmitted may be configured of a repetition of a same data portion by using a cyclic extension process. For example if the known data sequence shown in is configured of two identical portions having the length of BS 2 then the N and K values of the frequency offset estimator shown in may be respectively set as B 2 and B 2 i.e. N B S 2 and K BS 2 . In this case the estimation value range may become larger than when using repeated known data.

Meanwhile the known sequence detector and initial frequency offset estimator detects the place o position of the known data sequences that are being periodically or non periodically transmitted. Simultaneously the known sequence detector and initial frequency offset estimator estimates an initial frequency offset during the known sequence detection process. The known data sequence position indicator detected by the known sequence detector and initial frequency offset estimator is outputted to the timing recovery unit the carrier recovery unit and the phase compensator of the demodulator and to the equalizer . Thereafter the estimated initial frequency offset is outputted to the carrier recovery unit . At this point the known sequence detector and initial frequency offset estimator may either receive the output of the matched filter or receive the output of the resampler . This may be optionally decided depending upon the design of the system designer. Herein the frequency offset estimator shown in may be directly applied in the known sequence detector and initial frequency offset estimator or in the phase compensator of the frequency offset estimator.

For example when the input signal is oversampled to 2 times i.e. when N 2 this indicates that two samples are included in one signal. In this case two partial correlators e.g. and are required and each 1 N decimator becomes a 1 2 decimator. At this point the 1 N decimator of the first partial correlator decimates or removes among the input samples the samples located in between symbol places or positions . Then the corresponding 1 N decimator outputs the decimated sample to the partial correlator. Furthermore the 1 sample delay of the second partial correlator delays the input sample by 1 sample i.e. performs a 1 sample delay on the input sample and outputs the delayed input sample to the 1 N decimator. Subsequently among the samples inputted from the 1 sample delay the 1 N decimator of the second partial correlator decimates or removes the samples located in between symbol places or positions . Thereafter the corresponding 1 N decimator outputs the decimated sample to the partial correlator.

After each predetermined period of the VSB symbol each of the partial correlators outputs a correlation value and an estimation value of the coarse frequency offset estimated at that particular moment to the known data place detector and frequency offset decider . The known data place detector and frequency offset decider stores the output of the partial correlators corresponding to each sampling phase during a data group cycle or a pre decided cycle. Thereafter the known data place detector and frequency offset decider decides a position or place corresponding to the highest correlation value among the stored values as the place or position for receiving the known data. Simultaneously the known data place detector and frequency offset decider finally decides the estimation value of the frequency offset estimated at the moment corresponding to the highest correlation value as the coarse frequency offset value of the receiving system. At this point the known sequence position indicator is inputted to the known data extractor the timing recovery unit the carrier recovery unit the phase compensator and the equalizer and the coarse frequency offset is inputted to the adder and the NCO .

In the meantime while the N numbers of partial correlators to N detect the known data place or known sequence position and estimate the coarse frequency offset the buffer temporarily stores the received data and outputs the temporarily stored data to the known data extractor . The known data extractor uses the known sequence position indicator which is outputted from the known data place detector and frequency offset decider so as to extract the known data from the output of the buffer . Thereafter the known data extractor outputs the extracted data to the multiplier . The NCO generates a complex signal corresponding to the coarse frequency offset being outputted from the known data place detector and frequency offset decider . Then the NCO outputs the generated complex signal to the multiplier .

The multiplier multiplies the complex signal of the NCO to the known data being outputted from the known data extractor thereby outputting the known data having the coarse frequency offset compensated to the frequency offset estimator . The frequency offset estimator estimates a fine frequency offset from the known data having the coarse frequency offset compensated. Subsequently the frequency offset estimator outputs the estimated fine frequency offset to the adder . The adder adds the coarse frequency offset to the fine frequency offset. Thereafter the adder decides the added result as a final initial frequency offset which is then outputted to the adder of the carrier recovery unit included in the demodulator . More specifically during the process of acquiring initial synchronization the present invention may estimate and use the coarse frequency offset as well as the fine frequency offset thereby enhancing the estimation performance of the initial frequency offset.

It is assumed that the known data is inserted within the data group and then transmitted as shown in . Then the known sequence detector and initial frequency offset estimator may use the known data that have been additionally inserted between the A1 area and the A2 area so as to estimate the initial frequency offset. The known position indicator which was periodically inserted within the A area estimated by the known sequence detector and initial frequency offset estimator is inputted to the timing error detector of the timing error recovery unit to the frequency offset estimator of the carrier recovery unit to the frequency offset estimator of the phase compensator and to the equalizer .

The first phase and size detector includes an L symbol buffer a multiplier an accumulator and a squarer . Herein the first phase and size detector calculates the correlation value of the known data having a first L symbol length among the K number of sections. Also the second phase and size detector includes an L symbol delay an L symbol buffer a multiplier an accumulator and a squarer . Herein the second phase and size detector calculates the correlation value of the known data having a second L symbol length among the K number of sections. Finally the Nphase and size detector K includes a K 1 L symbol delay K 1 an L symbol buffer K 2 a multiplier K 3 an accumulator K 4 and a squarer K 5. Herein the Nphase and size detector K calculates the correlation value of the known data having an NL symbol length among the K number of sections.

Referring to P P . . . Peach being multiplied with the received signal in the multiplier represents the known data known by both the transmitting system and the receiving system i.e. the reference known data generated from the receiving system . And represents a complex conjugate. For example in the first phase and size detector the signal outputted from the 1 N decimator of the first partial correlator shown in is temporarily stored in the L symbol buffer of the first phase and size detector and then inputted to the multiplier . The multiplier multiplies the output of the L symbol buffer with the complex conjugate of the known data parts P P . . . P each having a first L symbol length among the known K number of sections. Then the multiplied result is outputted to the accumulator . During the L symbol period the accumulator accumulates the output of the multiplier and then outputs the accumulated value to the squarer and the coarse frequency offset estimator . The output of the accumulator is a correlation value having a phase and a size. Accordingly the squarer calculates an absolute value of the output of the multiplier and squares the calculated absolute value thereby obtaining the size of the correlation value. The obtained size is then inputted to the adder .

The adder adds the output of the squares corresponding to each size and phase detector to K. Then the adder outputs the added result to the known data place detector and frequency offset decider . Also the coarse frequency offset estimator receives the output of the accumulator corresponding to each size and phase detector to K so as to estimate the coarse frequency offset at each corresponding sampling phase. Thereafter the coarse frequency offset estimator outputs the estimated offset value to the known data place detector and frequency offset decider .

When the K number of inputs that are outputted from the accumulator of each phase and size detector to K are each referred to as Z Z . . . Z the output of the coarse frequency offset estimator may be obtained by using Math figure 7 shown below.

The known data place detector and frequency offset decider stores the output of the partial correlator corresponding to each sampling phase during an enhanced data group cycle or a pre decided cycle. Then among the stored correlation values the known data place detector and frequency offset decider decides the place or position corresponding to the highest correlation value as the place for receiving the known data.

Furthermore the known data place detector and frequency offset decider decides the estimated value of the frequency offset taken or estimated at the point of the highest correlation value as the coarse frequency offset value of the receiving system. For example if the output of the partial correlator corresponding to the second partial correlator is the highest value the place corresponding to the highest value is decided as the known data place. Thereafter the coarse frequency offset estimated by the second partial correlator is decided as the final coarse frequency offset which is then outputted to the demodulator .

Meanwhile the output of the second multiplier is temporarily stored in the decimator and the buffer both included in the timing recovery unit . Subsequently the temporarily stored output data are inputted to the timing error detector through the decimator and the buffer . Assuming that the output of the second multiplier is oversampled to N times its initial state the decimator decimates the output of the second multiplier at a decimation rate of 1 N. Then the 1 N decimated data are inputted to the buffer . In other words the decimator performs decimation on the input signal in accordance with a VSB symbol cycle. Furthermore the decimator may also receive the output of the matched filter instead of the output of the second multiplier .

The timing error detector uses the data prior to or after being processed with matched filtering and the known sequence position indicator outputted from the known data detector and initial frequency offset estimator in order to detect a timing error. Thereafter the detected timing error is outputted to the loop filter . Accordingly the detected timing error information is obtained once during each repetition cycle of the known data sequence.

For example if a known data sequence having the same pattern is periodically inserted and transmitted as shown in the timing error detector may use the known data in order to detect the timing error. There exists a plurality of methods for detecting timing error by using the known data.

In the example of the present invention the timing error may be detected by using a correlation characteristic between the known data and the received data in the time domain the known data being already known in accordance with a pre arranged agreement between the transmitting system and the receiving system. The timing error may also be detected by using the correlation characteristic of the two known data types being received in the frequency domain. Thus the detected timing error is outputted. In another example a spectral lining method may be applied in order to detect the timing error. Herein the spectral lining method corresponds to a method of detecting timing error by using sidebands of the spectrum included in the received signal.

The loop filter filters the timing error detected by the timing error detector and then outputs the filtered timing error to the holder .

The holder holds or maintains the timing error filtered and outputted from the loop filter during a pre determined known data sequence cycle period and outputs the processed timing error to the NCO . Herein the order of positioning of the loop filter and the holder may be switched with one another. In additionally the function of the holder may be included in the loop filter and accordingly the holder may be omitted.

The NCO accumulates the timing error outputted from the holder . Thereafter the NCO outputs the phase element i.e. a sampling clock of the accumulated timing error to the resampler thereby adjusting the sampling timing of the resampler .

This disclosure describes two ways of detecting a timing error. One way is to detect a timing error using correlation in the time domain between known data pre known to a transmitting system and a receiving system reference known data and the known data actually received by the receiving system and the other way is to detect a timing error using correlation in the frequency domain between two known data actually received by the receiving system. In a timing error is detected by calculating correlation between the reference known data pre known to and generated by the receiving system and the known data actually received. In correlation between an entire portion of the reference know data sequence and an entire portion of the received known data sequence is calculated. The correlation output has a peak value at the end of each known data sequence actually received.

In a timing error is detected by calculating correlation values between divided portions of the reference known data sequence and divided portions of the received known data sequence respectively. The correlation output has a peak value at the end of each divided portion of the received known data sequence. The correlation values may be added as a total correlation value as shown and the total correlation value can be used to calculate the timing error. When an entire portion of the received known data is used for correlation calculation the timing error can be obtained for each data block. If the correlation level of the entire portion of the known data sequence is low a more precise correlation can be obtained by using divided portions of the known data sequence as shown in .

The use of a final correlation value which is obtained based upon a plurality of correlation values of divided portions of a received known data sequence may reduce the carrier frequency error. In addition the process time for the timing recovery can be greatly reduced when the plurality of correlation values are used to calculate the timing error. For example when the reference known data sequence which is pre known to the transmitting system and receiving system is divided into K portions K correlation values between the K portions of the reference known data sequence and the corresponding divided portions of the received known data sequence can be calculated or any combination s of the correlation values can be used. Therefore the period of the timing error detection can be reduced when the divided portions of the known data sequence are used instead of the entire portion of the sequence.

The timing error can be calculated from the peak value of the correlation values. The timing error is obtained for each data block if an entire portion of the known data sequence is used as shown in . On the other hand if K divided portions of the known data sequence are used for correlation calculation K correlation values and corresponding peak values can be obtained. This indicates that the timing error can be detected K times.

A method of detecting a timing error using the correlation between the reference known data and the received known data shown will now be described in more detail. illustrates correlation values between the reference known data and the received known data. The correlation values correspond to data samples sampled at a rate two times greater than the symbol clock. When the random data effect is minimized and there is no timing clock error the correlation values between the reference known data and the received known data are symmetrical. However if a timing phase error exists the correlation values adjacent to the peak value are not symmetrical as shown in . Therefore the timing error can be obtained by using a difference timing phase error shown in between the correlation values before and after the peak value.

The arrangement of the correlator the down sampler the absolute value calculator and the delay and the subtractor shown in can be modified. For example the timing phase error can be calculated in the order of the down sampler the correlator and the absolute value calculator or in the order of the correlator the absolute value calculator and the down sampler .

The timing error can also be obtained using the frequency characteristic of the known data. When there is a timing frequency error a phase of the input signal increases at a fixed slope as the frequency of the signal increases and this slope is different for current and next data block. Therefore the timing error can be calculated based on the frequency characteristic of two different known data blocks. In a current known data sequence right and a previous known data sequence left are converted into first and second frequency domain signals respectively using a Fast Fourier Transform FFT algorithm. The conjugate value of the first frequency domain signal is then multiplied with the second frequency domain signal in order to obtain the correlation value between two frequency domain signals. In other words the correlation between the frequency value of the previous known data sequence and the frequency value of the current known data sequence is used to detect a phase change between the known data blocks for each frequency. In this way the phase distortion of a channel can be eliminated.

The frequency response of a complex VSB signal does not have a full symmetric distribution as shown in . Rather its distribution is a left or right half of the distribution and the frequency domain correlation values also have a half distribution. In order to the phase difference between the frequency domain correlation values the frequency domain having the correlation values can be divided into two sub areas and a phase of a combined correlation value in each sub area can be obtained. Thereafter the difference between the phases of sub areas can be used to calculate a timing frequency error. When a phase of a combined correlation values is used for each frequency the magnitude of each correlation value is proportional to reliability and a phase component of each correlation value is reflected to the final phase component in proportion to the magnitude.

Since the complex VSB data exist only on a half of the frequency domain the accumulator divides a data region in the known data block into two sub regions and accumulates correlation values for each sub region. The phase detector detects a phase of the accumulated correlation value for each sub region. The second delay delays the detected phase for a time corresponding to a 1 4 data block. The subtractor obtains a phase difference between the delayed phase and the phase outputted from the accumulator and outputs the phase difference as a timing frequency error.

In the method of calculating a timing error by using a peak of correlation between the reference known data and the received known data in the time domain the contribution of the correlation values may affect a channel when the channel is a multi path channel. However this can be greatly eliminated if the timing error is obtained using the correlation between two received known data. In addition the timing error can be detected using an entire portion of the known data sequence inserted by the transmitting system or it can be detected using a portion of the known data sequence which is robust to random or noise data.

Meanwhile the DC remover removes pilot tone signal i.e. DC signal which has been inserted by the transmitting system from the matched filtered signal. Thereafter the DC remover outputs the processed signal to the phase compensator .

More specifically the in phase signal matched filtered by the matched filter is inputted to the R sample buffer of the first DC estimator and remover within the DC remover and is then stored. The R sample buffer is a buffer having the length of R sample. Herein the output of the R sample buffer is inputted to the DC estimator and the C sample delay . The DC estimator uses the data having the length of R sample which are outputted from the buffer so as to estimate the DC value by using Math shown below.

In the above described Math figure 8 x n represents the inputted sample data stored in the buffer . And y n indicates the DC estimation value. More specifically the DC estimator accumulates R number of sample data stored in the buffer and estimates the DC value by dividing the accumulated value by R. At this point the stored input sample data set is shifted as much as M sample. Herein the DC estimation value is outputted once every M samples.

As described above since the output of the DC estimator is outputted after each cycle of M samples the M sample holder holds the DC value estimated from the DC estimator for a period of M samples. Then the estimated DC value is outputted to the subtractor . Also the C sample delay delays the input sample data stored in the buffer by C samples which are then outputted to the subtractor . The subtractor subtracts the output of the M sample holder from the output of the C sample delay . Thereafter the subtractor outputs the signal having the in phase DC removed.

Herein the C sample delay decides which portion of the input sample data is to be compensated with the output of the DC estimator . More specifically the DC estimator and remover may be divided into a DC estimator for estimating the DC and the subtractor for compensating the input sample data within the estimated DC value. At this point the C sample delay decides which portion of the input sample data is to be compensated with the estimated DC value. For example when C is equal to 0 i.e. C 0 the beginning of the R samples is compensated with the estimated DC value obtained by using R samples. Alternatively when C is equal to R i.e. C R the end of the R samples is compensated with the estimated DC value obtained by using R samples. Similarly the data having the DC removed are inputted to the buffer and the frequency offset estimator of the phase compensator .

Meanwhile illustrates a detailed block diagram of a DC remover according to another embodiment of the present invention. Herein identical signal processing processes are performed on each of a real number element or in phase I and an imaginary number element or a quadrature Q of the inputted complex signal thereby estimating and removing the DC value of each element. In order to do so the DC remover shown in includes a first DC estimator and remover and a second DC estimator and remover . corresponds to an infinite impulse response IIR structure.

Herein the first DC estimator and remover includes a multiplier an adder an 1 sample delay a multiplier a C sample delay and a subtractor . Also the second DC estimator and remover includes a multiplier an adder an 1 sample delay a multiplier a C sample delay and a subtractor . In the present invention the first DC estimator and remover and the second DC estimator and remover may receive different input signals. However each DC estimator and remover and has the same structure. Therefore a detailed description of the first DC estimator and remover will be presented herein and the second DC estimator and remover will be omitted for simplicity.

More specifically the in phase signal matched filtered by the matched filter is inputted to the multiplier and the C sample delay of the first DC estimator and remover within the DC remover . The multiplier multiplies a pre determined constant to the in phase signal that is being inputted. Then the multiplier outputs the multiplied result to the adder . The adder adds the output of the multiplier to the output of the multiplier that is being fed back. Thereafter the adder outputs the added result to the 1 sample delay and the subtractor . More specifically the output of the adder corresponds to the estimated in phase DC value.

The 1 sample delay delays the estimated DC value by 1 sample and outputs the DC value delayed by 1 sample to the multiplier . The multiplier multiplies a pre determined constant 1 to the DC value delayed by 1 sample. Then the multiplier feeds back the multiplied result to the adder .

Subsequently the C sample delay delays the in phase sample data by C samples and then outputs the delayed in phase sample data to the subtractor . The subtractor subtracts the output of the adder from the output of the C sample delay thereby outputting the signal having the in phase DC removed therefrom.

Similarly the data having the DC removed are inputted to the buffer and the frequency offset estimator of the phase compensator of .

The frequency offset estimator uses the known sequence position indicator outputted from the known sequence detector and initial frequency offset estimator in order to estimate the frequency offset from the known data sequence that is being inputted the known data sequence having the DC removed by the DC remover . Then the frequency offset estimator outputs the estimated frequency offset to the holder . Similarly the frequency offset estimation value is obtained at each repetition cycle of the known data sequence.

Therefore the holder holds the frequency offset estimation value during a cycle period of the known data sequence and then outputs the frequency offset estimation value to the NCO . The NCO generates a complex signal corresponding to the frequency offset held by the holder and outputs the generated complex signal to the multiplier .

The multiplier multiplies the complex signal outputted from the NCO to the data being delayed by a set period of time in the buffer thereby compensating the phase change included in the delayed data. The data having the phase change compensated by the multiplier pass through the decimator so as to be inputted to the equalizer . At this point since the frequency offset estimated by the frequency offset estimator of the phase compensator does not pass through the loop filter the estimated frequency offset indicates the phase difference between the known data sequences. In other words the estimated frequency offset indicates a phase offset.

The demodulated data using the known data in the demodulator is inputted to the channel equalizer . The demodulated data is inputted to the known sequence detector .

The equalizer may perform channel equalization by using a plurality of methods. An example of estimating a channel impulse response CIR so as to perform channel equalization will be given in the description of the present invention. Most particularly an example of estimating the CIR in accordance with each region within the data group which is hierarchically divided and transmitted from the transmitting system and applying each CIR differently will also be described herein. Furthermore by using the known data the place and contents of which is known in accordance with an agreement between the transmitting system and the receiving system and or the field synchronization data so as to estimate the CIR the present invention may be able to perform channel equalization with more stability.

Herein the data group that is inputted for the equalization process is divided into regions A to D as shown in . More specifically in the example of the present invention each region A B C and D are further divided into MPH blocks B4 to B7 MPH blocks B3 and B8 MPH blocks B2 and B9 MPH blocks B1 and B10 respectively.

More specifically a data group can be assigned and transmitted a maximum the number of 4 in a VSB frame in the transmitting system. In this case all data group do not include field synchronization data. In the present invention the data group including the field synchronization data performs channel equalization using the field synchronization data and known data. And the data group not including the field synchronization data performs channel equalization using the known data. For example the data of the MPH block B3 including the field synchronization data performs channel equalization using the CIR calculated from the field synchronization data area and the CIR calculated from the first known data area. Also the data of the MPH blocks B1 and B2 performs channel equalization using the CIR calculated from the field synchronization data area and the CIR calculated from the first known data area. Meanwhile the data of the MPH blocks B4 to B6 not including the field synchronization data performs channel equalization using CIRS calculated from the first known data area and the third known data area.

As described above the present invention uses the CIR estimated from the field synchronization data and the known data sequences in order to perform channel equalization on data within the data group. At this point each of the estimated CIRs may be directly used in accordance with the characteristics of each region within the data group. Alternatively a plurality of the estimated CIRs may also be either interpolated or extrapolated so as to create a new CIR which is then used for the channel equalization process.

Herein when a value F Q of a function F x at a particular point Q and a value F S of the function F x at another particular point S are known interpolation refers to estimating a function value of a point within the section between points Q and S. Linear interpolation corresponds to the simplest form among a wide range of interpolation operations. The linear interpolation described herein is merely exemplary among a wide range of possible interpolation methods. And therefore the present invention is not limited only to the examples set forth herein.

Alternatively when a value F Q of a function F x at a particular point Q and a value F S of the function F x at another particular point S are known extrapolation refers to estimating a function value of a point outside of the section between points Q and S. Linear extrapolation is the simplest form among a wide range of extrapolation operations. Similarly the linear extrapolation described herein is merely exemplary among a wide range of possible extrapolation methods. And therefore the present invention is not limited only to the examples set forth herein.

Herein the first frequency domain converter includes an overlap unit overlapping inputted data and a fast fourier transform FFT unit converting the data outputted from the overlap unit to frequency domain data.

The channel estimator includes a CIR estimator a phase compensator a pre CIR cleaner CIR interpolator extrapolator a post CIR cleaner and a zero padding unit.

The second frequency domain converter includes a fast fourier transform FFT unit converting the CIR being outputted from the channel estimator to frequency domain CIR.

The time domain converter includes an IFFT unit converting the data having the distortion compensated by the distortion compensator to time domain data and a save unit extracting only valid data from the data outputted from the IFFT unit .

The remaining carrier phase error remover includes an error compensator removing the remaining carrier phase error included in the channel equalized data and a remaining carrier phase error estimator using the channel equalized data and the decision data of the decision unit so as to estimate the remaining carrier phase error thereby outputting the estimated error to the error compensator . Herein any device performing complex number multiplication may be used as the distortion compensator and the error compensator .

At this point since the received data correspond to data modulated to VSB type data 8 level scattered data exist only in the real number element. Therefore referring to all of the signals used in the noise canceller and the decision unit correspond to real number or in phase signals. However in order to estimate and compensate the remaining carrier phase error and the phase noise both real number in phase element and imaginary number quadrature element are required. Therefore the remaining carrier phase error remover receives and uses the quadrature element as well as the in phase element. Generally prior to performing the channel equalization process the demodulator within the receiving system performs frequency and phase recovery of the carrier. However if a remaining carrier phase error that is not sufficiently compensated is inputted to the channel equalizer the performance of the channel equalizer may be deteriorated. Particularly in a dynamic channel environment the remaining carrier phase error may be larger than in a static channel environment due to the frequent and sudden channel changes. Eventually this acts as an important factor that deteriorates the receiving performance of the present invention.

Furthermore a local oscillator not shown included in the receiving system should preferably include a single frequency element. However the local oscillator actually includes the desired frequency elements as well as other frequency elements. Such unwanted or undesired frequency elements are referred to as phase noise of the local oscillator. Such phase noise also deteriorates the receiving performance of the present invention. It is difficult to compensate such remaining carrier phase error and phase noise from the general channel equalizer. Therefore the present invention may enhance the channel equaling performance by including a carrier recovery loop i.e. a remaining carrier phase error remover in the channel equalizer as shown in in order to remove the remaining carrier phase error and the phase noise.

More specifically the receiving data demodulated in are overlapped by the overlap unit of the first frequency domain converter at a pre determined overlapping ratio which are then outputted to the FFT unit . The FFT unit converts the overlapped time domain data to overlapped frequency domain data through by processing the data with FFT. Then the converted data are outputted to the distortion compensator .

The distortion compensator performs a complex number multiplication on the overlapped frequency domain data outputted from the FFT unit included in the first frequency domain converter and the equalization coefficient calculated from the coefficient calculator thereby compensating the channel distortion of the overlapped data outputted from the FFT unit . Thereafter the compensated data are outputted to the IFFT unit of the time domain converter . The IFFT unit performs IFFT on the overlapped data having the channel distortion compensated thereby converting the overlapped data to time domain data which are then outputted to the error compensator of the remaining carrier phase error remover .

The error compensator multiplies a signal compensating the estimated remaining carrier phase error and phase noise with the valid data extracted from the time domain. Thus the error compensator removes the remaining carrier phase error and phase noise included in the valid data.

The data having the remaining carrier phase error compensated by the error compensator are outputted to the remaining carrier phase error estimator in order to estimate the remaining carrier phase error and phase noise and at the same time outputted to the noise canceller in order to remove or cancel the noise.

The remaining carrier phase error estimator uses the output data of the error compensator and the decision data of the decision unit to estimate the remaining carrier phase error and phase noise. Thereafter the remaining carrier phase error estimator outputs a signal for compensating the estimated remaining carrier phase error and phase noise to the error compensator . In this embodiment of the present invention an inverse number of the estimated remaining carrier phase error and phase noise is outputted as the signal for compensating the remaining carrier phase error and phase noise.

The phase error detector receives the output data of the error compensator and the decision data of the decision unit in order to estimate the remaining carrier phase error and phase noise. Then the phase error detector outputs the estimated remaining carrier phase error and phase noise to the loop filter.

The loop filter then filters the remaining carrier phase error and phase noise thereby outputting the filtered result to the NCO . The NCO generates a cosine corresponding to the filtered remaining carrier phase error and phase noise which is then outputted to the conjugator .

The conjugator calculates the conjugate value of the cosine wave generated by the NCO . Thereafter the calculated conjugate value is outputted to the error compensator . At this point the output data of the conjugator becomes the inverse number of the signal compensating the remaining carrier phase error and phase noise. In other words the output data of the conjugator becomes the inverse number of the remaining carrier phase error and phase noise.

The error compensator performs complex number multiplication on the equalized data outputted from the time domain converter and the signal outputted from the conjugator and compensating the remaining carrier phase error and phase noise thereby removing the remaining carrier phase error and phase noise included in the equalized data. Meanwhile the phase error detector may estimate the remaining carrier phase error and phase noise by using diverse methods and structures. According to this embodiment of the present invention the remaining carrier phase error and phase noise are estimated by using a decision directed method.

If the remaining carrier phase error and phase noise are not included in the channel equalized data the decision directed phase error detector according to the present invention uses the fact that only real number values exist in the correlation values between the channel equalized data and the decision data. More specifically if the remaining carrier phase error and phase noise are not included and when the input data of the phase error detector are referred to as x jx the correlation value between the input data of the phase error detector and the decision data may be obtained by using Math figure 9 shown below Math Figure 9 

At this point there is no correlation between xand x. Therefore the correlation value between xand xis equal to 0. Accordingly if the remaining carrier phase error and phase noise are not included only the real number values exist herein. However if the remaining carrier phase error and phase noise are included the real number element is shown in the imaginary number value and the imaginary number element is shown in the real number value. Thus in this case the imaginary number element is shown in the correlation value. Therefore it can be assumed that the imaginary number portion of the correlation value is in proportion with the remaining carrier phase error and phase noise. Accordingly as shown in Math figure 10 below the imaginary number of the correlation value may be used as the remaining carrier phase error and phase noise. Phase Error imag Phase Error Math Figure 10 

The phase error detector shown in is an example of a plurality of phase error detecting methods. Therefore other types of phase error detectors may be used in the present invention. Therefore the present invention is not limited only to the examples and embodiments presented in the description of the present invention. Furthermore according to another embodiment of the present invention at least 2 phase error detectors are combined so as to detect the remaining carrier phase error and phase noise.

Accordingly the output of the remaining carrier phase error remover having the detected remaining carrier phase error and phase noise removed as described above is configured of an addition of the original or initial signal having the channel equalization the remaining carrier phase error and phase noise and the signal corresponding to a white noise being amplified to a colored noise during the channel equalization.

Therefore the noise canceller receives the output data of the remaining carrier phase error remover and the decision data of the decision unit thereby estimating the colored noise. Then the noise canceller subtracts the estimated colored noise from the data having the remaining carrier phase error and phase noise removed therefrom thereby removing the noise amplified during the equalization process.

In order to do so the noise canceller includes a subtractor and a noise predictor. More specifically the subtractor subtracts the noise predicted by the noise predictor from the output data of the residual carrier phase error estimator . Then the subtractor outputs the signal from which amplified noise is cancelled or removed for data recovery and simultaneously outputs the same signal to the decision unit . The noise predictor calculates a noise element by subtracting the output of the decision unit from the signal having residual carrier phase error removed therefrom by the residual carrier phase error estimator . Thereafter the noise predictor uses the calculated noise element as input data of a filter included in the noise predictor. Also the noise predictor uses the filter not shown in order to predict any color noise element included in the output symbol of the residual carrier phase error estimator . Accordingly the noise predictor outputs the predicted color noise element to the subtractor.

The data having the noise removed or cancelled by the noise canceller are outputted for the data decoding process and at the same time outputted to the decision unit .

The decision unit selects one of a plurality of pre determined decision data sets e.g. 8 decision data sets that is most approximate to the output data of the noise canceller thereby outputting the selected data to the remaining carrier phase error estimator and the noise canceller .

Meanwhile the received data are inputted to the overlap unit of the first frequency domain converter included in the channel equalizer and at the same time inputted to the CIR estimator of the channel estimator .

The CIR estimator uses a training sequence for example data being inputted during the known data section and the known data in order to estimate the CIR thereby outputting the estimated CIR to the phase compensator . If the data to be channel equalizing is the data within the data group including field synchronization data the training sequence using in the CIR estimator may become the field synchronization data and known data. Meanwhile if the data to be channel equalizing is the data within the data group not including field synchronization data the training sequence using in the CIR estimator may become only the known data.

For example the CIR estimator estimates CIR using the known data correspond to reference known data generated during the known data section by the receiving system in accordance with an agreement between the receiving system and the transmitting system. For this the CIR estimator is provided known data position information from the known sequence detector . Also the CIR estimator may be provided field synchronization position information from the known sequence detector .

Furthermore in this embodiment of the present invention the CIR estimator estimates the CIR by using the least square LS method.

The LS estimation method calculates a cross correlation value p between the known data that have passed through the channel during the known data section and the known data that are already known by the receiving end. Then a cross correlation matrix R of the known data is calculated. Subsequently a matrix operation is performed R p so that the cross correlation portion within the cross correlation value p between the received data and the initial known data thereby estimating the CIR of the transmission channel.

The phase compensator compensates the phase change of the estimated CIR. Then the phase compensator outputs the compensated CIR to the linear interpolator . At this point the phase compensator may compensate the phase change of the estimated CIR by using a maximum likelihood method.

More specifically the remaining carrier phase error and phase noise that are included in the demodulated received data and therefore being inputted change the phase of the CIR estimated by the CIR estimator at a cycle period of one known data sequence. At this point if the phase change of the inputted CIR which is to be used for the linear interpolation process is not performed in a linear form due to a high rate of the phase change the channel equalizing performance of the present invention may be deteriorated when the channel is compensated by calculating the equalization coefficient from the CIR which is estimated by a linear interpolation method.

Therefore the present invention removes or cancels the amount of phase change of the CIR estimated by the CIR estimator so that the distortion compensator allows the remaining carrier phase error and phase noise to bypass the distortion compensator without being compensated. Accordingly the remaining carrier phase error and phase noise are compensated by the remaining carrier phase error remover .

For this the present invention removes or cancels the amount of phase change of the CIR estimated by the phase compensator by using a maximum likelihood method.

The basic idea of the maximum likelihood method relates to estimating a phase element mutually or commonly existing in all CIR elements then to multiply the estimated CIR with an inverse number of the mutual or common phase element so that the channel equalizer and most particularly the distortion compensator does not compensate the mutual phase element.

More specifically when the mutual phase element is referred to as the phase of the newly estimated CIR is rotated by as compared to the previously estimated CIR. When the CIR of a point t is referred to as h t the maximum likelihood phase compensation method obtains a phase corresponding to when h t is rotated by the squared value of the difference between the CIR of h t and the CIR of h t 1 i.e. the CIR of a point t 1 becomes a minimum value. Herein when i represents a tap of the estimated CIR and when N represents a number of taps of the CIR being estimated by the CIR estimator the value of is equal to or greater than 0 and equal to or less than N 1. This value may be calculated by using Math figure 11 shown below 

Herein in light of the maximum likelihood method the mutual phase element is equal to the value of when the right side of Math figure 11 being differentiated with respect to is equal to 0. The above described condition is shown in Math figure 12 below 

More specifically Math figure 13 corresponds to the value that is to be estimated by the argument of the correlation value between h t and h t 1 .

The correlation calculator includes a first N symbol buffer an N symbol delay a second N symbol buffer a conjugator and a multiplier . More specifically the first N symbol buffer included in the correlation calculator is capable of storing the data being inputted from the CIR estimator in symbol units to a maximum limit of N number of symbols. The symbol data being temporarily stored in the first N symbol buffer are then inputted to the multiplier included in the correlation calculator and to the multiplier .

At the same time the symbol data being outputted from the CIR estimator are delayed by N symbols from the N symbol delay . Then the delayed symbol data pass through the second N symbol buffer and inputted to the conjugator so as to be conjugated and then inputted to the multiplier .

The multiplier multiplies the output of the first N symbol buffer and the output of the conjugator . Then the multiplier outputs the multiplied result to an accumulator included in the phase change estimator .

More specifically the correlation calculator calculates a correlation between a current CIR h t 1 having the length of N and a previous CIR h t also having the length of N. then the correlation calculator outputs the calculated correlation value to the accumulator of the phase change estimator .

The accumulator accumulates the correlation values outputted from the multiplier during an N symbol period. Then the accumulator outputs the accumulated value to the phase detector . The phase detector then calculates a mutual phase element from the output of the accumulator as shown in the above described Math figure 11. Thereafter the calculated value is outputted to the compensation signal generator .

The compensation signal generator outputs a complex signal ehaving a phase opposite to that of the detected phase as the phase compensation signal to the multiplier . The multiplier multiplies the current CIR h t 1 being outputted from the first N symbol buffer with the phase compensation signal e thereby removing the amount of phase change of the estimated CIR.

The CIR having its phase change compensated as described above passes through a first cleaner or pre CIR cleaner or bypasses the first cleaner thereby being inputted to a CIR calculator or CIR interpolator extrapolator . The CIR interpolator extrapolator either interpolates or extrapolates an estimated CIR which is then outputted to a second cleaner or post CIR cleaner . Herein the estimated CIR corresponds to a CIR having its phase change compensated. The first cleaner may or may not operate depending upon whether the CIR interpolator extrapolator interpolates or extrapolates the estimated CIR. For example if the CIR interpolator extrapolator interpolates the estimated CIR the first cleaner does not operate. Conversely if the CIR interpolator extrapolator extrapolates the estimated CIR the first cleaner operates.

More specifically the CIR estimated from the known data includes a channel element that is to be obtained as well as a jitter element caused by noise. Since such jitter element deteriorates the performance of the equalizer it preferable that a coefficient calculator removes the jitter element before using the estimated CIR. Therefore according to the embodiment of the present invention each of the first and second cleaners and removes a portion of the estimated CIR having a power level lower than the predetermined threshold value i.e. so that the estimated CIR becomes equal to 0 . Herein this removal process will be referred to as a CIR cleaning process.

The CIR interpolator extrapolator performs CIR interpolation by multiplying a CIR estimated from the CIR estimator by a coefficient and by multiplying a CIR having its phase change compensated from the phase compensator or maximum likelihood phase compensator by another coefficient thereby adding the multiplied values. At this point some of the noise elements of the CIR may be added to one another thereby being cancelled. Therefore when the CIR interpolator extrapolator performs CIR interpolation the original or initial CIR having noise elements remaining therein. In other words when the CIR interpolator extrapolator performs CIR interpolation an estimated CIR having its phase change compensated by the phase compensator bypasses the first cleaner and is inputted to the CIR interpolator extrapolator . Subsequently the second cleaner cleans the CIR interpolated by the CIR interpolator extrapolator .

Conversely the CIR interpolator extrapolator performs CIR extrapolation by using a difference value between two CIRs each having its phase change compensated by the phase compensator so as to estimate a CIR positioned outside of the two CIRs. Therefore in this case the noise element is rather amplified. Accordingly when the CIR interpolator extrapolator performs CIR extrapolation the CIR cleaned by the first cleaner is used. More specifically when the CIR interpolator extrapolator performs CIR extrapolation the extrapolated CIR passes through the second cleaner thereby being inputted to the zero padding unit .

Meanwhile when a second frequency domain converter or fast fourier transform FFT converts the CIR which has been cleaned and outputted from the second cleaner to a frequency domain the length and of the inputted CIR and the FFT size may not match or be identical to one another . In other words the CIR length may be smaller than the FFT size. In this case the zero padding unit adds a number of zeros 0 s corresponding to the difference between the FFT size and the CIR length to the inputted CIR thereby outputting the processed CIR to the second frequency domain converter FFT . Herein the zero padded CIR may correspond to one of the interpolated CIR extrapolated CIR and the CIR estimated in the known data section.

The second frequency domain converter performs FFT on the CIR being outputted from the zero padding unit thereby converting the CIR to a frequency domain CIR. Then the second frequency domain converter outputs the converted CIR to the coefficient calculator .

The coefficient calculator uses the frequency domain CIR being outputted from the second frequency domain converter to calculate the equalization coefficient. Then the coefficient calculator outputs the calculated coefficient to the distortion compensator . Herein for example the coefficient calculator calculates a channel equalization coefficient of the frequency domain that can provide minimum mean square error MMSE from the CIR of the frequency domain which is outputted to the distortion compensator .

The distortion compensator performs a complex number multiplication on the overlapped data of the frequency domain being outputted from the FFT unit of the first frequency domain converter and the equalization coefficient calculated by the coefficient calculator thereby compensating the channel distortion of the overlapped data being outputted from the FFT unit .

More specifically as shown in known data that are sufficiently are being periodically transmitted in regions A B i.e. MPH blocks B3 to B8 . Therefore an indirect equalizing method using the CIR may be used herein. However in regions C D i.e. MPH blocks B1 B2 B9 and B10 the known data are neither able to be transmitted at a sufficiently long length nor able to be periodically and equally transmitted. Therefore it is inadequate to estimate the CIR by using the known data. Accordingly in regions C D a direct equalizing method in which an error is obtained from the output of the equalizer so as to update the coefficient.

The examples presented in the embodiments of the present invention shown in include a method of performing indirect channel equalization by using a cyclic prefix on the data of regions A B and a method of performing direct channel equalization by using an overlap save method on the data of regions C D.

Accordingly referring to the frequency domain channel equalizer includes a frequency domain converter a distortion compensator a time domain converter a first coefficient calculating unit a second coefficient calculating unit and a coefficient selector .

The first coefficient calculating unit includes a CIR estimator an average calculator and second FFT unit and a coefficient calculator .

The second coefficient calculating unit includes a decision unit a select unit a subtractor a zero padding unit a third FFT unit a coefficient updater and a delay unit .

Also a multiplexer MUX which selects data that are currently being inputted as the input data depending upon whether the data correspond to regions A B or to regions C D may be used as the select unit of the frequency domain converter the select unit of the time domain converter and the coefficient selector .

In the channel equalizer having the above described structure as shown in if the data being inputted correspond to the data of regions A B the select unit of the frequency domain converter selects the input data and not the output data of the overlap unit . In the same case the select unit of the time domain converter selects the output data of the IFFT unit and not the output data of the save unit . The coefficient selector selects the equalization coefficient being outputted from the first coefficient calculating unit .

Conversely if the data being inputted correspond to the data of regions C D the select unit of the frequency domain converter selects the output data of the overlap unit and not the input data. In the same case the select unit of the time domain converter selects the output data of the save unit and not the output data of the IFFT unit . The coefficient selector selects the equalization coefficient being outputted from the second coefficient calculating unit .

More specifically the received data are inputted to the overlap unit and select unit of the frequency domain converter and to the first coefficient calculating unit . If the inputted data correspond to the data of regions A B the select unit selects the received data which are then outputted to the first FFT unit . On the other hand if the inputted data correspond to the data of regions C D the select unit selects the data that are overlapped by the overlap unit and are then outputted to the first FFT unit . The first FFT unit performs FFT on the time domain data that are outputted from the select unit thereby converting the time domain data to frequency domain data. Then the converted data are outputted to the distortion compensator and the delay unit of the second coefficient calculating unit .

The distortion compensator performs complex multiplication on frequency domain data outputted from the first FFT unit and the equalization coefficient outputted from the coefficient selector thereby compensating the channel distortion detected in the data that are being outputted from the first FFT unit .

Thereafter the distortion compensated data are outputted to the IFFT unit of the time domain converter . The IFFT unit of the time domain converter performs IFFT on the channel distortion compensated data thereby converting the compensated data to time domain data. The converted data are then outputted to the save unit and the select unit . If the inputted data correspond to the data of regions A B the select unit selects the output data of the IFFT unit . On the other hand if the inputted data correspond to regions C D the select unit selects the valid data extracted from the save unit . Thereafter the selected data are outputted to be decoded and simultaneously outputted to the second coefficient calculating unit .

The CIR estimator of the first coefficient calculating unit uses the data being received during the known data section and the known data of the known data section the known data being already known by the receiving system in accordance with an agreement between the receiving system and the transmitting system in order to estimate the CIR. Subsequently the estimated CIR is outputted to the average calculator . The average calculator calculates an average value of the CIRs that are being inputted consecutively. Then the calculated average value is outputted to the second FFT unit . For example referring to the average value of the CIR value estimated at point T and the CIR value estimated at point T is used for the channel equalization process of the general data existing between point T and point T. Accordingly the calculated average value is outputted to the second FFT unit .

The second FFT unit performs FFT on the CIR of the time domain that is being inputted so as to convert the inputted CIR to a frequency domain CIR. Thereafter the converted frequency domain CIR is outputted to the coefficient calculator . The coefficient calculator calculates a frequency domain equalization coefficient that satisfies the condition of using the CIR of the frequency domain so as to minimize the mean square error. The calculated equalizer coefficient of the frequency domain is then outputted to the coefficient calculator .

The decision unit of the second coefficient calculating unit selects one of a plurality of decision values e.g. 8 decision values that is most approximate to the equalized data and outputs the selected decision value to the select unit . Herein a multiplexer may be used as the select unit . In a general data section the select unit selects the decision value of the decision unit . Alternatively in a known data section the select unit selects the known data and outputs the selected known data to the subtractor . The subtractor subtracts the output of the select unit included in the time domain converter from the output of the select unit so as to calculate or obtain an error value. Thereafter the calculated error value is outputted to the zero padding unit .

The zero padding unit adds or inserts the same amount of zeros 0 corresponding to the overlapped amount of the received data in the inputted error. Then the error extended with zeros 0 is outputted to the third FFT unit . The third FFT unit converts the error of the time domain having zeros 0 added or inserted therein to the error of the frequency domain. Thereafter the converted error is outputted to the coefficient update unit . The coefficient update unit uses the received data of the frequency domain that have been delayed by the delay unit and the error of the frequency domain so as to update the previous equalization coefficient. Thereafter the updated equalization coefficient is outputted to the coefficient selector .

At this point the updated equalization coefficient is stored so as that it can be used as a previous equalization coefficient in a later process. If the input data correspond to the data of regions A B the coefficient selector selects the equalization coefficient calculated from the first coefficient calculating unit . On the other hand if the input data correspond to the data of regions C D the coefficient selector selects the equalization coefficient updated by the second coefficient calculating unit . Thereafter the selected equalization coefficient is outputted to the distortion compensator .

Accordingly referring to the frequency domain channel equalizer includes a frequency domain converter a distortion compensator a time domain converter a first coefficient calculating unit a second coefficient calculating unit and a coefficient selector .

The first coefficient calculating unit includes a CIR estimator an interpolator a second FFT unit and a coefficient calculator .

The second coefficient calculating unit includes a decision unit a select unit a subtractor a zero padding unit a third FFT unit a coefficient updater and a delay unit .

Also a multiplexer MUX which selects data that are currently being inputted as the input data depending upon whether the data correspond to regions A B or to regions C D may be used as the coefficient selector . More specifically if the input data correspond to the data of regions A B the coefficient selector selects the equalization coefficient calculated from the first coefficient calculating unit . On the other hand if the input data correspond to the data of regions C D the coefficient selector selects the equalization coefficient updated by the second coefficient calculating unit .

In the channel equalizer having the above described structure as shown in the received data are inputted to the overlap unit of the frequency domain converter and to the first coefficient calculating unit . The overlap unit overlaps the input data to a pre determined overlapping ratio and outputs the overlapped data to the first FFT unit . The first FFT unit performs FFT on the overlapped time domain data thereby converting the overlapped time domain data to overlapped frequency domain data. Then the converted data are outputted to the distortion compensator and the delay unit of the second coefficient calculating unit .

The distortion compensator performs complex multiplication on the overlapped frequency domain data outputted from the first FFT unit and the equalization coefficient outputted from the coefficient selector thereby compensating the channel distortion detected in the overlapped data that are being outputted from the first FFT unit . Thereafter the distortion compensated data are outputted to the IFFT unit of the time domain converter . The IFFT unit of the time domain converter performs IFFT on the distortion compensated data thereby converting the compensated data to overlapped time domain data. The converted overlapped data are then outputted to the save unit . The save unit extracts only the valid data from the overlapped time domain data which are then outputted for data decoding and at the same time outputted to the second coefficient calculating unit in order to update the coefficient.

The CIR estimator of the first coefficient calculating unit uses the data received during the known data section and the known data in order to estimate the CIR. Subsequently the estimated CIR is outputted to the interpolator . The interpolator uses the inputted CIR to estimate the CIRs i.e. CIRs of the region that does not include the known data corresponding to the points located between the estimated CIRs according to a predetermined interpolation method. Thereafter the estimated result is outputted to the second FFT unit . The second FFT unit performs FFT on the inputted CIR so as to convert the inputted CIR to a frequency domain CIR. Thereafter the converted frequency domain CIR is outputted to the coefficient calculator . The coefficient calculator calculates a frequency domain equalization coefficient that satisfies the condition of using the CIR of the frequency domain so as to minimize the mean square error. The calculated equalizer coefficient of the frequency domain is then outputted to the coefficient calculator .

The structure and operations of the second coefficient calculating unit is identical to those of the second coefficient calculating unit shown in . Therefore the description of the same will be omitted for simplicity.

If the input data correspond to the data of regions A B the coefficient selector selects the equalization coefficient calculated from the first coefficient calculating unit . On the other hand if the input data correspond to the data of regions C D the coefficient selector selects the equalization coefficient updated by the second coefficient calculating unit . Thereafter the selected equalization coefficient is outputted to the distortion compensator .

Referring to the channel equalizer includes an overlap unit a first fast fourier transform FFT unit a distortion compensator an inverse fast fourier transform IFFT unit a save unit a first CIR estimator a CIR interpolator a decision unit a second CIR estimator a selection unit a second FFT unit and a coefficient calculator . Herein any device performed complex number multiplication may be used as the distortion compensator . In the channel equalizer having the above described structure as shown in the overlap unit overlaps the data being inputted to the channel equalizer to a predetermined overlapping ratio and then outputs the overlapped data to the first FFT unit . The first FFT unit converts or transforms the overlapped data of the time domain to overlapped data of the frequency domain by using fast fourier transform FFT . Then the converted data are outputted to the distortion compensator .

The distortion converter performs complex multiplication on the equalization coefficient calculated from the coefficient calculator and the overlapped data of the frequency domain thereby compensating the channel distortion of the overlapped data being outputted from the first FFT unit . Thereafter the distortion compensated data are outputted to the IFFT unit . The IFFT unit performs inverse fast fourier transform IFFT on the distortion compensated overlapped data so as to convert the corresponding data back to data i.e. overlapped data of the time domain. Subsequently the converted data are outputted to the save unit . The save unit extracts only the valid data from the overlapped data of the time domain. Then the save unit outputs the extracted valid data for a data decoding process and at the same time outputs the extracted valid data to the decision unit for a channel estimation process.

The decision unit selects one of a plurality of decision values e.g. 8 decision values that is most approximate to the equalized data and outputs the selected decision value to the select unit . Herein a multiplexer may be used as the select unit . In a general data section the select unit selects the decision value of the decision unit . Alternatively in a known data section the select unit selects the known data and outputs the selected known data to the second CIR estimator .

Meanwhile the first CIR estimator uses the data that are being inputted in the known data section and the known data so as to estimate the CIR.

Thereafter the first CIR estimator outputs the estimated CIR to the CIR interpolator . Herein the known data correspond to reference known data created during the known data section by the receiving system in accordance to an agreement between the transmitting system and the receiving system. At this point according to an embodiment of the present invention the first CIR estimator uses the LS method to estimate the CIR. The LS estimation method calculates a cross correlation value p between the known data that have passed through the channel during the known data section and the known data that are already known by the receiving end. Then a cross correlation matrix R of the known data is calculated. Subsequently a matrix operation is performed on R P so that the cross correlation portion within the cross correlation value p between the received data and the initial known data thereby estimating the CIR of the transmission channel.

The CIR interpolator receives the CIR from the first CIR estimator . And in the section between two sets of known data the CIR is interpolated in accordance with a pre determined interpolation method. Then the interpolated CIR is outputted. At this point the pre determined interpolation method corresponds to a method of estimating a particular set of data at an unknown point by using a set of data known by a particular function. For example such method includes a linear interpolation method. The linear interpolation method is only one of the most simple interpolation methods. A variety of other interpolation methods may be used instead of the above described linear interpolation method. It is apparent that the present invention is not limited only to the example set forth in the description of the present invention. More specifically the CIR interpolator uses the CIR that is being inputted in order to estimate the CIR of the section that does not include any known data by using the pre determined interpolation method. Thereafter the estimated CIR is outputted to the select unit .

The second CIR estimator uses the input data of the channel equalizer and the output data of the select unit in order to estimate the CIR. Then the second CIR estimator outputs the estimated CIR to the select unit . At this point according to an embodiment of the present invention the CIR is estimated by using the LMS method. The LMS estimation method will be described in detail in a later process.

In regions A B i.e. MPH blocks B3 to B8 the select unit selects the CIR outputted from the CIR interpolator . And in regions C D i.e. MPH blocks B1 B2 B9 and B10 the select unit selects the CIR outputted from the second CIR estimator . Thereafter the select unit outputs the selected CIR to the second FFT unit .

The second FFT unit converts the CIR that is being inputted to a CIR of the frequency domain which is then outputted to the coefficient calculator . The coefficient calculator uses the CIR of the frequency domain that is being inputted so as to calculate the equalization coefficient and to output the calculated equalization coefficient to the distortion compensator . At this point the coefficient calculator calculates a channel equalization coefficient of the frequency domain that can provide minimum mean square error MMSE from the CIR of the frequency domain. At this point the second CIR estimator may use the CIR estimated in regions A B as the CIR at the beginning of regions C D. For example the CIR value of MPH block B8 may be used as the CIR value at the beginning of the MPH block B9. Accordingly the convergence speed of regions C D may be reduced.

The basic principle of estimating the CIR by using the LMS method in the second CIR estimator corresponds to receiving the output of an unknown transmission channel and to updating or renewing the coefficient of an adaptive filter not shown so that the difference value between the output value of the unknown channel and the output value of the adaptive filter is minimized. More specifically the coefficient value of the adaptive filter is renewed so that the input data of the channel equalizer is equal to the output value of the adaptive filter not shown included in the second CIR estimator . Thereafter the filter coefficient is outputted as the CIR after each FFT cycle.

Referring to the second CIR estimator includes a delay unit T a multiplier and a coefficient renewal unit for each tab. Herein the delay unit T sequentially delays the output data circumflex over x n of the select unit . The multiplier multiplies respective output data outputted from each delay unit T with error data e n . The coefficient renewal unit renews the coefficient by using the output corresponding to each multiplier. Herein the multipliers that are being provided as many as the number of tabs will be referred to as a first multiplying unit for simplicity. Furthermore the second CIR estimator further includes a plurality of multipliers each multiplying the output data of the select unit and the output data of the delay unit T wherein the output data of the last delay unit are excluded with the output data corresponding to each respective coefficient renewal unit. These multipliers are also provided as many as the number of tabs. This group of multipliers will be referred to as a second multiplying unit for simplicity.

The second CIR estimator further includes an adder and a subtractor. Herein the adder adds all of the data outputted from each multipliers included in the second multiplier unit. Then the added value is outputted as the estimation value n of the data inputted to the channel equalizer. The subtractor calculates the difference between the output data n of the adder and the input data n of the channel equalizer. Thereafter the calculated difference value is outputted as the error data e n . Referring to in a general data section the decision value of the equalized data is inputted to the first delay unit included in the second CIR estimator and to the first multiplier included in the second multiplier. In the known data section the known data are inputted to the first delay unit included in the second CIR estimator and to the first multiplier included in the second multiplier unit. The input data circumflex over x n are sequentially delayed by passing through a number of serially connected delay units T the number corresponding to the number of tabs. The output data of each delay unit T and the error data e n are multiplied by each corresponding multiplier included in the first multiplier unit. Thereafter the coefficients are renewed by each respective coefficient renewal unit.

Each coefficient that is renewed by the corresponding coefficient renewal unit is multiplied with the input data the output data circumflex over x n and also with the output data of each delay unit T with the exception of the last delay. Thereafter the multiplied value is inputted to the adder. The adder then adds all of the output data outputted from the second multiplier unit and outputs the added value to the subtractor as the estimation value n of the input data of the channel equalizer. The subtractor calculates a difference value between the estimation value n and the input data y n of the channel equalizer. The difference value is then outputted to each multiplier of the first multiplier unit as the error data e n . At this point the error data e n is outputted to each multiplier of the first multiplier unit by passing through each respective delay unit T. As described above the coefficient of the adaptive filter is continuously renewed. And the output of each coefficient renewal unit is outputted as the CIR of the second CIR estimator after each FFT cycle.

Meanwhile if the data being inputted to the block decoder after being channel equalized by the equalizer correspond to the data having both block encoding and trellis encoding performed thereon i.e. the data within the RS frame the signaling information data etc. by the transmitting system trellis decoding and block decoding processes are performed on the inputted data as inverse processes of the transmitting system. Alternatively if the data being inputted to the block decoder correspond to the data having only trellis encoding performed thereon i.e. the main service data and not the block encoding only the trellis decoding process is performed on the inputted data as the inverse process of the transmitting system.

The trellis decoded and block decoded data by the block decoder are then outputted to the RS frame decoder . More specifically the block decoder removes the known data data used for trellis initialization and signaling information data MPEG header which have been inserted in the data group and the RS parity data which have been added by the RS encoder non systematic RS encoder or non systematic RS encoder of the transmitting system. Then the block decoder outputs the processed data to the RS frame decoder . Herein the removal of the data may be performed before the block decoding process or may be performed during or after the block decoding process.

Meanwhile the data trellis decoded by the block decoder are outputted to the data deinterleaver . At this point the data being trellis decoded by the block decoder and outputted to the data deinterleaver may not only include the main service data but may also include the data within the RS frame and the signaling information. Furthermore the RS parity data that are added by the transmitting system after the pre processor may also be included in the data being outputted to the data deinterleaver .

According to another embodiment of the present invention data that are not processed with block decoding and only processed with trellis encoding by the transmitting system may directly bypass the block decoder so as to be outputted to the data deinterleaver . In this case a trellis decoder should be provided before the data deinterleaver . More specifically if the inputted data correspond to the data having only trellis encoding performed thereon and not block encoding the block decoder performs Viterbi or trellis decoding on the inputted data so as to output a hard decision value or to perform a hard decision on a soft decision value thereby outputting the result.

Meanwhile if the inputted data correspond to the data having both block encoding process and trellis encoding process performed thereon the block decoder outputs a soft decision value with respect to the inputted data.

In other words if the inputted data correspond to data being processed with block encoding by the block processor and being processed with trellis encoding by the trellis encoding module in the transmitting system the block decoder performs a decoding process and a trellis decoding process on the inputted data as inverse processes of the transmitting system. At this point the RS frame encoder of the pre processor included in the transmitting system may be viewed as an outer or external encoder. And the trellis encoder may be viewed as an inner or internal encoder. When decoding such concatenated codes in order to allow the block decoder to maximize its performance of decoding externally encoded data the decoder of the internal code should output a soft decision value.

The input buffer temporarily stores the mobile service data symbols being channel equalized and outputted from the equalizer . Herein the mobile service data symbols may include symbols corresponding to the signaling information RS parity data symbols and CRC data symbols added during the encoding process of the RS frame. Thereafter the input buffer repeatedly outputs the stored symbols for M number of times to the trellis decoding unit in a turbo block TDL size required for the turbo decoding process.

The turbo decoding length TDL may also be referred to as a turbo block. Herein a TDL should include at least one SCCCC block size. Therefore as defined in when it is assumed that one MPH block is a 16 segment unit and that a combination of 10 MPH blocks form one SCCC block a TDL should be equal to or larger than the maximum possible combination size. For example when it is assumed that 2 MPH blocks form one SCCC block the TDL may be equal to or larger than 32 segments i.e. 828 32 26496 symbols . Herein M indicates a number of repetitions for turbo decoding pre decided by the feed back controller .

Also M represents a number of repetitions of the turbo decoding process the number being predetermined by the feedback controller .

Additionally among the values of symbols being channel equalized and outputted from the equalizer the input symbol values corresponding to a section having no mobile service data symbols including RS parity data symbols during RS frame encoding and CRC data symbols included therein bypass the input buffer without being stored. More specifically since trellis encoding is performed on input symbol values of a section wherein SCCC block encoding has not been performed the input buffer inputs the inputted symbol values of the corresponding section directly to the trellis encoding module without performing any storage repetition and output processes. The storage repetition and output processes of the input buffer are controlled by the feedback controller . Herein the feedback controller refers to SCCC associated information e.g. SCCC block mode and SCCC outer code mode which are outputted from the signaling information decoding unit in order to control the storage and output processes of the input buffer .

The trellis decoding unit includes a 12 way TCM decoder. Herein the trellis decoding unit performs 12 way trellis decoding as inverse processes of the 12 way trellis encoder.

More specifically the trellis decoding unit receives a number of output symbols of the input buffer and soft decision values of the feedback formatter equivalent to each TDL so as to perform the TCM decoding process.

At this point based upon the control of the feedback controller the soft decision values outputted from the feedback formatter are matched with a number of mobile service data symbol places so as to be in a one to one 1 1 correspondence. Herein the number of mobile service data symbol places is equivalent to the TDL being outputted from the input buffer .

More specifically the mobile service data being outputted from the input buffer are matched with the turbo decoded data being inputted so that each respective data place can correspond with one another. Thereafter the matched data are outputted to the trellis decoding unit . For example if the turbo decoded data correspond to the third symbol within the turbo block the corresponding symbol or data is matched with the third symbol included in the turbo block which is outputted from the input buffer . Subsequently the matched symbol or data is outputted to the trellis decoding unit .

In order to do so while the regressive turbo decoding is in process the feedback controller controls the input buffer so that the input buffer stores the corresponding turbo block data. Also by delaying data or symbols the soft decision value e.g. LLR of the symbol outputted from the symbol interleaver and the symbol of the input buffer corresponding to the same place or position within the block of the output symbol are matched with one another to be in a one to one correspondence. Thereafter the matched symbols are controlled so that they can be inputted to the TCM decoder through the respective path. This process is repeated for a predetermined number of turbo decoding cycle periods. Then the data of the next turbo block are outputted from the input buffer thereby repeating the turbo decoding process.

The output of the trellis decoding unit signifies a degree of reliability of the transmission bits configuring each symbol. For example in the transmitting system since the input data of the trellis encoding module correspond to two bits as one symbol a log likelihood ratio LLR between the likelihood of a bit having the value of 1 and the likelihood of the bit having the value of 0 may be respectively outputted in bit units to the upper bit and the lower bit. Herein the log likelihood ratio corresponds to a log value for the ratio between the likelihood of a bit having the value of 1 and the likelihood of the bit having the value of 0 . Alternatively a LLR for the likelihood of 2 bits i.e. one symbol being equal to 00 01 10 and 11 may be respectively outputted in symbol units to all 4 combinations of bits i.e. 00 01 10 11 . Consequently this becomes the soft decision value that indicates the degree of reliability of the transmission bits configuring each symbol. A maximum a posteriori probability MAP or a soft out Viterbi algorithm SOVA may be used as a decoding algorithm of each TCM decoder within the trellis decoding unit .

The output of the trellis decoding unit is inputted to the symbol byte converter and the outer block extractor .

The symbol byte converter performs a hard decision process of the soft decision value that is trellis decoded and outputted from the trellis decoding unit . Thereafter the symbol byte converter groups 4 symbols into byte units which are then outputted to the data deinterleaver of . More specifically the symbol byte converter performs hard decision in bit units on the soft decision value of the symbol outputted from the trellis decoding unit . Therefore the data processed with hard decision and outputted in bit units from the symbol byte converter not only include main service data but may also include mobile service data known data RS parity data and MPEG headers.

Among the soft decision values of TDL size of the trellis decoding unit the outer block extractor identifies the soft decision values of B size of corresponding to the mobile service data symbols wherein symbols corresponding to signaling information RS parity data symbols that are added during the encoding of the RS frame and CRC data symbols are included and outputs the identified soft decision values to the feedback deformatter .

The feedback deformatter changes the processing order of the soft decision values corresponding to the mobile service data symbols. This is an inverse process of an initial change in the processing order of the mobile service data symbols which are generated during an intermediate step wherein the output symbols outputted from the block processor of the transmitting system are being inputted to the trellis encoding module e.g. when the symbols pass through the group formatter the data deinterleaver the packet formatter and the data interleaver . Thereafter the feedback deformatter performs reordering of the process order of soft decision values corresponding to the mobile service data symbols and then outputs the processed mobile service data symbols to the symbol deinterleaver .

This is because a plurality of blocks exist between the block processor and the trellis encoding module and because due to these blocks the order of the mobile service data symbols being outputted from the block processor and the order of the mobile service data symbols being inputted to the trellis encoding module are not identical to one another. Therefore the feedback deformatter reorders or rearranges the order of the mobile service data symbols being outputted from the outer block extractor so that the order of the mobile service data symbols being inputted to the symbol deinterleaver matches the order of the mobile service data symbols outputted from the block processor of the transmitting system. The reordering process may be embodied as one of software middleware and hardware.

The data deinterleaver performs an inverse process of the data interleaver included in the transmitting system. More specifically the data deinterleaver deinterleaves the inputted data and outputs the deinterleaved data to the packet deformatter . The packet deformatter performs an inverse process of the packet formatter . More specifically among the data that are deinterleaved and outputted from the data deinterleaver the packet deformatter removes the place holder corresponding to the MPEG header which had been inserted to the packet formatter . The output of the packet deformatter is inputted to the data interleaver and the data interleaver interleaves the data being inputted as an inverse process of the data deinterleaver included in the transmitting system. Accordingly data having a data structure as shown in are outputted to the group deformatter .

The data deformatter performs an inverse process of the group formatter included in the transmitting system. More specifically the group formatter removes the place holders corresponding to the main service data known data signaling information data and RS parity data. Then the group formatter outputs only the reordered or rearranged mobile service data symbols to the symbol deinterleaver . According to another embodiment of the present invention when the feedback deformatter is embodied using a memory map the process of inserting and removing place holder to and from data places removed by the outer block extractor may be omitted.

The symbol deinterleaver performs deinterleaving on the mobile service data symbols having their processing orders changed and outputted from the feedback deformatter as an inverse process of the symbol interleaving process of the symbol interleaver included in the transmitting system. The size of the block used by the symbol deinterleaver during the deinterleaving process is identical to interleaving size of an actual symbol i.e. B of the symbol interleaver which is included in the transmitting system. This is because the turbo decoding process is performed between the trellis decoding unit and the symbol decoder . Both the input and output of the symbol deinterleaver correspond to soft decision values and the deinterleaved soft decision values are outputted to the outer symbol mapper .

The operations of the outer symbol mapper may vary depending upon the structure and coding rate of the convolution encoder included in the transmitting system. For example when data are 1 2 rate encoded by the convolution encoder and then transmitted the outer symbol mapper directly outputs the input data without modification. In another example when data are 1 4 rate encoded by the convolution encoder and then transmitted the outer symbol mapper converts the input data so that it can match the input data format of the symbol decoder . For this the outer symbol mapper may be inputted SCCC associated information i.e. SCCC block mode and SCCC outer code mode from the signaling information decoder . Then the outer symbol mapper outputs the converted data to the symbol decoder .

The symbol decoder i.e. the outer decoder receives the data outputted from the outer symbol mapper and performs symbol decoding as an inverse process of the convolution encoder included in the transmitting system. At this point two different soft decision values are outputted from the symbol decoder . One of the outputted soft decision values corresponds to a soft decision value matching the output symbol of the convolution encoder hereinafter referred to as a first decision value . The other one of the outputted soft decision values corresponds to a soft decision value matching the input bit of the convolution encoder hereinafter referred to as a second decision value .

More specifically the first decision value represents a degree of reliability the output symbol i.e. 2 bits of the convolution encoder . Herein the first soft decision value may output in bit units a LLR between the likelihood of 1 bit being equal to 1 and the likelihood of 1 bit being equal to 0 with respect to each of the upper bit and lower bit which configures a symbol. Alternatively the first soft decision value may also output in symbol units a LLR for the likelihood of 2 bits being equal to 00 01 10 and 11 with respect to all possible combinations. The first soft decision value is fed back to the trellis decoding unit through the inner symbol mapper the symbol interleaver and the feedback formatter . On the other hand the second soft decision value indicates a degree of reliability the input bit of the convolution encoder included in the transmitting system. Herein the second soft decision value is represented as the LLR between the likelihood of 1 bit being equal to 1 and the likelihood of 1 bit being equal to 0 . Thereafter the second soft decision value is outputted to the outer buffer . In this case a maximum a posteriori probability MAP or a soft out Viterbi algorithm SOVA may be used as the decoding algorithm of the symbol decoder .

The first soft decision value that is outputted from the symbol decoder is inputted to the inner symbol mapper . The inner symbol mapper converts the first soft decision value to a data format corresponding the input data of the trellis decoding unit . Thereafter the inner symbol mapper outputs the converted soft decision value to the symbol interleaver . The operations of the inner symbol mapper may also vary depending upon the structure and coding rate of the convolution encoder included in the transmitting system.

The symbol interleaver performs symbol interleaving as shown in on the first soft decision value that is outputted from the inner symbol mapper . Then the symbol interleaver outputs the symbol interleaved first soft decision value to the feedback formatter . Herein the output of the symbol interleaver also corresponds to a soft decision value.

With respect to the changed processing order of the soft decision values corresponding to the symbols that are generated during an intermediate step wherein the output symbols outputted from the block processor of the transmitting system are being inputted to the trellis encoding module e.g. when the symbols pass through the group formatter the data deinterleaver the packet formatter the RS encoder and the data interleaver the feedback formatter alters or changes the order of the output values outputted from the symbol interleaver . Subsequently the feedback formatter outputs values to the trellis decoding unit in the changed order. The reordering process of the feedback formatter may configure at least one of software hardware and middleware. For example the feedback formatter may configure to be performed as an inverse process of .

The soft decision values outputted from the symbol interleaver are matched with the positions of mobile service data symbols each having the size of TDL which are outputted from the input buffer so as to be in a one to one correspondence. Thereafter the soft decision values matched with the respective symbol position are inputted to the trellis decoding unit . At this point since the main service data symbols or the RS parity data symbols and known data symbols of the main service data do not correspond to the mobile service data symbols the feedback formatter inserts null data in the corresponding positions thereby outputting the processed data to the trellis decoding unit . Additionally each time the symbols having the size of TDL are turbo decoded no value is fed back by the symbol interleaver starting from the beginning of the first decoding process. Therefore the feedback formatter is controlled by the feedback controller thereby inserting null data into all symbol positions including a mobile service data symbol. Then the processed data are outputted to the trellis decoding unit .

The output buffer receives the second soft decision value from the symbol decoder based upon the control of the feedback controller . Then the output buffer temporarily stores the received second soft decision value. Thereafter the output buffer outputs the second soft decision value to the RS frame decoder . For example the output buffer overwrites the second soft decision value of the symbol decoder until the turbo decoding process is performed for M number of times. Then once all M number of turbo decoding processes is performed for a single TDL the corresponding second soft decision value is outputted to the RS frame decoder .

The feedback controller controls the number of turbo decoding and turbo decoding repetition processes of the overall block decoder shown in . More specifically once the turbo decoding process has been repeated for a predetermined number of times the second soft decision value of the symbol decoder is outputted to the RS frame decoder through the output buffer . Thus the block decoding process of a turbo block is completed. In the description of the present invention this process is referred to as a regressive turbo decoding process for simplicity.

At this point the number of regressive turbo decoding rounds between the trellis decoding unit and the symbol decoder may be defined while taking into account hardware complexity and error correction performance. Accordingly if the number of rounds increases the error correction performance may be enhanced. However this may lead to a disadvantageous of the hardware becoming more complicated or complex .

Meanwhile the data deinterleaver the RS decoder and the data derandomizer correspond to blocks required for receiving the main service data. Therefore the above mentioned blocks may not be necessary or required in the structure of a digital broadcast receiving system for receiving mobile service data only.

The data deinterleaver performs an inverse process of the data interleaver included in the transmitting system. In other words the data deinterleaver deinterleaves the main service data outputted from the block decoder and outputs the deinterleaved main service data to the RS decoder . The data being inputted to the data deinterleaver include main service data as well as mobile service data known data RS parity data and an MPEG header. At this point among the inputted data only the main service data and the RS parity data added to the main service data packet may be outputted to the RS decoder . Also all data outputted after the data derandomizer may all be removed with the exception for the main service data. In the embodiment of the present invention only the main service data and the RS parity data added to the main service data packet are inputted to the RS decoder .

The RS decoder performs a systematic RS decoding process on the deinterleaved data and outputs the processed data to the data derandomizer .

The data derandomizer receives the output of the RS decoder and generates a pseudo random data byte identical to that of the randomizer included in the digital broadcast transmitting system. Thereafter the data derandomizer performs a bitwise exclusive OR XOR operation on the generated pseudo random data byte thereby inserting the MPEG synchronization bytes to the beginning of each packet so as to output the data in 188 byte main service data packet units.

The data outputted from the block decoder are in portion units. More specifically in the transmitting system the RS frame is divided into several portions and the mobile service data of each portion are assigned either to regions A B C D within the data group or to any one of regions A B and regions C D thereby being transmitted to the receiving system. Therefore the RS frame decoder groups several portions included in a parade so as to form an RS frame. Alternatively the RS frame decoder may also group several portions included in a parade so as to form two RS frames. Thereafter error correction decoding is performed in RS frame units.

For example when the RS frame mode value is equal to 00 then one parade transmits one RS frame. At this point one RS frame is divided into several portions and the mobile service data of each portion are assigned to regions A B C D of the corresponding data group thereby being transmitted. In this case the MPH frame decoder extracts mobile service data from regions A B C D of the corresponding data group as shown in a of . Subsequently the MPH frame decoder may perform the process of forming or creating a portion on a plurality of data group within a parade thereby forming several portions. Then the several portions of mobile service data may be grouped to form an RS frame. Herein if stuffing bytes are added to the last portion the RS frame may be formed after removing the stuffing byte.

In another example when the RS frame mode value is equal to 01 then one parade transmits two RS frames i.e. a primary RS frame and a secondary RS frame . At this point a primary RS frame is divided into several primary portions and the mobile service data of each primary portion are assigned to regions A B of the corresponding data group thereby being transmitted. Also a secondary RS frame is divided into several secondary portions and the mobile service data of each secondary portion are assigned to regions C D of the corresponding data group thereby being transmitted.

In this case the MPH frame decoder extracts mobile service data from regions A B of the corresponding data group as shown in b of . Subsequently the MPH frame decoder may perform the process of forming or creating a primary portion on a plurality of data group within a parade thereby forming several primary portions. Then the several primary portions of mobile service data may be grouped to form a primary RS frame. Herein if stuffing bytes are added to the last primary portion the primary RS frame may be formed after removing the stuffing byte. Also the MPH frame decoder extracts mobile service data from regions C D of the corresponding data group. Subsequently the MPH frame decoder may perform the process of forming or creating a secondary portion on a plurality of data group within a parade thereby forming several secondary portions. Then the several secondary portions of mobile service data may be grouped to form a secondary RS frame. Herein if stuffing bytes are added to the last secondary portion the secondary RS frame may be formed after removing the stuffing byte.

More specifically the RS frame decoder receives the RS encoded and or CRC encoded mobile service data of each portion from the block decoder . Then the RS frame decoder groups several portions which are inputted based upon RS frame associated information outputted from the signaling information decoder thereby performing error correction. By referring to the RS frame mode value included in the RS frame associated information the RS frame decoder may form an RS frame and may also be informed of the number of RS code parity data bytes and the code size. Herein the RS code is used to configure or form the RS frame. The RS frame decoder also refers to the RS frame associated information in order to perform an inverse process of the RS frame encoder which is included in the transmitting system thereby correcting the errors within the RS frame. Thereafter the RS frame decoder adds 1 MPEG synchronization data byte to the error correction mobile service data packet. In an earlier process the 1 MPEG synchronization data byte was removed from the mobile service data packet during the RS frame encoding process. Finally the RS frame decoder outputs the processed mobile service data packet to the derandomizer .

It is assumed that in the transmitting system an RS frame having the size of N 2 187 P bytes is divided into M number of portions and that the M number of mobile service data portions are assigned and transmitted to regions A B C D in M number of data groups respectively. In this case in the receiving system each mobile service data portion is grouped as shown in a of thereby forming an RS frame having the size of N 2 187 P bytes. At this point when stuffing bytes S are added to at least one portion included in the corresponding RS frame and then transmitted the stuffing bytes are removed thereby configuring an RS frame and an RS frame reliability map. For example as shown in when S number of stuffing bytes are added to the corresponding portion the S number of stuffing bytes are removed thereby configuring the RS frame and the RS frame reliability map.

Herein when it is assumed that the block decoder outputs a soft decision value for the decoding result the RS frame decoder may decide the 0 and 1 of the corresponding bit by using the codes of the soft decision value. 8 bits that are each decided as described above are grouped to create 1 data byte. If the above described process is performed on all soft decision values of several portions or data groups included in a parade the RS frame having the size of N 2 187 P bytes may be configured.

Additionally the present invention uses the soft decision value not only to configure the RS frame but also to configure a reliability map.

Herein the reliability map indicates the reliability of the corresponding data byte which is configured by grouping 8 bits the 8 bits being decided by the codes of the soft decision value.

For example when the absolute value of the soft decision value exceeds a pre determined threshold value the value of the corresponding bit which is decided by the code of the corresponding soft decision value is determined to be reliable. Conversely when the absolute value of the soft decision value does not exceed the pre determined threshold value the value of the corresponding bit is determined to be unreliable. Thereafter if even a single bit among the 8 bits which are decided by the codes of the soft decision value and group to configure one data byte is determined to be unreliable the corresponding data byte is marked on the reliability map as an unreliable data byte.

Herein determining the reliability of one data byte is only exemplary. More specifically when a plurality of data bytes e.g. at least 4 data bytes are determined to be unreliable the corresponding data bytes may also be marked as unreliable data bytes within the reliability map. Conversely when all of the data bits within the one data byte are determined to be reliable i.e. when the absolute value of the soft decision values of all 8 bits included in the one data byte exceed the predetermined threshold value the corresponding data byte is marked to be a reliable data byte on the reliability map. Similarly when a plurality of data bytes e.g. at least 4 data bytes are determined to be reliable the corresponding data bytes may also be marked as reliable data bytes within the reliability map. The numbers proposed in the above described example are merely exemplary and therefore do not limit the scope or spirit of the present invention.

The process of configuring the RS frame and the process of configuring the reliability map both using the soft decision value may be performed at the same time. Herein the reliability information within the reliability map is in a one to one correspondence with each byte within the RS frame. For example if a RS frame has the size of N 2 187 P bytes the reliability map is also configured to have the size of N 2 187 P bytes. a and b of respectively illustrate the process steps of configuring the reliability map according to the present invention.

At this point the RS frame of b of and the RS frame reliability map of b of are interleaved in super frame units as shown in . Therefore the RS frame and the RS frame reliability maps are grouped to create a super frame and a super frame reliability map. Subsequently as shown in c and c of a de permutation or deinterleaving process is performed in super frame units on the RS frame and the RS frame reliability maps as an inverse process of the transmitting system. Then when the de permutation process is performed in super frame units the processed data are divided into de permuted or deinterleaved RS frames having the size of N 2 187 P bytes and de permuted RS frame reliability maps having the size of N 2 187 P bytes as shown in d and d of . Subsequently the RS frame reliability map is used on the divided RS frames so as to perform error correction.

As shown in a and a of when the RS frame having the size of N 2 187 P bytes and the RS frame reliability map having the size of N 2 187 P bytes are created a CRC syndrome checking process is performed on the created RS frame thereby verifying whether any error has occurred in each row. Subsequently as shown in b of a 2 byte checksum is removed to configure an RS frame having the size of N 187 P bytes. Herein the presence or existence of an error is indicated on an error flag corresponding to each row. Similarly since the portion of the reliability map corresponding to the CRC checksum has hardly any applicability this portion is removed so that only N 187 P number of the reliability information bytes remain as shown in b of .

After performing the CRC syndrome checking process as described above a RS decoding process is performed in a column direction. Herein a RS erasure correction process may be performed in accordance with the number of CRC error flags. More specifically as shown in c of the CRC error flag corresponding to each row within the RS frame is verified. Thereafter the RS frame decoder determines whether the number of rows having a CRC error occurring therein is equal to or smaller than the maximum number of errors on which the RS erasure correction may be performed when performing the RS decoding process in a column direction. The maximum number of errors corresponds to P number of parity bytes inserted when performing the RS encoding process. In the embodiment of the present invention it is assumed that 48 parity bytes have been added to each column i.e. P 48 .

If the number of rows having the CRC errors occurring therein is smaller than or equal to the maximum number of errors i.e. 48 errors according to this embodiment that can be corrected by the RS erasure decoding process a 235 187 RS erasure decoding process is performed in a column direction on the RS frame having 187 P number of N byte rows i.e. 235 N byte rows as shown in d of . Thereafter as shown in e of the 48 byte parity data that have been added at the end of each column are removed. Conversely however if the number of rows having the CRC errors occurring therein is greater than the maximum number of errors i.e. 48 errors that can be corrected by the RS erasure decoding process the RS erasure decoding process cannot be performed. In this case the error may be corrected by performing a general RS decoding process. In addition the reliability map which has been created based upon the soft decision value along with the RS frame may be used to further enhance the error correction ability or performance of the present invention.

More specifically the RS frame decoder compares the absolute value of the soft decision value of the block decoder with the pre determined threshold value so as to determine the reliability of the bit value decided by the code of the corresponding soft decision value. Also 8 bits each being determined by the code of the soft decision value are grouped to form one data byte. Accordingly the reliability information on this one data byte is indicated on the reliability map. Therefore as shown in c of even though a particular row is determined to have an error occurring therein based upon a CRC syndrome checking process on the particular row the present invention does not assume that all bytes included in the row have errors occurring therein. The present invention refers to the reliability information of the reliability map and sets only the bytes that have been determined to be unreliable as erroneous bytes. In other words with disregard to whether or not a CRC error exists within the corresponding row only the bytes that are determined to be unreliable based upon the reliability map are set as erasure points.

According to another method when it is determined that CRC errors are included in the corresponding row based upon the result of the CRC syndrome checking result only the bytes that are determined by the reliability map to be unreliable are set as errors. More specifically only the bytes corresponding to the row that is determined to have errors included therein and being determined to be unreliable based upon the reliability information are set as the erasure points. Thereafter if the number of error points for each column is smaller than or equal to the maximum number of errors i.e. 48 errors that can be corrected by the RS erasure decoding process an RS erasure decoding process is performed on the corresponding column. Conversely if the number of error points for each column is greater than the maximum number of errors i.e. 48 errors that can be corrected by the RS erasure decoding process a general decoding process is performed on the corresponding column.

More specifically if the number of rows having CRC errors included therein is greater than the maximum number of errors i.e. 48 errors that can be corrected by the RS erasure decoding process either an RS erasure decoding process or a general RS decoding process is performed on a column that is decided based upon the reliability information of the reliability map in accordance with the number of erasure points within the corresponding column. For example it is assumed that the number of rows having CRC errors included therein within the RS frame is greater than 48. And it is also assumed that the number of erasure points decided based upon the reliability information of the reliability map is indicated as 40 erasure points in the first column and as 50 erasure points in the second column. In this case a 235 187 RS erasure decoding process is performed on the first column. Alternatively a 235 187 RS decoding process is performed on the second column. When error correction decoding is performed on all column directions within the RS frame by using the above described process the 48 byte parity data which were added at the end of each column are removed as shown in e of .

As described above even though the total number of CRC errors corresponding to each row within the RS frame is greater than the maximum number of errors that can be corrected by the RS erasure decoding process when the number of bytes determined to have a low reliability level based upon the reliability information on the reliability map within a particular column while performing error correction decoding on the particular column. Herein the difference between the general RS decoding process and the RS erasure decoding process is the number of errors that can be corrected. More specifically when performing the general RS decoding process the number of errors corresponding to half of the number of parity bytes i.e. number of parity bytes 2 that are inserted during the RS encoding process may be error corrected e.g. 24 errors may be corrected . Alternatively when performing the RS erasure decoding process the number of errors corresponding to the number of parity bytes that are inserted during the RS encoding process may be error corrected e.g. 48 errors may be corrected .

After performing the error correction decoding process as described above a RS frame configured of 187 N byte rows or packet may be obtained as shown in e of . The RS frame having the size of N 187 bytes is outputted by the order of N number of 187 byte units. At this point 1 MPEG synchronization byte which had been removed by the transmitting system is added to each 187 byte packet as shown in f of . Therefore a 188 byte unit mobile service data packet is outputted.

As described above the RS frame decoded mobile service data is outputted to the data derandomizer . The data derandomizer performs a derandomizing process which corresponds to the inverse process of the randomizer included in the transmitting system on the received mobile service data. Thereafter the derandomized data are outputted thereby obtaining the mobile service data transmitted from the transmitting system. In the present invention the RS frame decoder may perform the data derandomizing function. An MPH frame decoder may be configured of M number of RS frame decoders provided in parallel wherein the number of RS frame encoders is equal to the number of parades M within an MPH frame a multiplexer for multiplexing each portion and being provided to each input end of the M number of RS frame decoders and a demultiplexer for demultiplexing each portion and being provided to each output end of the M number of RS frame decoders.

The tuner tunes a frequency of a specific channel through any one of an antenna cable and satellite. Then the tuner down converts the tuned frequency to an intermediate frequency IF which is then outputted to the demodulating unit . At this point the tuner is controlled by the channel manager . Additionally the result and strength of the broadcast signal of the tuned channel are also reported to the channel manager . The data that are being received by the frequency of the tuned specific channel include main service data mobile service data and table data for decoding the main service data and mobile service data.

According to the embodiment of the present invention audio data and video data for mobile broadcast programs may be applied as the mobile service data. Such audio data and video data are compressed by various types of encoders so as to be transmitted to a broadcasting station. In this case the video decoder and the audio decoder will be provided in the receiving system so as to correspond to each of the encoders used for the compression process. Thereafter the decoding process will be performed by the video decoder and the audio decoder . Then the processed video and audio data will be provided to the users. Examples of the encoding decoding scheme for the audio data may include AC 3 MPEG 2 AUDIO MPEG 4 AUDIO AAC AAC HE AAC AAC SBR MPEG Surround and BSAC. And examples of the encoding decoding scheme for the video data may include MPEG 2 VIDEO MPEG 4 VIDEO H.264 SVC and VC 1.

Depending upon the embodiment of the present invention examples of the mobile service data may include data provided for data service such as Java application data HTML application data XML data and so on. The data provided for such data services may correspond either to a Java class file for the Java application or to a directory file designating positions or locations of such files. Furthermore such data may also correspond to an audio file and or a video file used in each application. The data services may include weather forecast services traffic information services stock information services services providing information quiz programs providing audience participation services real time poll user interactive education programs gaming services services providing information on soap opera or TV series synopsis characters original sound track filing sites services providing information on past sports matches profiles and accomplishments of sports players product information and product ordering services services providing information on broadcast programs by media type airing time subject and so on. The types of data services described above are only exemplary and are not limited only to the examples given herein. Furthermore depending upon the embodiment of the present invention the mobile service data may correspond to meta data. For example the meta data be written in XML format so as to be transmitted through a DSM CC protocol.

The demodulating unit performs VSB demodulation and channel equalization on the signal being outputted from the tuner thereby identifying the main service data and the mobile service data. Thereafter the identified main service data and mobile service data are outputted in TS packet units. An example of the demodulating unit is shown in to . Therefore the structure and operation of the demodulator will be described in detail in a later process. However this is merely exemplary and the scope of the present invention is not limited to the example set forth herein. In the embodiment given as an example of the present invention only the mobile service data packet outputted from the demodulating unit is inputted to the demultiplexer . In this case the main service data packet is inputted to another demultiplexer not shown that processes main service data packets. Herein the storage controller is also connected to the other demultiplexer in order to store the main service data after processing the main service data packets. The demultiplexer of the present invention may also be designed to process both mobile service data packets and main service data packets in a single demultiplexer.

The storage controller is interfaced with the demultiplexer so as to control instant recording reserved or pre programmed recording time shift and so on of the mobile service data and or main service data. For example when one of instant recording reserved or pre programmed recording and time shift is set and programmed in the receiving system or receiver shown in the corresponding mobile service data and or main service data that are inputted to the demultiplexer are stored in the third memory in accordance with the control of the storage controller . The third memory may be described as a temporary storage area and or a permanent storage area. Herein the temporary storage area is used for the time shifting function and the permanent storage area is used for a permanent storage of data according to the user s choice or decision .

When the data stored in the third memory need to be reproduced or played the storage controller reads the corresponding data stored in the third memory and outputs the read data to the corresponding demultiplexer e.g. the mobile service data are outputted to the demultiplexer shown in . At this point according to the embodiment of the present invention since the storage capacity of the third memory is limited the compression encoded mobile service data and or main service data that are being inputted are directly stored in the third memory without any modification for the efficiency of the storage capacity. In this case depending upon the reproduction or reading command the data read from the third memory pass trough the demultiplexer so as to be inputted to the corresponding decoder thereby being restored to the initial state.

The storage controller may control the reproduction or play fast forward rewind slow motion instant replay functions of the data that are already stored in the third memory or presently being buffered. Herein the instant replay function corresponds to repeatedly viewing scenes that the viewer or user wishes to view once again. The instant replay function may be performed on stored data and also on data that are currently being received in real time by associating the instant replay function with the time shift function. If the data being inputted correspond to the analog format for example if the transmission mode is NTSC PAL and so on the storage controller compression encodes the inputted data and stored the compression encoded data to the third memory . In order to do so the storage controller may include an encoder wherein the encoder may be embodied as one of software middleware and hardware. Herein an MPEG encoder may be used as the encoder according to an embodiment of the present invention. The encoder may also be provided outside of the storage controller .

Meanwhile in order to prevent illegal duplication or copies of the input data being stored in the third memory the storage controller scrambles or encrypts the input data and stores the scrambled or encrypted data in the third memory . Accordingly the storage controller may include a scramble algorithm or encryption algorithm for scrambling the data stored in the third memory and a descramble algorithm or decryption algorithm for descrambling or decrypting the data read from the third memory . The scrambling method may include using an arbitrary key e.g. control word to modify a desired set of data and also a method of mixing signals.

Meanwhile the demultiplexer receives the real time data outputted from the demodulating unit or the data read from the third memory and demultiplexes the received data. In the example given in the present invention the demultiplexer performs demultiplexing on the mobile service data packet. Therefore in the present invention the receiving and processing of the mobile service data will be described in detail. However depending upon the many embodiments of the present invention not only the mobile service data but also the main service data may be processed by the demultiplexer the audio decoder the video decoder the native TV application manager the channel manager the channel map the first memory the SI and or data decoder the second memory a system manager the data broadcast application manager the storage controller the third memory and the GPS module . Thereafter the processed data may be used to provide diverse services to the users.

The demultiplexer demultiplexes mobile service data and system information SI tables from the mobile service data packet inputted in accordance with the control of the SI and or data decoder . Thereafter the demultiplexed mobile service data and SI tables are outputted to the SI and or data decoder in a section format. In this case it is preferable that data for the data service are used as the mobile service data that are inputted to the SI and or data decoder . In order to extract the mobile service data from the channel through which mobile service data are transmitted and to decode the extracted mobile service data system information is required. Such system information may also be referred to as service information. The system information may include channel information event information etc. In the embodiment of the present invention the PSI PSIP tables are applied as the system information. However the present invention is not limited to the example set forth herein. More specifically regardless of the name any protocol transmitting system information in a table format may be applied in the present invention.

The PSI table is an MPEG 2 system standard defined for identifying the channels and the programs. The PSIP table is an advanced television systems committee ATSC standard that can identify the channels and the programs. The PSI table may include a program association table PAT a conditional access table CAT a program map table PMT and a network information table NIT . Herein the PAT corresponds to special information that is transmitted by a data packet having a PID of 0 . The PAT transmits PID information of the PMT and PID information of the NIT corresponding to each program. The CAT transmits information on a paid broadcast system used by the transmitting system. The PMT transmits PID information of a transport stream TS packet in which program identification numbers and individual bit sequences of video and audio data configuring the corresponding program are transmitted and the PID information in which PCR is transmitted. The NIT transmits information of the actual transmission network.

The PSIP table may include a virtual channel table VCT a system time table STT a rating region table RRT an extended text table ETT a direct channel change table DCCT an event information table EIT and a master guide table MGT . The VCT transmits information on virtual channels such as channel information for selecting channels and information such as packet identification PID numbers for receiving the audio and or video data. More specifically when the VCT is parsed the PID of the audio video data of the broadcast program may be known. Herein the corresponding audio video data are transmitted within the channel along with the channel name and the channel number.

The VCT syntax further includes a first for loop repetition statement that is repeated as much as the num channels in section field value. The first repetition statement may include at least one of a short name field a major channel number field a minor channel number field a modulation mode field a carrier frequency field a channel TSID field a program number field an ETM location field an access controlled field a hidden field a service type field a source id field a descriptor length field and a second for loop statement that is repeated as much as the number of descriptors included in the first repetition statement. Herein the second repetition statement will be referred to as a first descriptor loop for simplicity. The descriptor descriptors included in the first descriptor loop is separately applied to each virtual channel.

Furthermore the VCT syntax may further include an additional descriptor length field and a third for loop statement that is repeated as much as the number of descriptors additionally added to the VCT. For simplicity of the description of the present invention the third repetition statement will be referred to as a second descriptor loop. The descriptor additional descriptors included in the second descriptor loop is commonly applied to all virtual channels described in the VCT.

As described above referring to the table id field indicates a unique identifier or identification ID that can identify the information being transmitted to the table as the VCT. More specifically the table id field indicates a value informing that the table corresponding to this section is a VCT. For example a 0xC8 value may be given to the table id field.

The version number field indicates the version number of the VCT. The section number field indicates the number of this section. The last section number field indicates the number of the last section of a complete VCT. And the num channel in section field designates the number of the overall virtual channel existing within the VCT section. Furthermore in the first for loop repetition statement the short name field indicates the name of a virtual channel. The major channel number field indicates a major channel number associated with the virtual channel defined within the first repetition statement and the minor channel number field indicates a minor channel number. More specifically each of the channel numbers should be connected to the major and minor channel numbers and the major and minor channel numbers are used as user reference numbers for the corresponding virtual channel.

The program number field is shown for connecting the virtual channel having an MPEG 2 program association table PAT and program map table PMT defined therein and the program number field matches the program number within the PAT PMT. Herein the PAT describes the elements of a program corresponding to each program number and the PAT indicates the PID of a transport packet transmitting the PMT. The PMT described subordinate information and a PID list of the transport packet through which a program identification number and a separate bit sequence such as video and or audio data configuring the program are being transmitted.

The source id field indicates a program source connected to the corresponding virtual channel. Herein a source refers to a specific source such as an image a text video data or sound. The source id field value has a unique value within the transport stream transmitting the VCT. Meanwhile a service location descriptor may be included in a descriptor loop i.e. descriptor within a next for loop repetition statement. The service location descriptor may include a stream type PID and language code for each elementary stream.

As described above MPH corresponds to the initials of mobile pedestrian and handheld and represents the opposite concept of a fixed type system. Therefore the MPH video stream Non hierarchical mode the MPH audio stream Non hierarchical mode the MPH Non A V stream Non hierarchical mode the MPH High Priority video stream Hierarchical mode the MPH High Priority audio stream Hierarchical mode the MPH Low Priority video stream Hierarchical mode and the MPH Low priority audio stream Hierarchical mode correspond to stream types that are applied when mobile broadcast programs are being transmitted and received. Also the Hierarchical mode and the Non hierarchical mode each correspond to values that are used in stream types having different priority levels. Herein the priority level is determined based upon a hierarchical structure applied in any one of the encoding or decoding method.

Therefore when a hierarchical structure type codec is used a field value including the hierarchical mode and the non hierarchical mode is respectively designated so as to identify each stream. Such stream type information is parsed by the SI and or data decoder so as to be provided to the video and audio decoders and . Thereafter each of the video and audio decoders and uses the parsed stream type information in order to perform the decoding process. Other stream types that may be applied in the present invention may include MPEG 4 AUDIO AC 3 AAC AAC BSAC HE AAC AAC SBR and MPEG S for the audio data and may also include MPEG 2 VIDEO MPEG 4 VIDEO H.264 SVC and VC 1 for the video data.

Furthermore referring to in fields using the hierarchical mode and the non hierarchical mode such as the MPH video stream Non hierarchical mode and the MPH audio stream Non hierarchical mode examples of using the MPEG 4 AUDIO AC 3 AAC AAC BSAC HE AAC AAC SBR and MPEG S for the audio data and the MPEG 2 VIDEO MPEG 4 VIDEO H.264 SVC and VC 1 for the video data may also be respectively used as replacements for each of the audio stream and the video stream may be considered as other embodiments of the present invention and may therefore be included in the scope of the present invention. Meanwhile the stream type field may be provided as one of the fields within the PMT. And in this case it is apparent that such stream type field includes the above described syntax. The STT transmits information on the current data and timing information. The RRT transmits information on region and consultation organs for program ratings. The ETT transmits additional description of a specific channel and broadcast program. The EIT transmits information on virtual channel events e.g. program title program start time etc. .

Also the source ID corresponds to an ID identifying a virtual channel that carries an event shown in the above described table. The version numbers in section field indicates the version of an element included in the event information table. In the present invention with respect to the previous version number an event change information included in the event information table wherein the event change information has a new version number is recognized as the latest change in information. The current next indicator field indicates whether the event information included in the corresponding EIT is a current information or a next information. And finally the num event field represents the number of events included in the channel having a source ID. More specifically an event loop shown below is repeated as many times as the number of events.

The above described EIT field is commonly applied to at least one or more events included in one EIT syntax. A loop statement which is included as for j 0 j

Meanwhile the descriptor applied to each event may be included in the EIT. Herein a descriptors length field indicates the length of a descriptor. Also a descriptor loop i.e. descriptor included in a for loop repetition statement includes at least one of an AC 3 audio descriptor an MPEG 2 audio descriptor an MPEG 4 audio descriptor an AAC descriptor an AAC descriptor an HE AAC descriptor an AAC SBR descriptor an MPEG surround descriptor a B SAC descriptor an MPEG 2 video descriptor an MPEG 4 video descriptor an H.264 descriptor an SVC descriptor and a VC 1 descriptor. Herein each descriptor describes information on audio video codec applied to each event. Such codec information may be provided to the audio video decoder and and used in the decoding process.

Finally the DCCT DCCSCT transmits information associated with automatic or direct channel change. And the MGT transmits the versions and PID information of the above mentioned tables included in the PSIP. Each of the above described tables included in the PSI PSIP is configured of a basic unit referred to as a section and a combination of one or more sections forms a table. For example the VCT may be divided into 256 sections. Herein one section may include a plurality of virtual channel information. However a single set of virtual channel information is not divided into two or more sections. At this point the receiving system may parse and decode the data for the data service that are transmitting by using only the tables included in the PSI or only the tables included in the PSIP or a combination of tables included in both the PSI and the PSIP. In order to parse and decode the mobile service data at least one of the PAT and PMT included in the PSI and the VCT included in the PSIP is required. For example the PAT may include the system information for transmitting the mobile service data and the PID of the PMT corresponding to the mobile service data or program number . The PMT may include the PID of the TS packet used for transmitting the mobile service data. The VCT may include information on the virtual channel for transmitting the mobile service data and the PID of the TS packet for transmitting the mobile service data.

Meanwhile depending upon the embodiment of the present invention a DVB SI may be applied instead of the PSIP. The DVB SI may include a network information table NIT a service description table SDT an event information table EIT and a time and data table TDT . The DVB SI may be used in combination with the above described PSI. Herein the NIT divides the services corresponding to particular network providers by specific groups. The NIT includes all tuning information that are used during the IRD set up. The NIT may be used for informing or notifying any change in the tuning information. The SDT includes the service name and different parameters associated with each service corresponding to a particular MPEG multiplex. The EIT is used for transmitting information associated with all events occurring in the MPEG multiplex. The EIT includes information on the current transmission and also includes information selectively containing different transmission streams that may be received by the IRD. And the TDT is used for updating the clock included in the IRD.

Furthermore three selective SI tables i.e. a bouquet associate table BAT a running status table RST and a stuffing table ST may also be included. More specifically the bouquet associate table BAT provides a service grouping method enabling the IRD to provide services to the viewers. Each specific service may belong to at least one bouquet unit. A running status table RST section is used for promptly and instantly updating at least one event execution status. The execution status section is transmitted only once at the changing point of the event status. Other SI tables are generally transmitted several times. The stuffing table ST may be used for replacing or discarding a subsidiary table or the entire SI tables.

In the present invention when the mobile service data correspond to audio data and video data it is preferable that the mobile service data included or loaded in a payload within a TS packet correspond to PES type mobile service data. According to another embodiment of the present invention when the mobile service data correspond to the data for the data service or data service data the mobile service data included in the payload within the TS packet consist of a digital storage media command and control DSM CC section format. However the TS packet including the data service data may correspond either to a packetized elementary stream PES type or to a section type. More specifically either the PES type data service data configure the TS packet or the section type data service data configure the TS packet. The TS packet configured of the section type data will be given as the example of the present invention. At this point the data service data are includes in the digital storage media command and control DSM CC section. Herein the DSM CC section is then configured of a 188 byte unit TS packet.

Furthermore the packet identification of the TS packet configuring the DSM CC section is included in a data service table DST . When transmitting the DST 0x95 is assigned as the value of a stream type field included in the service location descriptor of the PMT or the VCT. More specifically when the PMT or VCT stream type field value is 0x95 the receiving system may acknowledge the reception of the data broadcast program including mobile service data. At this point the mobile service data may be transmitted by a data object carousel method. The data object carousel method corresponds to repeatedly transmitting identical data on a regular basis.

At this point according to the control of the SI and or data decoder the demultiplexer performs section filtering thereby discarding repetitive sections and outputting only the non repetitive sections to the SI and or data decoder . The demultiplexer may also output only the sections configuring desired tables e.g. VCT or EIT to the SI and or data decoder by section filtering. Herein the VCT or EIT may include a specific descriptor for the mobile service data. However the present invention does not exclude the possibilities of the mobile service data being included in other tables such as the PMT. The section filtering method may include a method of verifying the PID of a table defined by the MGT such as the VCT prior to performing the section filtering process. Alternatively the section filtering method may also include a method of directly performing the section filtering process without verifying the MGT when the VCT includes a fixed PID i.e. a base PID . At this point the demultiplexer performs the section filtering process by referring to a table id field a version number field a section number field etc.

As described above the method of defining the PID of the VCT broadly includes two different methods. Herein the PID of the VCT is a packet identifier required for identifying the VCT from other tables. The first method consists of setting the PID of the VCT so that it is dependent to the MGT. In this case the receiving system cannot directly verify the VCT among the many PSI and or PSIP tables. Instead the receiving system must check the PID defined in the MGT in order to read the VCT. Herein the MGT defines the PID size version number and so on of diverse tables. The second method consists of setting the PID of the VCT so that the PID is given a base PID value or a fixed PID value thereby being independent from the MGT. In this case unlike in the first method the VCT according to the present invention may be identified without having to verify every single PID included in the MGT. Evidently an agreement on the base PID must be previously made between the transmitting system and the receiving system.

Meanwhile in the embodiment of the present invention the demultiplexer may output only an application information table AIT to the SI and or data decoder by section filtering. The AIT includes information on an application being operated in the receiver for the data service. The AIT may also be referred to as an XAIT and an AMT. Therefore any table including application information may correspond to the following description. When the AIT is transmitted a value of 0x05 may be assigned to a stream type field of the PMT. The AIT may include application information such as application name application version application priority application ID application status i.e. auto start user specific settings kill etc. application type i.e. Java or HTML position or location of stream including application class and data files application platform directory and location of application icon.

In the method for detecting application information for the data service by using the AIT component tag original network id transport stream id and service id fields may be used for detecting the application information. The component tag field designates an elementary stream carrying a DSI of a corresponding object carousel. The original network id field indicates a DVB SI original network id of the TS providing transport connection. The transport stream id field indicates the MPEG TS of the TS providing transport connection and the service id field indicates the DVB SI of the service providing transport connection. Information on a specific channel may be obtained by using the original network id field the transport stream id field and the service id field. The data service data such as the application data detected by using the above described method may be stored in the second memory by the SI and or data decoder .

The SI and or data decoder parses the DSM CC section configuring the demultiplexed mobile service data. Then the mobile service data corresponding to the parsed result are stored as a database in the second memory . The SI and or data decoder groups a plurality of sections having the same table identification table id so as to configure a table which is then parsed. Thereafter the parsed result is stored as a database in the second memory . At this point by parsing data and or sections the SI and or data decoder reads all of the remaining actual section data that are not section filtered by the demultiplexer . Then the SI and or data decoder stores the read data to the second memory . The second memory corresponds to a table and data object carousel database storing system information parsed from tables and mobile service data parsed from the DSM CC section. Herein a table id field a section number field and a last section number field included in the table may be used to indicate whether the corresponding table is configured of a single section or a plurality of sections. For example TS packets having the PID of the VCT are grouped to form a section and sections having table identifiers allocated to the VCT are grouped to form the VCT. When the VCT is parsed information on the virtual channel to which mobile service data are transmitted may be obtained.

Also according to the present invention the SI and or data decoder parses the SLD of the VCT thereby transmitting the stream type information of the corresponding elementary stream to the audio decoder or the video decoder . In this case the corresponding audio decoder or video decoder uses the transmitted stream type information so as to perform the audio or video decoding process. Furthermore according to the present invention the SI and or data decoder parses an AC 3 audio descriptor an MPEG 2 audio descriptor an MPEG 4 audio descriptor an AAC descriptor an AAC descriptor an HE AAC descriptor an AAC SBR descriptor an MPEG surround descriptor a BSAC descriptor an MPEG 2 video descriptor an MPEG 4 video descriptor an H.264 descriptor an SVC descriptor a VC 1 descriptor and so on of the EIT thereby transmitting the audio or video codec information of the corresponding event to the audio decoder or video decoder . In this case the corresponding audio decoder or video decoder uses the transmitted audio or video codec information in order to perform an audio or video decoding process.

The obtained application identification information service component identification information and service information corresponding to the data service may either be stored in the second memory or be outputted to the data broadcasting application manager . In addition reference may be made to the application identification information service component identification information and service information in order to decode the data service data. Alternatively such information may also prepare the operation of the application program for the data service. Furthermore the SI and or data decoder controls the demultiplexing of the system information table which corresponds to the information table associated with the channel and events. Thereafter an A V PID list may be transmitted to the channel manager .

The channel manager may refer to the channel map in order to transmit a request for receiving system related information data to the SI and or data decoder thereby receiving the corresponding result. In addition the channel manager may also control the channel tuning of the tuner . Furthermore the channel manager may directly control the demultiplexer so as to set up the A V PID thereby controlling the audio decoder and the video decoder .

The audio decoder and the video decoder may respectively decode and output the audio data and video data demultiplexed from the main service data packet. Alternatively the audio decoder and the video decoder may respectively decode and output the audio data and video data demultiplexed from the mobile service data packet. Meanwhile when the mobile service data include data service data and also audio data and video data it is apparent that the audio data and video data demultiplexed by the demultiplexer are respectively decoded by the audio decoder and the video decoder . For example an audio coding AC 3 decoding algorithm an MPEG 2 audio decoding algorithm an MPEG 4 audio decoding algorithm an AAC decoding algorithm an AAC decoding algorithm an HE AAC decoding algorithm an AAC SBR decoding algorithm an MPEG surround decoding algorithm and a BSAC decoding algorithm may be applied to the audio decoder . Also an MPEG 2 video decoding algorithm an MPEG 4 video decoding algorithm an H.264 decoding algorithm an SVC decoding algorithm and a VC 1 decoding algorithm may be applied to the video decoder . Accordingly the decoding process may be performed.

Meanwhile the native TV application manager operates a native application program stored in the first memory thereby performing general functions such as channel change. The native application program refers to software stored in the receiving system upon shipping of the product. More specifically when a user request or command is transmitted to the receiving system through a user interface UI the native TV application manger displays the user request on a screen through a graphic user interface GUI thereby responding to the user s request. The user interface receives the user request through an input device such as a remote controller a key pad a jog controller an a touch screen provided on the screen and then outputs the received user request to the native TV application manager and the data broadcasting application manager . Furthermore the native TV application manager controls the channel manager thereby controlling channel associated operations such as the management of the channel map and controlling the SI and or data decoder . The native TV application manager also controls the GUI of the overall receiving system thereby storing the user request and status of the receiving system in the first memory and restoring the stored information.

The channel manager controls the tuner and the SI and or data decoder so as to managing the channel map so that it can respond to the channel request made by the user. More specifically channel manager sends a request to the SI and or data decoder so that the tables associated with the channels that are to be tuned are parsed. The results of the parsed tables are reported to the channel manager by the SI and or data decoder . Thereafter based on the parsed results the channel manager updates the channel map and sets up a PID in the demultiplexer for demultiplexing the tables associated with the data service data from the mobile service data.

The system manager controls the booting of the receiving system by turning the power on or off. Then the system manager stores ROM images including downloaded software images in the first memory . More specifically the first memory stores management programs such as operating system OS programs required for managing the receiving system and also application program executing data service functions. The application program is a program processing the data service data stored in the second memory so as to provide the user with the data service. If the data service data are stored in the second memory the corresponding data service data are processed by the above described application program or by other application programs thereby being provided to the user. The management program and application program stored in the first memory may be updated or corrected to a newly downloaded program. Furthermore the storage of the stored management program and application program is maintained without being deleted even if the power of the system is shut down. Therefore when the power is supplied the programs may be executed without having to be newly downloaded once again.

The application program for providing data service according to the present invention may either be initially stored in the first memory upon the shipping of the receiving system or be stored in the first memory after being downloaded. The application program for the data service i.e. the data service providing application program stored in the first memory may also be deleted updated and corrected. Furthermore the data service providing application program may be downloaded and executed along with the data service data each time the data service data are being received.

When a data service request is transmitted through the user interface the data broadcasting application manager operates the corresponding application program stored in the first memory so as to process the requested data thereby providing the user with the requested data service. And in order to provide such data service the data broadcasting application manager supports the graphic user interface GUI . Herein the data service may be provided in the form of text or short message service SMS voice message still image and moving image. The data broadcasting application manager may be provided with a platform for executing the application program stored in the first memory . The platform may be for example a Java virtual machine for executing the Java program. Hereinafter an example of the data broadcasting application manager executing the data service providing application program stored in the first memory so as to process the data service data stored in the second memory thereby providing the user with the corresponding data service will now be described in detail.

Assuming that the data service corresponds to a traffic information service the data service according to the present invention is provided to the user of a receiver that is not equipped with an electronic map and or a GPS system in the form of at least one of a text or short message service SMS a voice message a graphic message a still image and a moving image. In this case when a GPS module is mounted on the receiving system as shown in the GPS module receives satellite signals transmitted from a plurality of low earth orbit satellites and extracts the current position or location information e.g. longitude latitude altitude thereby outputting the extracted information to the data broadcasting application manager .

At this point it is assumed that the electronic map including information on each link and nod and other diverse graphic information are stored in one of the second memory the first memory and another memory that is not shown. More specifically according to the request made by the data broadcasting application manager the data service data stored in the second memory are read and inputted to the data broadcasting application manager . The data broadcasting application manager translates or deciphers the data service data read from the second memory thereby extracting the necessary information according to the contents of the message and or a control signal. In other words the data broadcasting application manager uses the current position information and the graphic information so that the current position information can be processed and provided to the user in a graphic format.

As described above in order to provide services for preventing illegal duplication or copies or illegal viewing of the enhanced data and or main data that are transmitted by using a broadcast network and to provide paid broadcast services the transmitting system may generally scramble and transmit the broadcast contents. Therefore the receiving system needs to descramble the scrambled broadcast contents in order to provide the user with the proper broadcast contents. Furthermore the receiving system may generally be processed with an authentication process with an authentication means before the descrambling process. Hereinafter the receiving system including an authentication means and a descrambling means according to an embodiment of the present invention will now be described in detail.

According to the present invention the receiving system may be provided with a descrambling means receiving scrambled broadcasting contents and an authentication means authenticating or verifying whether the receiving system is entitled to receive the descrambled contents. Hereinafter the descrambling means will be referred to as first and second descramblers and and the authentication means will be referred to as an authentication unit . Such naming of the corresponding components is merely exemplary and is not limited to the terms suggested in the description of the present invention. For example the units may also be referred to as a decryptor. Although illustrates an example of the descramblers and and the authentication unit being provided inside the receiving system each of the descramblers and and the authentication unit may also be separately provided in an internal or external module. Herein the module may include a slot type such as a SD or CF memory a memory stick type a USB type and so on and may be detachably fixed to the receiving system.

As described above when the authentication process is performed successfully by the authentication unit the scrambled broadcasting contents are descrambled by the descramblers and thereby being provided to the user. At this point a variety of the authentication method and descrambling method may be used herein. However an agreement on each corresponding method should be made between the receiving system and the transmitting system. Hereinafter the authentication and descrambling methods will now be described and the description of identical components or process steps will be omitted for simplicity.

The receiving system including the authentication unit and the descramblers and will now be described in detail. The receiving system receives the scrambled broadcasting contents through the tuner and the demodulating unit . Then the system manager decides whether the received broadcasting contents have been scrambled. Herein the demodulating unit may be included as a demodulating means according to embodiment of the present invention as described in to . However the present invention is not limited to the examples given in the description set forth herein. If the system manager decides that the received broadcasting contents have been scrambled then the system manager controls the system to operate the authentication unit . As described above the authentication unit performs an authentication process in order to decide whether the receiving system according to the present invention corresponds to a legitimate host entitled to receive the paid broadcasting service. Herein the authentication process may vary in accordance with the authentication methods.

For example the authentication unit may perform the authentication process by comparing an IP address of an IP datagram within the received broadcasting contents with a specific address of a corresponding host. At this point the specific address of the corresponding receiving system or host may be a MAC address. More specifically the authentication unit may extract the IP address from the decapsulated IP datagram thereby obtaining the receiving system information that is mapped with the IP address. At this point the receiving system should be provided in advance with information e.g. a table format that can map the IP address and the receiving system information. Accordingly the authentication unit performs the authentication process by determining the conformity between the address of the corresponding receiving system and the system information of the receiving system that is mapped with the IP address. In other words if the authentication unit determines that the two types of information conform to one another then the authentication unit determines that the receiving system is entitled to receive the corresponding broadcasting contents.

In another example standardized identification information is defined in advance by the receiving system and the transmitting system. Then the identification information of the receiving system requesting the paid broadcasting service is transmitted by the transmitting system. Thereafter the receiving system determines whether the received identification information conforms with its own unique identification number so as to perform the authentication process. More specifically the transmitting system creates a database for storing the identification information or number of the receiving system requesting the paid broadcasting service. Then if the corresponding broadcasting contents are scrambled the transmitting system includes the identification information in the EMM which is then transmitted to the receiving system.

If the corresponding broadcasting contents are scrambled messages e.g. entitlement control message ECM entitlement management message EMM such as the CAS information mode information message position information that are applied to the scrambling of the broadcasting contents are transmitted through a corresponding data header or anther data packet. The ECM may include a control word CW used for scrambling the broadcasting contents. At this point the control word may be encoded with an authentication key. The EMM may include an authentication key and entitlement information of the corresponding data. Herein the authentication key may be encoded with a receiving system specific distribution key. In other words assuming that the enhanced data are scrambled by using the control word and that the authentication information and the descrambling information are transmitted from the transmitting system the transmitting system encodes the CW with the authentication key and then includes the encoded CW in the entitlement control message ECM which is then transmitted to the receiving system. Furthermore the transmitting system includes the authentication key used for encoding the CW and the entitlement to receive data or services of the receiving system i.e. a standardized serial number of the receiving system that is entitled to receive the corresponding broadcasting service or data in the entitlement management message EMM which is then transmitted to the receiving system.

Accordingly the authentication unit of the receiving system extracts the identification information of the receiving system and the identification information included in the EMM of the broadcasting service that is being received. Then the authentication unit determines whether the identification information conform to each other so as to perform the authentication process. More specifically if the authentication unit determines that the information conform to each other then the authentication unit eventually determines that the receiving system is entitled to receive the request broadcasting service.

In yet another example the authentication unit of the receiving system may be detachably fixed to an external module. In this case the receiving system is interfaced with the external module through a common interface CI . In other words the external module may receive the data scrambled by the receiving system through the common interface thereby performing the descrambling process of the received data. Alternatively the external module may also transmit only the information required for the descrambling process to the receiving system. The common interface is configured on a physical layer and at least one protocol layer. Herein in consideration of any possible expansion of the protocol layer in a later process the corresponding protocol layer may be configured to have at least one layer that can each provide an independent function.

The external module may either consist of a memory or card having information on the key used for the scrambling process and other authentication information but not including any descrambling function or consist of a card having the above mentioned key information and authentication information and including the descrambling function. Both the receiving system and the external module should be authenticated in order to provide the user with the paid broadcasting service provided or transmitted from the transmitting system. Therefore the transmitting system can only provide the corresponding paid broadcasting service to the authenticated pair of receiving system and external module.

Additionally an authentication process should also be performed between the receiving system and the external module through the common interface. More specifically the module may communicate with the system manager included in the receiving system through the common interface thereby authenticating the receiving system. Alternatively the receiving system may authenticate the module through the common interface. Furthermore during the authentication process the module may extract the unique ID of the receiving system and its own unique ID and transmit the extracted IDs to the transmitting system. Thus the transmitting system may use the transmitted ID values as information determining whether to start the requested service or as payment information. Whenever necessary the system manager transmits the payment information to the remote transmitting system through the telecommunication module .

The authentication unit authenticates the corresponding receiving system and or the external module. Then if the authentication process is successfully completed the authentication unit certifies the corresponding receiving system and or the external module as a legitimate system and or module entitled to receive the requested paid broadcasting service. In addition the authentication unit may also receive authentication associated information from a mobile telecommunications service provider to which the user of the receiving system is subscribed instead of the transmitting system providing the requested broadcasting service. In this case the authentication association information may either be scrambled by the transmitting system providing the broadcasting service and then transmitted to the user through the mobile telecommunications service provider or be directly scrambled and transmitted by the mobile telecommunications service provider. Once the authentication process is successfully completed by the authentication unit the receiving system may descramble the scrambled broadcasting contents received from the transmitting system. At this point the descrambling process is performed by the first and second descramblers and . Herein the first and second descramblers and may be included in an internal module or an external module of the receiving system.

The receiving system is also provided with a common interface for communicating with the external module including the first and second descramblers and so as to perform the descrambling process. More specifically the first and second descramblers and may be included in the module or in the receiving system in the form of hardware middleware or software. Herein the descramblers and may be included in any one of or both of the module and the receiving system. If the first and second descramblers and are provided inside the receiving system it is advantageous to have the transmitting system i.e. at least any one of a service provider and a broadcast station scramble the corresponding data using the same scrambling method.

Alternatively if the first and second descramblers and are provided in the external module it is advantageous to have each transmitting system scramble the corresponding data using different scrambling methods. In this case the receiving system is not required to be provided with the descrambling algorithm corresponding to each transmitting system. Therefore the structure and size of receiving system may be simplified and more compact. Accordingly in this case the external module itself may be able to provide CA functions which are uniquely and only provided by each transmitting systems and functions related to each service that is to be provided to the user. The common interface enables the various external modules and the system manager which is included in the receiving system to communicate with one another by a single communication method. Furthermore since the receiving system may be operated by being connected with at least one or more modules providing different services the receiving system may be connected to a plurality of modules and controllers.

In order to maintain successful communication between the receiving system and the external module the common interface protocol includes a function of periodically checking the status of the opposite correspondent. By using this function the receiving system and the external module is capable of managing the status of each opposite correspondent. This function also reports the user or the transmitting system of any malfunction that may occur in any one of the receiving system and the external module and attempts the recovery of the malfunction.

In yet another example the authentication process may be performed through software. More specifically when a memory card having CAS software downloaded for example and stored therein in advanced is inserted in the receiving system the receiving system receives and loads the CAS software from the memory card so as to perform the authentication process. In this example the CAS software is read out from the memory card and stored in the first memory of the receiving system. Thereafter the CAS software is operated in the receiving system as an application program. According to an embodiment of the present invention the CAS software is mounted on or stored in a middleware platform and then executed. A Java middleware will be given as an example of the middleware included in the present invention. Herein the CAS software should at least include information required for the authentication process and also information required for the descrambling process.

Therefore the authentication unit performs authentication processes between the transmitting system and the receiving system and also between the receiving system and the memory card. At this point as described above the memory card should be entitled to receive the corresponding data and should include information on a normal receiving system that can be authenticated. For example information on the receiving system may include a unique number such as a standardized serial number of the corresponding receiving system. Accordingly the authentication unit compares the standardized serial number included in the memory card with the unique information of the receiving system thereby performing the authentication process between the receiving system and the memory card.

If the CAS software is first executed in the Java middleware base then the authentication between the receiving system and the memory card is performed. For example when the unique number of the receiving system stored in the memory card conforms to the unique number of the receiving system read from the system manager then the memory card is verified and determined to be a normal memory card that may be used in the receiving system. At this point the CAS software may either be installed in the first memory upon the shipping of the present invention or be downloaded to the first memory from the transmitting system or the module or memory card as described above. Herein the descrambling function may be operated by the data broadcasting application manger as an application program.

Thereafter the CAS software parses the EMM ECM packets outputted from the demultiplexer so as to verify whether the receiving system is entitled to receive the corresponding data thereby obtaining the information required for descrambling i.e. the CW and providing the obtained CW to the descramblers and . More specifically the CAS software operating in the Java middleware platform first reads out the unique or serial number of the receiving system from the corresponding receiving system and compares it with the unique number of the receiving system transmitted through the EMM thereby verifying whether the receiving system is entitled to receive the corresponding data. Once the receiving entitlement of the receiving system is verified the corresponding broadcasting service information transmitted to the ECM and the entitlement of receiving the corresponding broadcasting service are used to verify whether the receiving system is entitled to receive the corresponding broadcasting service. Once the receiving system is verified to be entitled to receive the corresponding broadcasting service the authentication key transmitted to the EMM is used to decode or decipher the encoded CW which is transmitted to the ECM thereby transmitting the decoded CW to the descramblers and . Each of the descramblers and uses the CW to descramble the broadcasting service.

Meanwhile the CAS software stored in the memory card may be expanded in accordance with the paid service which the broadcast station is to provide. Additionally the CAS software may also include other additional information other than the information associated with the authentication and descrambling. Furthermore the receiving system may download the CAS software from the transmitting system so as to upgrade or update the CAS software originally stored in the memory card. As described above regardless of the type of broadcast receiving system as long as an external memory interface is provided the present invention may embody a CAS system that can meet the requirements of all types of memory card that may be detachably fixed to the receiving system. Thus the present invention may realize maximum performance of the receiving system with minimum fabrication cost wherein the receiving system may receive paid broadcasting contents such as broadcast programs thereby acknowledging and regarding the variety of the receiving system. Moreover since only the minimum application program interface is required to be embodied in the embodiment of the present invention the fabrication cost may be minimized thereby eliminating the manufacturer s dependence on CAS manufacturers. Accordingly fabrication costs of CAS equipments and management systems may also be minimized.

Meanwhile the descramblers and may be included in the module either in the form of hardware or in the form of software. In this case the scrambled data that being received are descrambled by the module and then demodulated. Also if the scrambled data that are being received are stored in the third memory the received data may be descrambled and then stored or stored in the memory at the point of being received and then descrambled later on prior to being played or reproduced . Thereafter in case scramble descramble algorithms are provided in the storage controller the storage controller scrambles the data that are being received once again and then stores the re scrambled data to the third memory .

In yet another example the descrambled broadcasting contents transmission of which being restricted are transmitted through the broadcasting network. Also information associated with the authentication and descrambling of data in order to disable the receiving restrictions of the corresponding data are transmitted and or received through the telecommunications module . Thus the receiving system is able to perform reciprocal or two way communication. The receiving system may either transmit data to the telecommunication module within the transmitting system or be provided with the data from the telecommunication module within the transmitting system. Herein the data correspond to broadcasting data that are desired to be transmitted to or from the transmitting system and also unique information i.e. identification information such as a serial number of the receiving system or MAC address.

The telecommunication module included in the receiving system provides a protocol required for performing reciprocal or two way communication between the receiving system which does not support the reciprocal communication function and the telecommunication module included in the transmitting system. Furthermore the receiving system configures a protocol data unit PDU using a tag length value TLV coding method including the data that are to be transmitted and the unique information or ID information . Herein the tag field includes indexing of the corresponding PDU. The length field includes the length of the value field. And the value field includes the actual data that are to be transmitted and the unique number e.g. identification number of the receiving system.

The receiving system may configure a platform that is equipped with the Java platform and that is operated after downloading the Java application of the transmitting system to the receiving system through the network. In this case a structure of downloading the PDU including the tag field arbitrarily defined by the transmitting system from a storage means included in the receiving system and then transmitting the downloaded PDU to the telecommunication module may also be configured. Also the PDU may be configured in the Java application of the receiving system and then outputted to the telecommunication module . The PDU may also be configured by transmitting the tag value the actual data that are to be transmitted the unique information of the corresponding receiving system from the Java application and by performing the TLV coding process in the receiving system. This structure is advantageous in that the firmware of the receiving system is not required to be changed even if the data or application desired by the transmitting system is added.

The telecommunication module within the transmitting system either transmits the PDU received from the receiving system through a wireless data network or configures the data received through the network into a PDU which is transmitted to the host. At this point when configuring the PDU that is to be transmitted to the host the telecommunication module within the transmitting end may include unique information e.g. IP address of the transmitting system which is located in a remote location. Additionally in receiving and transmitting data through the wireless data network the receiving system may be provided with a common interface and also provided with a WAP CDMA 1 EV DO which can be connected through a mobile telecommunication base station such as CDMA and GSM and also provided with a wireless LAN mobile internet WiBro WiMax which can be connected through an access point. The above described receiving system corresponds to the system that is not equipped with a telecommunication function. However a receiving system equipped with telecommunication function does not require the telecommunication module .

The broadcasting data being transmitted and received through the above described wireless data network may include data required for performing the function of limiting data reception. Meanwhile the demultiplexer receives either the real time data outputted from the demodulating unit or the data read from the third memory thereby performing demultiplexing. In this embodiment of the present invention the demultiplexer performs demultiplexing on the enhanced data packet. Similar process steps have already been described earlier in the description of the present invention. Therefore a detailed of the process of demultiplexing the enhanced data will be omitted for simplicity.

The first descrambler receives the demultiplexed signals from the demultiplexer and then descrambles the received signals. At this point the first descrambler may receive the authentication result received from the authentication unit and other data required for the descrambling process so as to perform the descrambling process. The audio decoder and the video decoder receive the signals descrambled by the first descrambler which are then decoded and outputted. Alternatively if the first descrambler did not perform the descrambling process then the audio decoder and the video decoder directly decode and output the received signals. In this case the decoded signals are received and then descrambled by the second descrambler and processed accordingly.

Meanwhile service data for data broadcasting can be transmitted through a protocol such as DSM CC data object carousel.

At this time the DSM CC data object carousel may be transmitted based on MPEG 2 or may be transmitted based on IP.

The MPEG 2 based data carousel performs signaling of PID of data carousel through a program table such as PSI PSIP and transmits required data by segmenting them into several download data blocks DDBs through PID. Also the MPEG 2 based data carousel notifies this configuration information through a separate message such as a download server initiate download info indication DSI DII . The MPEG 2 based object carousel transmits a file called a DSM CC object based on the data carousel. The DSM CC object allows an object having a virtual tree structure such as directory file stream and event to be used in a middleware M W engine of the receiving system.

In other words the middleware engine of the receiving system receives the DSI DII message and DDBs through standardized API such as DSM CC API Application Programming Interface and provides a data broadcasting service to a user by performing recombination of the DDBs in accordance with the DSI DII message. Namely a middleware engine of a digital television DTV such as ACAP Advanced Common Application Platform OCAP Open Cable Application Platform MHP Multimedia Home Platform and MHEG multimedia and hypermedia information coding expert group reads out the service data transmitted through the DSM CC protocol to provide the data broadcasting service to the user.

Examples of the DSM CC objects include stream STR and stream event STE in addition to service gateway DIR and FILE. The service gateway and DIR have information of a low list and FILE is an object having real data byte. The stream and the stream event serve to connect A V data in accordance with request status.

In other words in the highest level of a configuration example of the service gateway DIR and FILE is illustrated. The service gateway DIR and FILE are DSM CC objects and each of the service gateway and DIR has information of connection of lower FILE DIR object the DSM CC objects can be identified from one another even though they are arranged continuously. The DSM CC objects can be collected properly to configure the DSM CC module. The DSM CC module includes ID field version field and payload field. A plurality of DSM CC objects are inserted to the payload field unique identifier that can identify the corresponding DSM CC module is represented in the ID field and version number of the corresponding DSM CC module is represented in the version field. One DSM CC group is configured by a plurality of DSM CC modules.

DSM CC objects of payload of each of the DSM CC modules are identified for transmission in a unit of download data block DDB . When DDB is transmitted through the data carousel the DII message is configured to provide information of each module to the receiving system. The DII message includes information of DDBs. When several DSM CC groups are required as the DSM CC modules cannot be included in one DSM CC group or in order to provide convenience in view of management the DSM CC modules are segmented in the DII messages to provide several DSM CC groups. In order to report information of each of the DSM CC groups to the receiver a download server initiate DSI message which includes information of the DIIs is configured.

The method of transmitting the MPEG 2 based DSM CC data object carousel has been described as described above.

According to the present invention the DSM CC data object carousel can be transmitted based on the IP. At this time it is intended in the present invention that a concept of DSM CC API input and output DSM CC object ID of transmission data and version management of transmission data which are provided by the MPEG 2 based data object carousel is applied to IP transmission. This is to obtain compatibility with the middleware engine operated based on the DSM CC API.

In the DSM CC data are packetized in accordance with a user datagram protocol UDP method in the IP layer. The UDP packet is packetized in accordance with an IP method and thus becomes UDP IP packet data. In the present invention the UDP IP packet will be referred to as IP packet for convenience of description. In other words the IP packet includes IP header UDP header and payload. Alternatively program table information such as PSI PSIP can constitute the IP packet together with UDP header and IP header.

The DSM CC data IP packetized in accordance with the IP method are modulated in an IP based mobile physical layer in accordance with a previously determined transmission scheme such as VSB and OFDM transmission scheme and then transmitted to the receiving system. The receiving system extracts the DSM CC data from the IP packet and then transfers the extracted DSM CC data to the middleware application through DSM CC API.

The IP packet includes IP header UDP header and payload. A DSM CC over IP structure according to the present invention is inserted to the payload.

The DSM CC over IP structure is segmented into a DSM CC header and a DSM CC module data part . n DSM CC objects of the DSM CC module of are inserted to the DSM CC module data part and identification information for identifying the DSM CC module of the corresponding DSM CC module data part is inserted to the DSM CC header . Namely among information inserted to the MPEG 2 based DSM CC message DSI DII information required for IP transmission is inserted to the DSM CC header .

For example the DSM CC header can include carouselType field downloadId field moduleId field moduleSize field moduleVersion field componentTag field privateData field and CRC32 field.

The carouselType field can allocate 1 byte and indicates whether carousel transmitted to the corresponding DSM CC module data part is data carousel or object carousel. For example if the carousel1Type field has a value of 0x01 as illustrated in it means that data carousel is transmitted to the corresponding DSM CC module data part. If the carousel1Type field has a value of 0x10 it means that object carousel is transmitted to the corresponding DSM CC module data part. If the carouselType field indicates object carousel object carousel information can be represented in the privateData field.

The moduledId field can allocate 2 bytes and represents unique identifier that can identify the DSM CC module transmitted to the corresponding DSM CC module data part.

The moduleSize field can allocate 1 byte and represents a size of the DSM CC module transmitted to the corresponding DSM CC module data part.

The moduleVersion field can allocate 1 byte and represents a version number of the DSM CC module transmitted to the corresponding DSM CC module data part. If data of the corresponding DSM CC module is changed the version number is changed together.

In other words when the carouselType field value indicates data carousel the moduleId field the moduleSize field the moduleVersion field represent unique identifier size and version number which are related to the data carousel transmitted to the corresponding DSM CC module data part.

The componentTag field can allocate 1 byte and represents a tag matched with PID one to one wherein the PID is allocated to the MPEG 2 based service data.

The privateData field can allocate n byte s and describes corresponding object information when the carouselType field value indicates object carousel.

The privateData field can include transactionId field ISO639 LanguageCode field objectNameLength field and objectNameChr field. The ISO639 LanguageCode field the objectNameLength field and the objectNameChr field can be repeated.

In other words the transactionId field represents unique identifier for identifying service gateway object. The transactionId field can be represented by combination of DSM CC group ID and group version number.

The ISO639 LanguageCode field represents language of object name. The ISO639 LanguageCode field can be repeated as much as the number of support languages.

The objectNameChr field represents name of object to be driven by being transferred to the first application among the objects transmitted from the object carousel. The object can be driven by different applications per support language. The objectNameChr field can be repeated depending on the objectNameLength field value.

 a of illustrates an example of a syntax structure of the DSM CC header DSM CcoIP module header of and b of illustrates an example of a syntax structure of the privateData field object carousel info when the carouselType field value of indicates object carousel. Namely illustrates a structure of the DSM CC header suggested in as a table.

In a of the privateData field to which 1 byte is allocated is repeated as much as the value of the privateDataLength field to which 2 bytes are allocated so as to transmit object carousel information as illustrated in b of .

The object carousel information object carousel infor of b of can include language and name of the object carousel.

For example it is supposed that channel information is obtained using VCT. In this case if service type of a broadcasting stream included in the virtual channel is 0x02 i.e. A V D or 0x04 i.e. Data only it is noted that the IP based DSM CC data are transmitted to the virtual channel.

If stream type within service location descriptor of VCT is 0x95 i.e. DST transmission it means that service data for data broadcasting service are received. If the stream type is not 0x95 it means that only service data for A V broadcasting service are received.

Accordingly if the stream type is 0x95 DST is received with reference to elementary PID. Namely it is possible to find a packet which transmits DST data service table through PID.

The DST can be used to identify all the data used for data broadcasting service. Table identifier table id of the DST is 0xCF. If information included in data service  table bytes within the DST is parsed IP address information of the IP packet which transmits the IP based DSM CC data can be obtained. If there is no IP address information in the data service  table bytes it can be regarded that the MPEG 2 based DSM CC module is transmitted.

The data service  table bytes describes a byte block added to the DST. app id description of the data service  table bytes describes a format and meaning of subsequent application identification byte. The example of can include IP based DSM CC data IPDC over MPH . Also tap count represents the number of Tap and protocol encapsulation is a protocol encapsulation type used to transmit a specific data element by Tap . The example of represents that the data element is asynchronous IP datagram 0x04 . Action type represents features of data by Tap and its example illustrated in can have a value representing that data are included in Tap in accordance with IP MAC Notification. Whether IP based DSM CC data which provide a data broadcasting service exist in a current virtual channel can be determined from resource location field within the data service table bytes . The example of represents that the resource location field is 0 and IP based DSC CC data which provide a data broadcasting service exist in a current virtual channel.

Association tag is obtained from Tap within the data service table bytes and is related with association tag within association tag descriptor of PMT. Selector of the Tap specifies a specific data element that can be used as a communication channel or data element stream referred to by the association tag field. Selector length represents a length of remaining selector and selector type represents a format of selector bytes. IP address of IP based DSM CC data can be obtained from selector within the Tap . In other words IP address information of Ipv4 format for DSM CC data can be obtained from the selector bytes in accordance with selector length and selector type of the selector .

Multiprotocol encapsulation descriptor within the data service table bytes describes mapping between a specific address scheme and deviceId field. DeviceId address range represents the number of effective deviceId address bytes and means that IP is mapped to MAC address if deviceId IP mapping flag is 1. Also max sections per datagram represents the maximum number of sections that can be used to transmit one datagram unit.

The IP address information of Ipv4 format extracted from the selector bytes of the selector includes IP address and UDP port information.

Accordingly in the present invention it is possible to find IP packet which transmits IP based DSM CC module with reference to the IP address and the UDP port. The IP packet includes IP header UDP header and payload like . The payload has a DSM CC over IP structure divided into DSM CC header and DSM CC module data.

Among identification information within the DSM CC header DSM CcoIP module header the carouselType field is matched with the stream type field of the PMT and the componentTag field is matched with the association tag field of the PMT.

N DSM CC objects of the DSM CC module data part are extracted with reference to identification information of the DSM CC header. ID and version number of the corresponding DSM CC module are inserted in front of the n DSM CC objects so as to reconfigure the DSM CC module type as illustrated in whereby the reconfigured DSM CC module is provided to the middleware application using the DSM CC API. Then the corresponding middleware application is driven to provide the data broadcasting service according to the DSM CC objects within the DSM CC module.

In other words if a channel is selected S VCT related to the selected channel is received S . It is identified whether service data for data broadcasting service is received with reference to stream type within service location descriptor of the received VCT S .

In step S if the stream type is not 0x95 it is determined that the service data for data broadcasting service is not received and general A V service is provided S .

Meanwhile if the stream type is 0x95 in the step S it is determined that the service data for data broadcasting service is received and elementary PID i.e. PID of DST is extracted S and DST is received S .

It is determined whether IP address information is transmitted through tap information of the received DST S . If it is determined in the step S that IP address information is not transmitted it is regarded that the MPEG 2 based DSM CC module is transmitted and the corresponding DSM CC module is processed based on PID S . If it is determined in the step S that IP address information is transmitted IP address information of the DSM CC data is extracted from the selector bytes within the selector of the Tap S . IP packet corresponding to the IP address information extracted in the step S is received S .

The IP packet received in the step S includes IP header UDP header and payload like . The payload has a DSM CC over IP structure divided into DSM CC header and DSM CC module data.

N DSM CC objects of the DSM CC module data part are extracted with reference to identification information of the DSM CC header and are reconfigured in a type of the DSM CC module as illustrated in whereby the reconfigured DSM CC module is provided to the middleware application using the DSM CC API S . Then the corresponding middleware application is driven to provide the data broadcasting service according to the DSM CC objects within the DSM CC module.

Referring to the receiving system can include a tuner a demodulator a demultiplexer an A V decoder a display module a PVR Personal Video Recorder controller a data broadcasting decoder a DSM CC DB database DB a program table decoder a program table DB database DB a middleware application manager an IP decoder a network interface and an application controller or Native TV Application Manager . The middleware application controller could be a data processor according to the present invention.

In other words the tuner tunes a frequency of a specific channel through any one of antenna cable satellite performs down conversion for the tuned frequency into an intermediate frequency IF signal and outputs the resultant signal to the demodulator . At this time the tuner is controlled by a channel manager of the application controller and reports the result and strength of a broadcasting signal of the tuned channel to the channel manager. Examples of the data received to the frequency of the specific channel include IP based service data for A V broadcasting service service data for data broadcasting service and program table data for decoding of the service data. The service data for data broadcasting service can be received as the IP based DSM CC data.

The demodulator performs demodulation for the signal output from the tuner contrary to modulation performs channel equalization and then outputs the resultant signal to the demultiplexer . The aforementioned demodulator illustrated in can be used as an example of the demodulator . However it is to be understood that the demodulator is only an example and the scope of the present invention is not limited to the above example.

The demultiplexer identifies whether the demodulated data is service data for A V broadcasting service service data for data broadcasting service or program table information. The demultiplexer outputs the identified service data for A V broadcasting service to the A V decoder and outputs the service data for data broadcasting service to the data broadcasting decoder . Also the demultiplexer outputs the program table information to the program table decoder .

The A V decoder divides audio and video from the IP based service data for A V broadcasting service respectively decodes the audio and video through each decoding algorithm and then outputs the decoded result to the display module . For example at least one of AC 3 decoding algorithm MPEG 2 audio decoding algorithm MPEG 4 audio decoding algorithm AAC decoding algorithm AAC decoding algorithm HE AAC decoding algorithm AAC SBR decoding algorithm MPEG surround decoding algorithm and BSAC decoding algorithm can be used as the audio decoding algorithm. At least one of MPEG 2 video decoding algorithm MPEG 4 video decoding algorithm H.264 decoding algorithm SVC decoding algorithm and VC 1 decoding algorithm can be used as the video decoding algorithm.

The application controller receives key input of a TV viewer through the user interface UI by controlling the channel manager and the service manager and responds to the viewer s request through the graphic user interface GUI on the TV screen. Also the application controller stores and recovers GUI control of the TV user request and TV system state in a memory for example NVRAM or Flash .

The data broadcasting decoder decodes the IP based service data for data broadcasting service through a data decoding algorithm and stores the decoded result in the DSM CC DB in a type of IP packet.

The program table decoder divides tables using table id and section length within the program table information and then parses the sections of the divided tables. Subsequently the program table decoder stores the parsed result in the program table DB . For example the program table decoder collects sections having the same table identifier table id to constitute tables and then parses the tables to store the parsed result in the program table DB .

The middleware application manger can include DSM CC manager purchase manger and UI User Interface manager. The DSM CC manager extracts IP address information for transmitting IP based DSM CC data with reference to VCT information and DST information stored in the program table DB as illustrated in and . The middleware application manger reads out the IP packet corresponding to the extracted IP address information and stores the IP packet in the DSM CC DB .

The IP packet read out from the DSM CC DB includes IP header UDP header and payload. The payload has a DSM CC over IP structure divided into DSM CC header and DSM CC module data. Accordingly the DSM CC manager extracts n DSM CC objects of the DSM CC module data part with reference to identification information of the DSM CC header reconfigures the extracted objects in a type of the DSM CC module and then provides the reconfigured data to the middleware application using the DSM CC API. Then the corresponding middleware application is driven to provide the data broadcasting service according to the DSM CC objects within the DSM CC module. The middleware application manager may be referred to as a middleware engine. In this case according to the embodiment of the present invention the middleware engine is JAVA middleware engine.

Furthermore in the present invention IP packets can be received through wire wireless networks. In other words the network interface may receive the IP packets through the wire wireless networks and output the received IP packets to the IP decoder . Alternatively the network interface may receive the IP packets from the IP decoder and output them to the outside through the wire wireless networks. At this time the IP packets input to the network interface through the wire wireless network can include the DSM CC data. The IP decoder decodes the input IP packets and outputs the decoded IP packets to the DSM CC manager of the middleware application manager if payload of the decoded IP packets has a DSM CC over IP structure. The DSM CC manager extracts n DSM CC objects of the DSM CC module data part with reference to identification information of the DSM CC header within the payload of the input IP packets reconfigures the extracted objects in a type of the DSM CC module and then provides the reconfigured data to the middleware application. Then the corresponding middleware application is driven to provide the data broadcasting service according to the DSM CC objects within the DSM CC module.

In to ACAP based middleware engine can be used as a middleware engine for providing broadcasting service by receiving IP based DSM CC module.

Meanwhile is a diagram illustrating another example of a signaling method of a program table for receiving IP based DSM CC data according to the present invention. is a flow chart illustrating an example of a method for receiving DSM CC data when signaling is performed in a structure of the program table of .

In other words if a channel is selected S PMT related to the selected channel is received S . It is identified whether stream type of the received PMT is DSM CC data i.e. 0x0B or 0x0C S . In the step S if the stream type is 0x0B or 0x0C it is determined that the service data for data broadcasting service is received.

Accordingly if the stream type is not 0x0B or 0x0C in the step S it is determined that the service data for data broadcasting service is not received and general A V service is provided S .

In the step S if the stream type is 0x0B or 0x0C it is identified whether data broadcast id descriptor exists in PID loop of the PMT S . If the data broadcast id descriptor exists in PID loop of the PMT it represents that the service data for data broadcasting service is IP based DSM CC data i.e. IP data . If the data broadcast id descriptor does not exist in PID loop of the PMT and data broadcast descriptor is only exists therein it is determined that the MPEG 2 based DSM CC data are transmitted and the corresponding DSM CC module is processed based on PID S .

If it is determined in the step S that the IP based DSM CC data exist INT Information Notification Table information and componentTag are extracted with reference to data broadcast id descriptor and data broadcast descriptor S . Also INT is received with reference to the extracted INT information i.e. elementary PID of the PMT and data broadcast id of the data broadcast id descriptor S . Subsequently a descriptor loop of the INT received in the step S is detected S to find a descriptor loop where componentTag of IP MAC stream location descriptor is matched with componentTag of the data broadcast descriptor of the PMT S .

If the descriptor loop where componentTag of IP MAC stream location descriptor is matched with componentTag of the data broadcast descriptor of the PMT is detected in the step S IP address information for transmitting the IP based DSM CC module is extracted from target IP address descriptor of the corresponding descriptor loop S .

The IP packet received in the step S includes IP header UDP header and payload like . The payload has a DSM CC over IP structure divided into DSM CC header and DSM CC module data.

N DSM CC objects of the DSM CC module data part are extracted with reference to identification information of the DSM CC header and are reconfigured in a type of the DSM CC module as illustrated in whereby the reconfigured DSM CC module is provided to the middleware application using the DSM CC API S . Then the corresponding middleware application is driven to provide the data broadcasting service according to the DSM CC objects within the DSM CC module.

The receiving system of includes a receiving module an input module a database DB a display module and a control module . The receiving module can include a broadcasting receiving module receiving a signal from a broadcasting channel and a communication module receiving a signal from an interactive channel and transmitting and receiving a signal to and from the interactive channel. For example a channel where the communication module performs interaction could be a wire and wireless channel that allows bi directional data communication. The broadcasting receiving module receives a broadcasting signal demodulates the received signal and outputs the demodulated signal. For example the broadcasting receiving module can include a tuner selecting a broadcasting signal received in accordance with a DVB H type and a demodulator demodulating the broadcasting signal of the DVB H type in accordance with an OFDM scheme. The broadcasting receiving module demodulates the received broadcasting signal and outputs the demodulated signal to the control module . The broadcasting signal received by the broadcasting receiving module includes service guide information or bootstrap information of the service guide information. The bootstrap information includes information of capability of a server wherein the server provides service guide information through the interactive channel. Also the broadcasting receiving module can include IP based service data for A V broadcasting service service data for data broadcasting service and program table data for decoding of the service data. The service data for data broadcasting service can be received as IP based DSM CC data.

The communication module can transmit and receive a signal through the interactive channel that allows bi directional communication. If the communication module receives a signal through the interactive channel it can demodulate the received signal considering a modulation scheme of the communication system. If a communication system decoding and encoding module outputs an encoded signal the communication module can modulate the signal output in accordance with the modulation scheme of the communication system and transmit the modulated signal. For example if the control module intends to receive service guide information from the server having complete or complementing or repair capability through the interactive channel in accordance with bootstrap information the communication module can output a signal to access the server and receive service guide information transmitted from the server.

The control module can include a system decoder a decoder a service guide information controller and a communication system decoding and encoding module . The control module can control its peripheral functional blocks illustrated in for example the receiving module the input module the DB and the display module and process a control command received from the user.

The system decoder can decode the signal received by the broadcasting receiving module through the broadcasting channel considering the encoding type of the transceiver system. If the broadcasting receiving module demodulates the broadcasting signal and outputs the demodulated signal the system decoder can obtain a file which includes service guide information by decoding the output signal. The system decoder can decode the received signal to obtain bootstrap information and information of server capability from the signal received to the broadcasting channel wherein the signal includes service guide information and its example includes the signal according to the DVB H system. A detailed example of the system decoder will be described with reference to .

The control module can include the communication system decoding and encoding module to transmit and receive a signal to and from the interactive channel. The communication system decoding and encoding module can encode the signal to be transmitted to the interactive channel or decode the signal received from the interactive channel through the communication module . For example if the communication module receives the signal which includes service guide information from the interactive channel demodulates the received signal and outputs the demodulated signal the communication system decoding and encoding module can decode the signal and output the service guide information and its related signal to the guide information controller or the decoder . The communication system decoding and encoding module can encode or decode a signal of IP datagram type. For example the communication system decoding and encoding module can decode and output service data of the IP datagram type demodulated by the communication module or encode and output the service data of the IP datagram type to the communication module . For example if the service guide information receiving apparatus obtains at least one of complete complementing and repair which are capabilities of the server with respect to the interactive channel from the broadcasting channel to receive service guide information from any one of the servers having the capabilities the communication system decoding and encoding module can encode the signal to be output to the server.

The decoder can respectively decode service data for A V broadcasting service and service data for data broadcasting service which are output from the system decoder and the communication system decoding and encoding module . The decoder can include a video decoder an audio decoder and a data decoder. The video decoder can decode video service data of H.264 type for example. The audio decoder can decode audio service data of AC 3 and AAC type for example. Also the decoder can include a data decoder not shown that can decode program information service information of a table type. For example the decoder can decode a signal according to table information such as PAT program associate table PMT program map table and NIT network information table or decode a broadcasting signal according to data broadcasting. The decoder can parse table information i.e. INT IP MAC Notification table from the PMT. INT includes mapping information between IP address of IP stream within a transport stream and PID of the transport stream. If the decoder obtains IP address from bootstrap information of the service guide information by parsing INT it can allow the IP address to be output to the service guide information controller . Accordingly the service guide information receiving apparatus can obtain service guide information from the broadcasting channel or the interactive channel using the IP address. For example the bootstrap information received to the broadcasting channel can include at least one of complete complementing and repair which are capabilities of the server and include protocol information that can be connected to the server wherein the server provides service guide information to the interactive channel.

The service guide information controller can receive bootstrap information decoded by the system decoder or the communication system decoding and encoding module and allow the service guide information receiving apparatus to receive service guide information using the bootstrap information. For example the service guide information controller can control the system decoder or the communication system decoding and encoding module to allow the system decoder to receive service guide information from the broadcasting channel in accordance with the received bootstrap information or allow the communication system decoding and encoding module to receive service guide information from the interactive channel. If the service guide information receiving apparatus obtains information of capabilities of the server of the bootstrap information the communication system decoding and encoding module encodes a signal that can access a server through the interactive channel wherein the server stores service guide information. And the communication system decoding and encoding module modulates the signal through the interactive channel and outputs the modulated signal to receive service guide information from the server having the capabilities.

The service guide information controller can include a controller a channel map DB and a browser driving module . The controller can extract channel map information from the service guide information and store the extracted channel map information in the channel map DB . The controller can control session and control the browser driving module which drives application etc. to display the service guide information which is received or stored.

The service guide information receiving apparatus can store the received service guide information in the DB . The DB can store service guide information files transmitted to IP datagram and contents data and also can store data before and after the decoder decodes the same. The input module can receive a control command input by the user and output the control command to the controller . The display module can output audio or video signals output from the controller . The application driven by the service guide information controller can output service guide information as video and audio through the display module . Accordingly the user can download files or receive web service or service guide information through the application for the service guide information.

The system decoder can decode the broadcasting signal demodulated by the broadcasting receiving module considering an encoding scheme of the encoding system. The system decoder can process the service guide information demodulated by the broadcasting receiving module as follows.

The system decoder can include an IP decapsulator a UDP user datagram protocol decoder an RTP decoder a FLUTE File Delivery over Unidirectional Transport Protocol decoder a container parser a BiM parser XML parser and a DSM CC over IP decoder .

The system decoder can decode contents data which are transmitted at real time considering a system encoding scheme. For example the system decoder can decode files which include service guide information and contents data transmitted in IP datagram type. Also the system decoder can decode IP based DSM CC data.

Examples of contents data of IP datagram type DSM CC data and service guide information which are decoded by the system decoder are as follows. First of all the IP decapsulator decapsulates contents data included in the payload of the IP packets with reference to the header of the IP packets. The UDP decoder can decode the contents data which are transmitted at real time from the IP decapsulated payload in accordance with a user datagram protocol UDP . The RTP decoder can output encoded contents data to control encoding speed of the contents data decoded by the UDP decoder in accordance with RTP control protocol RTCP . The audio video signals of the contents data output from the RTP decoder are output to the decoder which includes an audio decoder and a video decoder.

If the system decoder decodes data of the service guide information of file type the data decoded by the UDP decoder are output to the FLUTE decoder .

The FLUTE decoder can output files such as binary data image data and text by decoding data of FLUTE IETF RFC3926 File Delivery over Unidirectional Transport type. The data decoded by and output from the FLUTE decoder can include files which include service guide information.

The container parser outputs information of fragment unit by decoding files of container unit from the service guide information. If the service guide information is output in a BiM type in accordance with the result output from the container parser the BiM parser decodes data according to a BiM type and transmits the decoded data to the XML parser . The XML parser can decode XML type files output from the container parser or the BiM parser .

If the communication system decoding and encoding module decodes the received signal and service guide information according to the decoded signal is displayed the communication system decoding and encoding module can decode service guide information files for example XML files transmitted in accordance with a protocol such as HTTP within the IP datagram.

Meanwhile the decoder extracts IP address information for transmitting IP based DSM CC data with reference to PMT information and INT information as illustrated in and and outputs the extracted IP address information to the system decoder .

The IP decapsulator of the system decoder receives the IP packets corresponding to the IP address information of the extracted DSM CC data from the decoder decapsulates the IP packets to UDP packets with reference to the header of the received IP packets and outputs the decapsulated data to the UDP decoder . The UDP decoder decapsulates the received data to payload with reference to the header of the UDP packets and then outputs the decapsulated payload to the DSM CC over IP decoder .

The payload input to the DSM CC over IP decoder has a DSM CC over IP structure divided into a DSM CC header and DSM CC module data. Accordingly the DSM CC over IP decoder extracts n DSM CC objects of the DSM CC module data part with reference to identification information of the DSM CC header. And the DSM CC over IP decoder reconfigures the extracted objects in a type of the DSM CC module of by inserting version number and ID for identifying the corresponding DSM CC module in front of the extracted n DSM CC objects and then provides the reconfigured data to the middleware application using the DSM CC API. Then the corresponding middleware application is driven to provide the data broadcasting service according to the DSM CC objects within the DSM CC module.

In to MHP based middleware engine can be used as a middleware engine for providing broadcasting service by receiving IP based DSM CC module.

Meanwhile in the present invention an adaptation layer may be included between the IP layer and the physical layer so that IP datagram and signaling information may be transmitted without MPEG 2 TS format. The IP datagram can include service data for A V broadcasting service. Also the IP datagram can include DSM CC data for data broadcasting service.

The adaptation layer generates RS frame which includes program table information IP datagram and identification information for identifying the program table information from the IP datagram. In other words the adaptation layer is a data link layer which identifies the IP datagram from the program table information and connects the identified data with each other to allow an upper layer to process the data. The RS frame is modulated in accordance with a transmission scheme previously defined in a mobile physical layer for example a VSB transmission scheme and then transmitted to the receiving system.

A length of a column i.e. the number of rows in one RS frame is defined as 187 bytes and a length of a row i.e. the number of columns is N byte s wherein N may depend on transmission parameters. In this case the transmission parameters or TPC information can include subframe information slot information parade related information for example parade ID parade repetition period etc. ensemble related information data group information with subframe RS frame mode information RS code mode information SCCC block information SCCC outer code mode information FIC version information etc.

Also N may be varied depending on regions within a data group to which the RS frame will be allocated. This is because that the probability of error is reduced in the order of regions A B C and D A B C D within the data group.

According to the embodiment of the present invention N is equal to or greater than 187. Namely the RS frame of has a size of N row 187 column bytes.

For convenience of description in the present invention each row of N byte s will be referred to as MPH service data packet. The MPH service data packet can be comprised of MPH header of 2 bytes and payload of N 2 bytes. In this case the MPH header region of 2 bytes is allocated exemplarily. Since the MPH header region may depend on a designer the present invention will not be limited to the above example.

The RS frame is generated by program table information of N 2 row 187 column byte size and or IP datagram. Also one RS frame can include IP datagram and program table information corresponding to one or more mobile services. For example IP datagram and program table information of two kinds of mobile services such as news for example IP datagram for mobile service 1 and stock for example IP datagram for mobile service 2 can be included in one RS frame.

The program table information or the IP datagram can be allocated to payload within the MPH service data packet constituting the RS frame.

At this time according to the embodiment of the present invention the program table information and the IP datagram are not together allocated to one MPH service data packet.

In the program table information is allocated to two MPH service data packets within one RS frame and the IP datagram is allocated to the other MPH service data packets.

In the position of the MPH service data packets within one RS frame to which the program table information is allocated and the number of the MPH service data packets are illustrated exemplarily. Since the position of the MPH service data packets and the number of the MPH service data packets may depend on a designer the present invention will not be limited to the above example.

When the program table information or the IP datagram is allocated to payload of one MPH service data packet stuffing bytes can be allocated to the other payload part if the corresponding MPH service data packet including the MPH header does not reach N bytes. For example after the program table information is allocated to one MPH service data packet the length of the MPH service data packet including the MPH header is N 20 bytes stuffing bytes can be allocated to the other 20 bytes.

The type indicator field can allocate 3 bits for example and represents a type of data allocated to payload within the corresponding MPH service data packet. In other words the type indicator field indicates whether data of the payload is IP datagram or program table information. At this time each data type constitutes one logical channel. In the logical channel which transmits the IP datagram several mobile services are multiplexed and then transmitted. Each mobile service undergoes demultiplexing in the IP layer.

The error indicator field can allocate 1 bit for example and represents whether the corresponding MPH service data packet has an error. For example if the error indicator field has a value of 0 it means that there is no error in the corresponding MPH service data packet. If the error indicator field has a value of 1 it means that there may be an error in the corresponding MPH service data packet.

The stuff indicator field can allocate 1 bit for example and represents whether stuffing byte exists in payload of the corresponding MPH service data packet. For example if the stuff indicator field has a value of 0 it means that there is no stuffing byte in the corresponding MPH service data packet. If the stuff indicator field has a value of 1 it means that stuffing byte exists in the corresponding MPH service data packet.

The pointer field can allocate 11 bits for example and represents position information where new data i.e. new signaling information or new IP datagram starts in the corresponding MPH service data packet.

For example if IP datagram for mobile service 1 and IP datagram for mobile service 2 are allocated to the first MPH service data packet within the RS frame as illustrated in the pointer field value represents the start position of the IP datagram for mobile service 2 within the MPH service data packet.

Also if there is no new data in the corresponding MPH service data packet the corresponding field value is expressed as a maximum value exemplarily. According to the embodiment of the present invention since 11 bits are allocated to the pointer field if is expressed as the pointer field value it means that there is no new data in the packet. The point where the pointer field value is 0 can be varied depending on the type indicator field value and the stuff indicator field value.

It is to be understood that the order the position and the meaning of the fields allocated to the header within the MPH service data packet illustrated in are exemplarily illustrated for understanding of the present invention. Since the order the position and the meaning of the fields allocated to the header within the MPH service data packet and the number of additionally allocated fields can easily be modified by those skilled in the art the present invention will not be limited to the above example.

For example IP packet having a DSM CC over IP structure like is allocated to the payload of the MPH service data packet. Namely the IP packet includes IP header UDP header and payload. The payload has a DSM CC over IP structure.

The DSM CC over IP structure is divided into DSM CC header and DSM CC module data part. N DSM CC objects of the DSM CC module of are inserted to the DSM CC module data part and identification information for identifying the DSM CC module of the corresponding DSM CC module data part is inserted to the DSM CC header.

For example the DSM CC header can include carouselType field downloadId field moduleId field moduleSize field moduleVersion field componentTag field privateData field and CRC32 field.

Since the above fields have been described in detail with reference to to their detailed description will be omitted.

In a and b of a column length i.e. the number of rows of the RS frame to be allocated to the A B region and a column length i.e. the number of rows of the RS frame to be allocated to the C D region are 187 equally. However row lengths i.e the number of columns may be different from each other. In the present invention the data group is exemplarily divided into the regions A B C and D depending on interference level of the main service data. Interference of the main service data is reduced in the order of the A B C D regions. If interference of the main service data becomes smaller receiving performance becomes better.

In the present invention the RS frame to be allocated to the A B region within the data group will be referred to as primary RS frame and the RS frame to be allocated to the C D region within the data group will be referred to as secondary RS frame.

According to the embodiment of the present invention when the row length of the primary RS frame to be allocated to the A B region within the data group is N1 bytes and the row length of the secondary RS frame to be allocated to the C D region within the data group is N2 bytes a condition of N1 N2 is satisfied. In this case N1 and N2 can be varied depending on the transmission parameter or a region of the data group to which the corresponding RS frame will be transmitted.

For convenience of the description each row of the N1 and N2 bytes will be referred to as the MPH service data packet. The MPH service data packet within the RS frame to be allocated to the A B region within the data group can be comprised of MPH header of 2 bytes and payload of N1 2 bytes. Also the MPH service data packet within the RS frame to be allocated to the C D region within the data group can be comprised of MPH header of 2 bytes and payload of N2 2 bytes.

In this case the MPH header of 2 bytes is only example. Since the allocation bytes of the MPH header can be varied depending on a designer the present invention will not be limited to the above example. The order position and meaning of the fields allocated to the MPH header of each MPH service data packet in can be applied to those of a and b of .

In the present invention the primary RS frame for the A B region within the data group and the secondary RS frame for the C D region within the data group can include both program table information and IP datagram. Also one RS frame can include IP datagram corresponding to one or more mobile services.

The primary RS frame in a of exemplarily includes program table information and IP datagram for two kinds of mobile services. On the other hand the secondary RS frame in b of exemplarily includes IP datagram for two kinds of mobile services.

In a of program table information for two kinds of mobile services is allocated to two MPH service data packets within one RS frame and IP datagram for two kinds of mobile services is allocated to the other MPH service data packet.

The position of the MPH service data packet within the RS frame to which the program table information is allocated and the number of the MPH service data packets are exemplarily illustrated in a of . Since they can be varied depending on a designer the present invention will not be limited to the above example.

Meanwhile in the present invention one parade may transmit one RS frame as illustrated in or may transmit two RS frames i.e. primary RS frame and secondary RS frame as illustrated in a and b of .

In other words if one parade transmits one RS frame data of one RS frame are allocated to the AB C D regions of the plurality of data groups. Also if one parade transmits two RS frames data of the primary RS frame are allocated to the AB region of the plurality of data groups and data of the secondary RS frame are allocated to the C D region of the plurality of data groups.

One RS frame corresponds to one ensemble. The ensemble is a collection of services requiring the same quality of service QoS and encoded with the same FEC codes.

For example if one parade is comprised of one RS frame the ensemble the RS frame and the parade can be mapped at 1 1 1. For another example if one parade is comprised of the primary RS frame and the secondary RS frame a primary ensemble can be mapped with the primary RS frame and a secondary ensemble can be mapped with the secondary RS frame. In other words the primary ensemble is transmitted through the primary RS frame of one parade and the secondary ensemble is transmitted through the secondary RS frame of the parade.

At this time the receiving system needs ensemble id to identify the ensembles. The ensemble id can be obtained by adding at least one bit to parade id for example the left of parade id. In this case the ensemble id includes parade id.

For example the ensemble id for identifying the primary ensemble transmitted through the parade can be generated by adding the most significant bit MSB having a value of 0 to the parade id and the ensemble id for identifying the secondary ensemble can be generated by adding the MSB having a value of 1 to the parade id.

The receiving system of can include a tuner a demodulator a demultiplexer a program table buffer a program table decoder a program table DB an IP datagram buffer an IP filter a data handler a middleware engine an A V decoder an A V post processor an application manager and a user interface . The application manager can include a channel manager and a service manager .

The tuner tunes a frequency of a specific channel through any one of antenna cable satellite performs down conversion for the tuned frequency into an intermediate frequency signal and outputs the resultant signal to the demodulator . At this time the tuner is controlled by the channel manager of the application manager and reports the result and strength of a broadcasting signal of the tuned channel to the channel manager . Examples of the data received to the frequency of the specific channel include main service data mobile service data program table information data for decoding of the main service data and the mobile service data and transmission parameter.

The demodulator performs VSB demodulation and channel equalization for the signal output from the tuner and then outputs the resultant signal by dividing the signal into the main service data and the mobile service data. The aforementioned demodulator illustrated in can be used as an example of the demodulator . However it is to be understood that the demodulator is only an example and the scope of the present invention is not limited to the above example.

Meanwhile the transmitter can transmit signaling information or TPC information including the transmission parameter to at least one of the field synchronization region the base data region and the mobile service data region. Accordingly the demodulator can extract the transmission parameter from the field synchronization region the base data region and the mobile service data region.

The transmission parameter can include subframe information slot information parade related information for example parade ID parade repetition period etc. data group information with subframe RS frame mode information RS code mode information SCCC block information SCCC outer code mode information FIC version information etc.

The demodulator performs block decoding RS frame decoding etc. using the extracted transmission parameter. For example the demodulator performs block decoding of each region within the data group with reference to SCCC related information for example SCCC block information and SCCC outer code mode within the transmission parameter and performs RS frame decoding of each region within the data group with reference to RS related information for example RS code mode .

According to the embodiment of the present invention the RS frame including the mobile service data demodulated by the demodulator is exemplarily input to the demultiplexer .

In other words the data input to the demultiplexer has RS frame data format as illustrated in or a and b of . Namely the RS frame decoder within the demodulator performs an inversion procedure of that performed in the RS frame encoder of the transmitting system to correct errors within the RS frame and then outputs the resultant data to the data de randomizer. The data de randomizer performs de randomizing for the error corrected RS frame in the inverse procedure of the transmitting system. As a result the data de randomizer can obtain the RS frame as illustrated in or a and b of .

The demultiplexer may receive the RS frame of every parade or may receive only the RS frame of the parade which includes a desired mobile service in accordance with the power control. For example if the demultiplexer receives the RS frame of every parade the demultiplexer can demultiplex the parade which includes a desired mobile service using the parade id.

Also since one parade transmits one or two RS frames and one ensemble is mapped with one RS frame if one parade transmits two RS frames the demultiplexer needs to identify the RS frame which transmits ensemble including mobile service data to be decoded from the parade which includes a desired mobile service. In other words if one input parade or a demultiplexed parade among a plurality of parades transmits the primary ensemble or the secondary ensemble the demultiplexer selects either one input parade or the demultiplexed parade.

For example the demultiplexer can demultiplex the RS frame which transmits ensemble including mobile service to be decoded using ensemble id obtained by adding one bit to the left of the parade id.

The demultiplexer identifies whether the corresponding MPH service data packet is program table information or IP datagram with reference to the MPH header of the MPH service data packet within the RS frame corresponding to the ensemble which includes mobile service data to be decoded. The identified program table information is output to the program table buffer and the IP datagram is output to the IP datagram buffer .

The program table buffer temporarily stores the program table information of section type and then outputs the program table information to the program table decoder .

The program table decoder identifies tables using table id and section length within the program table information data and then parses the sections of the divided tables. Subsequently the program table decoder stores the parsed result in the program table DB . For example the program table decoder collects sections having the same table identifier table id to constitute tables and then parses the tables to store the parsed result in the program table DB .

The IP datagram buffer temporarily stores the IP datagram and then outputs the IP datagram to the IP filter .

The IP filter filters the IP datagram only corresponding to a desired mobile service under the control of the service manager and outputs the filtered IP datagram to the A V decoder and or the data handler . If the transmission parameter or TPC information is transmitted to the IP datagram the IP filter divides the IP datagram which includes the transmission parameter under the control of the service manager and outputs the divided IP datagram to the corresponding block for example program table DB application manager data handler etc. .

The A V decoder divides audio and video from the IP datagram decodes the divided audio and video through each decoding algorithm and then outputs the decoded result to the A V post processor . For example at least one of AC 3 decoding algorithm MPEG 2 audio decoding algorithm MPEG 4 audio decoding algorithm AAC decoding algorithm AAC decoding algorithm HE AAC decoding algorithm AAC SBR decoding algorithm MPEG surround decoding algorithm and BSAC decoding algorithm can be used as the audio decoding algorithm. At least one of MPEG 2 video decoding algorithm MPEG 4 video decoding algorithm H.264 decoding algorithm SVC decoding algorithm and VC 1 decoding algorithm can be used as the video decoding algorithm.

The data handler processes datagram required for data broadcasting from the IP datagram and then allows the processed datagram to be mixed with A V data through the middleware engine .

For example if the input IP datagram has an IP packet structure like the data handler decapsulates the IP packet to UDP packet with reference to the header of the IP packet and decapsulates the decapsulated data to the payload with reference to the header of the UDP packet. At this time the payload of the decapsulated IP packet has a DSM CC over IP structure divided into a DSM CC header and DSM CC module data. Accordingly the data handler extracts n DSM CC objects of the DSM CC module data part with reference to identification information of the DSM CC header. And the data handler reconfigures the extracted objects in a type of the DSM CC module of by inserting version number and module ID for identifying the corresponding DSM CC module in front of the extracted n DSM CC objects and then provides the reconfigured data to the middleware engine . The middleware engine provides the input DSM CC module to the middleware application using DSM CC API. Then the corresponding middleware application is driven to provide the data broadcasting service according to the DSM CC objects within the DSM CC module.

According to the embodiment of the present invention the middleware engine is a JAVA middleware engine.

The application manager receives key input of a TV viewer through the user interface UI and responds to the viewer s request through the graphic user interface GUI on the TV screen. Also the application manager stores and recovers GUI control of the TV user request and TV system state in a memory for example NVRAM or Flash . Also the application manager receives parade related information for example parade ID from the demodulator or the IP filter and controls the demultiplexer to select the RS frame of the parade where a desired mobile service exists. The application manager controls the channel manager to perform channel related operation channel map management and operation of program table decoder .

The channel manager manages a physical channel map and a logical channel map and responds to the viewer s channel request by controlling the tuner and the program table decoder . Also the channel manager requests the program table decoder to parse channel related table to be tuned and receives the result. Further the channel manager updates the channel map based on the result and transfers information of a desired mobile service to the service manager so that the service manager can control the IP filter .

The service manager takes IP datagram only corresponding to the user s desired mobile service from the IP datagram buffer by controlling the IP filter and transmits the IP datagram to the application layer. In this case the service manager divides components for example audio and video streams of the mobile service from the corresponding IP datagram and outputs the divided components to the A V decoder . In other words the IP layer demultiplexes audio and video streams within the IP datagram.

As described above in the present invention the DSM CC data can be transmitted in a unit of the DSM CC module which includes the plurality of DSM CC objects. At this time the DSM CC module can be transmitted by encapsulation in a format of IP packet. The payload of the IP packet which transmits the DSM CC data includes a DSM CC header and a DSM CC module data part. Whether to update the DSM CC objects included in the corresponding DSM CC module data part and module ID and version number for identifying the corresponding DSM CC module are represented in the DSM CC header.

Also the DSM CC header can be compatible with module ID Module version Group ID and Group version which are used to identify the MPEG 2 based DSM CC data.

The DSM CC header can support various transmission methods such as object carousel data carousel and file transfer.

It will be apparent to those skilled in the art that various modifications and variations can be made in the present invention without departing from the spirit or scope of the inventions. Thus it is intended that the present invention covers the modifications and variations of this invention provided they come within the scope of the appended claims and their equivalents.

Meanwhile the mode for the embodiment of the present invention is described together with the best Mode description.

The embodiments of the method for transmitting and receiving signals and the apparatus for transmitting and receiving signals according to the present invention can be used in the fields of broadcasting and communication.

