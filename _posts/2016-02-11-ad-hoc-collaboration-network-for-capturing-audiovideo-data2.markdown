---

title: AD hoc collaboration network for capturing audio/video data
abstract: Software authenticates a first user of a first mobile device and a second user of a second mobile device. Each user agrees or has previously agreed to share video data captured by the user with other authenticated users. The software determines whether the first mobile device is located proximate to the second mobile device. Then the software receives video data captured by the second mobile device and transmits the video data to the first mobile device for display along with an annotation, if the first mobile device is proximate to the second mobile device. The annotation indicates the location of the second mobile device relative to the first mobile device and includes data as to camera angle of the second mobile device received from the second mobile device. The software persistently stores the video data upon receipt of a command from the user of the first mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09602856&OS=09602856&RS=09602856
owner: Yahoo! Inc
number: 09602856
owner_city: Sunnyvale
owner_country: US
publication_date: 20160211
---
The present application is a continuation application of U.S. application Ser. No. 13 680 009 which was filed on Nov. 16 2012 and is also entitled Ad Hoc Collaboration Network for Capturing Audio Video Data . The present application claims priority to and or the benefit of that application. And the disclosure of that application is incorporated by reference herein for all purposes.

When making a professional audio video AV recording of a live event such as a sports competition or a concert a team of camera operators captures the event from multiple angles.

Given the quality of current digital video cameras in smartphones a viewer at such an event can also make a video recording of the event using a smartphone. However such a viewer can only capture the event from one angle at a time. And relocating to other angles might prove impossible due to ticketing or crowd constraints.

Using a smartphone app like Collabracam an individual user and his her friends might try to capture an event from multiple camera angles like a professional team. However such apps tend to employ a film director metaphor in which one smartphone user acts as a coordinator for other smartphone users who relinquish artistic control to the coordinator.

In an example embodiment a processor executed method is described. The operations of the method might be performed approximately in real time by software running on a server. According to the method the software authenticates a first user of a first mobile device and a second user of a second mobile device. Each of the mobile devices includes a video capturing device and each user agrees or has previously agreed to share video data captured by the user with other authenticated users. The software determines whether the first mobile device is located proximate to the second mobile device. Then the software receives video data captured by the second mobile device and transmits the video data to the first mobile device for display along with an annotation indicating the location of the second mobile device relative to the first mobile device if the first mobile device is proximate to the second mobile device. Thereafter the software receives an indication from the first mobile device that at least some of the video data is to be indexed in a profile associated with the first user.

In another example embodiment an apparatus is described namely a computer readable storage medium which persistently stores a program. The program might be a module in software running on a server and might perform the following operations in approximately real time. The program authenticates a first user of a first mobile device and a second user of a second mobile device. Each of the mobile devices includes a video capturing device and each user agrees or has previously agreed to share video data captured by the user with other authenticated users. The program determines whether the first mobile device is located proximate to the second mobile device. Then the program receives video data captured by the second mobile device and transmits the video data to the first mobile device for display along with an annotation indicating the location of the second mobile device relative to the first mobile device if the first mobile device is proximate to the second mobile device. Thereafter the program receives an indication from the first mobile device that at least some of the video data is to be indexed in a profile associated with the first user.

Another example embodiment also involves a processor executed method. The operations of the method might be performed approximately in real time by software running on a server. According to the method the software determines whether a first mobile device is located proximate to a second mobile device using wireless technology. Each of the mobile devices includes a video capturing device and the user of each mobile device agrees or has previously agreed to share video data captured by the mobile device with other users who agree to share video data captured by their mobile devices. Then the software receives and displays at the first mobile device video data captured by the second mobile device along with an annotation indicating the location of the second mobile device relative to the first mobile device if the first mobile device is proximate to the second mobile device. Thereafter the software persistently stores at least some of the video data on the first mobile device upon receipt of a command from the user of the first mobile device.

In the following description numerous specific details are set forth in order to provide a thorough understanding of the exemplary embodiments. However it will be apparent to one skilled in the art that the example embodiments may be practiced without some of these specific details. In other instances process operations and implementation details have not been described in detail if already well known.

In an example embodiment websites and might be composed of a number of servers connected by a network e.g. a local area network LAN or a WAN to each other in a cluster or other distributed system which might execute cloud platform software. The servers in website might also be connected e.g. by a storage area network SAN to persistent storage and the servers in website might also be connected e.g. by a storage area network SAN to persistent storage . In example embodiments persistent storage and persistent storage might include flash memory or a redundant array of independent disks RAID .

Persistent storage might be used to store user profiles location and or position data event data including timestamps audio video data etc. which is used in the processes disclosed herein. Some of this data including location and or position data and or event data might have been retrieved e.g. using a web application programming interface API from 1 profiles and or content streams maintained in persistent storage by website and or 2 a so called location based social networking website such as Four Square or Gowalla.

In an example embodiment some of the data from persistent storage might be cached in volatile memory on servers on website e.g. using a an in memory database or main memory database system MMDB or b a hybrid in memory database that also uses persistent storage in order to improve performance. Similarly in an example embodiment some of the data from persistent storage might be cached in volatile memory on servers on website e.g. using a an in memory database or main memory database system MMDB or b a hybrid in memory database that also uses persistent storage in order to improve performance.

Computing device and the servers in websites and might include 1 hardware having one or more microprocessors e.g. from the x86 family or the PowerPC family volatile storage e.g. RAM and persistent storage e.g. a hard disk or solid state drive and or flash memory and 2 an operating system e.g. Windows Mac OS Linux Windows Server Mac OS Server etc. that runs directly or indirectly e.g. through virtualization software on the hardware. Or the operating system for the servers might be replaced by a hypervisor or other virtualization software. Mobile devices and or might be smartphones tablet computers or other similar mobile devices that include 1 hardware having one or more low power microprocessors e.g. from the ARM family volatile storage e.g. RAM persistent storage e.g. flash memory such as microSD a digital video camera e.g. that uses an OmniVision image sensor and a microphone and 2 an operating system e.g. Symbian OS RIM BlackBerry OS iPhone OS Palm webOS Windows Mobile Android Linux etc. that runs on the hardware.

Also in an example embodiment mobile devices and and computing device might include a web browser as an application program or part of an operating system. Examples of web browsers that might execute on computing device include Internet Explorer Mozilla Firefox Safari and Google Chrome. Examples of browsers that might execute on mobile devices and include Safari Mozilla Firefox Android Browser and Palm webOS Browser. It will be appreciated that users of the mobile devices and and computing device might use browsers e.g. supporting HTML5 to communicate with software running on the servers at website . Alternatively users of the mobile devices and and computing device might use other application programs to communicate with software running on the servers at website . For example if mobile computing devices and are smartphones tablet computers or other similar mobile devices users of the mobile devices might use an app or a hybrid app e.g. an app written in Objective C or Java that includes embedded HTML5 to communicate with software running on the servers at website . It will be appreciated that an application program for a mobile device is often referred to as an app .

In an example embodiment websites and or are composed of a number of servers connected by a network e.g. a local area network LAN or a WAN to each other in a cluster or other distributed system which might run website software e.g. software in a LAMP Linux Apache MySQL PHP or LAMMP Linux Apache memcached MySQL PHP architecture etc. and or distributed computing software such as Hadoop which implements Map Reduce and or the Google Filesystem Pig Dremel etc. In an alternative example embodiment websites and or might be implemented using a public private or hybrid cloud platform e.g. a hybrid cloud platform whose public cloud is Amazon Electric Compute Cloud EC2 and whose private cloud is built using Cloud.com s CloudStack software. In an alternative example embodiment websites and or might be implemented using other public clouds and or other private clouds that provide similar functionality. Or websites and or might be implemented without resort to third party cloud platforms e.g. using a OpenStack or b load balancing and virtualization software e.g. Citrix XenServer VMware Microsoft or Xen distributed computing software such as Hadoop distributed memory caching software such as memcached distributed key value database software such as Couchbase Server nee Membase Server NoSQL database management software structured database management software such as MySQL etc. Parenthetically it will be appreciated that SQL is an acronym which stands for Structured Query Language.

As depicted in two users at event location are using client software such as an app running on mobile devices e.g. smartphones . Such mobile devices are logical clients in a client server architecture. Each client e.g. smartphone transmits a single media feed of audio video data to the event aggregator which acts as the logical server in a client server architecture. After receiving the single media feeds from each of the clients e.g. the two smartphones at event the event aggregator might store the received media feeds in event storage and serve the received media feeds to other clients at event location or to computing device . Thus the event aggregator might receive a single media feed from one client e.g. the topmost smartphone at event location and serve the received media feed to another client e.g. the bottommost smartphone at event location .

Likewise the event aggregator might receive a single media feed from each of the clients e.g. the tablet and the two smartphones at event location and serve a one of the received media feeds to the other non originating clients e.g. the tablet and the leftmost smartphone b another of the received media feeds to the other non originating clients e.g. the tablet and the rightmost smartphone and c the remaining received media feed to the other non originating clients e.g. the two smartphones . In an example embodiment the event aggregator might serve only one received media feed to a single non originating mobile device at a time. In an alternative example embodiment the event aggregator might serve more than one received media feed to a single non originating mobile device at the same time.

In operation the software receives e.g. through a GUI dialog a tag identifying the event that the user is attending for use in subsequent search and retrieval of any audio video data associated with the tag and or other event data e.g. such as names of friends and or contacts at the event from an authenticated user and stores the tag and or other event data in the user s profile. In an example embodiment a profile for a user might be associated with login data e.g. a username and a password and might persistently store other data associated with a user in addition to event tags. For example a user profile might store the user s preferences and or interests as explicitly expressed by the user e.g. explicit or active relevance feedback or implicitly gleaned from the user s usage behavior e.g. implicit or passive relevance feedback including preferences and or interests in future events. In an example embodiment a user profile might also store a social graph for the user e.g. a friends followers or other access control list retrieved from a social networking website such as Facebook or Twitter through a web API exposed by the social networking website. And a user profile might store the user s audio video data and their metadata e.g. time location event friends and or contacts also at event etc. and or indices for audio video data captured by other users e.g. as described in operations and .

In an alternative example embodiment the tag identifying the event or other event data might not be entered by the user. Instead the tag and or other event data might be retrieved e.g. using a web application programming interface API from a social networking website such as Facebook or Twitter and or a so called location based social networking website such as Four Square or Gowalla.

In operation the software determines whether any ascertained locations are proximate to each other. In an example embodiment the software might perform distance computations on the ascertained locations when making this determination. Or the software might make this determination based on location position proximity and or event data retrieved from another website e.g. through a web API exposed by a social networking website e.g. Facebook or a location based social networking website e.g. Four Square .

In operation the software detects whether its mobile device e.g. smartphone with digital video camera and microphone is located proximate to one or more other mobile devices. In an alternative example embodiment the software might instead make a determination that its mobile device is located proximate to one or more other mobile devices through the use of location position and or proximity data retrieved from the other mobile devices or from a website e.g. through a web API exposed by a social networking website e.g. Facebook or a location based social networking website e.g. Four Square .

In operation the software on the detecting mobile device receives e.g. through a GUI dialog a tag identifying the event that the user is attending and or other event data e.g. such as names of friends and or contacts at the event from its user and stores the tag and or other event data in the user s profile on the detecting mobile device. In an example embodiment such a profile might persistently store other data associated with a user in addition to event tags. For example a user profile on a mobile device might store the user s preferences and interests as explicitly expressed by the user e.g. explicit or active relevance feedback or implicitly gleaned from the user s usage behavior e.g. implicit or passive relevance feedback . In an example embodiment a user profile might also store a social graph for the user e.g. a friends followers or other access control list retrieved from a social networking website such as Facebook or Twitter through a web API exposed by the social networking website. And a user profile might store the user s videos and their metadata e.g. time location event friends and or contacts also at event etc. and or videos captured by other users and metadata for those videos e.g. as described in operation .

Here again in an alternative example embodiment the tag identifying the event or other event data might not be entered by the user. Instead the tag and or other event data might be retrieved e.g. using a web application programming interface API from a social networking website such as Facebook or Twitter and or a so called location based social networking website such as Four Square or Gowalla.

In operation the software on the detecting mobile device receives a command from its user to persistently store e.g. in flash memory all or part of the audio video data captured by the detected mobile device e.g. along with the time and the ascertained location and or any tag provided by the user of the detecting mobile device and performs the command. In an example embodiment the software might store e.g. in flash memory the audio video data on its mobile device e.g. up to a specified size limit. In an alternative example embodiment the software might use collaborative storage e.g. with relatively small data granularity and erasure code for data redundancy to store the audio video data e.g. as discussed in Li et al. 2 Proceeding of the 7th Annual IEEE Wireless Telecommunications Symposium IEEE WTS 2008 which is incorporated herein by reference.

In an alternative example embodiment one or more of the GUI controls shown in might be replaced with other GUI widgets or controls including GUI controls that a support swiping or other multi touch gestures or b motion sensing. For example GUI control labeled 2 More might be replaced by a GUI control that allows the user to search for other mobile devices e.g. in a 360 degree circle whose center is the mobile device displaying the GUI view and whose radius might vary of the mobile device displaying the GUI view by swiping the GUI control right or left respectively.

With the above embodiments in mind it should be understood that the inventions might employ various computer implemented operations involving data stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. Further the manipulations performed are often referred to in terms such as producing identifying determining or comparing.

Any of the operations described herein that form part of the inventions are useful machine operations. The inventions also relate to a device or an apparatus for performing these operations. The apparatus may be specially constructed for the required purposes such as the carrier network discussed above or it may be a general purpose computer selectively activated or configured by a computer program stored in the computer. In particular various general purpose machines may be used with computer programs written in accordance with the teachings herein or it may be more convenient to construct a more specialized apparatus to perform the required operations.

The inventions can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data which can thereafter be read by a computer system. Examples of the computer readable medium include hard drives network attached storage NAS read only memory random access memory CD ROMs CD Rs CD RWs DVDs Flash magnetic tapes and other optical and non optical data storage devices. The computer readable medium can also be distributed over a network coupled computer systems so that the computer readable code is stored and executed in a distributed fashion.

Although example embodiments of the inventions have been described in some detail for purposes of clarity of understanding it will be apparent that certain changes and modifications can be practiced within the scope of the following claims. For example some or all of the processes described above might be used with an audio player in the GUI views displayed by the mobile device rather than a video player. Moreover the operations described above can be ordered modularized and or distributed in any suitable way. Accordingly the present embodiments are to be considered as illustrative and not restrictive and the inventions are not to be limited to the details given herein but may be modified within the scope and equivalents of the following claims. In the following claims elements and or steps do not imply any particular order of operation unless explicitly stated in the claims or implicitly required by the disclosure.

