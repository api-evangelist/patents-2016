---

title: Method for presenting documents using a reading list panel
abstract: A reading list panel is displayed as a sidebar window with respect to a main window of a content viewing application. In response to a first input, a first article representation of a first article associated with a presentation page displayed in the main window is listed in the reading list panel, where the first article representation includes information identifying the first article. In response to a selection of a second article representation from the reading list panel, content of a second article represented by the second article representation is presented in a reader mode within the main window.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09563334&OS=09563334&RS=09563334
owner: APPLE INC.
number: 09563334
owner_city: Cupertino
owner_country: US
publication_date: 20160224
---
This application is a continuation of U.S. application Ser. No. 14 642 372 filed Mar. 9 2015 which is a continuation of U.S. application Ser. No. 13 192 218 filed Jul. 27 2011 now U.S. Pat. No. 8 977 947 which claims the benefit of U.S. Provisional Patent Application No. 61 493 276 filed Jun. 3 2011 all of which are incorporated by reference in their entireties.

Embodiments of the present invention relate generally to user interface. More particularly embodiments of the invention relate to a reading list panel to store a list of documents that can be presented in a reader mode.

With the fast advance of browser technologies and World Wide Web infrastructures more and more content or applications are accessed via a browser. However most Web documents are designed to carry a variety of content elements for multiple purposes. Often times a user interested in a portion of content or an interactive application can be presented with myriads of information of no interest to the user at all. It is not unusual for a browser user to be distracted by navigation controls user interface controls of a Web document advertising marketing or promotional campaign from a Web document while trying to focus only on the interested portion of content.

Therefore accessing content included in Web documents via traditional browsers do not provide users with smooth focused and friendly experiences.

Various embodiments and aspects of the inventions will be described with reference to details discussed below and the accompanying drawings will illustrate the various embodiments. The following description and drawings are illustrative of the invention and are not to be construed as limiting the invention. Numerous specific details are described to provide a thorough understanding of various embodiments of the present invention. However in certain instances well known or conventional details are not described in order to provide a concise discussion of embodiments of the present inventions.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in conjunction with the embodiment can be included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification do not necessarily all refer to the same embodiment.

According to some embodiments a graphical user interface GUI element is provided to manage articles or documents that can be presented in a reader mode. In one embodiment a reading list panel is implemented as part of a content viewing application such as a browser application. Throughout this application a browser application is utilized as an example of a content viewing application however other types of content viewing applications can also be applied. According to one embodiment in response to a user input the reading list panel is displayed as a sidebar window or an accessory window for example associated with or within the same instance of a browser application in which a main window is being displayed. The reading list panel is configured to list one or more article representations representing one or more articles that can be presented in a reader mode.

According to one embodiment a user can add an article representation associated with a document currently displayed in the main window to the reading list panel by activating or clicking a predetermined button. Alternatively a user can add an article representation associated with an article embedded within a content or presentation page such as a Web page currently displayed in the main window. That is the reading list panel is configured to list a list of one or more article representations representing one or more articles or documents also referred to as a reading list that can be presented or read in a reader mode. In one embodiment each article representation listed in the reading list includes enough information identifying the associated article without actual content of the article such that the actual article can be subsequently retrieved and displayed in a reader mode. In this way less memory or resource is required to maintain the reading list. In one embodiment each article representation listed in the reading list panel includes at least one of a title of the article an address e.g. universal resource locator or URL from which the actual article can be retrieved and an abstract of the article.

Throughout this application the terms of article and article representation are interchangeable terms dependent upon the associated context being described. When an article is described or displayed within a reading list panel it refers to an article representation that represents the actual article. When an article is described or displayed within a main window of the content viewing application it refers to the actual article.

According to one embodiment from the reading list panel a user can browse through the listed articles in a reader mode without having to switch back and forth between the reader mode and a regular or normal mode of presentation. However if the user decides to disable or inactivate the reader mode the articles listed in the reading list panel can be browsed through in the normal mode.

According to one embodiment information e.g. title URL abstract and icon of the articles listed in the reading list panel can be stored in a persistent storage location such that the information can be populated and displayed in the reading list panel when the browser application is launched again subsequently. As a result a user can continue to read in a reader mode the articles that have been identified and collected in a previous session of the browser application.

According to a further embodiment the information concerning the articles in the reading list panel can also be stored in the cloud. For example a user can create a reading list in a first device e.g. desktop and the information of the reading list can then be synchronized with a cloud server. Subsequently when the user connects with the cloud server via a second device e.g. mobile device the information of the reading list can be synchronized between the cloud server and the second device. When the user launches a browser application from the second device the reading list is populated in the corresponding reading list panel. As a result from the second device the user can pick up the articles of the reading list created in the first device.

In one embodiment browser application includes content presentation module and content retrieval or processing module . Content retrieval module is configured to retrieve a presentation page such as a Web page from a content provider such as Web site and content presentation module is configured to present or display the presentation page on display device . Throughout this application a Web page is utilized as an example of a presentation page and a Web server is utilized as an example of a content provider. Other types of content and servers may also be applied. In one embodiment when content retrieval module receive a Web page it parses the Web page to build a rendering tree or data structure where content presentation module is configured to render the Web page based on rendering tree and to display the Web page on the display device. In one embodiment for each Web page represented by rendering tree reader mode module is configured to determine based on rendering tree whether the Web page is capable of being displayed or presented in a reader mode.

Rendering tree includes one or more nodes each representing an object representing an element of the Web page. Some of the nodes may represent articles that are capable of being displayed in the reader mode. In one embodiment for each of the nodes representing an article reader mode module is configured to access the article and to detect whether the article is capable of being displayed in the reader mode. Accordingly the rendering tree may be updated to include an indicator indicating whether a particular article is capable of being displayed in the reader mode. A reader mode refers to a displaying mode in which an article of a Web page is displayed in a manner without other unrelated information such as the background color or image or advertisements that come with the Web page. Further detailed information concerning operations of a reader mode can be found in co pending U.S. patent application Ser. No. 12 794 674 entitled Reader Mode Presentation of Web Content filed Jun. 4 2010 which is incorporated by reference herein in its entirety.

In one embodiment a reading list panel is implemented as part of browser application . In response to a user input the reading list panel is displayed by browser application as a sidebar window or an accessory window for example associated with or within the same instance of browser application in which a main window is being displayed. For example a user can activate or click on a graphical representation such as icon from a bookmark bar of a browser application to launch or activate the reading list panel. The reading list panel is configured to list one or more articles that can be presented in a reader mode.

According to one embodiment a user can add a document currently displayed in the main window to the reading list panel by activating or clicking a predetermined button. Alternatively a user can add an article embedded within a content page such as a Web page currently displayed in the main window. For example a user can select a link such as a hypertext link linking with an article embedded within the content page via a keyboard short cut or a combination of one or more keys and or actions e.g. shift click . An article can be added in an animated fashion. That is the reading list panel contains a list of one or more articles or documents that can be presented or read in a reader mode. Similarly an article can also be removed from the reading list panel.

In one embodiment each article representation listed in the reading list includes enough information identifying the article instead of actual content of the article such that the actual article can be subsequently retrieved and displayed in a reader mode. In one embodiment each article representation listed in the reading list panel includes at least one of a title of the article an address e.g. universal resource locator or URL from which the actual article can be retrieved and an abstract of the article. When an article is being added to the reading list at least a portion of the article is scanned by reader mode module to extract an abstract of the article. In addition certain metadata such as a title of the article and a URL is also extracted. This information is displayed in the reading list. Further a graphical representation such as an icon associated with the article can also be extracted and displayed in the reading panel. The image of the graphical representation may also be enhanced from the original one provided by the content provider.

According to one embodiment from the reading list panel a user can browse through the listed article in a reader mode without having to switch back and forth between the reader mode and the normal mode of presentation. For example in response to a selection of an article from the reading list panel content of the article is retrieved from a content provider based on an address associated with the article which is retrieved from the corresponding entry of the reading list panel. The retrieved article is then displayed in a reader mode within a main window of the browser application. However if the user decides to disable or inactivate the reader mode the articles listed in the reading list panel can be browsed through in the normal mode.

According to one embodiment information e.g. title URL abstract and icon of the articles listed in the reading list panel can be maintained in a system memory of a data processing system in which the corresponding browser application is running. Alternatively the information of the articles listed in the reading list panel can also be stored in a persistent storage location such as storage device as part of reading list such that the information can be populated and displayed in the reading list panel when browser application is launched again subsequently. As a result a user can continue to read in a reader mode the articles that have been identified and collected in a previous session of the browser application.

According to a further embodiment the information concerning the articles in the reading list panel can also be stored in the cloud. That is the information can be transmitted to and stored e.g. synchronized by content synchronization module in cloud server such as iCloud available from Apple Inc. of Cupertino Calif. For example a user can create a reading list in a first device e.g. desktop such as device and the information of the reading list is then synchronized with a cloud server such as server . Subsequently when the user connects with the cloud server via a second device e.g. mobile device such as device the information of the reading list can be synchronized between the cloud server and the second device. When the user launches a browser application from the second device the reading list is populated in the corresponding reading list panel. As a result from the second device the user can pick up the articles of the reading list created in the first device.

Furthermore dependent upon the display capability of the second device an article capable of being displayed by the first device e.g. desktop may or may not be capable of being displayed properly by the second device e.g. mobile device . According to one embodiment when a browser application picks up an article of a reading list the browser application of the second device may search identify locate and or render a proper version of the article that is suitable for being displayed by the second device.

Also note that throughout this application a browser application and a Web page are used as example of a content viewing application and presentation page to be viewed however other applications such as a file system browser e.g. Finder available from Apple Inc. or Windows Explorer available from Microsoft or presentation applications such as a slide presentation application e.g. PowerPoint from Microsoft or Keynote from Apple as well as other presentations such as document files may also be applied herein. In addition throughout this application any button or a control of the GUI of a browser application can be activated by clicking the button or control using a pointing device via one or more keystrokes from a keyboard a voice interactive command and or via a signal received via an application programming interface API .

Referring to when a browser application is launched and accesses an address e.g. URL of a content provider such as a Web site a Web page is downloaded from the Web site rendered by the browser application and presented in main window of browser GUI . Web page displayed in main window may or may not be reader mode capable. As described above a reader mode module e.g. reader mode module is configured to examine the Web page to determine whether the Web page is capable of being presented in a reader mode for example using certain techniques described in the above incorporated by reference patent application.

In one embodiment when the browser application detects that document presented in main window can be presented in a reader mode a graphical representation such as an icon or a button is displayed to indicate that the Web page currently presented in main window is capable of being presented in a reader mode. In this example when the Web page of main window is detected to be reader mode capable button is displayed within a predetermined proximity of address field that stores an address e.g. URL from which the currently displayed Web page was retrieved. When button is activated the Web page is displayed in a reader mode within main window as shown in in which other unrelated or less related information such as certain advertisement icons links buttons search field and or images of the Web page have been removed to only show the actual content associated with the Web page.

In addition according to one embodiment reading list panel also simply referred to as a reading list can be displayed as a sidebar window or an accessory window associated with main window . Reading list panel can be activated and displayed via button which may be implemented at a variety of position within GUI such as bookmark bar in this example. Reading list panel can also be removed by activating button again. Reading list panel can be used to store a list of articles also referred to as a reading list that can be presented in a reader mode.

According to one embodiment the Web page currently presented in main window can be added to reading list panel for example by activating button as shown in . Referring to in this example the Web page currently displayed in main window is added to reading list panel as article . In addition in response to a user input via button the browser application is configured to examine the Web page currently displayed in main window to extract certain metadata of the Web page. In one embodiment the browser application extracts at least the title of the Web page and an address such as a URL of the Web page. In addition the browser application generates an Abstract of the Web page based on at least a portion of the content of the Web page. The metadata and the Abstract are then associated with the corresponding article and presented in reading list panel . In this example article is presented with the associated title URL and Abstract. The browser application may further determine or extract a graphical representation such as an icon associated with the Web page. An underlying Web rendering engine associated with the browser application may further enhance the image of the graphical representation for example by applying a sharpening filter etc. The browser application may further craw through a domain of the corresponding Web site to identify or locate another graphical representation with a better resolution to be displayed in reading list panel . Note that reading list panel does not have to be activated or displayed when adding an article. An article currently displayed in main window can also be added via button near the address bar when reading list panel is not displayed at the point in time. When button is activated as shown in a dialog box is displayed prompting the user whether the user wishes to add the currently displayed article to the reading list panel.

In addition an article embedded within the currently displayed Web page can also be added to reading list panel . A Web page may contain one or more links such as hypertext links linking with one or more articles that are located at other locations such as remote servers which can be retrieved by associated links e.g. URLs . According to one embodiment a user can add the linked article to reading list panel without having to access the link by performing a predetermined action such as shift clicking the link. In response to such an action the browser application is configured to add the underlying article to reading list panel . In one embodiment the browser application is configured to access the link to examine the article for example to extract the title icon and an abstract of the article as described above without requiring the user to actually access the link. Alternatively a user can actually access the link and then add the article to reading list panel by activating button .

When a linked article is added to reading list panel without having the user actually open the link according to one embodiment the article is added to reading list panel via an animated fashion for example by flying or being thrown into reading list panel . Note that reading list panel does not have to be activated or displayed when adding an article. An article can be added to the reading list panel by flying or being thrown towards icon instead when reading list panel is not displayed at the point in time.

Referring to from reading list panel a user can browse through the articles listed therein. When a user selects any one of the articles from reading list panel the corresponding article is retrieved from the associated URL and displayed in a reader mode in main window . In this example it is assumed that the user selects article from reading list panel and the corresponding article is retrieved from its source based on the associated URL and presented in a reader mode within main window . When the user selects a second article from reading list panel the second article is retrieved and displayed in the reader mode within main window . Thus the reader mode remains active among the articles being browsed and displayed without switching back and forth between a reader mode and a normal mode unless the user specifically disables the reader mode for example by clicking button in which case the articles are to be displayed in a normal mode as shown in .

In one embodiment within reading list panel any one of the articles can be removed from reading list panel for example via a predetermined keystroke such as a delete functional key. All of the articles can also be removed from reading list panel by activating clear all button . The articles that have not been read or displayed can be listed in an unread page by activating tab or page selector or alternatively all articles can be listed by activating an all tab . In the unread page when an article has been accessed and displayed the corresponding article may be removed or grayed out from the unread page.

According to one embodiment information e.g. title URL abstract and icon of the articles listed in reading list panel can be stored in a persistent storage location such that the information can be populated and displayed in reading list panel when the browser application is launched again subsequently. As a result a user can continue to read in a reader mode the articles that have been identified and collected in a previous session of the browser application.

According to a further embodiment the information concerning the articles in reading list panel can also be stored in the cloud. For example a user can create a reading list in a first device e.g. desktop and the information of the reading list is then synchronized with a cloud server. Subsequently when the user connects with the cloud server via a second device e.g. mobile device the information of the reading list can be synchronized between the cloud server and the second device. When the user launches a browser application from the second device the reading list is populated in the corresponding reading list panel. As a result from the second device the user can pick up the articles of the reading list created in the first device.

Furthermore dependent upon the display capability of the second device an article capable of being displayed by the first device e.g. desktop may not be capable of being displayed properly by the second device e.g. mobile device . According to one embodiment when a browser application picks up an article of a reading list the browser application of the second device may search identify locate and or render a proper version of the article that is suitable for being displayed by the second device.

In response to a first input e.g. via button of at block a reading list panel is displayed as a sidebar window while the presentation page is displayed in the main window of the content viewing application. In response to a second input e.g. shift click selecting an article from the presentation page displayed in the main window at block metadata and abstract of the article are extracted from the selected article. At block the selected article is added to the reading list panel including displaying at least some of the metadata and the abstract of the selected article. At block in response to a third input selecting one of the articles listed in the reading list panel the selected article is displayed in a reader mode within the main window of the content viewing application.

As shown in the computer system which is a form of a data processing system includes a bus or interconnect which is coupled to one or more microprocessors and a ROM a volatile RAM and a non volatile memory . The microprocessor is coupled to cache memory . The bus interconnects these various components together and also interconnects these components and to a display controller and display device as well as to input output I O devices which may be mice keyboards moderns network interfaces printers and other devices which are well known in the art.

Typically the input output devices are coupled to the system through input output controllers . The volatile RAM is typically implemented as dynamic RAM DRAM which requires power continuously in order to refresh or maintain the data in the memory. The non volatile memory is typically a magnetic hard drive a magnetic optical drive an optical drive or a DVD RAM or other type of memory system which maintains data even after power is removed from the system. Typically the non volatile memory will also be a random access memory although this is not required.

While shows that the non volatile memory is a local device coupled directly to the rest of the components in the data processing system the present invention may utilize a non volatile memory which is remote from the system such as a network storage device which is coupled to the data processing system through a network interface such as a modem or Ethernet interface. The bus may include one or more buses connected to each other through various bridges controllers and or adapters as is well known in the art. In one embodiment the I O controller includes a USB Universal Serial Bus adapter for controlling USB peripherals. Alternatively I O controller may include an IEEE 1394 adapter also known as FireWire adapter for controlling FireWire devices.

Some portions of the preceding detailed descriptions have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the ways used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of operations leading to a desired result. The operations are those requiring physical manipulations of physical quantities.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as those set forth in the claims below refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the invention also relate to an apparatus for performing the operations herein. Such a computer program is stored in a non transitory computer readable medium. A machine readable medium includes any mechanism for storing information in a form readable by a machine e.g. a computer . For example a machine readable e.g. computer readable medium includes a machine e.g. a computer readable storage medium e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices .

The processes or methods depicted in the preceding figures may be performed by processing logic that comprises hardware e.g. circuitry dedicated logic etc. software e.g. embodied on a non transitory computer readable medium or a combination of both. Although the processes or methods are described above in terms of some sequential operations it should be appreciated that some of the operations described may be performed in a different order. Moreover some operations may be performed in parallel rather than sequentially.

Embodiments of the present invention are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of embodiments of the invention as described herein.

In the foregoing specification embodiments of the invention have been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the invention as set forth in the following claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

