---

title: System and method for controlling access to data using API for users with disabilities
abstract: Disclosed are systems and methods for controlling access to data on mobile devices using an accessibility API for users with disabilities. An exemplary method comprises: registering on a mobile device a security application as a service for users with disabilities, wherein the security application provides an accessibility API for the users with disabilities that comprises a plurality of accessibility API functions; intercepting, using the accessibility API, data accessed by a user application being executed on the user device; determining, by the security application, a category of intercepted data; intercepting, using the accessibility API, events of execution of the user application on the user device; determining, by the security application, an access control policy for accessing the intercepted data based on the category of intercepted data and intercepted events; and controlling, using the accessibility API, access of the user application to the intercepted data based on the determined access control policy.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09536101&OS=09536101&RS=09536101
owner: AO Kaspersky Lab
number: 09536101
owner_city: Moscow
owner_country: RU
publication_date: 20160307
---
The present disclosure claims benefit of priority under 35 U.S.C. 119 a d to a Russian Patent Application No. 2015154384 filed on Dec. 18 2015 which is incorporated by reference herein.

The present invention relates generally to the field of computer security and and more specifically to systems and methods of controlling access to data on mobile devices using an application programming interface API for users with disabilities.

In the Android operating system OS and in a number of other mobile operating systems e.g. iOS Windows Phone in order to ensure safety during the execution of user applications by the OS an isolated program execution environment known as a sandbox may be used. The isolated environment usually constitutes a controllable set of resources available to the application for its execution such as space on the disk or in the memory the number of processor cores which can be used and so on. Moreover usually either the execution of functions is partly emulated or access to the network local area or Internet and the ability to use the OS functions or to read information from a data input device is greatly restricted. Applications executed in such an isolated environment are not able to read much less write into random access memory areas which are accessible or dedicated to other applications.

In order to call system functions a user application must request additional permissions. Most often such permissions are granted by the user either during the installation of the application in earlier versions of the Android OS or during the launching or execution of an application in later versions of the Android OS and in other OS . Examples of such permissions include permission to work with SMS MMS messages permission to access user contacts and permission to access network services. The number of actions which a user application can execute outside of the isolated environment with the help of permissions is likewise limited. The permissions themselves are usually of various kinds those which can be granted to all user applications and those which are granted only to a limited group of user applications such as only those constituting firmware of the user device. An example of a permission granted to a limited group of user applications is a permission to restart a user device.

A security application is also considered to be an external application and thus restricted in its rights in the framework of its isolated environment and those additional permissions granted to it by the user. Therefore difficulties arise with a security application obtaining data available to other external applications. There are no permissions for reading the data of other applications in the list of permissions provided to external applications by the operating system since such permissions are contrary to the approach of using an isolated environment. Therefore there is a need to improve a mechanism for a security application to control access to data by external user applications executing in an isolated environment on a mobile device.

Modern mobile operating systems often have subsystems that facilitate the work with the device for users with disabilities. In some cases these subsystems have application programming interfaces APIs that allow third party developers to create applications that provide people with disabilities alternative ways of interacting with the device e.g. via text narration output of data to an external device that supports the display of Braille etc. . The disclosed systems and method provide a mechanism of controlling access to data of user applications executing in a isolated environment on a user device using an application programming interface API for users with disabilities accessibility API .

Disclosed are systems and methods for controlling access to data on mobile devices using an accessibility API for users with disabilities. An exemplary method comprises registering on a user device a security application as a service for users with disabilities wherein the security application provides an accessibility API for the users with disabilities that comprises a plurality of accessibility API functions intercepting using the accessibility API data accessed by a user application being executed on the user device determining by the security application a category of intercepted data intercepting using the accessibility API events of execution of the user application on the user device determining by the security application an access control policy for accessing the intercepted data based on the category of intercepted data and intercepted events and controlling using the accessibility API access of the user application to the intercepted data based on the determined access control policy.

In one exemplary aspect the user application may be executed in an isolated environment on the user device.

In one exemplary aspect the method further comprising determining from the one or more intercepted events of the user application at least one of a type of the intercepted event a graphical user interface element of the user application in which an intercepted event occurred and a window of the user application in which an intercepted event occurred.

In one exemplary aspect determining by the security application a category of intercepted data includes performing one of an antivirus and anti phishing analysis of the data.

In one exemplary aspect categories of intercepted data includes one or more of safe data unsafe data and undesirable data.

In one exemplary aspect controlling using the accessibility APIs access of the user application to the intercepted data includes at least one of clearing a selection of a text fragment in an element of the graphic user interface GUI of the user application pressing an element of the GUI of the user application closing the dialog window of the user application changing the text in an element of the GUI of the application and pressing a device button.

An exemplary system for controlling access of user applications to data using accessibility APIs for users with disabilities comprises a hardware processor of a user device configured to register on the user device a security application as a service for users with disabilities wherein the security application provides an accessibility API for the users with disabilities that comprises a plurality of accessibility API functions intercept using an accessibility API of the security application data accessed by a user application being executed on the user device determine by the security application a category of intercepted data intercept using the accessibility API one or more events of execution of the user application on the user device determine by the security application an access control policy for accessing the intercepted data based on the category of intercepted data and intercepted events and control using the accessibility API access of the user application to the intercepted data based on the determined access control policy.

An exemplary non transitory computer readable medium storing computer executable instructions for controlling access of user applications to data using accessibility APIs for users with disabilities including instructions for registering on the user device a security application as a service for users with disabilities wherein the security application provides an accessibility API for the users with disabilities that comprises a plurality of accessibility API functions intercepting using an accessibility API data accessed by a user application being executed on the user device determining by the security application a category of intercepted data intercepting using the accessibility API one or more events of execution of the user application on the user device determining by the security application an access control policy for accessing the intercepted data based on the category of intercepted data and intercepted events and controlling using the accessibility API access of the user application to the intercepted data based on the access control policy.

The above simplified summary of example aspects of the invention serves to provide a basic understanding of the invention. This summary is not an extensive overview of all contemplated aspects and is intended to neither identify key or critical elements of all aspects nor delineate the scope of any or all aspects of the invention. Its sole purpose is to present one or more aspects in a simplified form as a prelude to the more detailed description of the invention that follows. To the accomplishment of the foregoing the one or more aspects of the present invention include the features described and particularly pointed out in the claims.

Example aspects of the present invention are described herein in the context of a system method and computer program product for controlling access to data on mobile devices using an application programming interface API for users with disabilities. Those of ordinary skill in the art will realize that the following description is illustrative only and is not intended to be in any way limiting. Other aspects will readily suggest themselves to those skilled in the art having the benefit of this disclosure. Reference will now be made in detail to implementations of the example aspects as illustrated in the accompanying drawings. The same reference indicators will be used to the extent possible throughout the drawings and the following description to refer to the same or like items.

In one exemplary aspect the user device may also have a security application such as an antivirus application installed thereon which is configured to implement aspects of the system for controlling access to data of user applications using API for users with disabilities Accessibility API . In one exemplary aspect the security application may be registered on the mobile device as a system service for users with disabilities. For example a user may be prompted to install the security application as a service for users with disabilities also known as Accessibility Service . For this for example in the Android OS versions 5.x and earlier versions it is possible to open a tab for Accessibility system settings and install the security application as one of the providers of this service. Once registered as a system service for users with disabilities the security application receives from the OS access to events and data of user applications being executed in the isolated environment.

After installing or registering the security application as a system service for users with disabilities the user may specify using a user interface of the security application the parameters for this service including but not limited to the names of the user applications that have to be monitored by the security application types of events arising during the execution of user applications that have to be monitored by the security application the names of the user applications from which it is necessary to receive notifications upon occurrence of the events access rights of monitored user applications and other parameters.

In one exemplary aspect the security application includes an interception module a categorization module an access control module and a library of accessibility APIs functions for users with disabilities accessibility API functions . In one exemplary aspect the interception module is configured to intercept data accessed e.g. received by user applications executed in the isolated environment on the user device to using accessibility API functions . The intercepting may be done using API functions of services for users with disabilities such as a voice narration function e.g. the text being narrated is intercepted in clear form and at full volume by a dedicated accessibility API function of the security application screen magnifier function e.g. an image magnified on the screen of the user device is intercepted by a dedicated accessibility API function of the security application data output function to an external device supporting a Braille display e.g. data sent to Braille display is intercepted by a dedicated accessibility API function of the security application and other accessibility API functions .

In another exemplary aspect the interception module may be further configured to use the accessibility API functions of the security application to intercept various types of events of execution of the user applications such as pressing holding down of an element of the graphic user interface GUI of the user application shifting of focus to another element of the GUI of the user application selecting of an object in an element of the GUI containing a list of objects such as changing a selected element in ListBox or RadioButtonGroup changing of text in an element of the GUI of the user application displaying a window main or dialog window of the user application on the screen of the user device .

In one exemplary aspect the interception module transfers the intercepted data to the categorization module and information about the intercepted events to the access control module . In one exemplary aspect the information about the intercepted events contains the type of the event. In another exemplary aspect the information about the intercepted events contains a description of the element of the GUI of the user application with which the event occurred. In another exemplary aspect the information about the intercepted events contains a description of the window of the application with which the event occurred. It should be noted that in different exemplary aspects the information can be supplemented by other knowledge of the events available to the interception module .

In one exemplary aspect the categorization module determines the categories of the intercepted data. In one exemplary aspect the categorization module determines the type of intercepted data such as text a uniform resource locator URL an image an archive file and an executable application. In another exemplary aspect the categorization module may also perform an anti virus and or anti phishing analysis of the intercepted data. The anti virus analysis may include a signature analysis a heuristic analysis or a behavioral analysis of the intercepted data for presence of malware. The anti phishing analysis may include analysis of active control elements such as elements of the graphic user interface for entry of information using known anti phishing techniques. The antivirus and or anti phishing analysis of the intercepted data may be performed locally by the security application or with the assistance of remote network server or cloud service. As a result of this analysis the categorization module categorizes the intercepted data into different categories.

In one exemplary aspect the categorization module may categorize the intercepted data as safe or unsafe. Safe data may include data that does not cause any apparent harm to the user or user device such as clean text files clean image files clean executable files URL of safe websites and the like. Unsafe data may include computer viruses phishing scripts and other types of malicious data and code that may inflict harm to the user or user device such as disruption of the operation of the user device leakage or loss of confidential data financial losses and other harmful effects. For example if data has been considered harmful as a result of scanning by an anti virus or anti phishing module the categories of harmful URL or phishing URL may be added by the categorization module and data in these categories will be considered to be unsafe. In yet another exemplary aspect the categorization module may categorize the intercepted data as undesirable reflecting the presence of information in the data the content of which is not per se harmful to the user or user device but may be considered undesirable or unsuitable for certain users such as adult content with age restrictions drugs alcohol tobacco violence profanity weapons and other types of content categorized as undesirable by the user or the antivirus software.

The categorization module then sends categorization information about intercepted data to the access control module . In one exemplary aspect the transmitted categorization information may include category of the intercepted data e.g. safe unsafe undesirable . In another exemplary aspect the transmitted categorization information may also identify the type of intercepted data e.g. text file image file executable file URL etc. . In yet another exemplary aspect if the intercepted data is categorized as both unsafe and undesirable at the same time only information about unsafe category of data may be sent to the access control module as this category is more restrictive and harmful to the user.

In one exemplary aspect the access control module determines access control policies for permitting or blocking the access of the user application to the data based of the data categories determined by the categorization module and the events intercepted by the interception module . Then based on the determined access control policy the access control module permits or blocks access of user applications to the requested data using the APIs for users with disabilities.

The access control policies may be stored in an access control policies database provided by the security application . In one exemplary aspect the database can completely reside on the user device . In another exemplary aspect the database can reside at least in part on a remote server hosted by an antivirus company.

In one exemplary aspect an access control policy may allow access to data of a particular category e.g. safe category . In another exemplary aspect an access control policy may prohibit access to data of another particular category e.g. harmful category . In yet another exemplary aspect an access control policy may allow or prohibit access to data of a particular category based on type of the data e.g. allow undesirable text data but block undesirable images . Other variations of access control policies may be used in other aspects.

The access control module permits or blocks access of the user application to the data in accordance with the determined access control policy and information about the events occurring obtained from the interception module . In one exemplary aspect the blocking of access may be done using accessibility API functions .

In one example of blocking the access control module using an accessibility API function changes text being entered by the user this function is supported on the Android OS starting with version 5.0 . The event occurs when the user enters text into a graphic user interface GUI element of the user application after which the access control module replaces this text with star symbols . In this manner the user application does not see the actual text entered by the user. This helps to hide user s login information e.g. user name or password or sensitive personal information e.g. social security number or credit card details from phishing scripts running in the user application .

In another example of blocking the access control module using an accessibility API function fills the element of the GUI of user application when the focus is shifted to it event occurring with a specific text this function is supported on the Android OS starting with version 5.0 or clears the element of the GUI of the user application of the text entered. For example if the user enters text into a GUI element which has been found to be unsafe e.g. phishing element the text so entered may be replaced by the security application with another text which for example does not have references to user data .

In yet another example of blocking the access control module using an accessibility API function changes the active element of the GUI of the user application by shifting the focus to another element. For example when the user attempts to enter text or press a button an accessibility API function moves the curser to another GUI element thereby effectively blocking the element with which the user is trying to interact.

In yet another example of blocking the access control module using an accessibility API function may close a dialog window of the user application with which the user is trying to interact thereby effectively blocking that element from receiving data from the user.

In yet another example of blocking the access control module using an accessibility API function performs a pressing on a device button such as the Home or Back button thereby effectively preventing the user to enter data on an unsafe website.

In yet another example of blocking the access control module using an accessibility API function may display a blocking WARNING window over undesirable content which does not allow the user to see the undesirable content such as obscene language or image .

In yet another example of blocking when the event of opening a link occurs which has been found to be a phishing link the access control module using an accessibility API function may send a request to user application e.g. Web browser to open a page of the security application blocking page instead of the one which the user is trying to open.

In one exemplary aspect the security application may log the information data being entered and displayed by the user application . For example based on the results of the intercepted events the security application may inform the parent what the child is writing about in applications for instant messaging e mail social networks Internet etc. .

In another exemplary aspect the security application may track how many times the user has broken a certain access control rule or group of access control rules. The rules can be either security policies of the user device or scripts of user actions for example following a link in a web browser . The number of detected violations may be provided to another user for analysis and taking of appropriate disciplinary actions for example parents can receive information on the number of violations of the rules by a child or security officers in a company on the violations of the security rules by the employees .

In yet another exemplary aspect the security application may protect the user s data from leakage. Thus for example attempts by a user to send confidential or personal data may be blocked by the security application if a child or a company employee tries to send such data or in event of such data being sent to the user a warning may be displayed. For example in the event that the user application is found to be safe but an event occurs when the application accesses the personal files of the user the user is shown a warning and the send is blocked for example by replacing the active element of the application .

In yet another exemplary aspect the security application may ensure the anonymity of the user in a network. For example when registered with a resource e.g. website the user enters his login name and password the security application saves this data and uses depersonalized data when working with the resource e.g. Kaspersky User Id .

In yet another exemplary aspect the security application may keep track of the data being entered by the user in a user application in order to verify entered data for example to verify the strength of the password used by the user .

In step the security application which includes at least an interception module a categorization module and an access control module is registered as a system service for users with disabilities of the operating system on a user device .

In step the interception module using accessibility API functions for users with disabilities intercepts data received by the user application which is being executed in an isolated environment and sends the intercepted data to the categorization module .

In step the categorization module determines the category of the intercepted data and sends the determined category information to the access control module . In the process of determining the category the intercepted data may subjected to an antivirus or anti phishing analysis. In one exemplary aspect the data may be categorized as safe unsafe and or undesirable. In one exemplary aspect the categorization module also determines the type of intercepted data such as text URL image archive file or executable application.

In step the interception module using the accessibility API functions for users with disabilities intercepts events occurring during the execution of the application and sends the information about the intercepted events to the access control module .

In step the access control module determines access control policy for permitting blocking access to the data on the basis of the determined category of intercepted data and information about the intercepted events of the user application .

In step the access control module controls access of the user application to the intercepted data based on the determined access control policy. In one exemplary aspect the access control module may use accessibility API of the security application to allow or block access of the user application to the intercepted data. For example blocking of the access may include but not limited to changing the active element of the graphic user interface clearing a selection of a text fragment in an element of the graphic user interface pressing an element of the graphic user interface closing a dialog window of the application change the text in an element of the graphic user interface press a device button.

The personal computer in turn includes a hard disk for reading and writing of data a magnetic disk drive for reading and writing on removable magnetic disks and an optical drive for reading and writing on removable optical disks such as CD ROM DVD ROM and other optical information media. The hard disk the magnetic disk drive and the optical drive are connected to the system bus across the hard disk interface the magnetic disk interface and the optical drive interface respectively. The drives and the corresponding computer information media are effectiveness independent modules for storage of computer instructions data structures program modules and other data of the personal computer .

The present disclosure provides the implementation of a system that uses a hard disk a removable magnetic disk and a removable optical disk but it should be understood that it is possible to employ other types of computer information media which are able to store data in a form readable by a computer solid state drives flash memory cards digital disks random access memory RAM and so on which are connected to the system bus via the controller .

The computer has a file system where the recorded operating system is stored and also additional program applications other program modules and program data . The user is able to enter commands and information into the personal computer by using input devices keyboard mouse . Other input devices not shown can be used microphone joystick game controller scanner and so on. Such input devices usually plug into the computer system through a serial port which in turn is connected to the system bus but they can be connected in other ways for example with the aid of a parallel port a game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus across an interface such as a video adapter . In addition to the monitor the personal computer can be equipped with other peripheral output devices not shown such as loudspeakers a printer and so on.

The personal computer is able to operate in a network environment using a network connection to one or more remote computers . The remote computer or computers are also personal computers or servers having the majority or all of the aforementioned elements in describing the nature of a personal computer . Other devices can also be present in the computer network such as routers network stations peer devices or other network nodes.

Network connections can form a local area computer network LAN and a wide area computer network WAN . Such networks are used in corporate computer networks and internal company networks and they generally have access to the Internet. In LAN or WAN networks the personal computer is connected to the local area network across a network adapter or network interface . When networks are used the personal computer can employ a modem or other modules for providing communications with a wide area computer network such as the Internet. The modem which is an internal or external device is connected to the system bus by a serial port . It should be noted that the network connections are only examples and need not depict the exact configuration of the network i.e. in reality there are other ways of establishing a connection of one computer to another by technical communication modules.

In various aspects the systems and methods described herein may be implemented in hardware software firmware or any combination thereof. If implemented in software the methods may be stored as one or more instructions or code on a non transitory computer readable medium. Computer readable medium includes data storage. By way of example and not limitation such computer readable medium can comprise RAM ROM EEPROM CD ROM Flash memory or other types of electric magnetic or optical storage medium or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a processor of a general purpose computer.

In various aspects the systems and methods described in the present disclosure can be addressed in terms of modules. The term module as used herein refers to a real world device component or arrangement of components implemented using hardware such as by an application specific integrated circuit ASIC or field programmable gate array FPGA for example or as a combination of hardware and software such as by a microprocessor system and a set of instructions to implement the module s functionality which while being executed transform the microprocessor system into a special purpose device. A module can also be implemented as a combination of the two with certain functions facilitated by hardware alone and other functions facilitated by a combination of hardware and software. In certain implementations at least a portion and in some cases all of a module can be executed on the processor of a general purpose computer such as the one described in greater detail in above . Accordingly each module can be realized in a variety of suitable configurations and should not be limited to any particular implementation exemplified herein.

In the interest of clarity not all of the routine features of the aspects are disclosed herein. It would be appreciated that in the development of any actual implementation of the present disclosure numerous implementation specific decisions must be made in order to achieve the developer s specific goals and these specific goals will vary for different implementations and different developers. It is understood that such a development effort might be complex and time consuming but would nevertheless be a routine undertaking of engineering for those of ordinary skill in the art having the benefit of this disclosure.

Furthermore it is to be understood that the phraseology or terminology used herein is for the purpose of description and not of restriction such that the terminology or phraseology of the present specification is to be interpreted by the skilled in the art in light of the teachings and guidance presented herein in combination with the knowledge of the skilled in the relevant art s . Moreover it is not intended for any term in the specification or claims to be ascribed an uncommon or special meaning unless explicitly set forth as such.

The various aspects disclosed herein encompass present and future known equivalents to the known modules referred to herein by way of illustration. Moreover while aspects and applications have been shown and described it would be apparent to those skilled in the art having the benefit of this disclosure that many more modifications than mentioned above are possible without departing from the inventive concepts disclosed herein.

