---

title: Environment-aware security tokens
abstract: The technology described in this document can be embodied in a computer implemented method that includes receiving, at a processing device, information about one or more assets associated with a network of devices. The method also includes generating, for at least one of the assets, a security token that is based at least on a portion of the received information about the corresponding asset. The security token can be configured to identify a home network defined for the asset, and to restrict access to the corresponding asset upon detecting an occurrence of an unauthorized activity involving the asset. The method further includes storing, in a storage device, information about the security token and information linking the security token to the corresponding asset, and initiating integration of the security token with the corresponding asset.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09608980&OS=09608980&RS=09608980
owner: Document Dynamics, LLC
number: 09608980
owner_city: Jewett City
owner_country: US
publication_date: 20160815
---
This application is a continuation application and claims priority under 35 USC 120 to U.S. patent application Ser. No. 14 456 777 filed on Aug. 11 2014 the entire contents of which are hereby incorporated by reference.

Security tokens for authorizing use of computer services can be generated using a security architecture such as a shared secret architecture or a public key cryptography architecture.

In one aspect the technology described in this document can be embodied in a computer implemented method that includes receiving at a processing device information about one or more assets associated with a network of devices. The method also includes generating for at least one of the assets a security token that is based at least on a portion of the received information about the corresponding asset. The security token can be configured to identify a home network defined for the asset and to restrict access to the corresponding asset upon detecting an occurrence of an unauthorized activity involving the asset. The method further includes storing in a storage device information about the security token and information linking the security token to the corresponding asset and initiating integration of the security token with the corresponding asset.

In another aspect the technology described in this document can be embodied in a computing device that includes memory and one or more processors. The one or more processors can be configured to receive information about one or more assets associated with a network of devices. The processors can also be configured to generate for at least one of the assets a security token that is based at least on a portion of the received information about the corresponding asset. The security token can be configured to identify a home network defined for the asset and also to restrict access to the corresponding asset upon detecting an occurrence of an unauthorized activity involving the asset. The processors can be further configured to store in a storage device information about the security token and information linking the security token to the corresponding asset and initiate integration of the security token with the corresponding asset.

In another aspect the technology described in this document can be embodied in one or more machine readable storage devices that store instructions executable by one or more processing devices. These instructions when executed can cause the one or more processing devices to perform operations that include receiving information about one or more assets associated with a network of devices. The operations also include generating for at least one of the assets a security token that is based at least on a portion of the received information about the corresponding asset. The security token can be configured to identify a home network defined for the asset and to restrict access to the corresponding asset upon detecting an occurrence of an unauthorized activity involving the asset. The operations further include storing in a storage device information about the security token and information linking the security token to the corresponding asset and initiating integration of the security token with the corresponding asset.

Detecting the occurrence of the unauthorized activity can include determining a dissociation of the asset from the home network defined for the asset. The assets associated with the network can include one or more of a device connected to the network a file stored on a storage device connected to the network and a user profile associated with the network. The asset can be an electronic file and initiating the integration of the security token into the asset can include initiating an encryption of the asset based on the security token. The home network for the asset can be defined based on one or more security policies associated with the asset. The information can include one or more of a serial number of a device a media access control MAC address a file path a registry key a network identifier an internet protocol IP address a file type identifier a user profile identifier and one or more policies associated with the network. The information about the one or more assets can be received from an agent deployed on the network. The agent can be configured to scan the devices of the network to obtain the information. The agent can include an automated browser. The security token can include an object generated in accordance with Component Object Model COM . The security token can be generated in accordance with one or more security policies associated with the corresponding asset. Determining the dissociation of the corresponding asset from the home network can include determining that the corresponding asset is not connected to the home network. Determining the dissociation of the corresponding asset from the home network can include determining that the corresponding asset is not stored on a device associated with the home network. Determining the dissociation of the corresponding asset from the home network can include detecting an access attempt from a user profile not associated with the home network. The corresponding asset can be an electronic file and the security token can be configured to restrict access to the electronic file by deleting content of the electronic file upon determining the dissociation from the home network. The information about the security token and the information linking the security token to the corresponding identifier can be stored in a database. The corresponding asset can be an electronic file and initiating an integration of the security token into the electronic file can include initiating a code injection to a header portion of the electronic file. The corresponding asset can be an electronic file and initiating an integration of the security token with the electronic file can include initiating an encapsulation of the security token with the electronic file. The executable file can be generated via the encapsulation. The corresponding asset can be an electronic document and the security token can be integrated into the document as a portion of a page description language of the document. Information related to an access point attempting to access an asset can be received from the asset based possibly on information collected by the security token. A determination can be made based on the stored information about the security token whether the access point is associated with the security token. Permission information indicating a level of access permitted for the access point can be provided based on the determination.

In some implementations the technology described in this document may provide one or more of the following advantages. By using environment aware security tokens that include an identification of an authorized network often referred to as the home network network assets such as one or more devices user profiles and document files can be locked down within the authorized network. Security of data and other network assets can therefore be increased many fold. For example even if files are fraudulently copied and stored for example via a security breach on a non authorized device i.e. a device not authenticated to the authorized network the environment aware security token associated with the files can detect this dissociation from the home network and prevent unauthorized access to the files. Efficacy of malicious security breaches can therefore be mitigated by reducing usefulness of stolen data. In some implementations physical devices such as printers laptops phones mobile devices etc. can also be associated with environment aware security tokens such that the devices are functional only when connected to the authorized network. The environment aware security tokens can be configured to be user defined scalable and adaptive to provide a greater degree of control on accessibility of corresponding assets. For example the environment aware security token associated with a particular document can be configured such that the particular document is viewable only on a predefined set of computing devices within the authorized network.

Other features and advantages are apparent from the following detailed description and from the claims.

Security tokens are often used to give authorized users access to secure assets such as computing devices or files stored within the computing devices. Such security tokens can allow for example secure single sign on also referred to as S3 capabilities in systems that provide access to various resources. A security token can include for example a two factor authentication security mechanism that authorizes access to assets associated with a network. Security tokens can be stored on a general purpose computing device such as a desktop computer laptop computer or handheld wireless device e.g. a mobile phone e reader or tablet and used to access various assets e.g. files or documents using the computing device.

Some security tokens e.g. security tokens provided by a shared secret or public key cryptography architectures may be vulnerable to threats based on duplication of underlying cryptographic material. For example a malicious entity e.g. a human user such as a hacker or software entities such as a computer virus or other malicious software may breach the security of a network to steal data in the form of documents or other files. In such cases the stolen files may be stored on a storage device conveniently accessible to the malicious entity and content of the files may potentially be used in illegal or harmful activities. This can happen for example when a malicious entity attacks a financial institution such as a credit card company and is able to copy files that include sensitive user information such as username and password pairs. Such sensitive information can also be obtained directly from the users for example via phishing attacks. The sensitive information can then be supplied to a token generating authority e.g. a secure website to obtain the security tokens needed for accessing for example user accounts.

In a shared secret architecture a configuration file is typically generated for each end user. The generated configuration file can include for example a username a personal identification number and a configurable secret associated with the particular user e.g. answers to questions posed to a user . The security provided by the shared secret architecture is largely dependent on the configuration file. Therefore in the event the configuration file is stolen or copied the security provided by the shared secret architecture may be compromised.

Architectures such as public key cryptography or asymmetric cryptography provide some advantages over the shared secret type architecture by requiring two separate keys one of which is secret or private and the other public. The two keys are mathematically linked and can be used in conjunction to provide security. For example the public key can be used in encryption or to verify a digital signature and the private key can be used in decryption or to create a digital signature. However the security provided by architectures such as public key cryptography may also be compromised if both keys are stolen or duplicated.

The technology described in this document improves security of network assets documents files devices etc. by generating environment aware security tokens that are specific to the corresponding assets. The technology can be used both independently and in conjunction with other security technologies such as provided via third party software application or social network services. For example an environment aware security token for a document can be generated from environmental metrics associated with a network on which the document is authorized to reside. Examples of the environmental metric can also include various parameters associated with an asset such as asset name asset ID GUID or UUID asset class e.g. whether the asset is a device document user profile system data or security policy data security token keys security objects etc. Examples of parameters associated with a device include assigned addresses e.g. MAC addresses serial numbers device name device ID and security object status e.g. whether security object is attached or embedded whether the object is a null object etc. Examples of parameters associated with a user include user name user ID and user profile data structures e.g. data structures representing data on various user metrics . Examples of parameters associated with a document include document name document ID and document profile data structures e.g. data structures representing data on document metrics . Examples of parameters associated with system and security policy data include system name system ID security policy name security policy ID and data structures representing security policies.

The generated environment aware security token can be configured to include an identification of the particular network and can then be associated with the document to lock down the document to the particular network often referred to as the home network . The lock down can be such that the document cannot be accessed from any non authorized device for example a device that is not authenticated to the particular network. For example the environment aware security token can be embedded attached encapsulated or otherwise associated with the document in a way such that the environment aware security token deletes digitally destroys or otherwise prevents access to content of the document if the document is moved or copied to or attempted to be accessed from a device not authenticated to the home network. In some implementations the technology described in this document can be deployed in conjunction with other security architecture such as the shared secret architecture or public key cryptography architecture described above.

The technology described in this document can be used to control physical or virtual access to a physical or virtual storage location. In some implementations file system and document attributes can be used to generate environment aware security tokens that provide access to the storage locations and or encrypt file content. Various restrictions can be imposed based on the environment aware security tokens. In some implementations the environment aware security tokens can be used to restrict user s or device s from accessing an asset. In some implementations the environment aware security tokens can be used in restricting documents from being copied from the original storage location. Moreover file attributes can be configured such that corresponding environment aware security tokens can be used to prevent unauthorized copying and or downloading. For example the file attributes can be controlled via the attached or embedded security tokens e.g. embedded security objects that are verified by a token server with or without a hardware dongle.

In some implementations the technology can be implemented as a part of an operating system OS . For example the security layer provided by the technology can be used to acquire control over the file system of the corresponding OS to control operations such as read write and copy. The security layer can be used for example to control and verify various assets via attached encapsulated or embedded security objects. In some implementations for example where a security object is encapsulated together with the corresponding file or document into a separate entity e.g. an application or executable file the entity can be configured to destroy delete or otherwise digitally shred the contents of the file or document upon detecting dissociation from the home network. The dissociation can be detected for example when the entity fails to establish a connection with a token server that controls administration of the security objects. In some implementations the entity can also be configured to collect information on one or more metrics associated with the environment from where an access attempt is being made. For example in the event of a security breach e.g. a hack the entity can be configured to transmit details of the environment e.g. MAC address IP address device serial number etc. back to the token server.

Dissociation from the home network can encompass various situations. In some implementations the dissociation can include a physical connection loss with the home network. The home network can be defined or configured by choosing a set of assets devices user profiles storage locations files documents operating systems etc. that are authenticated to be associated with a particular asset such as a device or document. In some implementations the dissociation from the home network can include an access attempt from an asset or entity that is not included within the home network as configured for the asset on which the access attempt is being made. In one example the dissociation can include access attempt from a user profile not associated with the home network as configured for the corresponding asset. In another example a dissociation can include storing a particular asset at or accessing the particular asset from a storage location outside the home network as configured for the particular asset. In yet another example a dissociation can include disconnecting a device from a network including a physical network or a virtual network such as a virtual private network that is not a part of the corresponding home network.

The operating system can therefore be configured such that data cannot be removed from a home network without appropriate permissions for example explicit user and or device authorizations. The technology can therefore be configured to act as a gateway to physical and virtual storage locations on the home network or on registered devices with user s privileges. Documents can be assigned identifiers as they are stored in secure storage locations within the home network. Assets such as documents devices files and user profiles can be classified and a database of asset data can be created from data collected from the assets. Security objects such as environment aware security token can then be created from security keys defined based on the asset data.

In some implementations the technology described in this document provides improved security for various assets in a network. For example computing devices such as laptop computers desktop computers printers scanners servers storage devices network devices as well as electronic files stored within such computing devices can be made more secure via the environment aware security tokens described in this document.

In some implementations the assets include electronic files that can be stored accessed read processed or otherwise acted on by a device such as one or more of the devices associated with the network . The files can include for example documents software packages executable files binary files non binary files or other files that can be stored or processed electronically. The files can be associated with various applications and include various features. For example the files can include word processing documents spreadsheets text files drawing files data files e.g. database files and or information and multimedia files e.g. audio video system data files etc. . The files can be formatted in accordance with an application and or operating system associated with individual files. The formats of the files can be identified for example by an appropriate file name extension such as .exe for executable files .htm for hypertext markup language HTML files or .txt for text files . In some implementations the electronic files can include various types of records and files stored in different types of databases. For example the electronic files can include medical records academic records health records business records government records criminal records real estate records financial records social network data etc. The electronic files can be stored for example on a single device e.g. a laptop computer or server or can be distributed across several devices e.g. multiple servers multiple trays in a data center or multiple virtual machines in a distributed computing storage system such as a cloud based system .

In some implementations the electronic files include metadata information about the corresponding files. The metadata can include for example structural metadata that relates to design and specification of data structures and descriptive metadata that relates to additional information the data content. The metadata can include for example information on a location of creation of the document means of creation of the document time and date of creation of the document author or source of the document or the data within the document and security policies associated with the document. In some implementations the metadata information about a particular document can be used in generating an appropriate environment aware security token for the particular document. For example if the security policies included within the metadata establishes that the corresponding document can only be viewed by personnel from the Human Resources department of a company the environment aware security token for the document can be configured such that the document is viewable and or printable only on devices associated with the Human Resources department.

In some implementations the system includes a server that coordinates generation and distribution of environment aware security tokens . The server may also be referred to as a security token server or simply a token server. In some implementations the server receives asset information related to the various assets associated with the home network and generates the corresponding environment aware security tokens . In some implementations the server itself may be associated with an environment aware security token such that the server is not accessible from a device not included in a home network. Even though shows a single server multiple servers e.g. a server farm and or one or more remote servers can be used for implementing the functionalities of the server . The server can be a dedicated server or the functionalities of the server can be provided by a server that performs other tasks.

The asset information can include identification information related to the assets including for example one or more of a serial number of a device a media access control MAC address a file path a registry key a network identifier an internet protocol IP address a file type identifier a user profile identifier or other identifying information that identifies that a particular asset is connected to authenticated to or otherwise associated with the home network. In some implementations the home network may be defined by the serial numbers or MAC addresses of a group of physical devices such as the devices owned administered or otherwise controlled by a company or institution. In some implementations the asset information can include identification of electronic files and documents and or the corresponding storage locations on various devices associated with the home network. In some implementations the asset information can include user profile information that identifies various users authorized to access the assets associated with the home network.

In some implementations the asset information can also include various security policies related to the usage of the assets. The security policies can be retrieved for example from a storage device connected to or otherwise accessible from the home network. The security policies can be used possibly in conjunction with other asset information to create environment aware security tokens for one or more assets of the home network. The security policies can include for example an identification of devices or profiles of users also referred to herein as user profiles authorized to access a particular asset such as a document and can be configured for example by authorized personnel. The security policies for a company may specify that a particular document is viewable only by the board of directors. In such a case the environment aware security token for the particular document can be configured such that the document can be viewed only when accessed from a user profile associated with a member of the board of directors. The security of the document can be enhanced further by configuring the environment aware security token to allow access to the document only from personal devices associated with members of the board. The environment aware security token for the document can therefore be generated based on a selectable portion of the asset information . By allowing such configuration of the environment aware security tokens the technology described in this document can be made scalable granular and flexible to suit various types of security needs.

The server may obtain the asset information by employing one or more techniques. In some implementations the asset information may be obtained by deploying a network agent configured to gather information on the various assets. For example the network agent can be deployed by the server as a client application that is installed on the devices associated with the home network. In some implementations the client application can be pushed out by the server to the devices that authenticates to the home network. In some implementations the client application can be pre installed on various devices e.g. as a part of the corresponding operating system and authenticates to the home network when the devices attempt to communicate with the home network. In some implementations the client application itself may include a corresponding environment aware security token that prevents the application from executing when dissociated from the home network. In some implementations the network agent can be similar to the agents described in U.S. Pat. No. 7 190 478 and U.S. Pat. No. 7 872 772 the contents of which are incorporated herein by reference.

In some implementations the deployment of the network agent can be configured via a user interface such as the example depicted in . A user may be able to download and install the network agent on a device using the user interface which in turn may be launched using the client application . For example upon launching the client application the user may be presented with the user interface to authenticate a user profile and or device to the home network. This can be done for example via controls e.g. fillable text fields selectable radio buttons or other controls for entering credentials provided within the interface . Upon successful authentication the user may be directed to a storage location from which the network agent may be installed on the device. For example the user may be directed to a storage location that stores an executable file configured to install the network agent on the device. In some implementations authorized personnel e.g. a network administrator may be able to install the network agent on remote devices for example via the user interface . In some implementations the network agent can be configured to be deployed on a device automatically for example when a device registers with or authenticates to the server .

In some implementations the network agent can include one or more software package specific plug ins or add ins also referred to herein as document agents that are installed on devices associated with the home network. shows an example user interface where such a document agent is installed into the word processing application MICROSOFT WORD in this particular example . Such a document agent may allow a user to perform various configurations on a document for example to make the document compatible with environment aware security tokens and or specify security parameters of the document. For example the document agent may allow for example via a second user interface to specify whether a password would be required to access the document or if one or more actions e.g. printing editing copying etc. should be restricted. In some implementations the document agent can also be configured to communicate asset information i.e. information related to the document to the server . For example activating the control may initiate a communication between the document agent and the server to provide corresponding asset information to the server and receive an environment aware security token generated by the server based on the corresponding asset information . In some implementations the user interface can be configured to allow a user to specify user defined security parameters such as cypher keys or passwords to a document such that the document had additional protection for example against unauthorized internal access i.e. access associated with devices or user profiles associated with the home network .

In some implementations the document agent can also be configured to integrate the received environment aware security token into the corresponding document. For example the document agent can be configured to embed the received environment aware security token into the page description language PDL of a document. In general PDL is a language that describes the appearance of a printed page at a higher level than an actual output bitmap. Examples of PDLs include PostScript Printer Command Language PCL Portable Document Format PDF and mark up languages such as Open XML Paper Specification XPS and Hypertext Markup Language HTML .

In some implementations the document agent can be configured to encapsulate the received environment aware security token with the document to create for example an executable file. Such an executable file can be configured such that an execution point is verified to be within the home network based on the information within the encapsulated environment aware security token before an access to the encapsulated document is allowed. Upon determining that the executable file is being accessed from a location outside the home network or an otherwise unauthorized device or storage location access to the encapsulated document is prevented. In some implementations such as for high security applications any unauthorized attempt to access the executable file can cause a destruction e.g. by deletion or digital shredding of the encapsulated document. Other functionalities such as logging unauthorized attempts triggering one or more alerts or starting focused investigations etc. may also be initiated through operations of the agent and use of such environment aware security tokens.

Referring again to in some implementations the network agent is configured to scan for assets residing on devices and or storage locations and provide the obtained asset information to the server . In some implementations the network agent executes from the server or another device associated with the home network and polls other devices and storage locations of the home network to obtain the asset information . The obtained asset information can be associated with i.e. linked to a corresponding security token and the association or link information can be stored in a database.

In some implementations the obtained asset information is linked to a corresponding asset using identifiers assigned to the assets. Examples of such identifiers can include globally unique identifiers GUIDs universally unique identifiers UUIDs etc. Such identifiers may enable unique identification of the various assets within the system . For example one or more documents files devices and storage locations within the system may be uniquely identified using such identifiers. Depending on the finite size of the identifiers in some cases two different assets may share the same identifier. However the identifier size and generation process may be selected so as to reduce a probability of such an occurrence. In some implementations 128 bit values e.g. that are displayed as 32 hexadecimal digits such as 21EC2020 3AEA 4069 A2DD 08002B30309D can be used as the identifiers assigned to the various assets. The identifiers can be generated for example via deterministic random or pseudo random processes. Alternatively identifiers already associated with the assets e.g. identifier issued by the manufacturer the home network or users administrators of the home network can also be used.

In some implementations the network agent includes an automated browser also referred to as a robotic browser that obtains the asset information from some or all of the various devices and other assets associated with the home network. Such an automated browser can be used for example to collect information about devices on the network such as identifiers GUID UUID etc. associated with computing devices printers and or storage devices connected to the network. Such an automated browser can also be used for example to scan storage locations on various devices to identify asset information such as file attributes of files associated with operating systems of devices connected to the home network and or operating systems of devices connected to the home network via a remote login process e.g. via a virtual private network VPN . In some implementations the automated browser can be configured to attach identifiers such as GUIDs and UUIDs to the obtained asset information. In some implementations such an automated browser which may or may not be the same browser used for collecting information about the devices on the network can also be used to embed attach encapsulate or otherwise associate an environment aware security token with a corresponding document or other asset. For example the automated browser can be configured to include an environment aware security token into the header portion of a document via a process such as code injection implemented for example using a programming language such as JAVA . This can be done for example by providing the automated browser appropriate permissions to modify document attributes. Such permissions can be configured or modified based on the security context and group policies associated with the home network.

The server can be configured to generate corresponding environment aware security tokens for one or more assets associated with the home network based on at least a portion of the received asset information . The generated environment aware security token can be configured to control how and or by who the corresponding asset may be accessed. Once an environment aware security token is generated and linked to a particular asset the asset may be used only in accordance with the security policies encoded within the environment aware security token . For example the environment aware security token for a document can be configured to include an identification of the home network such that the document can be accessed only from devices connected to the home network. In some implementations the environment aware security token for a document or file can be configured such that the document is accessible only on a selected set of devices identified for example using serial numbers or MAC addresses and or using a user profile from an approved set. For example in a corporate setting the environment aware security token for a particular document can be configured such that the document is accessible only by management personnel identified for example by user profiles and or on devices e.g. laptops associated with the personnel.

The environment aware security tokens can also be used for increasing security and or controlling accessibility of hardware devices. For example an environment aware security token for a hardware device e.g. a printer scanner copier fax machine or multi function device MFD can be configured such that the hardware device would not function outside the home network. This can be useful for example in increasing device security in a corporate setting and or to prevent usage of corporate resources for personal use.

The process of generating the environment aware security tokens can be made scalable granular and customizable to provide flexible security solutions. For example the environment aware security tokens can be configured to control a level of access for various assets. For example the environment aware security token of a particular document can be configured such that a only a select group of people as identified by corresponding user profiles is able to change the content of the document but a larger group of people associated with the home network e.g. all employees of a company is able to view the document without being able to make any changes.

In some implementations the environment aware security token for an asset can be configured such that the asset may be viewed or accessed from outside the home network but no changes or edits to the asset may be made. This can be useful for example in a social network where a user registers a plurality of devices e.g. home computer office computer and personal mobile devices that the user plans to use in accessing the social network account. Environment aware security tokens can then be generated for each device for example by the social network service provider and associated with the corresponding user profile. In such a case the user is able to update the corresponding social networking account e.g. in the form of posts images videos etc. only from the devices that are associated with the user profile. This way even if the security of the account is compromised e.g. via a phishing attack that obtains the username password pair for the user account a malicious entity e.g. a hacker in possession of the account credentials would still not be able to make changes to the user account from devices that do not have the environment aware security tokens associated with the corresponding user profile. For example the malicious entity would not be able to post potentially embarrassing or harmful content to the user s account in spite of obtaining the credentials needed to log into the user s account. Security of other web based accounts such as e mail accounts online banking accounts trading accounts and e commerce accounts can therefore be increased by using environment aware security tokens to associate a predetermined set of physical devices with the corresponding accounts. In some implementations environment aware security tokens can be generated for a particular user of a social networking service for the network resources or assets associated with the corresponding user profile. Examples of such network resources and assets can include for example network segments storage locations and files associated with the user profile within the social network service infrastructure. In such cases even if the security of the social network service is compromised the user files stored within the infrastructure is protected by the additional security of the corresponding environment aware security tokens. In some implementations such additional security can be provided by the social network service for example in exchange for a fee for the same.

In some implementations the home network associated with a given environment aware security token can be configured by a user. For example for an environment aware security token associated with a credit card can be configured to block one or more types of transactions using the card. For example the environment aware security token corresponding to the card can be configured such that certain types of products or commodities may not be bought using the card and or the card may not be used at a predefined set of vendors. This can be useful for example in implementing parental control on add on cards given to young adults. For example the environment aware security token for an add on card can be configured such that the corresponding home network includes only on campus shops and vendors in a school. In such a case the environment aware security token of the add on card prevents usage of the card to buy merchandise from shops or vendors outside the campus. In some implementations an environment aware security token can also be associated with virtual instances of the credit card for example credit cards represented by online accounts or smartphone applications.

In some implementations the server can be configured to generate the environment aware security tokens as language agnostic objects that can be developed using various programming languages capable of accessing and processing binary data types such as the ones associated with the asset information . For example the environment aware security tokens can be implemented as objects generated using the Component Object Model COM standard that is a binary interface standard for software components developed by MICROSOFT. The standard can be used for example to enable inter process communications and dynamic object creation in a large range of programming languages. In some implementations language agnostic objects such as COM objects allow reuse of objects with no knowledge of the corresponding internal implementation. For example the objects may be implemented using interfaces that are agnostic to the implementation details. Different allocation semantics of various programming languages can be accommodated for example by making objects responsible for their own creation and destruction through processes such as reference counting. Reference counting can be used for example as a technique of storing the number of references pointers or handles to a resource such as an object block of memory disk space or other resource. Casting between different interfaces of an object can be achieved for example using query processes such as the QueryInterface.

In some implementations the server is configured to generate the environment aware security tokens for corresponding assets as objects e.g. COM objects using at least portion of the received asset information . For example an object corresponding to an environment aware security token can include data fields corresponding to the portions of the asset information used in generating the environment aware security token and procedures associated with intended functionalities of the environment aware security token.

In an object oriented programming paradigm the procedures associated with the functionalities may be referred to as methods. In some implementations the methods associated with an object corresponding to an environment aware security token can be related to for example one or more of the following functionalities i detecting environmental parameters for an asset associated with the environment aware security token ii authenticating the asset with a token server e.g. server iii allowing access to the asset upon authentication iv preventing access to the asset upon detecting a dissociation from the home network and or v tracking various activities related to accessing the asset.

The environment aware security token embedded or otherwise integrated with an asset can be configured to detect environmental parameters associated with the asset. For example if the environment aware security token is embedded into document metadata the associated object e.g. COM object or other security object can be configured to detect a serial number of the device that the document is being accessed from or stored on. The environment aware security token can be configured to detect one or more other environmental parameters such as user profile information security policies associated with the document a type of access being attempted on the document etc.

The environment aware security token of an asset can also be configured to attempt an authentication of the asset or the attempted use of the asset using the detected environmental parameters. For example the environment aware security token can be configured to communicate the detected environmental parameters to the server to receive an indication if access to the asset can be allowed. Alternatively the environment aware security token may also perform at least a portion of the authentication locally for example based on an identification of the home network encoded within the environment aware security token . If a connection to the server cannot be established for example due to loss in Internet connectivity a message may be displayed notifying the user that the asset cannot be accessed immediately. In some implementations the authentication can be triggered when an attempt to access the corresponding asset is made e.g. when a user attempts to open a document . The environment aware security token can also be configured to be synchronized with the server periodically for example after predetermined time intervals or when any changes to the corresponding asset is detected.

In some implementations upon determining that an access to the corresponding asset may be allowed the environment aware security token can allow access to the corresponding asset. For example upon determining that an authorized user is attempting to open a document as indicated for example by authentication information received from the server the environment aware security token can allow the user to access the document. The access may be allowed based on additional security policies associated with the document. For example the environment aware security token may allow a read only access to a document based on determining that the user attempting to access the document is not authorized to edit the document.

On the other hand if the environment aware security token determines that an access to the asset is unauthorized the access may be prevented. For example if the environment aware security token determines that a corresponding document is residing on a device that is not authenticated to the home network access to the content of the document may be denied. In high security scenarios e.g. for confidential or sensitive military or healthcare related documents the environment aware security token can be configured to destroy delete or digitally shred the corresponding document upon detecting unauthorized access attempts. This can be done for example to prevent any additional attempts to breach the security provided by the environment aware security token . Such procedures can of course be implemented selectively for example pursuant to guidelines that prevent deletion or destruction of original documents files or other assets due to accidental access attempts. In addition the technology described in this document can be used in conjunction with data back up and secondary storage techniques to prevent accidental permanent deletion of data.

In some implementations the environment aware security tokens can also be used for tracking usage of the corresponding assets. For example the environment aware security token associated with a document can be configured to log access information e.g. creation credentials time and nature of access attempts location of access attempts device ids etc. for the corresponding asset. The access information can be stored for example on a local storage device within an encrypted file system. The stored access information can then be synchronized with information stored at the server during subsequent communications between the environment aware security token and the server . In some implementations a separate agent such as a virtual private network VPN agent can be used to communicate the access information to the server . Such an agent may itself be associated with a corresponding environment aware security token and may use database management systems such as MySQL ORACLE or MICROSOFT SQL to manage communications with the server . In some implementations the access information may also be used to update the environment aware security token associated with the document. The environment aware security tokens can therefore be used to generate and maintain an audit trail of asset usage thereby further increasing security and accountability of asset usage.

In some implementations the asset usage log stored in the token database can be processed for example by an artificial intelligence system to learn trends associated with various assets such as devices user profiles and applications. Various types of machine learning techniques may be used by such an artificial intelligence system. For example various supervised unsupervised or semi supervised machine learning techniques can be used in identifying classifying or otherwise learning trends and or behaviors associated with the various assets. One or more tools can be used in implementing such machine learning techniques. Examples of such tools include decision trees artificial neural networks support vector machines Bayesian statistics classifiers Markov models and conditional random fields.

Information obtained by using the machine learning techniques on the asset usage logs can then be used in increasing security of the assets. For example if a malicious entity e.g. a hacker or malicious software tries to access an asset such as a document an agent can be configured to detect fraudulent behavior based on detecting a deviation from normal behavior as learned from the asset usage logs. For example if the log corresponding to a user profile shows that the user typically logs in within the first one or two attempts an occurrence of repeated failed log in attempts may be flagged as a potential security breach. In such cases the agent can be configured to capture identification of the accessing device e.g. IP and or MAC address of the device . If the agent detects malicious software e.g. a virus trojan or payload software the agent can be configured to detect the IP and or MAC address of the server the software communicates with or reports to . From the identification of the accessing device additional information such as geographical location manufacturer or serial number may also be determined. Such information can be used for taking appropriate action against the security breaches possibly with the help of law enforcement agencies.

In some implementations the environment aware security tokens generated by the server is stored within a token database accessible to the server . The token database may be stored in a storage device within the server or at a remote storage location or the remote server accessible to the server . The token database can be used to store information about the environment aware security tokens generated at the server . For example the token database may store information linking the environment aware security tokens to the corresponding asset identifiers such as the GUIDs or UUIDs. The information linking the environment aware security tokens to the corresponding identifiers can be used for example to identify home networks associated with the corresponding assets and or to authenticate access attempts on the various assets. For example if a user attempts to access a document from a particular device the server may authenticate the access attempt based on information linking a corresponding environment aware security token to the identifier associated with the document. In some implementations the token database also stores access information associated with the corresponding assets. For example if an asset such as a document is updated modified created deleted or otherwise acted on such access information can be stored in the token database linked for example to the corresponding asset identifiers.

In some implementations the server may also be implemented using a distributed computing environment such as a cloud based system. In such cases the server may be implemented on a pool of multiple virtual machines . A virtual machine can be a set of computing resources processors memory software etc. that can be used for executing computing tasks. The computing resources can be provided by one or more independent providers e.g. providers of cloud computing or other distributed computing services . The security of the virtual machines used to implement the server or portions thereof can be increased for example by associating the virtual machines with corresponding environment aware security tokens .

Operations can include generating a security token for an asset based on the received information wherein the security token is configured to identify the home network and restrict access to the corresponding asset upon determining a dissociation of the asset from the home network. The security token can be generated as a language agnostic object e.g. a COM object and can be embedded attached encapsulated or otherwise associated with the corresponding asset such that that security token deletes digitally destroys or otherwise prevents access to the asset if the asset is dissociated from the home network. In some implementations the security token can be generated in accordance with one or more security policies associated with the corresponding asset. The security can be substantially similar to the environment aware security tokens described above.

The dissociation of an asset from the home network can be determined in various ways. For example determining the dissociation of the corresponding asset from the home network can include determining that the corresponding asset is not connected to the home network or is not stored on a device connected or registered to the home network. In some implementations determining the dissociation of the corresponding asset from the network can include detecting an access attempt from a user profile that is not associated with the home network. In some implementations the determining the dissociation can include determining a deviation from security policies associated with the corresponding asset.

Operations also include storing information about the security token and information linking the security token to the corresponding identifier . The information can be stored for example in a database such as the token database described with reference to . In some implementations the information stored in the database may be updated based on for example how the various assets are accessed used or updated. For example the information stored in the database can include logs representing how where and by who a particular asset is accessed.

Operations can also include initiating integration of the security token into the corresponding asset . In some implementations initiating the integration can include providing the security token to an agent that performs the integration. For example the security token for a document can be provided to an agent that is configured to inject a code corresponding to the security token in a portion of the document. In some implementations the code injection can be performed for example by an automated browser such as the robotic browser described above. The code or object e.g. a COM object corresponding to the security token for a document or file can be injected within the metadata for the document file for example into a header. In some implementations the code or object corresponding to the security token for a document can also be embedded within a PDL of the document. In some implementations the security token can be encapsulated together with the corresponding document or file into a separate file. For example an agent or application can be configured to generate an application or executable file that encapsulates a security token e.g. a COM object with the corresponding document or file. The application executable file or a file including the security object can be stored for example as an encrypted document at a storage location. In some implementations information about the storage location of the encrypted document can be stored in the token database . In some implementations a distributed storage location e.g. a cloud based storage location can be used for storing the encrypted documents. The storage location can be defined to be a part of the home network for the corresponding asset. In addition by also threading or otherwise associating a predefined set of user profiles and or device profiles to the home network access to the asset can be restricted to be from within the home network defined for the asset.

During runtime access to an asset can be controlled based on information received from the corresponding security token associated with the asset. For example a security token can provide information on environment parameters associated with an attempt to access an asset. The environment parameters can include for example information on the access point user profile or security parameters associated with the asset. The received information may be compared to the stored information to determine whether the access attempt is considered to be from within a home network associated with the asset. Upon determining that the access attempt is indeed from within the home network and or satisfies security policies associated with the corresponding asset the access attempt may be authorized. This can be done for example by providing permission information that signals the security token to allow access to the asset.

In some implementations an asset such as a document embedded with an environment aware security token can be stored as an encrypted document within a secure storage location within the home network defined for the asset. The encryption used in storing the asset within the secure storage location can be based on for example a security key specific to a particular user. This can be used for example to store a user s documents within a storage system associated with a multi user system such as a social network service or e mail service. Access to the asset can be controlled for example based on detecting that the asset is stored at a storage location that is associated with the corresponding home network. In some implementations additional layers of security can be provided for example by checking whether the user profile and or device profile associated with the access request is authenticated to the home network. In some implementations access to the home network can be provided for example via a hyperlink e.g. such as one embedded in an email that is associated with an environment aware security token. A user or device that is not otherwise associated with the home network may be able to access an asset within the home network using such a hyperlink. In some implementations a user may be authenticated to the home network via an authentication request e.g. a request for biometric authentication that is associated with an environment aware security token.

The security technology described in this document can be used both independently and in conjunction with other security systems and architectures. For example the environment aware security tokens described above can be used in conjunction with security and cryptography techniques such as biometric identification symmetric keys asymmetric keys symmetric ciphers transport layer security and encryption techniques. For example security for an online account that uses secure socket layer SSL can be increased by associating the account with a corresponding environment aware security token to restrict editing capabilities to a user selected set of devices. In some implementations files e.g. system files data files documents voice files image files video files or web files stored on the home network can be stored with additional cryptography built into the security tokens utilizing for example a symmetric key unique to a particular authorized user.

In some implementations e.g. in high security scenarios the environment aware security tokens can be used in multiple layers to enhance security. For example a file encrypted with an embedded COM object can be further encapsulated with another COM object to generate a file with double layer security. By configuring the security policies of the two COM objects differently the security of the underlying file or document can be increased manifold. For example the security policies can be configured such that the higher and lower layer files may be opened using two separate user profiles thereby requiring not one but two separate personnel to be involved in accessing the file. The encapsulation can be scalable allowing additional security to be incorporated as needed for example via increased layers of encapsulations.

The technology described in this document can be used in various applications types of applications or combinations of applications. In some implementations the environment aware security tokens can also be used in identity verification services such as eAuthetication. Such identity verification services can be provided for example by a remote server to other distributed servers that are possibly distributed on the Internet or an intranet. Similar to credit card verification services that are provided by third parties to eCommerce web sites identity verification services can verify identity of users to entities such as web sites or intranet servers. Various networking protocols and application programming interfaces may be used by such identity verification services. Examples of such networking protocols include the Remote Authentication Dial In User Service RADIUS which is a networking protocol for providing centralized Authentication Authorization and Accounting AAA management for users that connect and use a network service. In some implementations the technology described herein can be used either in conjunction with or in lieu of such identity verification services to provide secure network based services. For example environment aware security tokens can be used to secure files associated with network based transactions such that the files are locked down to the physical attributes of the corresponding data center or server. Therefore even if a malicious entity e.g. a hacker obtains the transaction files for example via hacking the point of sale corresponding to the transactions the malicious entity could be prevented from opening the file to access the sensitive data included in the files. In another example credit card data can be protected using embedded environmental security tokens on the card such that the corresponding user profile can be accessed only from the home network data center or cloud service registered with the card. The home network information in turn can be stored in a file protected by another environment aware security token to prevent the home network information from being compromised.

The environment aware security tokens can also be used in securing mobile devices such as phones tablets or e readers. For example a phone or other mobile device can be associated with an environment aware security token. The environment aware security token can be configured such that in the event of theft biometric login or text login capabilities are suspended on detecting no activity or suspicious activity such as multiple log in attempt for a predetermined period of time. Because any harmful activities such as ones involving downloading files copying files or deleting files require login authentication with the home network the owners may get additional time to shut down the phone or mobile device to prevent theft of data.

The exemplary computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system . In some implementations the computing device can include a graphics processing unit. The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . Referring to the storage device could be examples of the storage device . In one implementation the storage device may be or contain a non transitory computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on the processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is an example only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provided as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory memory on processor or a propagated signal that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files and so forth and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant tablet computer or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well. For example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback . Input from the user can be received in any form including acoustic speech biometric or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a network such as the network described with reference to . Examples of networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers including remote servers . A client and server are generally remote from each other and typically interact through a communication network such as the network . The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

