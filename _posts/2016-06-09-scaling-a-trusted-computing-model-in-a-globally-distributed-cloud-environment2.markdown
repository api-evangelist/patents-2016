---

title: Scaling a trusted computing model in a globally distributed cloud environment
abstract: A distributed cloud environment system comprising: a repository; a plurality of cloud managed nodes with a client program interface; a plurality of service management components with a service management component interface; a central trusted computing platform service in communication with the repository, the plurality of cloud managed nodes and the plurality of service management components, comprising: a first interface for communication with the client program interface in each of the plurality of cloud managed nodes through a first single touch point; and a second interface for communication with the service management component interface for the plurality of service management components through a second single touch point. The central trusted computing platform service manages interaction of the plurality of service management components with the plurality of cloud managed nodes, and the interaction of the plurality of cloud managed nodes with the repository.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09614875&OS=09614875&RS=09614875
owner: International Business Machines Corporation
number: 09614875
owner_city: Armonk
owner_country: US
publication_date: 20160609
---
The present invention relates to scaling a trusted computing model in a globally distributed cloud environment and more specifically to scaling a trusted computing model in a globally distributed cloud environment through a central trusted computing platform service integrated with service management systems.

A trusted computing TC platform model provides a means to ensure elevated levels of trust and integrity of an operating system OS running on hardware. This is particularly useful in a distributed cloud environment where users require assurance that virtual machines VMs which are being used to carry out tasks for the user are running on a trusted cloud infrastructure . In other words ensuring that a trusted hypervisor or cloud managed node of a host operating system has a kernel that has not been maliciously changed.

A TC platform attestation program or client program on one or more VM in the cloud managed node runs on a kernel module and boot loader of hype . The kernel module and boot loader of hype provides measurements of data from the boot loader kernel kernel modules and configuration to the TC platform attestation program . A trusted platform module TPM processor provides the certificates for digitally signing the measurements .

The attestation program or client program on the VM sends attestation data to the attestation database that includes a hash of the measurement data of OS kernel module data boot loader programs and configurations. The attestation data may also be retrieved by the attestation program on the VM from the attestation database during boot time for verification.

The measurement data needs to be registered in an attestation database a first time as part of registration. During subsequent boots the attestation program can send the hash of the current measurements to compare against other measurements stored during registration in the attestation database to determine if the values are the same. If values are different there is an indication that the system parameters have essentially been tampered with potentially through an unauthorized change and therefore the system is classified as untrusted until the discrepancies have been resolved. It should be noted that the registration of the measurement data is repeated after every authorized change to the OS parameters including legitimate application of patches.

The TC platform client environment shown in creates multiple points of managing the trusted cloud computing platform from a service management perspective that is complex inefficient and thus not scalable in a distributed delivery center model.

For example if a user has several systems in a TC platform client environment both physical and virtual and the attestation database receives an input to register a new system along with the measurement data being supplied the attestation database cannot distinguish whether the request came from a legitimate system or not. While users often have a whitelist that includes an inventory of known systems stored in an asset management system there is no connection between the whitelist and the TC platform client environment .

In another example during a reboot of the host OS of the client cloud managed node needs to query the TC platform server to determine whether the cloud managed node or hypervisor has been tampered with before starting to host guest VMs. If the attestation database is down or unreachable for verification the host OS should not reboot but the host OS has no means of reporting the incident to a user since there is no means to propagate incidents to an incident reporting or ticketing system within the TC platform client environment .

In an alternate example when a legitimate OS patch or fix is to be rolled out to the host OS in a globally distributed cloud environment with physical hardware stacked up across global sites supporting the trusted computing platform the distributed cloud environment uses standardized patch management tools to automate the rollout. However none of the patch management tools can automate the re registration of the components of the system. At best the automation reaches an endpoint after applying the patch and asking or attempting to force the components of the system to re register. Therefore the patch management system has to inefficiently micro manage the TC platform client environment to determine if each of the components of the systems have their patches applied and if the measurements have been re registered.

In yet another example since clients are often charged additionally for running VMs on a trusted cloud infrastructure as the workloads require higher system assurance the cloud workflow and provisioning system of the service management needs to determine the inventory of the trusted cloud hypervisors or cloud managed nodes . Then the system has to determine whether the current state of the available host OS in the cloud managed node is currently in a trusted state. If it is then the available host OS provisions the VMs on the trusted hype. However the workflow and provisioning systems cannot perform the above steps with the TC platform systems as there is no such integration available.

A combination of the above examples is represented in . shows the large number of touch points integrations required in a distributed cloud environment.

According to one embodiment of the present invention a distributed cloud environment system. The system comprising a repository comprising data a plurality of cloud managed nodes comprising a client program which receives and sends measurement data to the repository and a client program interface a plurality of service management components comprising functions for managing service of the plurality of cloud managed nodes and a service management component interface and a central trusted computing platform service in communication with the repository the plurality of cloud managed nodes and the plurality of service management components. The central trusted computing platform service comprising a first interface for communication with the client program interface in each of the plurality of cloud managed nodes through a first single touch point and a second interface for communication with the service management component interface for the plurality of service management components through a second single touch point. The central trusted computing platform service manages interaction of the plurality of service management components with the plurality of cloud managed nodes and the interaction of the plurality of cloud managed nodes with the repository.

According to another embodiment of the present invention a method of a central trusted computing platform service managing an interaction of the plurality of service management components with a plurality of cloud managed nodes and an interaction of a plurality of cloud managed nodes with a repository in a distributed cloud environment system. The distributed cloud environment system comprising a repository comprising data a plurality of cloud managed nodes comprising a client program which receives and sends measurement data to the repository and a client program interface a plurality of service management components comprising functions for managing service of the plurality of cloud managed nodes and a service management component interface a central trusted computing platform service in communication with the repository the plurality of cloud managed nodes and the plurality of service management components comprising a first interface for communication with the client program interface in each of the plurality of cloud managed nodes through a first single touch point and a second interface for communication with the service management component interface for the plurality of service management components through a second single touch point. The method comprising the steps of the central trusted computing platform service sending a command to the client program interface and the service management component interface to register or deregister the plurality of cloud managed nodes and the plurality of service management components the central trusted computing platform service receiving data including at least a location measurement data and system data from the cloud managed nodes and the service management components the central trusted computing platform service authenticating the data received from the plurality of cloud managed nodes and the data of the plurality of service management components by searching in the repository if the data is authenticated the central trusted computing platform service comparing the location data to the data in the repository to match the location of the plurality of cloud managed nodes and the plurality of service management components and if the location matches the central trusted computing platform registering the plurality of cloud managed nodes and the plurality of service management components as trusted or deregistering the plurality of cloud managed nodes and the plurality of service management components as trusted and storing the data received from the plurality of cloud managed nodes and the plurality of service management components in the repository.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

It will be understood that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known e.g. software defined environment or software defined data center or later developed.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based e mail . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

Referring now to a schematic of an example of a cloud computing node is shown. Cloud computing node which may be a cloud managed node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is a computer system server which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with computer system server include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Computer system server which may be TC platform server may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Computer system server may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in computer system server in cloud computing node is shown in the form of a general purpose computing device. The components of computer system server may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processor .

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus.

Computer system server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system server and it includes both volatile and non volatile media removable and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . Computer system server may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of embodiments of the invention.

Program utility having a set at least one of program modules may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the invention as described herein.

Computer system server may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with computer system server and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via Input Output I O interfaces . Still yet computer system server can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system server via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system server . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as Private Community Public or Hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Referring now to a set of functional abstraction layers provided by cloud computing environment is shown. It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted the following layers and corresponding functions are provided 

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes in one example IBM zSeries systems RISC Reduced Instruction Set Computer architecture based servers in one example IBM pSeries systems IBM xSeries systems IBM BladeCenter systems storage devices networks and networking components. Examples of software components include network application server software in one example IBM WebSphere application server software and database software in one example IBM DB2 database software. IBM zSeries pSeries xSeries BladeCenter WebSphere and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide .

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients.

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provides pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and service management.

The TC platform client environment as shown in has a cloud managed node hypervisor and a cloud managed TC platform server . On the cloud managed TC platform server is an attestation database that includes measurements of data for devices or systems of the cloud managed nodes a central TC platform service and an attestation service .

Referring to the central TC platform service has three layers a security layer an interface layer and a service layer .

Within the security layer are components for authentication authorization audit and public key infrastructure PKI .

The authentication component includes programming for verification of the users with the user registry.

The authorization component is configured such that only authorized users are allowed to execute service components. For example the client though authenticated for accessing the TC platform client environment should not access an interface that is exposed for service management functions.

The audit component keeps a log of various authentications authorizations and administration activity of the central TC platform service . The audit component may also store audit events in an external component such as syslog.

The PKI component ensures secure communication with the trusted components VMs within the TC platform client environment. Public certificates from interfacing components for example VMs are stored on the central TC platform service . Other certificates might include those for the interface between the cloud managed nodes hypervisor and the central TC platform service or between the interface for the TC platform server and the central TC platform service . The public certificates may also be exported for import onto other interfacing components.

Within the interface layer are components for protocol switch delegation external interface mediation and user registry .

The protocol switch component provides support for a single protocol such as web service or representational state transfer REST and or supports multiple protocols through an enterprise application integration EAI layer which transports and provides protocol translation functions.

The delegation external interface component allows the central TC platform service to function as a service of services SoS and invoke services behind it such as an attestation service .

The mediation component provides for communication between the TC platform client service components and the service management components .

The user registry component includes user registration and is populated with the credentials of users who are expected to access the service.

Within the service layer are services for interfaces such as interface service implementation interface service implementation and a database and analytics component . The database and analytics component provides business performance data for example how many reboot registrations have failed over a specified duration how many systems succeeded in re registrations after a patch and quality of service parameters for response of requests.

The central TC platform service is located within the cloud managed server . The central TC platform service has a first interface service implementation for communication with the TC platform attestation program or client program on the VMs as indicated by the diagonally hatched box in . This is the only touch point between the hypervisor or cloud managed node and the central TC platform service in the TC platform server . The central TC platform service has a second interface service implementation for communication between the service management functions indicated by the cross hatched box in . This is the only touch point for all service management functions.

The central TC platform service is in communication with the attestation database . Alternatively an additional attestation service may be in communication with the central TC platform service and the attestation database or alternatively with the cloud managed nodes . The attestation service retrieve and verify the integrity of the cloud managed nodes from the attestation database based on stored data that may include the integrity of cloud managed nodes including data regarding when the cloud managed nodes were last verified location of the nodes and other metadata. From this data the attestation service can aid in selecting a cloud managed node that meets users requirements. The attestation service may also query the attestation database for cloud managed nodes which meet specified criteria for example that were validated within the last time period and verify the integrity report received from the cloud nodes and assign the cloud nodes to an integrity level as applicable.

The cloud managed nodes would assert their measurements and the attestation service would validate these against the attestation database. The attestation database would also then store data about the integrity of nodes such as when they were last checked location of the node and other metadata. The attestation service could then also query the attestation database for nodes which meet criteria e.g. validated within the last time period

The TC platform attestation program or client program on VMs of the cloud managed node runs on a kernel module and boot loader of hype . The kernel module and boot loader of hype provides measurements of data from the boot loader kernel kernel modules configuration to the TC platform attestation program or client program . A trusted platform module TPM processor provides the certificates for digitally signing the measurements .

The attestation program or client program on the VMs sends attestation data that includes a hash of the measurement data of OS kernel module data boot loader programs and configurations to the central TC platform service . The central TC platform service may communication the attestation data directly to the attestation database or to a attestation service which then communicates the data to the attestation database .

It should be noted that in an illustrated embodiment of the present invention the central TC platform service provides a limited number of touch points between the service management functions the cloud managed nodes and the TC platform server .

The touch points are indicated in as numbers inside of the circles. There is a single touch point shown as touch point for all service management functions between the central TC platform service and the service management function a single touch point shown as touch point between the cloud managed nodes and the central TC platform service and a single touch point shown as touch point between the central TC platform service and the attestation database .

Alternatively instead of single touch point between the central TC platform service and the attestation database an additional or alternative touch point shown as touch point may be present between the central TC platform service and an attestation service . Therefore if X is the number of service management functions and Y is the number of host OS TC platform client touch points then X Y is the number of integrations facilitated through a single central TC platform service.

In another illustrative embodiment it is recognized that each of the service management functions the systems for workflow and provisioning asset management patch management ticketing are in communication with the central TC platform service and not an endpoint.

In another illustrative embodiment it is recognized that the central TC platform service is a focal point for interaction with all of the TC platform attestation programs or client programs .

In another illustrative embodiment it is recognized that the central TC platform service may function as a service of services or wrapper service and contain services such as an attestation service .

In another illustrative embodiment it is recognized that the central TC platform service is highly available and distributed across global delivery center sites for better uptime and serviceability.

In another illustrative embodiment it is recognized that the service management functions need not register know or integrate with all TC platform client touch points in the distributed cloud environment which can number into the thousands saving on integration interfaces code and dependency created between the service management systems and the TC platform client programs and reducing the development and service costs to manage such an integration.

In a first step the TC platform client program or attestation program and service management components receive a register command to invoke TC platform service interfaces step .

The TC platform client program or attestation program and service management sends client credentials location details certification and attestation data measurement data to a central TC platform service through a single touch point step .

The TC platform client program or attestation program sends the data through a single touch point to the central TC platform service through a first interface and the service management sends the data for all of the components within the service management through a single touch point to the central TC platform service through a second interface .

The client credentials location details certification and attestation data measurement data may be used within the user registry component of the central TC platform service to set the authentication of the service management agents running on the hosts or users through the authentication component to setup public certificates through the PKI component to initialize the audit component and to establish that users have authorization through the authorization component .

The central TC platform service searches for credentials and entitlements of a user in a database for example the user registry component or some other database through the authorization component step .

If the credentials and entitlements for the user are not authenticated step for example through the authentication component of the TC platform central service communication to the central TC platform service would fail and the method ends. Prior to the method ending an error message may be written to a log. An alert or incident report may also be generated by the lack of contact between the cloud managed node and the central TC platform service and would be investigated further as appropriate.

If the credentials and entitlements for the user are authenticated step for example through the authentication component of the TC platform central service than the locations of the TC platform client program and service management components are compared to a known set of systems data within a database step for example the attestation database or another database.

If the locations do not match step communication to the central TC platform service would fail and the method ends. Prior to the method ending an error message may be written to a log. An alert or incident report may also be generated by the lack of contact between the cloud managed node and the central TC platform service and would be investigated further as appropriate.

If the locations match step the TC platform client program or attestation program and service management components are registered as trusted and the attestation data with client details from the TC platform client program is stored in a database step for example the attestation database and the method ends.

In a first step the TC platform client program or attestation program and service management components receive a deregister command to invoke TC platform service interfaces step .

The TC platform client program or attestation program and service management sends client credentials location details certification and attestation data measurement data to a central TC platform service through a single touch point step .

The TC platform client program or attestation program sends the data through a single touch point to the central TC platform service through a first interface and the service management sends the data for all of the components within the service management through a single touch point to the central TC platform service through a second interface .

The client credentials location details certification and attestation data measurement data may be used within the user registry component of the central TC platform service to determine the authentication of the users through the authentication component .

The central TC platform service searches for credentials and entitlements of a user in a database for example the user registry component or some other database through the authorization component step .

If the credentials and entitlements of the user are not authenticated step for example through the authentication component of the TC platform central service communication to the central TC platform service would fail the client programs are not deregistered and the method ends. Prior to the method ending an error message may be written to a log. An alert or incident report may also be generated by the lack of contact between the cloud managed node and the central TC platform service and would be investigated further as appropriate.

If the credentials and entitlements of the user are authenticated step for example through the authentication component of the TC platform central service than the locations of the TC platform client program and service management components are compared to a known set of systems data within a database step for example the attestation database or other database.

If the locations do not match step communication to the central TC platform service would fail and the method ends. Prior to the method ending an error message may be written to a log. An alert or incident report may also be generated by the lack of contact between the cloud managed node and the central TC platform service and would be investigated further as appropriate.

If the locations match step the TC platform client program or attestation program and service management components are deregistered as trusted and the attestation data with client details from the TC platform client program is stored in a database as being deregistered step for example the attestation database .

In a first step the TC platform client program or attestation program sends attestation data through the host OS to the central TC platform service during a reboot step . A hash of the attestation data or measurement data is sent through a single touch point between the attestation program or client program on the cloud computing node and the central TC platform service .

The central TC platform service receives the attestation or measurement data from the TC platform client program and validates that the request is from a legitimate registered host of a cloud managed node step for example through the authentication and authorization components .

If the registered host is not valid or legitimate step the attestation database would be updated to record that an invalid measurement was recorded by the cloud managed node step and communication to the central TC platform service would fail and the method ends. The update to the attestation database ensures that a potentially compromised cloud managed node is not selected for additional workloads. If the system has a strict policy the host may be prevented from booting. If the system has a loose policy the invalid host may be allowed to boot but an alert or incident may be generated through incident management in the ticketing system for investigation.

If the registered host is valid or legitimate step than the central TC platform service validates the attestation data or measurement data provided by the client program against the measurement data stored in a database on the TC platform server for example the attestation database step .

If the measurement data provided is not valid or not the same as the measurement data in the attestation database step the central TC platform service creates a ticket with incident management in the ticketing system through the service management interface step . For example an error message may be written to a log or an alert or incident report may also be generated by the lack of contact between the cloud managed node and the central TC platform service and would be investigated further as appropriate.

If the measurement data is valid or the same as the measurement data in the attestation database step the central TC platform service sends a response to the TC platform client programs on the host OS of validation step and the method ends.

In a first step service management pushes legitimate patches for the host OS of the TC platform program in the cloud managed nodes step . The service management functions handle patches through a patch management system .

The service management sends a list of systems in the cloud managed nodes for example through interface to the central TC platform service that have propagated the patches and need to be re registered step .

The central TC platform service receives the list of systems that have propagated the patch and validates the list of systems step for example through the authentication component .

The central TC platform service sends the validated systems present on the list a command to re register for example through the interface and the method repeats the steps of of .

In a first step a cloud workflow system and provisioning system receive a selection of VMs needed to run on a trusted cloud environment from user step .

A workflow system and provisioning system of the service management accesses the central TC platform service through the service management interface to determine a list of requirements for the client managed nodes and associated VMs in the trusted state step .

The workflow system validates the requirements for the VMs from the list of trusted cloud managed nodes that are available for immediate use step .

The cloud provisioning system provisions the available VMs on the trusted cloud managed nodes and sends notification to the user step and the method ends.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java Smalltalk C or the like. However the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Having thus described the invention of the present application in detail and by reference to embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims.

