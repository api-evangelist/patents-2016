---

title: Provision of applications to mobile devices
abstract: Embodiments related to the provision of applications to mobile devices are disclosed. One embodiment provides a mobile device application server system, comprising a database, a processor, and memory comprising instructions stored thereon that are executable by the processor to perform a method of providing applications to mobile devices. The method comprises receiving a first application configured to be run on a first mobile device type, storing the first application, receiving a second application configured to be run on a second device mobile device type, and storing the second application. The method further comprises receiving a request for the first application from a first mobile device of the first mobile device type, providing the first application to the first mobile device, receiving a request for the second application from a second mobile device of the second mobile device type, and providing the second application to the second mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09542498&OS=09542498&RS=09542498
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09542498
owner_city: Redmond
owner_country: US
publication_date: 20160405
---
This application is a continuation of U.S. patent application Ser. No. 14 228 941 filed Mar. 28 2014 which is a continuation of U.S. patent application Ser. No. 12 422 622 filed Apr. 13 2009 now U.S. Pat. No. 8 725 745 the entirety of each of which are hereby incorporated by reference for all purposes.

Various mobile devices including but not limited to smart phones netbooks other notebook computers personal media players and the like may be configured to allow a user to install and run various applications such as games utilities etc. Such applications may be provided by an internet connected service provider mobile service provider mobile device manufacturer mobile device software manufacturer and or third party via an application server that acts as an application store from which users can download applications sometimes for a fee.

In some environments a mobile device application server may be configured to provide applications to a single type of device e.g. single type of mobile phone from single manufacturer that operates on a single mobile network. Further in such environments users may obtain applications from a single source via a single distribution channel such as a desktop client running on a computer to which the mobile device is connected. Therefore due to the restrictions of such a use environment it may be relatively simple to ensure that devices requesting a list of available applications are sent compatible applications.

Various embodiments related to the provision of applications to mobile devices are disclosed herein. For example one embodiment provides a mobile device application server system comprising a database a processor and memory comprising instructions stored thereon that are executable by the processor to perform a method of providing applications to mobile devices. The method comprises receiving a first application configured to be run on a first mobile device type storing the first application receiving a second application configured to be run on a second device mobile device type and storing the second application. The method further comprises receiving from a first mobile device of the first mobile device type a request for a list of applications that are compatible with the first mobile device type determining a list of applications that comprises the first application sending the first mobile device the list of applications that comprises the first application receiving a request for the first application from the first mobile device and providing the first application to the first mobile device. The method further comprises receiving from a second mobile device of the second mobile device type a request for a list of applications that are compatible with the second mobile device type determining a list of applications that comprises the second application sending the second mobile device the list of applications that comprises the second application receiving a request for the second application from the second mobile device and providing the second application to the second mobile device.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

Embodiments are disclosed herein that relate to the provision of applications to mobile devices in use environments in which applications may be provided via multiple different distribution channels to multiple different types of mobile devices to devices running on multiple different networks mobile networks and computer networks running multiple different operating systems operating in multiple different geographic regions that may have different languages and regulatory environments that may use different currencies etc. It will be understood that the term mobile device as used herein may include any suitable mobile device including but not limited to smart phones and other cellular phones notebook computers such as so called netbooks portable media players personal digital assistants etc. Further the term mobile device application server may include any server configured to provide applications to mobile devices over any suitable communications channel.

Before discussing the provision of applications for mobile devices an example embodiment of a mobile device use environment is described with reference to . Mobile device use environment comprises a plurality n of mobile devices depicted as three mobile device mobile device mobile device mobile device n that are in communication with a plurality m of mobile networks depicted as two example mobile networks network and network m . Via mobile networks mobile devices may communicate with each other in various ways including but not limited to via voice data text messaging email etc. In the depicted embodiment three mobile devices communicating with two mobile networks are shown for the purpose of example but it will be understood that any suitable number of mobile devices may be in communication with any suitable number of mobile networks. Generally each mobile device will communicate preferentially with a mobile network associated with a mobile operator with whom a user has a billing account associated with the device but may connect to other mobile networks if that mobile network is not connectable e.g. out of range as indicated by the dashed line connection of mobile device to mobile network .

Each mobile device comprises memory configured to store computer readable instructions such as applications and other programs and a processor configured to execute the applications and other programs stored in memory . Generally programs include routines objects components data structures and the like that perform particular tasks or implement particular abstract data types. The term program as used herein may connote a single program or multiple programs acting in concert and may be used to denote applications services or any other type or class of program.

Mobile devices also may be in communication with a TCP IP data network such as a WAN as another channel of communication. For example as depicted in mobile device n may be configured to connect to a WAN such as the Internet via a wireless protocol such as 802.11a 802.11b 802.11g 802.11n or any other suitable protocol.

Mobile devices may communicate with a mobile device application provision system to obtain mobile device applications. The depicted mobile device application system comprises a mobile device application server and a database . The mobile devices may communicate with the mobile device application server via the mobile networks and or WAN . Application server further may be in communication with one or more databases represented by database in that store mobile device applications and various items of data related to the provision of applications to mobile devices. For example as depicted in the database may comprise application data . Such application data may include binary or other type application files that are downloadable by mobile devices actions that have been requested for such application files etc. While depicts direct connections between the mobile networks and the application server it will be understood that the mobile networks may connect to the application server via a computer network to which the application server and the mobile networks are connected.

The application data may contain applications provided by multiple developers and or vendors for multiple different types and brands of mobile devices each of which may run different operating systems including OEM specific fragmentations of common operating systems . Therefore the application data further may include metadata related to the application files that allow users of mobile devices to use search queries to locate desired applications that are compatible with the users mobile devices. The metadata that is stored as application data may comprise any suitable information. For example the metadata may include information regarding the device type operating system and mobile operator identity for which a particular application is intended for use. The application metadata also may include information regarding the cost of the application any promotional pricing changes or the like to be applied to the application information regarding the geographic markets and end user language for which the application is intended editorial content such as media and consumer reviews of an application any mobile operator related business policies that are to be applied to the purchase and or use of an application and or any other suitable type of metadata related to applications stored in the database . More information regarding such application related metadata is described below.

Database also may store device data . The device data may include metadata related to mobile devices that are provided by the various mobile operators using the mobile device application server to provide applications. The device data also may include information related to various policies e.g. business policies billing policies etc. of the mobile operators. More information on device related metadata is described below.

Database also may store user data . The user data may include data related to individual users including but not limited to a user s identity account number credit card debit card other payment mechanism type of mobile device used by each user geographic location of each user language preferences of each user applications previously downloaded by each user etc. This data may allow applications that are incompatible with a user s mobile device geographic location language etc. to be filtered from a database query for applications. More information describing such user related metadata is described below.

Continuing with the mobile device application server comprises memory configured to store computer readable instructions executable by a processor and or other logic components to perform the various tasks in the course of managing the provision of applications to mobile devices. For example such instructions may be executable to communicate with mobile devices over the mobile network and WAN to provide applications to synchronize state to revoke applications etc. to communicate with the database to execute search queries and communicate search results to the mobile devices and to perform various other functions and operations including but not limited to those described herein.

The mobile device application server also may be configured to provide applications to mobile devices via other communication channels. For example as depicted in a mobile device may be configured to be connected via a tether wireless connection etc. to a computing device such as a laptop or desktop computer to allow communication with the application server via the computing device . Such communication may take place via a desktop client installed on the computing device via a network based client web based client on mobile device application server executed via an Internet browser application or in any other suitable manner. It will be understood that such a browser also may be run directly on mobile devices .

End users of the mobile devices also may be able to load applications onto a mobile device in ways other than during a communication session with the application server . For example a removable media storage device such as a flash memory drive or the like may be used to side load an application onto a mobile device. The application may have been previously obtained for example via a desktop or web based client. In example side load scenarios are depicted as a removable storage medium coupled to mobile device and also a removable storage media receptacle connector provided on computing device . It will be understood that a mobile device may be configured to synchronize any state changes made via a side load with the mobile device application server upon the occurrence of a side load of new content.

Continuing with mobile operators may be able to interact with the mobile device application server via a mobile operator management console. A plurality x of mobile operator management consoles are shown as two example consoles but it will be understood that any suitable number of mobile operators may be in communication with the mobile device application server via any suitable number of management consoles. Each mobile operator management console may allow a mobile operator to submit new applications for inclusion in the database to submit updates and new versions to existing applications to submit promotions for applications to modify pricing business rules and other information related to specific applications to revoke applications and to take any other suitable action related to programs submitted by a mobile operator and or configured to be operated on devices that access the mobile operator s network.

Various other parties besides a mobile operator also may be able to submit applications and control various aspects of previously submitted programs on the mobile device application server . For example some programs may be provided by third party software developers and or vendors either affiliated with or not affiliated with a specific mobile operator. Such developers and or vendors may submit applications updates revocations etc. for inclusion on the mobile device application server via a developer console that may be provided for example as a part of a software development kit provided by the operator of the mobile device application server by a mobile operator etc. Likewise applications updates revocations etc. from a third party developer and or vendor may be submitted either through a mobile operator or directly to the application server via WAN or other suitable communication channel. A single developer console is shown for the purpose of example but it will be understood that any suitable number of developers and or vendors may communicate with the application server via development consoles.

It will be understood that mobile device use environment embodiment depicted in is shown for the purpose of example and is not intended to be limiting in any manner.

As described above mobile device application server may be configured to provide applications via multiple different distribution channels to multiple different types of mobile devices to devices running on multiple different networks mobile networks and computer networks running multiple different operating systems operating in multiple different geographic regions that may have different languages and regulatory environments that may use different currencies etc. This is in contrast to use environments in which in which applications are provided to a single device type via a single distribution channel.

The first application and second application may for example be two different versions of a single application provided by a single vendor that are configured to run on different operating systems on devices configured to run on different mobile networks etc. The first and second application also may be two unrelated applications whether provided by a single vendor or by different vendors that are configured to run on different device types. The term different device types and the like as used herein refer to mobile devices that differ in manufacturer operating system mobile operator and or any other characteristic that limits the ability of an application configured to run on one device from running properly on another device. The term different device types also may include differences in device type such as language regulatory legal requirements specific mobile operator policies etc. that may prevent a user in one geographic legal mobile operating space from enjoying the use of such an application in another geographic legal mobile operating space.

Continuing with method next comprises at receiving from a first mobile device of the first mobile device type a request for a list of applications that are compatible with the first mobile device type. This request may include for example information regarding the first mobile device that can be used to filter for applications that are compatible with the first mobile device. Next at method comprises determining a list of applications that comprises the first application for example via use of the filtering information and sending the list to the first mobile device. Next method comprises at receiving a request for the first application from the first mobile device and at providing the first application to the first mobile device.

Method further comprises at receiving from a second mobile device of the second mobile device type a request for a list of applications that are compatible with the second mobile device type. This request may include for example information regarding the second mobile device that can be used to filter for applications that are compatible with the second mobile device. Next at method comprises determining a list of applications that comprises the second application and sending the list to the first mobile device. Next method comprises at receiving a request for the second application from a second mobile device of the second mobile device type and at providing the second application to the second mobile device. In this manner each different type of device is presented with applications configured to run on that type of device.

The filtering information used to determine whether applications are compatible with a requesting mobile device may comprise information that identifies the manufacturer mobile operator operating system geographic region and other characteristics of the requesting mobile device. Further each list of applications may be additionally tailored to include applications that meet specific user selectable search parameters.

Therefore as described above various items of metadata may be stored in database to help assemble a list of suitable applications for a mobile device requesting to view a list of available applications. Some such metadata may be applied at the database level during a query of the database while other metadata may be applied as business rules against a search result set acquired in the database query. Further a requesting device may include various filtering information in its request to assist with the query. Examples of such filtering information include but are not limited to device identification information e.g. a device code that contains information regarding device capabilities device operating system device AKU adaption kit update mobile operator information e.g. mobile operator identification code and or market identification information e.g. currency language country etc. . A search request also may include additional filtering information that allows a list of applications to be further narrowed by user interest. For example a user may wish to see a list of most popular applications a list of most highly rated applications a list of free applications etc. It will be understood that these specific items of filtering information are disclosed for the purpose of example and are not intended to be limiting in any manner.

The logic layer comprises a cache a business logic layer and a business console . The cache may be used to store search result sets as described in more detail below. As the logic layer and the data layer may be located on physically separate machines including a cache at the logic layer may improve search performance for future queries where search results have been previously stored in cache . Search results may be stored in cache for any suitable time duration. Examples include but are not limited to TTLs time to live of one to five hours. In some embodiments the TTL may vary as a function of a rate at which new applications and or application state changes are received by the application server . Search results stored in the cache may be subsequently federated to multiple consumers of the information i.e. multiple mobile devices seeking the information.

The business logic layer may comprise business rules decision trees and other such logical components that aid in searching for applications. For example the business logic layer may comprise decision logic that determines whether the results of a search request have been previously stored in cache . Further the business logic layer and or business console may utilize various items of metadata for use in further filtering search results returned from a query of data layer via filtering parameters provided by requesting mobile devices. For example in some embodiments rules and policies that may change frequently i.e. some pricing information promotional information market related information may be implemented in business logic layer . Business console may allow an administrator to modify such business rules applied by business logic layer when desired. Other examples of business rules that may be implemented at the business console include but are not limited to the provision of custom promotional options for mobile providers the enablement of override and or acceptance of criteria evaluated when new content or changes to current content are provisioned to the application server by a software developer or software vendor and or the enablement of the ability to enable disable features and or otherwise modify the behavior of features of the application server .

Continuing the data layer comprises various groupings of metadata associated with applications that may be used to locate suitable applications for a specific requesting mobile device and that are logically grouped together. For example the data layer may include device related metadata market related metadata promotion related metadata mobile operator related metadata pricing related metadata subscription rate related metadata product family related metadata SKU stock keeping unit related metadata application versioning and update related metadata and application ratings and reviews related metadata .

The device related metadata may include such metadata as device operating system device type device operating system version and the like. The market related metadata may include such metadata as a country language currency etc. intended for a particular application. The market related metadata also may include information regarding local policies local laws and the like. As a specific example if a country does not allow applications to be sold that scan bar codes metadata regarding this specific location based exclusion may be contained within the market related metadata . The promotion related metadata may include for example information on editorially selected applications that reflect agreements with third parties information related to discounts e.g. coupons etc. and the like.

Continuing with the mobile operator related metadata may include any suitable mobile operator related information. For example the mobile operator related information may include a list of mobile operators with whom a mobile application provider does business specific policies of each mobile e.g. a list of other mobile operators that are considered competitors to a selected mobile operator and other such information. As a more specific example one mobile operator may wish not to have applications developed by that mobile operator shown to customers of other mobile operators even if the customers of the other mobile operators are using mobile devices with which the applications are compatible. Therefore metadata related to excluded mobile providers may be contained in the mobile operator related metadata . It will be understood that this example of an exclusion is presented for the purpose of example and is not intended to be limiting in any manner.

Next the pricing related metadata and subscription rate related metadata may contain specific pricing and or subscription rate metadata for each application. This may allow a user to search for applications based upon desired price rate ranges. The pricing related metadata also may include billing policies for mobile operators for specific applications etc. For example the pricing related metadata may include information specifying whether to bill a purchaser of an application through the mobile operator or via a credit card. The product family related metadata and stock keeping unit related metadata may allow tracking of specific items and or families of items for example for record keeping and tracking purposes.

The application versioning and updates related metadata may comprise metadata related to the tracking of application versions and updates for users that have previously been provided an application. Therefore the application versioning and updates related metadata may contain information used in a synchronization process with a mobile device to allow a user to determine if updates are available for the applications on the mobile device.

Continuing with the application ratings and reviews related metadata may comprise feedback from media reviews user reviews and any other suitable source of user feedback related to specific applications. This may allow a user to view reviews and ratings for a selected application and also may allow a user to search for applications based upon an application s ratings.

Next the data layer may include exclusions related metadata . The exclusions related metadata comprises such metadata as mobile operator policies regarding a mobile operator s exclusions of selected application types a mobile operator s exclusions due to competitive concerns exclusions due to legal concerns of specific jurisdictions and any other such exclusions. In some embodiments as depicted the exclusions may be applied as a thick layer of exclusion management separating the data layer from the logic layer such that the exclusions are applied after a search result set has been otherwise compiled from the other metadata in the data layer as depicted . In other embodiments not depicted the exclusions may be applied as a thin layer located at each group of metadata such that exclusions are applied separately to each group of metadata searched rather than as a thick layer.

The data layer further may include a catalog search grouping of metadata that allows searching based upon pricing ratings reviews and versioning updates. The catalog search metadata may comprise metadata to allow users to search for applications based upon selected categories of metadata including but not limited to whether or not an application is free and or whether an application has a certain rating level. Other items of metadata that may be contained within the catalog search metadata include but are not limited to device type operating system type phone type ISV independent software vendor identity etc.

Various interdependencies exist between the categories of metadata shown in . These interdependencies may arise for example from relationships between the data contained in each interdependent category. For example the catalog search metadata may be interdependent with the pricing metadata subscription rate metadata product family metadata stock keeping unit metadata application versioning and update related metadata and the application rating and reviews related metadata . Likewise the device related metadata market related metadata promotional metadata and the mobile operator related metadata also may be interdependent upon one another as well as with pricing metadata and rate metadata . These groups of interdependencies are indicated by arrows in . These interdependencies may affect various processes such as the intake and or updating of metadata in each category. For example changing one item of metadata in one class e.g. application versioning and updates may result in a change to other items of metadata in other classes e.g. pricing rates application ratings and reviews . Therefore an application update intake process may take into account these interdependencies to ensure that all metadata affected by the intake of one type of metadata is updated correspondingly.

Next shows database in as a plurality of database servers labeled SQL Servers . As shown in the data layer may be physically located on the database servers . The logical components of the data layer may be embodied in various manners in the physical architecture shown in . For example the data layer may comprise an attributes component that comprises various tables each having one or more attributes. In one embodiment each table corresponds to a group of metadata or a portion of a group of metadata as described with reference to and the attributes correspond to types of metadata within each group.

Further the data layer also may comprise a stored procedures component that comprises one or more stored procedures located on the database depicted as an arbitrary number N of stored procedures . The stored procedures contained within the stored procedures component may have any suitable function or functions. For example in some embodiments specific APIs in the API layer may be mapped to specific stored procedures to perform specific filtering. As a more specific example an API in the API layer may be configured to receive a search request that requests the return of a list of the most popular applications for that device. The API receiving the request may forward the filtering information contained in the request e.g. device type information market identification information and or mobile operator identification information to the stored procedure mapped to that API. Referring back to the stored procedure then may perform the database search e.g. using the catalog search metadata as filtered by the filtering information in the request to obtain an initial search result set. Any relevant exclusions stored in exclusions related metadata also may be applied via one or more stored procedures to return an intermediate search result set. Finally one or more business rules may be applied to produce a final search result set that is returned to the mobile device via the API layer.

Referring now to it will be understood that the various groups of metadata stored in the database servers may be implemented in various different locations within the physical and logical architectures. Specific examples of the implementations of some of the groups of metadata in one embodiment are as follows. First as mentioned above the exclusions related metadata may be implemented for example as stored procedures stored on the database servers. This implementation of the exclusions metadata may be suitable for example where the exclusions are to be implemented as a thick layer between the data layer and the logic layer as the use of stored procedures to implement exclusions may increase the efficiency and speed at which the exclusions are applied.

Next the device related metadata may be implemented in the attributes component of the data layer . Likewise the market related metadata may be implemented in each of the attributes component the stored procedures component and the business logic layer . As a more specific example of such an implementation device related information may be implemented at the attributes component to facilitate searching for applications suitable for a specific operating system and then at the stored procedures component to exclude any versions of an operating system not compatible with the device that requested the search.

Next the pricing metadata and subscription rate metadata may be implemented at each of the attributes component and at the logic layer . For example pricing metadata may be implemented at the attributes component for searching for applications and at the business console and or business logic layer for completing payment transactions for an application selected by a user for purchase for arranging a search result set to achieve a selected mixture of free and paid applications etc. Likewise the promotion related metadata may be implemented at the attributes component e.g. to assist in searching for applications at the stored procedures component e.g. for specific promotion related searches implemented in a stored procedure and in the logic layer e.g. for use by the business console to complete purchasing transactions . Continuing the application versioning and update related metadata the application ratings and reviews related metadata and the catalog search metadata also may be implemented at each of the attributes component the stored procedures component and the logic layer in a similar manner. Additionally the mobile operator related metadata may be implemented in attributes e.g. to facilitate searching for applications and in stored procedures e.g. to exclude applications based upon this metadata . It will be understood that the specific implementations of metadata usage described herein is presented for the purpose of example and is not intended to be limiting in any manner.

The first request may include various items of filtering information to facilitate a search for applications configured for use with the requesting mobile device. For example the filtering information may comprise market identification information e.g. code country language currency etc. device type information e.g. code operating system operating system version etc. and or mobile operator identification information . The filtering information also may include specific user directed filters to apply. Examples include but are not limited to filters to return a list of most popular applications a list of newest applications a list of most popular free applications a list of most popular paid applications a list of applications for a specific device e.g. a specified portable media player a list of editorially selected hot applications a list of categories of applications etc. In some embodiments these various specific filters may map to specific APIs configured to handle each of these user directed filters.

Continuing method next comprises at searching the metadata in the data layer via a stored procedure mapped to the first API to obtain a first initial search result set. The term initial search result set is used herein to apply to a database search result set that has not yet had exclusions applied. Continuing with method exclusions are applied at to the first initial search result set to form a first intermediate search result set. The term intermediate search result set is used herein to describe a database search result set that to which exclusions have been applied but no business rules have yet been applied at the logic layer. Method next includes at applying any relevant business rules to the first intermediate search result set to form a first final search result set. The final search result set may be cached at thereby federating the search results for access in subsequent searches sent by other requesting devices of the first device type.

The first final search result set is then returned to the first API and is sent to the first mobile device at . Where the first search request originated from a client on the first mobile device the first final search result set may be sent to the first mobile device via a first mobile network as indicated at . Likewise where the first search request originated from a computing device for example a desktop client or a web based client running on a browser on the computing device the first final search result set may be sent to the computing device via a computer network as shown at .

It will be understood that the first final search result set may include any suitable information to present to a user of the mobile device. For example the first final search result set may include title information artwork descriptions and or ratings and or reviews of each application found in the search. Along with the presentation of this information a mechanism also may be provided to download the application. It will be understood that these examples of metadata that may be included in the first final search result set are presented for the purpose of example and are not intended to be limiting in any manner.

Method next comprises at receiving at a second API a second search request from a second mobile device wherein the second search request contains a second set of filtering information . This filtering information then may be used to search the metadata contained within the data layer via a second stored procedure mapped to the second API to obtain a second initial search result set as indicated at . The second set of filtering information comprises any suitable filtering information that allows the identification of a set of applications configured to be run on the second mobile device. It will be understood that the second mobile device may be a different device type than the first mobile device e.g. different operating system different operating system version etc. . Therefore the use of the second set of filtering information to search for applications may result in the return of a different set of search results configured for use with a different type of mobile device than the use of the first set of filtering information.

Next method comprises at applying any relevant exclusions to the second initial search result set to form a second intermediate search result set and then at applying any relevant business rules to the second intermediate search set to form a second final search set which may be cached as indicated at for access by other devices of the second type that request subsequent searches. The second final search set is then sent to the second mobile device at . Where the second search request originated from a client on the second mobile device the second final search result set may be sent to the second mobile device via a second mobile network as indicated at or over the first mobile network if the first and second mobile devices run on the same mobile network . Likewise where the second search request originated from a computing device for example a desktop client or a web based client running on a browser on the computing device the second final search result set may be returned to the second API and then sent to the computing device via a computer network as shown at . It will be understood that the application server after sending the first final search result set to the first mobile device and the second final search result set to the second mobile device may receive requests for applications from each mobile device and then provide the requested applications to the mobile devices as described above with reference to .

It will be appreciated that the embodiments described above are extremely flexible and extensible to new device types and or metadata groups. For example new types of devices may be added to the architectures methods described above simply by assigning the new device types a device code that may be supplied as filtering information in an application search request. This device code may then be used as a filter in a database search to ensure that applications intended for the new device type are returned as search results.

An application intake process may be provided to facilitate the addition of new applications to the application server whether for known device types or new device types to further enhance the flexibility of the systems and methods. shows an embodiment of a method for the addition of a new application to database that illustrates various stages in the application intake process in which metadata may be submitted. First prior to submitting a new application method comprises at registering a software developer or vendor etc. to have its applications distributed by the mobile device application server . In this registration process various items of developer related metadata or vendor related metadata etc. may be submitted. These items of metadata may then be automatically associated with any applications submitted by the developer or vendor. Examples of metadata submitted at the registration stage include but are not limited to developer name partner identification number for recognized partners of the administrator of the mobile device application server address information email and website contact information company logo tax identification bank routing account information publisher identification information e.g. an identification provided by an approved certificate authority certificate authority information e.g. identification of the certificate authority that holds the publisher identification information and payment information e.g. information regarding how payment for an application purchase is to be made. It will be understood that these examples of metadata submitted in the developer vendor registration process are presented for the purpose of example and are not intended to be limiting in any manner.

Next method comprises at publishing a new application by submitting the new application to the mobile device server administrator e.g. via developer console and at entering a first set of metadata associated with the application. The first set of metadata may comprise any suitable metadata. Examples include but are not limited to content type e.g. stand alone application or widget application product name product version platform operating system supported devices e.g. by manufacturer model desired market as defined by language country and or currency e.g. English U.S.A. USD as well as functional information key descriptors screen shots image assets and signing information. Furthermore metadata related to capabilities of mobile devices utilized by the application also may be entered as device related metadata. Examples of such metadata include but are not limited to metadata related to audio keyboard directional pad memory expansion Bluetooth universal serial bus USB WiFi infrared communications still video camera capabilities accelerometer or other motion sensor touch sensitive input fingerprint scanner barcode scanner FM radio TV out and other such capabilities of a mobile device. It will be understood that these items of metadata submitted with an initial application submission are presented for the purpose of example and are not intended to be limiting in any manner.

Next the application is packaged at with additional data for use by a testing entity submitted for testing at queued for testing at and then undergoes testing at . Such testing may be performed by the mobile device server administrator or a third party certification authority to ensure that the application meets any applicable standards and that the application functions properly. Upon the completion of testing the developer is notified at that testing is complete e.g. via email or other suitable communications channel and code signing is completed at and to encrypt the application code. This may help to avoid man in the middle security attacks during transmission of the application code to a requesting device. The code signing process may or may not include a privileged mode approval as indicated at and .

Continuing with after the application is signed metadata in the form of sales metadata may be received at . Such metadata may include but is not limited to pricing by market keywords categorization promotion and discount related metadata and the like. Further any other suitable metadata may be submitted at this time. Upon receiving this metadata the application and all metadata may be published to the mobile device application server for download by customers.

It will be understood that the configurations and or approaches described herein for providing applications to mobile devices are presented for the purpose of example and not intended to be limiting because numerous variations are possible. The specific routines or methods described herein may represent one or more of any number of processing strategies. As such various acts illustrated may be performed in the sequence illustrated in other sequences in parallel or in some cases omitted. Likewise the order of the above described processes may be changed.

The subject matter of the present disclosure includes all novel and non obvious combinations and subcombinations of the various processes systems and configurations and other features functions acts and or properties disclosed herein as well as any and all equivalents thereof.

