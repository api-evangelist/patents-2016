---

title: Controlling visualization of data by a dashboard widget
abstract: Display data in a data graphical user interface (GUI) on a display device and display, by a processor, a control GUI on the display device representing the data. The control GUI includes a range defining visual element, corresponding to a data value, that is moveable via input received by the control GUI and defines two ranges of the data. The processor displays indicia associated with the range defining visual element indicating the corresponding data value. The processor receives input from the control GUI indicating the range defining visual element has been moved. In response, the processor visually emphasizes data in the data GUI having data values in a selected one of the defined data range.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09582171&OS=09582171&RS=09582171
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09582171
owner_city: Armonk
owner_country: US
publication_date: 20160419
---
The present disclosure relates generally to visualization of data and more particularly to controlling the visualization of data by a graphical user interface.

Conditional formatting and data highlighting exist in business analytics and business information applications making it easier to locate critical data from amongst the masses of data available. Typical report authoring software supports methods to highlight data that falls within desired data thresholds and zones with effects such as color bold font and flashing backgrounds. Various products provide menus to define the desired data thresholds and zones and to define the formatting options to support the authoring of conditional formatting for highlighting.

A typical way to display data is on a dashboard a dashboard being a visual display of the most important information needed to achieve one or more objectives. A dashboard consolidates and arranges information on a single screen allowing the information to be monitored at a glance. A dashboard may display data within predefined data thresholds and include visual highlighting of certain important information.

Embodiments of the present disclosure disclose a method computer program product and system for visualization of data. A processor displays data in a data graphical user interface GUI on a display device and displays a control GUI on the display device representing the data. The control GUI includes a range defining visual element corresponding to a data value. The range defining visual element is moveable via input received by the control GUI and defines two ranges of the data. The processor displays indicia associated with the range defining visual element indicating the corresponding data value. The processor receives input from the control GUI indicating the range defining visual element has been moved. In response the processor visually emphasizes data in the data GUI having data values in a selected one of the defined data range.

In computers a data widget is an element of a graphical user interface GUI that displays information. Data widgets may be displayed as part of a dashboard and may be any graphical representation of data including but not limited to tables charts lists crosstabs graphs forms text and maps. Typically the selection of key data within the data widget to highlight or conditionally format is neither intuitive nor interactive. Conditional formatting decisions for the data widget are typically pre defined and static preventing a dashboard user from easily and dynamically highlighting alternate data within the data widget. A business user may wish to more easily visualize new combinations of data presented in a data widget. Dynamically highlighting those various combinations in an intuitive way may improve dashboard usability. Embodiments of the present invention advantageously define a dashboard control widget to dynamically control the conditional formatting of a data widget on the dashboard. The dashboard control widget may allow for easier and more intuitive data highlighting control by providing the ability to dynamically alter highlighted data in the data widgets on the dashboard. Various embodiments of the dashboard control widget may include gauges dials slide bars tables and graphs. Control widgets may use interactive tabs and pointers to identify a range of data in a data widget to highlight with conditional formatting. For exemplary purposes only a gauge will be used as the control widget. A control widget such as a gauge empowers a dashboard user with limited technical skills to easily control data highlighting using the familiar widgets of business intelligence dashboards.

In various embodiments display device may be a touch screen which allows users to make selections move a cursor or drag and drop widgets by touching the screen via a finger or stylus. In general touch screens can recognize the size shape position and movement of the touch and output this information to computing device . In various embodiments display device may allow users to make selections move a cursor and drag and drop widgets using a pointing device such as a mouse. Any device that houses a display generally provides an Application Programming Interface API . APIs are typically provided to allow programs on computing device to obtain information from display device whenever a touch or click hereinafter event occurs on display device . Data widget events and control widget events may be recognized when a mouse pointer or touch has entered touched clicked dragged dropped moved or left the area of display device covered by control widget or data widget .

Computing device represents a computing device system or environment that includes one or more data widget routines one for each data widget on display device and one or more control widget routines one for each control widget on display device and rendering engine all of which may be stored for example on a tangible storage device such as tangible storage device s or removable tangible storage devices s .

Computing device may be a laptop computer a notebook computer a personal computer PC a desktop computer a tablet computer a thin client a mobile phone or any other electronic device or computing system capable of performing the required functionality of embodiments of the disclosure. Computing device may include internal and external hardware components as depicted and described in further detail with respect to . In other various embodiments of the present disclosure computing device may represent a computing system utilizing clustered computers and components to act as a single pool of seamless resources. In general computing device is representative of any programmable electronic device or combination of programmable electronic devices capable of executing machine readable program instructions in accordance with an embodiment of the disclosure.

Data widget routine and control widget routine may in an embodiment execute as a result of a data widget event or a control widget event on display device for the routine s respective widget. For example control widget routine may execute when display device detects data widget has been dragged and dropped onto control widget .

A drag and drop event performed on display device by either a mouse click or touch may wire data widget together with control widget creating a communication link that allows information to pass among the wired widget routines. This passed information includes an event name a payload of content data and a payload type. After widgets are wired together an event occurring in one of the wired widgets for example a mouse click of a cell in a table initiates the passing of information to the wired widgets routines. After the wired widgets routines receive the information a designated action takes place. For example a page refreshes and display device displays updated information. A drag and drop event that wires data widget with control widget also connects data widget routine and control widget routine establishing the link between the routines that enables control widget to control the conditional formatting of data widget .

In various embodiments data widget routine may manage the data values and conditional formatting for data widget . Data widget routine may communicate with rendering engine to establish initial conditional formatting for the data widget display and alter any conditional formatting as necessary whenever data widget is updated or refreshed on display device . Data widget routine may also communicate with control widget routine as a result of a control widget event on display device .

In various embodiments control widget routine may communicate with data widget routine to receive the managed data values for data widget and send formatting control information for data widget . Data widget routine may utilize the formatting control information to update the conditional formatting of data widget . Data widget routine may receive formatting control information from control widget routine for each control widget event on display device . In an exemplary embodiment control widget routine is associated with an exemplary gauge control widget or gauge. Control widget routine may in other embodiments support other control widget implementations.

Rendering engine may in an embodiment receive control from data widget routine to render the data widget associated with data widget routine for display on display device . Rendering engine will be specific to the graphical representation of data widget for example a chart rendering engine for a chart data widget. Typical rendering engines have known interfaces for receiving conditional formatting rules or conditional formatting definitions for a data widget.

Various embodiments may dynamically wire a data widget for example a revenue table whose formatting is to be controlled by a control widget to the control widget A B. In various embodiments the revenue table may be dragged and dropped onto the exemplary gauge B. The drag and drop gesture may be accomplished either by touch or mouse click. The exemplary drag and drop gesture may wire data widget routine for revenue table with control widget routine for gauge B and establish a communication link between them. In various embodiments after revenue table is dragged and dropped on gauge B control widget routine may execute as a result of the drag and drop event on display device . Control widget routine may send a get data request to the data widget routine wired to control widget routine to obtain the data used by revenue table . Certain embodiments may utilize a publish subscribe model to communicate. Control widget routine may listen for a sent data request from the wired data widget routine and receive payload data that may include but is not limited to the range of data values in revenue table all data values in revenue table and sample data values in revenue table . For example a drag and drop of revenue table onto gauge B sends a payload including the range of data values in revenue table 0 to 600 000 000 . Various embodiments may send a payload of all data values represented by a data widget even if the data widget displays only a subset of all the data. Control widget routine may utilize the received data ranges or data values to initially establish zones A B C and zone thresholds for each of the zones. Exemplary gauge B displays the results of a drag and drop of revenue table onto gauge B. Exemplary gauge B includes three zones A B C the zone thresholds divided equally among the zones for the revenue table data range of 0 600 000 000 i.e. zone thresholds of 0 200 000 000 400 000 000 and 600 000 000 .

In certain embodiments control widget may control the conditional formatting of a plurality of data widgets simultaneously or control various data widgets on the dashboard at different times. In an embodiment with multiple data widgets controlled simultaneously by a single control widget zones may reflect a superset of all the data ranges of the plurality of data widgets wired to the same control widget . All the data widget routines associated with the plurality of controlled data widgets may be able to communicate with control widget routine . Control widget routine may dynamically update zones and zone thresholds as data widgets are wired to and unwired from the control widget . In certain embodiments all the wired data widget routines may additionally communicate with each other.

After control widget routine determines the new range bound values control widget routine may send a highlight update event to any data widget routines wired to control widget routine with a payload that includes the range bound values zone threshold values and zone visual characteristics such as color . Data widget routine may listen for the highlight update event and update its conditional formatting information for data points within the range bound values utilizing the input zone threshold values and zone visual characteristics. Data widget routine may pass control to its rendering engine to re render the data widget based on the updated conditional formatting information that reflects the zone visual characteristics for data points within the input range bound values A B. Data widget routine may refresh display device with the re rendered data widget . Any data point in the re rendered data widget whose value is within the range bound values A B may be highlighted with its corresponding characteristic from the zone A B C. Range bound values may span multiple zones causing data widget data points to be highlighted with multiple visual characteristics each data point s visual characteristic corresponding to the visual characteristic of the zone A B C in which the data value resides.

The exemplary gauge and revenue table illustrate range bound values A B of 0 and 120 000 000 and revenue table data points between 0 and 120 000 000 highlighted with the visual characteristic of the gauge zone A B C. In certain embodiments a single range pointer A may be used separating the exemplary gauge into two ranges 0 range bound value A and range bound value A 600 000 000. The range bound values included in the payload to data widget routine may be determined by a gauge event such as a mouse click or touch on one of the two ranges or may default to either the lower range of data values or the higher range of data values.

After control widget routine determines the new zone thresholds A B C D control widget routine may send a highlight update event to any data widget routines wired to control widget routine with a payload that includes the range bound values new zone thresholds and zone visual characteristics such as color . As described above with reference to data widget routine may listen for the highlight update event update its conditional formatting information pass control to its rendering engine and refresh display device with the re rendered data widget that reflects the updated gauge zone thresholds .

The exemplary gauge and revenue table illustrate range bound values A B of 500 000 000 and 600 000 000 which span gauge zones . Revenue table data points between 500 000 000 and 600 000 000 are highlighted with the visual characteristics of their respective gauge zones A B C.

Computing device may at define the portions of the data represented by each zone A B C and set the zone thresholds when a data widget is wired to the control widget . The number of zones and visual characteristics of the zones may be pre defined implementation dependent or user specified. Control widget may represent the data values of data widget . The portions of the data represented be each zone A B C may be pre defined implementation dependent or user specified.

Computing device may receive input at from a control widget event whenever a range pointer A B or zone tab A B C D is moved. Certain embodiments may also receive input from additional control widget events such as a double click. In response to the control widget event computing device may at select the control widget data range to emphasize. In various embodiments the selected data range may be the data values between two range pointers A B. In certain embodiments with only one range pointer A or more than two range pointers the selected data range or data ranges may be pre defined or may require additional control widget events such as a mouse click or touch on the desired data range. In certain environments a control widget event such as a SHIFT mouse click may select more than one data range to be visually emphasized.

Computing device may at visually emphasize the data in data widget having data values in the selected data range s . The data in data widget may be visually emphasized for example by changing size changing color changing font changing background and applying special effects to the data. Certain embodiments may visually emphasize the data with the visual characteristics of the control widget zones representing the data in the selected data range s . Certain other embodiments may visually emphasize the data with pre defined implementation specific or user specified visual characteristics.

Although aspects of the invention have been described in relation to an exemplary embodiment that uses a gauge control widget and a table data widget those of skill in the art will recognize that other embodiments may be used. For example the data widget may be a chart map list text crosstab form graph or any graphical representation of data and the control widget may be a dial slide bar table graph or any graphical representation of a controller.

Computing device can include one or more processors one or more computer readable RAMs one or more computer readable ROMs one or more tangible storage devices device drivers read write drive or interface and network adapter or interface all interconnected over a communications fabric . Communications fabric can be implemented with any architecture designed for passing data and or control information between processors such as microprocessors communications and network processors etc. system memory peripheral devices and any other hardware components within a system.

One or more operating systems data widget routines control widget routines and rendering engines are stored on one or more of the computer readable tangible storage devices for execution by one or more of the processors via one or more of the respective RAMs which typically include cache memory . In the illustrated embodiment each of the computer readable tangible storage devices can be a magnetic disk storage device of an internal hard drive CD ROM DVD memory stick magnetic tape magnetic disk optical disk a semiconductor storage device such as RAM ROM EPROM flash memory or any other computer readable tangible storage device that can store a computer program and digital information.

Computing device can also include a R W drive or interface to read from and write to one or more portable computer readable tangible storage devices . Data widget routine control widget routine and rendering engine on computing device can be stored on one or more of the portable computer readable tangible storage devices read via the respective R W drive or interface and loaded into the respective computer readable tangible storage device .

Computing device can also include a network adapter or interface such as a TCP IP adapter card or wireless communication adapter such as a 4G wireless communication adapter using OFDMA technology . Data widget routine control widget routine and rendering engine on computing device can be downloaded to the computing device from an external computer or external storage device via a network for example the Internet a local area network or other wide area network or wireless network and network adapter or interface . From the network adapter or interface the programs are loaded into the computer readable tangible storage device . The network may comprise copper wires optical fibers wireless transmission routers firewalls switches gateway computers and or edge servers.

Computing device can also include a display screen a keyboard or keypad and a computer mouse or touchpad . Device drivers interface to display screen for imaging to keyboard or keypad to computer mouse or touchpad and or to display screen for pressure sensing of alphanumeric character entry and user selections. The device drivers R W drive or interface and network adapter or interface can comprise hardware and software stored in computer readable tangible storage device and or ROM .

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

Although preferred embodiments have been depicted and described in detail herein it will be apparent to those skilled in the relevant art that various modifications additions substitutions and the like can be made without departing from the spirit of the invention and these are therefore considered to be within the scope of the invention as defined in the following claims.

