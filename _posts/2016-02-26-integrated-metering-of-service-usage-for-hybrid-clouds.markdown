---

title: Integrated metering of service usage for hybrid clouds
abstract: A hybrid cloud environment is provided where a user of cloud computing services is disposed to consume cloud provided services delivered by each of a plurality of cloud computing service providers. Specified event data is received at an MCS component. The event data pertains to metering events related to the cloud provided services delivered by one or more cloud service providers. Event data include event data furnished by one or more entities that actively monitor metering events at one or more local or remote cloud service provider locations. Event data are sent from the MCS component to a metering system. The metering system generates reports from the event data that contains usage information on services provided by one or more cloud service providers. Information for a provider specifies amounts and quality of each type of service delivered to users by the provider.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09473374&OS=09473374&RS=09473374
owner: International Business Machines Corporation
number: 09473374
owner_city: Armonk
owner_country: US
publication_date: 20160226
---
The disclosure relates generally to data processing systems and methods and more specifically to systems and methods for using data processing resources provided as a service known as cloud computing.

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. For example cloud computing allows a consumer to obtain data processing resources such as networks network bandwidth servers processing memory storage applications virtual machines and services as a service on a temporary basis when needed. Several vendors are currently offering various cloud services. For example such services include infrastructure as a service platform as a service storage as a service software as a service and business process as a service cloud services. These services use vendor specific service request access and consumption models.

A consumer of cloud computing services may have its own data processing system resources. For example the consumer may be a business or other entity. The consumer may have invested in its own data processing system resources. These resources may include a computer network. The consumer s computer network provides a limited amount of processing capability and data storage resources. The consumer s computer network also provides specific data processing applications. The consumer s computer network may be located on premise and may be operated as a private cloud.

At certain times the consumer may require data processing resources beyond those available in its computer network. For example at certain times the demand for data processing resources may outstrip the capability of the consumer s computer network. At these times the response time of the consumer s computer network for some applications may increase to unacceptable levels. At other times the consumer may require data processing applications that are not available on the consumer s own computer network. For example the consumer may require at times the use of data processing applications that are not part of the consumer s core competency.

At those times when the consumer requires data processing resources beyond its own the consumer may purchase such resources as a service on a temporary basis from a provider of cloud computing services. For example the consumer may obtain additional processing or storage resources or specific application functionality as a service on a temporary basis from the cloud computing provider s data processing resources. Different types of service offerings may provide parts of the solution used in processing the consumer s workload. The provider s available data processing resources is known as a public cloud.

The consumer typically continues to operate its own computer network while some data processing resources are being obtained from a public cloud. Thus data processing resources from the public cloud typically are obtained in order to supplement the data processing resources of the consumer s own private cloud at certain times of need. The simultaneous and coordinated operation of data processing resources from multiple clouds may be referred to as hybrid cloud computing. For example operation of the consumer s private cloud along with resources obtained from one or more public clouds is a specific example of hybrid cloud computing.

In a hybrid cloud environment it can happen that a user receives resource services from two or more different service providers wherein all the resource services are integrated toward a common purpose. In the past this has resulted in certain problems and disadvantages. For example the metering and reporting of these services is typically performed by the service providers that respectively supply the services. Thus the metering and reporting information for services of a given provider is furnished to accounts set up with those who access or consume such services. Thus if a user consumes services from two or more cloud providers the user will get two or more separate usage reports and bills. This situation and other problems and disadvantages are addressed by embodiments of the invention as described hereafter in further detail.

According to an illustrative embodiment a computer program product is provided in association with a hybrid cloud environment wherein a user of cloud computing services is disposed to consume cloud provided services delivered by each of a plurality of cloud computing service providers. The computer program product comprises a computer readable storage medium having program instruction embodied therewith that are executable by a computer. Specified event data are received at a metering control service MCS component. The event data pertain to metering events related to the cloud provided services delivered by one or more cloud service providers of the plurality. The event data include event data furnished by one or more entities that actively monitor metering events at one or more local or remote cloud service provider locations. Processed aggregated event data are sent from the MCS component to a metering system. The metering system is operated to generate one or more reports from the processed aggregated event data that contains usage information on services provided by one or more cloud service providers of the plurality. The usage information for the given provider specifies a set of amounts and quality of each type of service that has been delivered to one or more users by the given provider.

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather the illustrative embodiments are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

For convenience the detailed description includes the following definitions which have been derived from the Draft NIST Working Definition of Cloud Computing by Peter Mell and Tim Grance dated Oct. 7 2009.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly release to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based e mail . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or consumer acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds and service interoperability.

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

Referring now to a schematic of an example of a cloud computing node is depicted in accordance with an illustrative embodiment. Cloud computing node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of the illustrative embodiments described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is computer system server which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with computer system server include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Computer system server may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Computer system server may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in computer system server in cloud computing node is shown in the form of a general purpose computing device. The components of computer system server may include but are not limited to one or more processors or processor unit system memory and bus that couples various system components including system memory to processor unit .

Processor unit executes instructions for software that may be loaded into system memory . Processor unit may be a number of processors a multi processor core or some other type of processor depending on the particular implementation. A number as used herein with reference to an item means one or more items. Further processor unit may be implemented using a number of heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnects PCI bus.

Computer system server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system server and it includes both volatile media non volatile media removable media and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache . Computer system server may further include other removable non removable and volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below system memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of embodiments of the illustrative embodiments.

Program utility having a set at least one of program modules may be stored in system memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating systems one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of the illustrative embodiments as described herein.

Computer system server may also communicate with one or more external devices such as a keyboard a pointing device display etc. one or more devices that enable a user to interact with computer system server and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via I O interfaces . Still yet computer system server can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system server via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system server . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

Referring now to an illustration of a cloud computing environment is depicted in accordance with an illustrative embodiment. In this illustrative example cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers may communicate. For example cloud computing node in is one example of cloud computing nodes . Local computing devices which may communicate with cloud computing nodes may include for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N. Cloud computing nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as private community public or hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A B C and N shown in are intended to be illustrative only and that cloud computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser . Program code located on one of cloud computing nodes may be stored on a computer recordable storage medium in one of cloud computing nodes and downloaded to a computing device within computing devices A B C and N over a network for use in these computing devices. For example a server computer in cloud computing nodes may store program code on a computer readable storage medium on the server computer. The server computer may download the program code to a client computer in computing devices A B C and N for use on the client computer.

Referring now to a set of functional abstraction layers is depicted in accordance with an illustrative embodiment. The set of functional abstraction layers may be provided by cloud computing environment in . It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and illustrative embodiments are not limited thereto. As depicted the following layers and corresponding functions are provided 

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes in one example IBM zSeries systems RISC Reduced Instruction Set Computer architecture based servers in one example IBM pSeries systems IBM xSeries systems IBM BladeCenter systems storage devices networks and networking components. Examples of software components include network application server software in one example IBM WebSphere application server software and database software in one example IBM DB2 database software. IBM zSeries pSeries xSeries BladeCenter WebSphere and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide 

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients.

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and pricing provide usage and cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provides pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and resource monitoring and management processing.

The different illustrative embodiments recognize and take into account a number of different considerations. For example the different illustrative embodiments recognize and take into account that many enterprises have an existing investment in information technology resources. These enterprises want to use their existing infrastructure software and management resources. Such enterprises at times also may want to augment their own data processing resources selectively with cloud based services. Thus for economic and functional reasons there may be a need to use on premise enterprise infrastructure platform applications or data and off premise cloud service infrastructure platform applications or data in an integrated manner.

The different illustrative embodiments recognize and take into account that in cases of cloud computing server network data and applications used in processing the enterprise workload may reside within an enterprise datacenter may be with partners of the enterprise or may reside over the Internet in a public cloud. Thus processing a workload using a combination of on premise enterprise resources and public cloud resources involves using some of the on premise infrastructure platform applications or data as well as some off premise cloud based services and data. Cloud computing solutions of this type may create integration interoperability and management problems.

For example the different illustrative embodiments recognize and take into account that cloud computing consumers desire to maintain a seamless interface across on premise and off premise cloud boundaries. However the governing policies for cloud operation and security related procedures always need to be in place. These competing requirements create the need for an integrated infrastructure and management solution that can span across the consumer datacenter and into one or more public cloud environments.

The different illustrative embodiments recognize and take into account that easy access to public cloud services allows such services to be consumed within an enterprise in a non centralized and unmanaged manner. De centralizing and moving data processing resources to off site vendors increases the complexity and time required to support them. Typically this complexity is only evident when the cloud resources being consumed are reported to the enterprise information technology department. Security and system governance lapses may result from this lack of management. Regulatory and business compliance may require policy based data sharing across a hybrid cloud. However current unmanaged methods for accessing cloud service resources cannot guarantee such compliance.

The different illustrative embodiments recognize and take into account that policy based workload management across a hybrid cloud and automated support of cloud computing services will reduce information technology costs. Such hybrid cloud management and support will improve security and compliance and thereby will increase enterprise adoption of cloud technologies.

The different illustrative embodiments recognize and take into account the desirability of a vender neutral and service specific interface to all clouds that provide a desired cloud service. The different illustrative embodiments also recognize and take into account the desirability of controlling cloud vendor selection based on business conditions.

A hybrid cloud integrator in accordance with an illustrative embodiment provides for integration of on premise infrastructure platform applications and data with public cloud based infrastructure platform services and data. A hybrid cloud integrator in accordance with an illustrative embodiment may be used to extend on premise datacenter capabilities by augmenting such capabilities with data processing capabilities provided in a public cloud. For example such cloud based capabilities may include infrastructure as a service or storage as a service capability. In accordance with an illustrative embodiment the desired solution for processing a workload may be implemented in a hybrid cloud environment that integrates multiple private cloud and public cloud based services.

A hybrid cloud integrator in accordance with an illustrative embodiment may be used to extend the reach of a consumer s on premise data processing management functionality to manage the data processing resource capabilities extended in a public cloud. In accordance with an illustrative embodiment a hybrid cloud computing environment including both private cloud and public cloud based services may be managed in a more effective manner as a single logical cloud of resources. Hybrid cloud integration in accordance with an illustrative embodiment allows policy based integration of infrastructure services and data across the hybrid cloud. In accordance with an illustrative embodiment management of the integrated infrastructure and services can be performed in a centralized manner. In this way workload specific actions can be taken consistently and in a vendor neutral manner even if the components of the workload are processed using multiple cloud based services.

A hybrid cloud integrator in accordance with an illustrative embodiment may comprise a hybrid cloud integration framework. Hybrid cloud integration components may be plugged in to the hybrid cloud integration framework as needed in a systematic manner.

The different illustrative embodiments recognize and take into account that current cloud based services accessible over the internet are provided by multiple vendors. Multiple vendors offer directly competing services. For example both IBM SBDTC and Amazon EC2 offer infrastructure as a service cloud services.

The different illustrative embodiments recognize and take into account that at present there is no centralized metering and accounting of cloud based services even when a user receives services from multiple providers and the services are all integrated for a common purpose. As a result if a user obtains services from two different cloud providers the user will get two separate usage reports and bills. Thus individual users must currently manage multiple cloud accounts. In an enterprise environment in addition to increased overhead the above situation creates significant challenges for enterprise CTOs and others.

In accordance with illustrative embodiments of the invention a centralized on premise metering and accounting tool is enabled to meter and aggregate the services supplied by each one of multiple cloud providers in a hybrid cloud. The metering data is then used for generating unified usage reports and for chargeback. The availability of such data also makes it much easier for an enterprise user to keep track of cloud based services consumed by employees in different departments or lines of business. Moreover embodiments of the invention can be readily employed to leverage volume based usage of external services and to create metering accounting and chargeback of composite and value added services built on top of core infrastructure and platform services. Embodiments of the invention can additionally be used to enhance the tracking of changes and emerging trends in the IT requirements across different user groups departments and business organizations.

Referring now to a block diagram of a data processing environment employing hybrid cloud integration is depicted in accordance with an illustrative embodiment. Data processing environment includes consumer data processing resources and provider data processing resources . In some embodiments provider data processing resources may be referred to as first data processing resources and consumer data processing resources may be referred to as second data processing resources or vice versa.

Consumer data processing resources may include data processing resources that are owned or controlled exclusively by consumer of data processing resources . For example consumer of data processing resources may be a business entity or other organization or enterprise that uses consumer data processing resources to process consumer processed consumer workload .

Consumer data processing resources may include any combination of data processing systems and devices for processing consumer processed consumer workload . For example consumer data processing resources may include any combination of data processing infrastructure networks processors data storage databases and applications.

Consumer data processing resources may include or may be referred to as private cloud . Consumer data processing resources may include data processing resources that are located on premise or may be referred to as being on premise . In this case on premise may mean that all of consumer data processing resources are co located in a single location that is owned or controlled by consumer of data processing resources that also owns or controls consumer data processing resources . Alternatively on premise may mean that consumer data processing resources are under the control of consumer of data processing resources for exclusive use by consumer of data processing resources even though some or all of consumer data processing resources are physically located in a number of remote locations.

Provider data processing resources are data processing resources that are available to be shared by a number of consumers of data processing resources including consumer of data processing resources . Provider data processing resources may include any combination of data processing systems or devices. For example provider data processing resources may include any combination of data processing infrastructure networks processors data storage or applications.

Provider data processing resources may be provided as services . For example provider data processing resources may be provided as services by public cloud . Public cloud makes provider data processing resources available to consumer of data processing resources as services . For example services may include one or more of infrastructure as a service platform as a service software as a service or other data processing related services.

At certain times consumer of data processing resources may use provider data processing resources to process provider processed consumer workload . Provider processed consumer workload typically is a portion of the entire consumer workload that consumer of data processing resources needs to be processed. In some cases provider processed consumer workload may be the entire consumer workload that consumer of data processing resources needs to be processed. For example consumer of data processing resources may use provider data processing resources to process provider processed consumer workload when consumer data processing resources are overloaded processing consumer processed consumer workload . At other times consumer of data processing resources may employ provider data processing resources to process provider processed consumer workload when processing of provider processed consumer workload is not one of the core competencies of consumer of data processing resources . As another example consumer of data processing resources may use provider data processing resources to process provider processed consumer workload when particular applications required to process provider processed consumer workload are not available among consumer data processing resources . In any case processing of provider processed consumer workload using provider data processing resources may require that a number of applications or data or both applications and data be provided to provider data processing resources in order to process provider processed consumer workload .

Thus at times the entire consumer workload being processed by or for consumer of data processing resources may be processed in part as consumer processed consumer workload on consumer data processing resources such as private cloud and in part as provider processed consumer workload on provider data processing resources such as public cloud . In this case the integration of private cloud and public cloud to process consumer workload for consumer of data processing resources forms hybrid cloud .

Operation of hybrid cloud requires communication between consumer data processing resources and provider data processing resources . However security concerns may require the prevention of unauthorized access to consumer data processing resources from provider data processing resources or from any other unauthorized sources. Therefore firewall may be provided between consumer data processing resources and provider data processing resources . Firewall is designed to block unauthorized access to consumer data processing resources by provider data processing resources or by any other resources on the internet while permitting authorized communications between consumer data processing resources and provider data processing resources . Firewall may be implemented in either hardware or software or using a combination of both hardware and software. For example without limitation firewall may be implemented in consumer data processing resources .

In accordance with an illustrative embodiment hybrid cloud integrator provides integration across consumer data processing resources and provider data processing resources to implement integrated data processing resources forming hybrid cloud . For example without limitation hybrid cloud integrator may be implemented by consumer of data processing resources on consumer data processing resources .

In accordance with an illustrative embodiment hybrid cloud integrator includes framework integration platform and number of plug ins . For example framework may be implemented in software as a software framework. Framework may be implemented on integration platform . Integration platform provides the underlying hardware and software required to implement hybrid cloud integrator . For example integration platform may include the hardware operating system and runtime environment in which hybrid cloud integrator is implemented.

Framework provides plug in interface . Plug in interface allows number of plug ins to be installed in hybrid cloud integrator . Plug ins are software components that are configured to provide functionality for integrated use of consumer data processing resources and provider data processing resources . Plug ins may include for example number of service deployment and integration components number of data integration components and number of management integration components .

In accordance with an illustrative embodiment service deployment and integration components may be used by consumer of data processing resources to deploy services in provider data processing resources that are needed to process provider processed consumer workload . Service deployment and integration components also may be used to integrate services deployed in provider data processing resources with consumer data processing resources to provide integrated data processing resources to process consumer workload .

Data integration components may be used by consumer of data processing resources to migrate replicate transform and integrate data used in processing consumer workload between consumer data processing resources and provider data processing resources . Service deployment and integration components and data integration components may be used to enforce workload and data specific deployment and integration policies specified by consumer of data processing resources .

Management integration components may include any components that may be used by consumer of data processing resources to monitor and manage the processing of provider processed consumer workload by provider data processing resources . For example management integration components may include monitoring integration components. Monitoring integration components may be used by consumer of data processing resources to monitor the processing of provider processed consumer workload by provider data processing resources in order to manage such processing. Management integration components may also or alternatively include metering components or secure connectivity management components or other management related components.

The operating characteristics of plug ins are defined by configuration data . In accordance with an illustrative embodiment framework provides service connectivity management function . Service connectivity management function allows current configuration data from plug ins and other information about plug ins to be made available to a user on user interface . Service connectivity management function also allows configuration data to be received from user interface for plug ins . Thus service connectivity management function provides a connection between plug ins and user interface allowing users to view and change the operating configuration of plug ins via user interface .

Framework also provides runtime management function . Runtime management function provides for managing operation of plug ins during operation thereof. Specifically runtime management function may provide for activating plug ins and for controlling operation of plug ins after plug ins are activated.

Framework also may provide for communication between plug ins . Communication between plug ins allows plug ins to interact with each other. For example communication between plug ins allows one of plug ins to access and make use of the functionality provided by another of plug ins in framework .

In accordance with an illustrative embodiment hybrid cloud integrator provides flexible and reliable automated integration of data processing resources to process a workload. For example hybrid cloud integrator may be used by workload manager to access provider data processing resources automatically when needed to supplement consumer data processing resources . Hybrid cloud integrator also may be used by workload manager to monitor the operation of provider data processing resources while processing provider processed consumer workload .

Workload manager provides automated workload management . Automated workload management includes automatically managing workload processing on available data processing resources. An example of a system that provides this type of automated workload management is the IBM Tivoli Service Automation Manager TSAM available from International Business Machines Corporation. Illustrative embodiments may be used however in combination with any currently available workload manager providing automated workload management functions or with any workload manager that may become available in the future. Illustrative embodiment also may be used in combination with workload managers in which automated workload management functions are implemented in combination with a human operator.

Workload manager may provide automated workload management based on policies . Policies define the limiting parameters under which workload manager may use available data processing resources. For example policies may define when or under what conditions workload manager may use provider data processing resources to process consumer workload . Policies also may specify which specific provider data processing resources may be used to process consumer workload . Policies also may specify consumer data that may be replicated and accessed by provider data processing resources and the portion of consumer workload that may be processed by provider data processing resources . Policies may specify security and privacy constraints that must be applied for processing consumer workload by provider data processing resources .

Policies may be developed using business rules management engine . Business rules management engine may take into consideration a variety of business related and other factors to determine policies . For example factors used by business rules management engine to determine policies may include financial security compliance and customer relations factors or others.

Workload manager may provide automatic policy based provisioning based on policies . For example policy based provisioning may call for the provisioning of provider data processing resources to process provider processed consumer workload . In this case workload manager may use hybrid cloud integrator to deploy provider data processing resources needed to process provider processed consumer workload . For example service deployment and integration components may be used to deploy services in public cloud that are needed to process provider processed consumer workload . Service deployment and integration components may establish communication with provider data processing resources through firewall . For example such communication may be established via application programming interface portal in public cloud . Applications data or both applications and data needed for processing provider processed consumer workload may be provided to provider data processing resources by workload manager via hybrid cloud integrator .

Hybrid cloud integrator also may be used to establish workload processing image in public cloud . Workload processing image pre defines services needed to process provider processed consumer workload . By establishing workload processing image in advance provider data processing resources needed to process provider processed consumer workload may be deployed more rapidly when workload manager determines that provider data processing resources will be used for this purpose.

In accordance with an illustrative embodiment hybrid cloud integrator allows workload manager to access provider data processing resources as easily as consumer data processing resources . Plug ins in hybrid cloud integrator handle all of the special requirements of provider data processing resources needed to access those resources.

In accordance with an illustrative embodiment hybrid cloud integrator also provides for monitoring and management of the processing of provider processed consumer workload by provider data processing resources . For example service deployment and integration components may be used to deploy services in public cloud to implement provider processing monitoring agent . Provider processing monitoring agent collects data for monitoring the processing of provider processed consumer workload by provider data processing resources . Similarly consumer processing monitoring agent may be implemented in consumer data processing resources . Consumer processing monitoring agent collects data for monitoring the processing of consumer processed consumer workload by consumer data processing resources .

Data from consumer processing monitoring agent may be provided to monitoring infrastructure . Monitoring infrastructure may be implemented in consumer data processing resources . Due to the security provided by firewall provider processing monitoring agent may not be allowed to push data to monitoring infrastructure on the other side of firewall . In accordance with an illustrative embodiment during runtime monitoring components that are part of management integration components installed in hybrid cloud integrator may activate provider side monitoring gateway in provider data processing resources . Provider side monitoring gateway may be deployed in provider data processing resources using service deployment and integration components installed in hybrid cloud integrator . Data from provider processing monitoring agent is provided to provider side monitoring gateway . Monitoring components in hybrid cloud integrator may retrieve the monitored data from provider side monitoring gateway via connection . The monitoring components in hybrid cloud integrator then may provide the monitored data from the provider side of hybrid cloud to monitoring infrastructure . From the point of view of monitoring infrastructure the monitoring components in hybrid cloud integrator provide monitored data for provider side services in the same manner as consumer processing monitoring agent provides monitored data for consumer data processing resources .

Connection may be implemented using a hybrid cloud monitoring plug in in hybrid cloud integrator . For example the hybrid cloud monitoring plug in may be one of management integration components in hybrid cloud integrator . The monitoring plug in may enable hybrid cloud monitoring by setting up and configuring provider side monitoring gateway and consumer side monitoring gateway . For example consumer side monitoring gateway may be implemented in hybrid cloud integrator on the consumer side of hybrid cloud . Consumer side monitoring gateway connects to provider side monitoring gateway negotiating firewall . Consumer side monitoring gateway also connects with monitoring infrastructure in consumer data processing resources . Using connection to provider side monitoring gateway consumer side monitoring gateway may pull monitored data for provider data processing resources that is collected by provider side monitoring gateway across firewall and then push the data to consumer side monitoring infrastructure .

In one embodiment as just described connection is implemented via hybrid cloud integrator to provide access through firewall to information for monitoring the processing of provider processed consumer workload in public cloud by monitoring infrastructure . In other embodiments connection may be implemented separately from hybrid cloud integrator . For example using a virtual private network a secure connection may be established between monitoring infrastructure and provider data processing resources processing provider processed consumer workload in public cloud to implement a connection through firewall without using the resources of hybrid cloud integrator .

Monitoring infrastructure thus may receive monitoring information for provider data processing resources that is obtained by provider processing monitoring agent and monitoring information from consumer processing monitoring agent for consumer data processing resources . Monitoring infrastructure may process the received monitoring information to generate an integrated display of workload processing conditions for provider data processing resources and consumer data processing resources . This integrated display may be presented to a user such as a system administrator on monitoring station . Thus in accordance with an illustrative embodiment a display of workload processing conditions across hybrid cloud may be presented to a user in an integrated manner. Such an integrated display allows a user to monitor and manage workload processing across hybrid cloud in an integrated effective and efficient manner.

Monitoring infrastructure also may look for and detect the occurrence of events from the monitoring information provided by provider processing monitoring agent and consumer processing monitoring agent . Events may be defined by the occurrence of specified conditions or patterns in the monitored data. For example monitored data exceeding a defined threshold for at least a specified time period may indicate the occurrence of one of events . In accordance with an illustrative embodiment events may be defined by the occurrence of any condition state or pattern of interest in the monitored data provided by provider processing monitoring agent and consumer processing monitoring agent .

Events may be provided as input to event correlation and aggregation function . Event correlation and aggregation function may provide and may be referred to as an event correlation service. Event correlation and aggregation function may aggregate and correlate events over periods of time. Event correlation and aggregation function may determine whether the aggregated and correlated events indicate the presence of data processing conditions that should be or may be addressed to maintain or improve system performance. For example event correlation and aggregation function may determine that a series of detected events has occurred indicating that consumer data processing resources or provider data processing resources are overloaded. Similarly event correlation and aggregation function may determine that a series of detected events has occurred indicating that consumer data processing resources or provider data processing resources are being underutilized. In accordance with an illustrative embodiment any data processing condition of interest that may be defined by aggregated or correlated events may be detected by event correlation and aggregation function .

In response to a determination by event correlation and aggregation function that a data processing condition of interest exists service desk ticketing function may send event based service request to workload manager . For example service desk ticketing function may generate event based service request in response to a determination by event correlation and aggregation function that a data processing condition exists that should be or may be addressed to maintain or improve system performance. Event based service request may indicate to workload manager the particular condition that has been determined to exist. In this case workload manager may determine the appropriate action to take in response to the indicated condition. Alternatively service desk ticketing function may determine the action that needs to be taken in response to a particular condition that has been determined to exist. In this case event based service request may indicate to workload manager the action that is being requested.

In any case workload manager may determine whether or not any action may be taken in response to a particular data processing condition based on policies . If workload manager determines that action will be taken in response to a particular data processing condition workload manager may implement such action based on policies . For example workload manager may respond to event based service request by implementing appropriate policy based provisioning of data processing resources as needed to respond to a detected data processing condition.

Workload manager also may respond to event based service request by generating service fulfillment response . For example service fulfillment response may be generated by workload manager and delivered to service desk ticketing function . Service fulfillment response may indicate that event based service request has been received by workload manager . Service fulfillment response also may indicate that appropriate action has been taken or will be taken in response to event based service request . In this case service fulfillment response may or may not specify the particular action taken or to be taken by workload manager in response to event based service request . In some cases workload manager may not be able to take action to change data processing conditions in response to event based service request . For example policies may prevent workload manager from taking action in response to event based service request at a particular time. In this case service fulfillment response may indicate that action will not be taken by workload manager in response to event based service request or that the implementation of such action may be delayed. Policies responsible for such a failure to act or for such a delay may or may not be identified in service fulfillment response .

The information provided by event based service request and service fulfillment response may be formatted appropriately and displayed for a user on monitoring station . By displaying information from event based service request and service fulfillment response in this manner a user is able to monitor the detection of data processing system conditions for which an appropriate action may be taken and the response of workload manager to the detection of such conditions.

In accordance with an illustrative embodiment hybrid cloud integrator makes it possible for workload manager to respond to determined data processing conditions of interest in consumer data processing resources in provider data processing resources or both. Furthermore hybrid cloud integrator makes it possible for workload manager to access consumer data processing resources provider data processing resources or both for responding to determined conditions of interest. Thus hybrid cloud integrator makes it possible for workload manager to provide integrated data processing resource management across hybrid cloud by providing for monitoring of data processing conditions across hybrid cloud and by providing access to data processing resources across hybrid cloud when responding to such conditions.

For example as discussed above hybrid cloud integrator may be used to establish monitoring of the processing of portions of consumer workload by provider data processing resources while processing of other portions of consumer workload by consumer data processing resources also is monitored at the same time. Based on such monitoring an overload condition or underutilization condition on consumer data processing resources on provider data processing resources or both may be determined. In response to such a determination workload manager may activate or deactivate selected consumer data processing resources may deploy or release selected provider data processing resources using hybrid cloud integrator in the manner described above or both. Processing of portions of consumer workload then may be allocated by workload manager across the reconfigured resources of hybrid cloud to remedy the determined overload or underutilization condition. The particular action taken by workload manager in response to the determined condition may be determined by policies .

The illustration of is not meant to imply physical or architectural limitations to the manner in which different illustrative embodiments may be implemented. Other components in addition to and or in place of the ones illustrated may be used. Some components may be unnecessary in some illustrative embodiments. Also the blocks are presented to illustrate some functional components. One or more of these blocks may be combined and or divided into different blocks when implemented in different illustrative embodiments.

For example hybrid cloud may include more than public cloud in combination with private cloud . Hybrid cloud may include multiple private clouds community clouds or public clouds in any combination. In accordance with an illustrative embodiment hybrid cloud integrator may be used to provide integration of data processing resources across multiple private public and community clouds in any combination.

Furthermore hybrid cloud integrator in accordance with an illustrative embodiment may be used to provide integrated monitoring and management across hybrid cloud that is related to data processing conditions other than data processing resource overload and underutilization conditions. For example hybrid cloud integrator in accordance with an illustrative embodiment may be used to provide integrated management across hybrid cloud of monitoring metering security or any other data processing related conditions.

Integrated monitoring and management of hybrid cloud using hybrid cloud integrator in accordance with an illustrative embodiment may be implemented automatically using an automated management system such as workload manger . Alternatively monitoring and management using hybrid cloud integrator in accordance with an illustrative embodiment may be provided by a human system manager using appropriate system interfaces such as user interface or monitoring station in combination with other appropriate system interfaces. Monitoring and management using hybrid cloud integrator in accordance with an illustrative embodiment may be provided by an automated management system and a human system manager operating together.

Referring to there is shown a simplified schematic diagram depicting respective components for an illustrative embodiment of the invention. in particular shows a hybrid cloud integrator HCI which is located proximate to on premise components of a data center of a user or consumer of cloud computing services. These components include a workload management component and a usage and accounting component . Such components may for example be consumer data processing resources as described above in connection with .

Hybrid cloud integrator is usefully similar to hybrid cloud integrator described above in connection with in that hybrid cloud integrator provides for integration of on premise infrastructure platform applications and data with public cloud based infrastructure platform services and data. Moreover it is to be emphasized that embodiments of the invention apply to integration between on premise traditional IT and a private or public cloud between private private clouds between private public clouds and between public public clouds. Hybrid cloud integrator also comprises a framework which is implemented on an integration platform and is similar or identical to framework . Thus hybrid cloud integrator can receive and support plug ins in a systematic manner. In addition however hybrid cloud integrator is provided with a metering control services MCS plug in or metering plug in . Metering plug in is configured to receive or acquire cloud usage events data from a cloud service broker CSB plug in which is also deployed in hybrid cloud integrator . Cloud service broker plug in is a type of service deployment and integration component shown in that may be used to provision and deploy services in one or more cloud service provider environments. The hybrid cloud integrator further includes one or more other plug ins collectively referenced as plug ins which may similarly provide data to metering plug in . Metering plug in may also receive metering events from sources external to the hybrid cloud integrator such as the cloud service provider or another entity monitoring service behavior and usage.

Referring further to there is shown a user or user for management component . Management component comprises a work load manager and a server such as a SUSE Linux Enterprise Server SLES that is capable of processing partially or fully the user workload. In an exemplary embodiment workload manager is similar or identical to workload manager described above in connection with and therefore usefully comprises a TSAM. Accordingly workload manager is capable of automatically managing workload processing on available data processing resources. Such resources can comprise both on premise and off premise resources. Thus workload manager may use services provided by off premise public and private cloud service providers to process a user workload on the provider s computing resources as exemplified in by cloud computing providers IBM SmartCloud Enterprise IBM SCE and Amazon Elastic Compute Cloud Amazon EC2 

To place a service request using workload manager a user may make use of a catalog or service log to determine the services that are available. After selecting a service and submitting it with any additional information workload manager orchestrates the request and decides whether to use an on premise or off premise service. Usage data for services in the private cloud such as on premise virtual machine VM data is monitored by workload manager . shows events related to private cloud usage data routed to usage and accounting component .

In order to obtain events related to cloud provided services from one or more off premise service providers such as public cloud providers and and also to subsequently change or end such services workload manager sends requests for corresponding cloud provided services to the cloud service broker plug in at hybrid cloud integrator . The cloud service broker plug in then routes respective requests to the appropriate cloud service provider and manager such as service provider or . As described hereinafter in further detail a provisioning request for a particular instance of provisioning by a particular provider will result in a series of events which pertain to the instance. Such events may include create start stop and delete events by way of example. These events sequentially affect the provisioning instance and also furnish a precise measure of the usage which has been made of the resource provisioning service of the particular service provider. Accordingly such events are referred to herein as usage metering related events or metering events.

In view of the above shows metering plug in receiving usage data from cloud service broker plug in . The usage data comprises data generated by successive metering events of the above type which pertain to provisioning instances of cloud service providers such as providers and . One of the functions of cloud service broker plug in is to be a provider of metering events as it brokers cloud services that produce these events by example but without limitation provisioning de provisioning or actions that cause resources to change state. Metering plug in is configured to receive metering events as they are processed by cloud service broker plug in . Moreover metering plug in is integrated with other plug ins of hybrid cloud integrator to also receive metering events therefrom. Thus as provisioning and change requests for cloud based services are processed in one of the plug ins of hybrid cloud integrator metering event data pertaining to the respective requests is received by metering plug in . Such data is then selectively aggregated and processed to form records of service usage delivered by respective providers as described hereafter in further detail.

At specified times or upon specific events these records are routed from metering plug in to accounting and usage component . more particularly shows the aggregated events data being sent to server of component in the form of CSR Common Source Resource records by way of example. Component further includes a database and a metering system which is a metering and chargeback engine. The metering system usefully processes the records of usage together with accounting billing and other related metering events in order to generate usage and chargeback reports. Such usage and account information may then be made available to workload manager .

In a useful embodiment of the invention metering system comprises the IBM Tivoli Usage Accounting Manager TUAM available from International Business Machines Corporation. Server usefully comprises a SUSE Linux Enterprise Server SLES .

In a further useful embodiment the records of usage provided by metering plug in and hybrid cloud integrator can be combined by metering system with other like usage data for example the private cloud usage data shown produced by user . Metering system can then provide workload manager with a unified usage report which shows the collective usage of the provisioning resource services supplied by multiple service providers. It is anticipated that information included in report can have widespread use and be of significant benefit to the organization associated with data center .

Referring to there is shown MCS or metering plug in in further detail. Metering plug in is capable of receiving metering events from various metering event providers through an interface such as the IBM Websphere sMash Services interface . The metering events can include both resource provisioning and de provisioning events as well as resource usage events with respect to an interval. Sources of metering events include metered HCI plug ins which collectively includes cloud service broker plug in and other metering event plug ins of hybrid cloud integrator as shown in . In addition the sources can include other metering event providers . Initially by means of the configuration GUI of the Hybrid Cloud Integrator HCI a user can enable or activate metering plug in to receive successive metering events from cloud service broker plug in or other metering event sources. It is to be appreciated the configuration and activation of the metering plug in can also be performed by means other than GUI such as using command line commands file based input of configuration data and so on.

Each metering event that is to be sent to metering plug in from cloud service broker plug in or other source will have an associated record type. A particular record type has a certain set of attributes such as various keys. Accordingly before sending an event of a new record type to metering plug in the new event record type must first be registered. Metering plug in is provided with the details of a new record type through a Register Metering Record Type service call and these details are maintained in a persistent store within metering plug in . For an exemplary record type the set of attributes includes a record identifier and also primary state and group keys. Record types can be registered and or de registered statically or dynamically by a metering service provider and or by process of configuration of the metering plug in and or by any other component that is relevant to service usage metering.

In regard to begin and end times it will be appreciated that when a resource provisioning service from a cloud service provider exists or is being used for a comparatively brief period of time the begin and end times thereof provide a very useful and precise measurement of the usage of that service. Thus metering event data for this situation would be the begin and end times of resource service use as indicated by time stamps or the like. However the use of certain other cloud provisioned resource services will continue over a long period of time such as on the order of days or even months. For resource services of these types it would generally be impractical to use the service begin and end times as metered events in order to determine service usage. Instead a succession of time intervals of selected duration is used to track resource usage. Use of such intervals is described hereinafter in further detail in connection with . In an embodiment using metering plug in the use of interval records can be made to be automatic or by request for intervals of selected length.

As an example of group synchronization data elements sent to metering plug in metering plug in could be provided with a list of all resources that are in use for a particular user. Metering plug in can then compare expected metering events with event data it has actually received. This information could be used to detect exception conditions described hereinafter. An example of a state change data element could be a modification of a resource or modification of service behavior such as a change in the rate at which an associated resource was running or the rate at which the service was performing or a change in state from running to stopped.

Referring further to metering record type data and event data stored in and respectively is used by metering plug in to generate metering system records by means of pluggable record handlers which are included in metering plug in . Metering plug in generates metering records from aggregated metering events data and calls these pluggable record handlers to record these in their respective metering systems. In the example of cloud service broker plug in these records provide a measure of the usage of resource services which are provided by respective cloud service providers in response to cloud provisioning requests sent from data center . Moreover handler formats and adapts the records which it prepares such as in CSR format for ready use by metering system which usefully comprises a TUAM as described above. Metering plug in is further provided with pluggable record handlers and for producing records of the above type which are respectively formatted to other types of metering systems . Handler uses metering system specific logic implemented within it or in another component in order to be able to create a record with the format acceptable by the metering system . Further a handler may have a directory of formats and their related schema related to records such that these formats schema are acceptable formats schema for the associated metering system .

In addition to registering different handlers for use with different types of metering systems metering plug in is configured to handle certain exception conditions. For example one such condition could occur if a resource provisioning service that was previously undetected provisioned resources for a user without reporting metering events to the metering plug in . In this situation no create or start event for the resource would have been detected. However upon becoming aware of the resource service metering plug in would create a record to meter the use of such service from the time it was first detected. Similarly in another exception condition metering plug in could determine that a previously assigned resource service had become stopped or terminated even though a state change or end metering event for the resource had not been previously recorded. Metering plug in would then provide a record showing such termination.

While the embodiment of shows event data being pushed into metering plug in such as by cloud service broker plug in or other plug ins other providers of metering event data could be operated to pull such data into metering plug in . These would be metering providers that ran as part of the metering plug in which actively gathered metering events from a source for example by polling the resource via an application interface.

Referring to a block diagram of a hybrid cloud integrator is depicted which is an example of one implementation of hybrid cloud integrator of . Hybrid cloud integrator includes plug in interface and runtime management functions and service connectivity management function . Management function may for example comprise an SCMP protocol. In accordance with an illustrative embodiment plug in interface and runtime management functions and service connectivity management function are implemented in software framework . A number of plug ins and may be installed in hybrid cloud integrator and managed during runtime using plug in interface and runtime management functions .

Service connectivity management function provides access to plug ins and via user interface . Service connectivity management function allows an operator to manage the configuration and other parameters of plug ins and via user interface . Service connectivity management function may be used to obtain information about plug ins and from plug ins and via user interface . For example service connectivity management function may allow a user to access configuration information and other information from plug ins and via user interface . Service connectivity management function also may be used to provide configuration data and other parameter information to plug ins and via user interface . For example service connectivity management function allows a user to change configuration and other parameters of plug ins and via user interface . In accordance with an illustrative embodiment service connectivity management function may employ a common service connectivity management protocol for interaction between plug ins and and user interface . Thus service connectivity management function provides a common infrastructure for configuring plug ins and .

Plug in interface and runtime management functions may provide various functions for installing and managing plug ins and during runtime.

Plug ins and may include for example and without limitation one or more of storage cloud service broker cloud service broker cloud metering plug in cloud monitoring plug in and cloud security service plug in . In this example cloud service broker is an example of cloud service broker plug in of . Also in this example cloud metering plug in is an example of metering plug in of .

Hybrid cloud integrator may be implemented on integration platform . For example software framework and plug ins and may be implemented for operation on integration platform . Integration platform includes hardware . Hardware may include data processing system hardware such as computer hardware. For example without limitation hardware may include IBM WebSphere Data Power 9004 1U appliance hardware. Operating system runs on hardware . For example without limitation operating system may include the IBM MCP 6.0 embedded LINUX operating system. Operating system supports appliance foundation . For example without limitation appliance foundation may include the IBM WebSphere BEDROCK appliance foundation. Runtime environment is at the highest level of integration platform . For example without limitation runtime environment may include a JAVA sMASH runtime environment. In accordance with an illustrative embodiment integration platform may be implemented using hardware operating system appliance foundation and runtime environment .

Referring to there is shown a timing diagram that further illustrates metering events of the types start and stop instance which are intercepted by the metering plug in as described above. More particularly depicts start and stop events pertaining to an instance of a resource service which is provided to a user associated with data center of by a specified cloud computing service provider. Also it is anticipated that the time period between the beginning and the end of the instance of will be comparatively brief. A single metering record is created after the instance is stopped.

At a time T a user or user instructs workload manager to start provisioning a resource instance using a cloud computing service provider such as one of the providers . In response workload manager implements the instance by sending a cloud provision request to cloud service broker plug in as described above. The cloud service broker plug in acknowledges the request back to the user and invokes the instance as requested by communicating with cloud service provider . Cloud service broker plug in is notified that the instance has become active and such notice of the start of a new instance is intercepted by metering plug in at time T. In order to meter the accurate usage the notice of a service instance start as well as stop as is discussed later includes the time at which the service instance was actually started.

Referring further to at time T user instructs workload manager to stop the instance. This instruction is routed to the cloud service broker plug in which acknowledges the instruction and also directs provider to stop the instance. At time T metering plug in receives notice of the instance stop event from cloud service broker plug in . Metering plug in thereupon generates a transaction record pertaining to the instance which indicates the level of usage of service furnished by provider and delivers the record to metering system at time T.

Referring to there is shown a timing diagram that illustrates metering events received by metering plug in wherein it maybe essential to determine the resource usage in between the start and stop of an instance or a provisioned service. It may be anticipated that a substantial period of time will pass between the beginning event of a requested provisioning instance and the end event thereof. Accordingly a time period T is initially selected for each of successive intervals when the status of the instance is to be monitored while the instance is active. The time period T for example could be one hour or twenty four hours depending on the anticipated duration of the instance.

Referring further to it is seen that a stop instance event does not occur during the first interval T. Accordingly at the beginning of the next following interval metering plug in generates an instance started record and sends it to metering system . Metering system is thus informed that there is a new instance in process. At the beginning of each subsequent interval T prior to the occurrence of a stop event for the instance an instance active record is generated by metering plug in and sent to metering system . Metering system is thus continually reminded that the instance remains active.

Referring to as in an instance is started and the time interval for creating metering records is T. In this specific scenario the workload manager sends a request to cloud service broker plug in at time T in order to update the capacity of the instance from existing value C to a new value C. The update request may not only be specific to capacity of the instance but may be with respect to its configuration for networking security performance available tools and services location migration or anything that is related to a service resource instance. The workload manager may decide on whether to update and the value of C based on a manual an automated or a semi automated process. The user may also provide an instruction to workload manager in order to update or inspect the capacity of the instance and take necessary steps. The request from workload manager maybe a result of any or a combination of the above processes. As soon as the capacity or for that matter any other factor is updated for the instance cloud service broker plug in informs metering plug in about the change from C to C upon which the said metering plug in may or may not send a metering record related to the time duration T and T which maybe less than an interval to the metering system . If the metering plug in is configured such that it does not send such a record before the interval ends at the end of this interval time T n 1 T instance active record s is are sent to the metering system . Such a record contains the capacity C between time T and T and the capacity C between time T and T.

Referring to there are shown steps for a method comprising an illustrative embodiment of the invention. At step by using the configuration GUI of the hybrid cloud integrator the cloud service broker plug in and metering plug in of hybrid cloud integrator of are configured to enable acquisition of metering events which pertain to cloud service usage. For such configuration it is necessary to provide the metering plug in with the configuration parameters used to establish a new pluggable record handler e.g. to support the target metering system being used e.g. or . Examples of configuration parameters include the target network address of the metering system the details needed to load the metering records into the metering system and the interval for which to record interval usage records for longer duration usage of resources. Further the configuration directs the metering system provider such as cloud service broker plug in to commence sending of metering events to the metering plug in .

At step a cloud service resource provisioning request is sent to the cloud service broker plug in . Such a request may be sent for example by the workload manager in . At step metering events that pertain to provisioned and deprovisioned resource are routed to the metering plug in . These steps may be respectively implemented as described above in connection with .

At step of a metering system specific handler such as handler of is operated to generate metering records of service usage from aggregated metering events data. As an example usage for the resource provisioning instance of can be determined from T and T the metered times of the instance start event and the instance termination e.g. de provisioned event respectively.

At step metering records are sent to the metering system. At step the metering system is operated to generate a service usage report from the usage data provided by respective metering records.

Referring to a block diagram of a data processing system is depicted in accordance with an illustrative embodiment. In this example data processing system is one example of a data processing system that may be used to implement consumer data processing resources and provider data processing resources in as well as other components for embodiments of the invention. In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit and display .

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a number of processors a multi processor core or some other type of processor depending on the particular implementation. A number as used herein with reference to an item means one or more items. Further processor unit may be implemented using a number of heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Memory and persistent storage are examples of storage devices . A storage device is any piece of hardware that is capable of storing information such as for example without limitation data program code in functional form and or other suitable information either on a temporary basis and or a permanent basis. Storage devices also may be referred to as computer readable storage devices in these examples. Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation.

For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard a mouse and or some other suitable input device. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system applications and or programs may be located in storage devices which are in communication with processor unit through communications fabric . In these illustrative examples the instructions are in a functional form on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory .

These instructions are referred to as program instructions program code computer usable program code or computer readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or computer readable storage media such as memory or persistent storage .

Program code is located in a functional form on computer readable media that is selectively removable and may be loaded onto or transferred to data processing system for execution by processor unit . Program code and computer readable media form computer program product in these examples. In one example computer readable media may be computer readable storage media or computer readable signal media . Computer readable storage media may include for example an optical or magnetic disk that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . Computer readable storage media also may take the form of a persistent storage such as a hard drive a thumb drive or a flash memory that is connected to data processing system . In some instances computer readable storage media may not be removable from data processing system .

Alternatively program code may be transferred to data processing system using computer readable signal media . Computer readable signal media may be for example a propagated data signal containing program code . For example computer readable signal media may be an electromagnetic signal an optical signal and or any other suitable type of signal. These signals may be transmitted over communications links such as wireless communications links optical fiber cable coaxial cable a wire and or any other suitable type of communications link. In other words the communications link and or the connection may be physical or wireless in the illustrative examples.

In some advantageous embodiments program code may be downloaded over a network to persistent storage from another device or data processing system through computer readable signal media for use within data processing system . For instance program code stored in a computer readable storage medium in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing program code may be a server computer a client computer or some other device capable of storing and transmitting program code .

The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown. The different embodiments may be implemented using any hardware device or system capable of running program code. As one example the data processing system may include organic components integrated with inorganic components and or may be comprised entirely of organic components excluding a human being. For example a storage device may be comprised of an organic semiconductor.

In another illustrative example processor unit may take the form of a hardware unit that has circuits that are manufactured or configured for a particular use. This type of hardware may perform operations without needing program code to be loaded into a memory from a storage device to be configured to perform the operations.

For example when processor unit takes the form of a hardware unit processor unit may be a circuit system an application specific integrated circuit ASIC a programmable logic device or some other suitable type of hardware configured to perform a number of operations. With a programmable logic device the device is configured to perform the number of operations. The device may be reconfigured at a later time or may be permanently configured to perform the number of operations. Examples of programmable logic devices include for example a programmable logic array programmable array logic a field programmable logic array a field programmable gate array and other suitable hardware devices. With this type of implementation program code may be omitted because the processes for the different embodiments are implemented in a hardware unit.

In still another illustrative example processor unit may be implemented using a combination of processors found in computers and hardware units. Processor unit may have a number of hardware units and a number of processors that are configured to run program code . With this depicted example some of the processes may be implemented in the number of hardware units while other processes may be implemented in the number of processors.

As another example a storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are examples of storage devices in a tangible form.

In another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

