---

title: Secure telecommunications
abstract: The present disclosure describes techniques for configuring and participating in encrypted audio calls, audio conferences, video calls, and video conferences. In particular, a call initiator generates a meeting identifier and a first meeting key, which are encrypted using a first encryption key and distributed to one or more participants of the call. The one or more participants decrypt the meeting identifier and the first meeting key, and use that information to participate in the encrypted call. Further, participants respond to the encrypted communication data by encrypting their reply data with the first meeting key. The call initiator decrypts the reply data using the first meeting key.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09596079&OS=09596079&RS=09596079
owner: Wickr Inc.
number: 09596079
owner_city: San Francisco
owner_country: US
publication_date: 20160622
---
This application claims priority to U.S. Provisional Application No. 62 322 679 entitled Secure Telecommunications filed Apr. 14 2016 the entirety of which is herein incorporated by reference.

As mobile communication usage continues to increase breaches of such communications continue to rise as well. In this regard more sophisticated technology is being developed to intercept and monitor mobile communications. This is problematic including for people who value privacy and also for companies e.g. that allow their employees to use their personal devices to exchange confidential work related information . Moreover as formerly face to face meetings are increasingly being replaced with conference calls the security of such meetings is also of growing concern.

The present disclosure describes systems and methods for configuring and participating in encrypted audio calls audio conferences video calls and video conferences collectively secure telecommunication s . In particular the current disclosure describes an initiating client starting a secure telecommunication by generating a meeting identifier and a meeting key. The initiating client then encrypts the meeting identifier and the meeting key collectively control information with an encryption key and distributes the encrypted control information to one or more participants via a control channel. After distributing the control information the initiating client initiates the secure telecommunication by obtaining communication data encrypting the communication data using the meeting key and transmitting the encrypted communication data to the one or more participants via a communication channel.

A participant receives a secure telecommunication request from the initiating client that includes at least the encrypted control information. The participant decrypts the encrypted control information and uses the meeting identifier to obtain the encrypted communication data over a communication channel. The participant decrypts the encrypted communication data with the meeting key received in the secure telecommunication request. Further the participant responds to the communication data by encrypting reply data with the meeting key received from the initiating client. The participant then transmits the encrypted reply data along with the meeting identifier to other participants of the secure telecommunication.

Accordingly the present disclosure describes techniques for providing end to end encryption for both audio and video calls as well as end to end encrypted audio and video conferences.

The present disclosure can be implemented in numerous ways including as a process an apparatus a system a composition of matter a computer program product embodied on a non transitory computer readable storage medium and or a processor such as a processor configured to execute instructions stored on and or provided by a memory coupled to the processor. These implementations or any other form that the present disclosure may take may be referred to as techniques. In general the order of the steps of disclosed processes may be altered within the scope of the present disclosure. Unless stated otherwise a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein the term processor refers to one or more devices circuits and or processing cores configured to process data such as computer program instructions.

A detailed description of one or more embodiments of the present disclosure is provided below along with accompanying figures that illustrate the principles of the present disclosure. The present disclosure is described in connection with such embodiments but the present disclosure is not limited to any embodiment. The scope of the present disclosure is limited only by the claims and the present disclosure encompasses numerous alternatives modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the present disclosure. These details are provided for the purpose of example and the present disclosure may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the present disclosure has not been described in detail so that the present disclosure is not unnecessarily obscured.

According to embodiments described herein encrypted communications are exchanged using secure communication containers which encapsulate a sender s communication data and control data. The secure communication container may also include information such as encryption information hardware binding information message security controls and decryption information for multiple receivers as applicable to securely travel with the message. The secure communication container also provides cross platform support so that users may communicate regardless of their operating systems e.g. Linux iOS and Windows smart phone platforms e.g. iPhone Android Windows Blackberry etc. and device types e.g. mobile smart phones tablets laptops desktops etc. . Using the techniques described herein only intended accounts on intended devices are able to decrypt the communications. Thus for example the security platform and the communication server are unable to decrypt communications between the first client device and the second client device . As will further be described in more detail below using the techniques described herein communicants can maintain a forward secret secure communication channel.

In some embodiments security platform may be implemented on a server such as a stand alone server a corporate server or a server located in a server farm or cloud computing environment. Alternatively the server hosting security platform may be a cloud service provider running a virtual machine configured to provide security platform to an enterprise in the context of Software as a Service SaaS .

Security platform may be configured to facilitate the exchange of communications for users of a secure collaboration app. As used herein communications and messages may take a variety of forms including text messages chat room messages file sharing file collaboration control messages commands e mails documents audiovisual files Short Message Service messages SMSes voice calls i.e. VOIP video calls and video conferences. Telecommunications as used herein refers to audio calls voice calls audiovisual conferences audio conferences video calls videoconferences and other forms of multimodal communications. Additionally the content of the messages and or communications may pertain to electronic transactions such as credit card security password protection directories storage drive protection video on demand security online gaming gambling electronic distribution of music videos documents online learning systems databases cloud storage and cloud environments bank transactions voting processes military communications security of medical records communication between medically implanted devices and doctors etc. The exchange of messages and or communications is explained in further detail below.

Security platform may facilitate the exchange of communications and control messages via control channel . Control channel may be an encrypted communication channel such as Transport Layer Security TLS or Secure Sockets Layer SSL through a public network such as the Internet World Wide Web local Ethernet networks private networks using communication protocols proprietary to one or more companies and cellular and wireless networks e.g. WiFi . In some embodiments text messages chat room messages control messages commands e mails and Short Message Service messages SMSes may be exchanged via the control channel . Control messages include commands and instructions sent from either the security platform or a first user s secure collaboration app to a second user s secure collaboration app. Additionally these control messages may include configuration information to allow the first and second user collaboration apps to configure a secure chat room initialize an encrypted call or securely transfer a file.

Like control channel communication channel may be an encrypted communication channel through a public network. Communication channel differs from control channel in that it is primarily used to exchange encrypted files documents and telecommunication data. In operation encrypted data may be transmitted over communication channel while the information necessary to decrypt the encrypted data is transmitted in an encrypted format over the control channel . In some embodiments control channel and communication channel are two separate unique communication channels.

Security platform may provide encrypted communications that easily integrate into and secure existing systems while also providing compliant and secure communications. In this regard security platform may integrate with existing identity systems and include built in support for enterprise data retention and support systems.

Security platform may also include database . Database may be a relational database that stores information in a variety of tables. In this regard database may include a record for each user of platform to allow users to find other users and communicate with other users. Accordingly database may include a table of hashed usernames a table of public keys and reference values a table of appIDs and a table of deviceIDs . Each user record may include a hashed username in table a pool of ECDH public components and associated reference values in table app ID s in table and deviceID s in table . Additionally each user record may store privacy mode and privacy list entries to control with whom the user may communicate. Additionally database may include a table of communications . That is the security platform may store communications and notifications for users for a predetermined time in table . For example when a message is received the security platform may store the message in the table of communications and provide an alert such as a push notification to the receiver. Accordingly a receiver may access the security platform to obtain his or her communications stored in table . In some embodiments table may store communications for 30 days however this may be adjusted as needed based on industry standards and or to comply with industry mandated regulations. In alternative embodiments the table of communications may store control messages and or notifications for shared files or secure telecommunications. Receivers may access these control messages and or notifications to obtain the information for obtaining the shared files or joining the secure telecommunication.

Security platform may include one or more interface s for communicating with client devices and and communication server . As one example platform may provide an application programming interface API configured to communicate with apps installed on client devices. Further platform may also include APIs for interacting with the communication server . Additionally platform may provide other types of interfaces such as a web interface or stand alone software programs for desktops and laptops running on various Operating Systems OSes . The web interface may allow users of client devices to exchange communications securely whether with one another or other users without the need for a separately installed collaboration application. The standalone software program may allow users to exchange secure communications via software that is downloaded by each user. According to some embodiments platform may make available a master clock time available via the one or more interface s . The master clock time may be used by the secure collaboration apps to enforce secure time to live TTL values of communications. The TTL values can be used to enforce e.g. on behalf of a sender time constraints on communication access e.g. by a receiver .

Users of client devices such as client devices may communicate securely with one another using the techniques described herein. For example client devices may make use of the security platform and the techniques described herein via a secure collaboration app not shown . As shown in client devices may be mobile devices such as a laptop smart phone or tablet or computing devices such as desktop computers or servers. As noted above the secure collaboration app described herein allows cross platform communications thereby allowing users of various devices to communicate seamlessly. Further each user may have different instances of the collaboration app across multiple devices. That is the user of device may be able to receive communications on both device as well as on any other devices that the user may have that include a copy of the secure collaboration app such as a laptop. In some embodiments client devices may be the users personal devices i.e. a bring your own device BYOD scenario . Alternatively client devices may include other types of devices such as game consoles camera video recorders video players e.g. incorporating DVD Blu ray Red Laser Optical and or streaming technologies smart TVs and other network connected appliances as applicable. According to one embodiment client devices may be landline phones and the security platform and communication server may be installed on a Private Branch Exchange PBX or other corporate phone network.

In addition to communicating with security platform client devices may also access the communication server to share encrypted files or to participate in a secure telecommunications with other devices. In this regard users may upload communication data such as files documents spreadsheets images animated gifs streaming audio data streaming video data etc. to the communication server using the secure collaboration apps located on their client devices. According to various embodiments the secure collaboration app allows clients to encrypt the communication data before uploading it to the communication server. In some embodiments the communication server and the security platform are co located. In alternative embodiments the communication server and the security platform may be physically separated on two different servers.

Display may be any electronic device capable of rendering information visually. In mobile devices such as smart phones and tablets display may be a touchscreen. In this regard display may be integrated with I O unit to detect user inputs in addition to outputting data information to the user. In computing devices display may be an output such as a VGA DVI or HDMI output configured to connect to a monitor. I O unit may be capable of receiving input from a user. As noted above the I O unit may work with touchscreen displays to receive input from a user. Alternatively the I O unit may be an interface capable of interacting with input and output devices such as keyboards mice monitors printers etc. Additionally the I O unit may include at least one accelerometer a Global Positioning Satellite GPS system a magnetometer a proximity sensor an ambient light sensor a moisture sensor a gyroscope etc. to determine the orientation of the device as well as environmental factors. Furthermore the I O unit may control a microphone speaker and or camera that may be used for secure telecommunications.

Crypto accelerator may be dedicated hardware software or any combination thereof that is capable of performing cryptographic operations such as key generation random number generation encryption decryption signature generation signature verification etc. In some embodiments crypto accelerator is a dedicated processor configured to perform cryptographic operations on behalf of processor . In this regard app may make use of crypto accelerator to provide the secure communication functions described in greater detail below.

Network interface may be dedicated hardware software or any combination thereof that is capable of connecting client device to an applicable network. In this regard network interface may include various configurations and use various communication protocols including Ethernet TCP IP ATM cellular and wireless communication protocols e.g. 802.11 LTE instant messaging HTTP and SMTP and various combinations of the foregoing.

As noted above secure telecommunications such as encrypted audio calls encrypted audio conferences encrypted video calls and encrypted video conferences may be exchanged between users of a secure collaboration app. illustrates a process for an initiating client to configure a secure telecommunication and transmit encrypted communication data during the secure telecommunication. The process begins in block with a secure collaboration app initializing a secure telecommunication by generating a meeting identifier and a first meeting key. The secure collaboration app may initialize the secure telecommunication in response to receiving an input from a user. For example a user in a one to one communication or a group chat may select an icon such as a telephone icon or a video camera icon to initiate the secure telecommunication. To configure the secure telecommunication the initiating client s secure collaboration app generates a meeting identifier by hashing at least one property associated with the secure telecommunication. The at least one property may include the number of participants in the call the date and time the call started or information identifying the initiating client e.g. username deviceID appID etc. . Additionally the secure collaboration app generates a first meeting key. The first meeting key is a 256 bit key generated by applying multiple rounds of a hash function e.g. SHA256 SHA384 SHA521 to a first set of pseudorandom bytes derived from the initiating client s device. The first set of pseudorandom bytes may be derived from ephemeral environmental noise obtained from device drivers and other kernel operations. For example data from various sensors e.g. the at least one accelerometer Global Positioning Satellite GPS system magnetometer proximity sensor ambient light sensor moisture sensor and gyroscope may be used as the first set of pseudorandom bytes.

In block the initiating client s secure collaboration app generates a first encryption key. In some embodiments the first encryption key is a 256 bit key derived from a second set of pseudorandom bytes derived from the initiating client s device. Like the first meeting key the first encryption key is generated by applying multiple rounds of a hash function to the second set of pseudorandom bytes. After generating the first encryption key the initiating client s secure collaboration app encrypts the meeting identifier and the first meeting key with the first encryption key in block . In some embodiments the crypto processor on the initiating client s device encrypts the meeting identifier and first meeting key using a symmetric encryption algorithm such as Advanced Encryption Standard AES Data Encryption Standard DES or Triple DES 3DES .

Once the meeting identifier and first meeting key are encrypted the initiating client s secure collaboration app generates a secure telecommunication request and transmits it to one or more receivers via a control channel in block . The encapsulation and transmission of the secure telecommunication request is discussed in greater detail below with respect to . In block the initiating client s secure collaboration device encrypts communication data via a symmetric encryption algorithm and the first meeting key. The communication data may be audio data captured from a microphone video data captured using a camera or any combination thereof. In block the encrypted communication data is transmitted to one or more receivers via a communication channel.

In block the initiating client s secure collaboration app receives encrypted response data from one or more receivers. The encrypted response data is decrypted using the first meeting key in block . Finally in block the initiating client s secure collaboration app provides the decrypted response data to the secure telecommunication initiator for his or her review. Similar to the communication data transmitted by the initiating client the response data may include audio data video data or any combination thereof. According to some embodiments the response data does not need to be in the same format as the communication data provided by the secure telecommunication initiator. For example one or more receivers may respond with only audio data in response to receiving audio and video data from the initiator. Alternatively the initiator may only transmit audio data to one or more receivers but receive both audio and video data in response.

Turning to a detailed process for transmitting encrypted communications including encrypted messages and the secure telecommunication request to one or more receivers is illustrated. The method begins in block with the initiating client s secure collaboration app obtaining the one or more receivers public information from the security platform. In this regard each receiver s public information may include at least one of the receiver s app ID a user level signing public key a signed app level signing public key a signed ephemeral ECDH public component an identifier of the ephemeral ECDH public component and the receiver s device key. In some embodiments the security platform randomly selects one of the signed ephemeral ECDH public components from a pool of public components that the receiver has previously uploaded. In order to prevent the selected public component from being used for a subsequent communication the security platform will delete the selected ephemeral ECDH public component after providing it to the initiating client s device. If a receiver has multiple instantiations of the secure collaboration app installed on different devices the initiating client s secure collaboration app will receive a unique signed app level signing public key a signed ephemeral ECDH public component an identifier of the ephemeral ECDH public component and a device key for each instance of the app in block . The multiple instance information may be provided in an arrayed response by the security platform.

In block the initiating client s secure collaboration app authenticates the public information received from the security platform. In particular the user level signing public key received from the security platform is used to verify a signature attached to the app level signing public key. If the receiver has multiple instances of the app the initiating client s secure collaboration app will authenticate the app level public key for each of the receiver s instantiations of the secure collaboration apps. When the signature attached to the app level public key is successfully validated the initiating client s secure collaboration app uses the received app level signing public key to validate the signatures appended to the received ephemeral ECDH public component.

After authenticating the one or more receivers public information the initiating client composes his or her communication to the one or more receivers in block . As noted above the communication may be a text message chat room message control message command e mail Short Message Service message SMSes Multimedia Message Service message MMSes etc. Continuing the example described above with respect to the secure communication request is a control message that notifies the one or more receivers secure collaboration apps that the initiating client wants to begin a secure telecommunication. Accordingly the payload of the secure telecommunication request will include an indication of the type of meeting e.g. audio video or both and encrypted control information e.g. meeting identifier and the encrypted first meeting key . In block the initiating client s secure collaboration app generates the first encryption key by applying multiple rounds of a hash function to a second set of pseudorandom bytes. In block the initiating client s secure collaboration app encrypts the communication according to a symmetric encryption algorithm. Continuing the example above the initiating client s secure collaboration app encrypts the meeting type meeting identifier and the first meeting key via AES using the first encryption key.

In block the initiating client s secure collaboration app generates a pair of ephemeral ECDH components. The pair of ephemeral ECDH components is generated using ECC with a P curve. In block the initiator s secure collaboration app derives a key encrypting key using the receiver s ephemeral ECDH public component and the ephemeral ECDH private component generated by the initiator s secure collaboration app. In some embodiments the key encrypting key is a 256 bit key derived using ephemeral ECDH.

In block the first encryption key is encrypted using the key encrypting key. In some embodiments the first encryption key is encrypted by the crypto accelerator using AES and the key encrypting key. In block the initiating client s secure collaboration app encrypts the first encryption key again using the receiver s device key obtained from the security platform with the receiver s public information. Encrypting the first encryption key with an ephemeral component generated by the receiver s app and the device key provides a twice encrypted first encryption key that effectively binds the message to the receiver s secure collaboration app and device.

In block the initiating client s secure collaboration app determines whether the receiver has multiple instantiations of the secure collaboration app installed on a plurality of devices. If so the initiator s secure collaboration app repeats blocks and for each instance of the receiver s app. In this regard each instance will receive a twice encrypted first encryption key that is unique to that instantiation of the secure collaboration app. Accordingly each instance will only be able to decrypt the twice encrypted first encryption key that has been encrypted with the unique device key and ephemeral public component associated with that device.

When twice encrypted first encryption keys have been generated for each of the receiver s instantiations of the secure collaboration app the initiating client s secure collaboration app composes a secure communication container in block . The secure communication container includes a payload and a header. The payload comprises the encrypted communication the header includes destination entries for each of one or more receivers instantiations of the secure collaboration app. Each destination entry includes at least one of a twice encrypted first encryption key an identifier for the ephemeral ECDH component used to generate the key encrypting key and the initiating client s public ECDH component for the key encrypting key. Following the example above the payload of the secure communication container will contain at least the encrypted control information e.g. meeting identifier first meeting key type of secure telecommunication .

Once the secure communication container is assembled the initiating client s secure collaboration app will transmit the secure communication container to the one or more receivers in block . In some embodiments the initiator s secure collaboration app transmits the secure communication container to the one or more receivers via a secure control channel. In some embodiments the secure communication container will be transmitted to the security platform which will notify each of the one or more receivers that they have a new communication waiting for them.

Periodically the initiating client may need to rekey the secure communication. shows an exemplary process for rekeying a secure telecommunication. In block a rekeying event is detected. Rekeying events may include one or more receivers rejecting the secure telecommunication request. Alternatively a rekeying event may include one or more receivers leaving a conference call either on their own volition or by the initiator removing them. In response to detecting a re keying event the initiating client s secure collaboration app generates a second meeting key in block . As noted above the second meeting key is derived by applying multiple rounds of a hash function to a third set of pseudorandom bytes derived from the initiator s device. In block the initiating client s secure collaboration app generates a second encryption key. The second encryption key is produced by passing a fourth set of pseudorandom bytes through multiple rounds of a hash function. In block the initiating client s secure collaboration app encrypts the second meeting key via a symmetric encryption algorithm using the second encryption key. In block the encrypted second meeting key is transmitted to a subset of the one or more receivers. In some embodiments the encrypted second meeting key is distributed to the subset of one or more receivers using the techniques described above with respect to . After the second meeting key is transmitted to the subset of one or more receivers the initiating client encrypts communication data using the second meeting key in block . In block the communication data encrypted with the second meeting key is transmitted to the subset of one or more receivers.

Prior to joining a secure telecommunication the one or more receiving client devices must receive notification that an initiating client is beginning a secure telecommunication. illustrates an exemplary process for receiving notification that an initiating client is beginning a secure telecommunication. In block the one or more receiving client devices receive a secure communication container. As noted above the secure communication container may contain a communication or a control message. In examples where the secure communication container includes a communication the receiving client device may receive an alert such as a push notification which prompts the receiving client device s secure collaboration app to connect to the security platform and retrieve the initiating client s secure communication container. In examples where the secure communication container includes a control message the secure communication container may be pushed directly to the receiving client s device which prompts the receiving client device s secure collaboration app to decrypt the received control message using the steps described below and execute the command or instruction contained in the payload of the secure communication container.

As previously discussed the header of the secure communication container includes a destination entry that includes at least a twice encrypted first encryption key. Accordingly in block the receiving client device s secure collaboration app decrypts the twice encrypted first encryption key using the device key associated with the receiving client device. Next in block the receiving client s secure collaboration app uses the ECDH component identifier received in the secure communication container to retrieve the ephemeral ECDH private component that corresponds to the public component the initiating device used to generate the key encrypting key. In block the receiving client s secure collaboration app derives the key encrypting key using the retrieved ephemeral private component and the initiator s ephemeral public component that was transmitted in the secure communication container. After deriving the key encrypting key the receiving client device s secure collaboration app decrypts the encrypted first encryption key in block to obtain the first encryption key. In block the first encryption key is used to decrypt the payload of the secure communication container. In some embodiments the payload is decrypted via a symmetric encryption decryption scheme such as AES DES or 3DES. In examples where the payload contains a communication such as a message the decrypted communication may be provided to the receiver in block . In examples where the payload contains a control message the receiving client s secure collaboration app may execute the command or instruction contained in the control message. In this regard the secure collaboration app may display an indication of the executed command. For example if the control message contains information about beginning a secure telecommunication a dialog may be displayed providing the user with the option to join or reject the secure telecommunication.

Turning to a process for receiving secure telecommunication requests and participating in secure telecommunications is shown. In block one or more participants receive a secure telecommunication request via a secure control channel. As noted above the secure telecommunication request is a request to initialize a secure telecommunication between the initiating client and the one or more receivers. As noted above the secure telecommunication request includes encrypted control information e.g. meeting identifier first meeting key type of secure telecommunication . In block the one or more receivers decrypt an encrypted first encryption key using the techniques described above. The decrypted first encryption key is then used to decrypt the encrypted control information in block . The one or more participants obtain encrypted communication data using the decrypted meeting identifier in block . In some embodiments the one or more participants transmit the decrypted meeting identifier to a communication server via a secure channel. The communication server searches for the encrypted communication data that corresponds to the received meeting identifier and transmits the encrypted communication data to the one or more participants. The one or more participants receive the encrypted communication data from the communication server and decrypt the encrypted communication data using the decrypted first meeting key in block . In block the decrypted communication data is provided to a user. As noted above the decrypted communication data may include audio data video data or a combination thereof. Accordingly the one or more participants devices may play the decrypted audio data and or display the decrypted video data.

The one or more participants may reply to the received communication. In this regard reply data may be captured by the one or more participants microphones or cameras. In block the one or more participants secure collaboration app encrypts the reply data with the first meeting key. After encrypting the reply data it is transmitted to the one or more participants of the secure telecommunication in block using the techniques described above.

Turning to an example of a desktop interface for exchanging cryptographic communications and initiating secure telecommunications is shown. The interface includes user information field which displays user information including the user s name their username and an avatar that is displayed to other users. As shown in the interface belongs to Alice Adams. Additionally the interface may include a room identification field and a message identifier field . The room identification field and a message identifier field may indicate the secure chat rooms the user is participating in and the open one to one communications the user has open respectively.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the present disclosure is not limited to the details provided. There are many alternative ways of implementing the present disclosure. The disclosed embodiments are illustrative and not restrictive.

