---

title: Systems and apparatuses for architecture assessment and policy enforcement
abstract: Example embodiments are disclosed herein for asset architecture evaluation and security enforcement within an enterprise computing platform. One example method includes receiving a proposed architecture for evaluation, wherein the proposed architecture for evaluation relates to integration of an asset into the enterprise computing platform. This example method further includes dynamically evaluating, by risk evaluation circuitry, the proposed architecture against embedded security policies, standards, baselines, or patterns established for the enterprise computing platform. In addition, the example method includes, in an instance in which dynamic evaluation of the proposed architecture identifies security gaps, determining, by the risk evaluation circuitry, changes to the proposed architecture that would remediate the identified security gaps. The example method further includes generating a report regarding the proposed architecture, wherein the report identifies any changes to the proposed architecture that would remediate the identified security gaps. Corresponding apparatuses and computer program products are also provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09652618&OS=09652618&RS=09652618
owner: Optum, Inc.
number: 09652618
owner_city: Minnetonka
owner_country: US
publication_date: 20160610
---
Example embodiments of the present invention relate generally to information technology architecture and more particularly to systems apparatuses and methods for reducing security risk through automated assessment of applications and enforcement of security policies.

Applicant has discovered problems with existing techniques for evaluating security gaps created by assets interfacing with enterprise computing platforms. Through applied effort ingenuity and innovation Applicant has solved many of these identified problems by developing a solution that is embodied by the present invention and described in detail below.

Example embodiments described herein improve upon existing asset architecture assessment and security enforcement techniques. The embodiments described herein are directed to improvements in the technical character ability and efficiency of an enterprise computing platform.

In a first example embodiment a method is provided for asset architecture evaluation and security enforcement within an enterprise computing platform. The method includes receiving a proposed architecture for evaluation wherein the proposed architecture for evaluation relates to integration of an asset into the enterprise computing platform. The method further includes dynamically evaluating by risk evaluation circuitry the proposed architecture against embedded security policies standards baselines or patterns established for the enterprise computing platform. The method further includes in an instance in which dynamic evaluation of the proposed architecture identifies security gaps determining by the risk evaluation circuitry changes to the proposed architecture that would remediate the identified security gaps. The method also includes generating a report regarding the proposed architecture wherein the report identifies any changes to the proposed architecture that would remediate the identified security gaps.

In some embodiments receiving the proposed architecture for evaluation includes causing transmission by a component scanner of one or more change identification messages to a component agent residing on the asset and receiving an indication that there have been changes to an architecture of the asset from a version of the architecture of the asset that was previously evaluated by the security engine wherein the proposed architecture comprises a current architecture of the asset.

In some such embodiments receiving the indication that there have been changes to the architecture includes receiving an indication of an architecture of the asset and comparing the architecture of the asset to the version of the architecture of the asset that was previously evaluated by the security engine. In this regard the method may further include causing transmission by the component scanner and to the component agent residing on the asset of the report regarding the proposed architecture.

In some embodiments the method further includes training one or more machine learning algorithms to develop one or more baselines or patterns for the enterprise computing platform. In some such embodiments dynamically evaluating the proposed architecture includes evaluating by the risk evaluation circuitry and using the one or more machine learning algorithms whether any aspects of the proposed architecture violate the developed baselines or patterns for the enterprise computing platform.

In some embodiments determining changes to the proposed architecture that would remediate the identified security gaps includes retrieving manual intervention identifying the changes to the proposed architecture that would remediate the identified security gaps or identifying the changes to the proposed architecture that would remediate the identified security gaps using at least one of the embedded security policies standards baselines or patterns established for the enterprise computing platform.

In another example embodiment an apparatus is provided for asset architecture evaluation and security enforcement within an enterprise computing platform. The apparatus includes at least one processor and at least one memory storing computer executable instructions that when executed by the at least one processor cause the apparatus to receive a proposed architecture for evaluation wherein the proposed architecture for evaluation relates to integration of an asset into the enterprise computing platform. The computer executable instructions when executed by the at least one processor further cause the apparatus to dynamically evaluate the proposed architecture against embedded security policies standards baselines or patterns established for the enterprise computing platform and in an instance in which dynamic evaluation of the proposed architecture identifies security gaps determine changes to the proposed architecture that would remediate the identified security gaps. The computer executable instructions when executed by the at least one processor further cause the apparatus to generate a report regarding the proposed architecture wherein the report identifies any changes to the proposed architecture that would remediate the identified security gaps.

In some embodiments the computer executable instructions when executed by the at least one processor causes the apparatus to receive the proposed architecture for evaluation by causing the apparatus to cause transmission by a component scanner of one or more change identification messages to a component agent residing on the asset and receive an indication that there have been changes to an architecture of the asset from a version of the architecture of the asset that was previously evaluated by the security engine wherein the proposed architecture comprises a current architecture of the asset.

In some such embodiments the computer executable instructions when executed by the at least one processor causes the apparatus to receive the indication that there have been changes to the architecture by causing the apparatus to receive an indication of an architecture of the asset and compare the architecture of the asset to the version of the architecture of the asset that was previously evaluated by the security engine. In this regard the computer executable instructions when executed by the at least one processor further cause the apparatus to cause transmission by the component scanner and to the component agent residing on the asset of the report regarding the proposed architecture.

In some embodiments the computer executable instructions when executed by the at least one processor further cause the apparatus to train one or more machine learning algorithms to develop one or more baselines or patterns for the enterprise computing platform. In some such embodiments the computer executable instructions when executed by the at least one processor cause the apparatus to dynamically evaluate the proposed architecture by causing the apparatus to evaluate using the one or more machine learning algorithms whether any aspects of the proposed architecture violate the developed baselines or patterns for the enterprise computing platform.

In some embodiments the computer executable instructions when executed by the at least one processor cause the apparatus to determine changes to the proposed architecture that would remediate the identified security gaps by causing the apparatus to retrieve manual intervention identifying the changes to the proposed architecture that would remediate the identified security gaps or identify the changes to the proposed architecture that would remediate the identified security gaps using at least one of the embedded security policies standards baselines or patterns established for the enterprise computing platform.

In another example embodiment an apparatus is provided for asset architecture evaluation and security enforcement within an enterprise computing platform. The apparatus includes means for receiving a proposed architecture for evaluation wherein the proposed architecture for evaluation relates to integration of an asset into the enterprise computing platform means for dynamically evaluating the proposed architecture against embedded security policies standards baselines or patterns established for the enterprise computing platform means for in an instance in which dynamic evaluation of the proposed architecture identifies security gaps determining changes to the proposed architecture that would remediate the identified security gaps and means for generating a report regarding the proposed architecture wherein the report identifies any changes to the proposed architecture that would remediate the identified security gaps.

In some embodiments the means for receiving the proposed architecture for evaluation includes means for causing transmission by a component scanner of one or more change identification messages to a component agent residing on the asset and means for receiving an indication that there have been changes to an architecture of the asset from a version of the architecture of the asset that was previously evaluated by the security engine wherein the proposed architecture comprises a current architecture of the asset. In some such embodiments the means for receiving the indication that there have been changes to the architecture includes means for receiving an indication of an architecture of the asset and means for comparing the architecture of the asset to the version of the architecture of the asset that was previously evaluated by the security engine. In this regard the apparatus further includes means for causing transmission by the component scanner and to the component agent residing on the asset of the report regarding the proposed architecture.

In some embodiments the apparatus further includes means for training one or more machine learning algorithms to develop one or more baselines or patterns for the enterprise computing platform. In some such embodiments the means for dynamically evaluating the proposed architecture includes means for evaluating using the one or more machine learning algorithms whether any aspects of the proposed architecture violate the developed baselines or patterns for the enterprise computing platform.

In some embodiments the means for determining changes to the proposed architecture that would remediate the identified security gaps include means for retrieving manual intervention identifying the changes to the proposed architecture that would remediate the identified security gaps or means for identifying the changes to the proposed architecture that would remediate the identified security gaps using at least one of the embedded security policies standards baselines or patterns established for the enterprise computing platform.

The above summary is provided merely for purposes of summarizing some example embodiments to provide a basic understanding of some aspects of the invention. Accordingly it will be appreciated that the above described embodiments are merely examples and should not be construed to narrow the scope or spirit of the invention in any way. It will be appreciated that the scope of the invention encompasses many potential embodiments in addition to those here summarized some of which will be further described below.

Various embodiments of the present invention will now be described more fully hereinafter with reference to the accompanying drawings in which some but not all embodiments of the invention are shown. Indeed the invention may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will satisfy applicable legal requirements. Like numbers refer to like elements throughout.

As used herein the terms data content information and similar terms may be used interchangeably to refer to data capable of being transmitted received and or stored in accordance with embodiments of the present invention. Thus use of any such terms should not be taken to limit the spirit and scope of embodiments of the present invention. Further where a computing device is described herein to receive data from another computing device it will be appreciated that the data may be received directly from the another computing device or may be received indirectly via one or more intermediary computing devices such as for example one or more servers relays routers network access points base stations hosts and or the like sometimes referred to herein as a network. Similarly where a computing device is described herein to send data to another computing device it will be appreciated that the data may be sent directly to the another computing device or may be sent indirectly via one or more intermediary computing devices such as for example one or more servers relays routers network access points base stations hosts and or the like.

Historically security gaps in enterprise computing platforms have been viewed as an unfortunate side effect caused by the constant need for interaction between enterprise computing platforms and externally sourced resources e.g. applications infrastructure elements databases or the like . However protecting the security of such interactions is particularly important when those externally sourced resources are intended to access sensitive data such as Protected Health Information PHI Personally Identifiable Information PII or Payment Card Information PCI information. Such protected or classified compute resources hereinafter referred to as assets thus require additional information security controls to protect the data that they utilize and this is particularly true when that data is retrieved from the enterprise computing platform itself. While enterprise computing platforms are often managed by information technology IT groups who can evaluate risk profiles for assets and identify security gaps the time and resources required to manually perform these functions is substantial.

Moreover a significant source of security gaps in many enterprise computing platforms arises from the fact that an update to an already authorized asset does not prompt the same degree of alarm or scrutiny as a request to interface with a new asset even though modifications of assets can present just as many security flaws. This lack of scrutiny has many causes. First and as a practical matter changes to assets are not always detected so the emergence of new security gaps in security may be unknown to the enterprise. And second due to the large time and resource investment inherent in the evaluation of security issues posed by any asset changes to assets over time have historically been less policed than assets that are being newly introduced as a simple matter of triage. Accordingly a need exists for a system that can facilitate compliance with the security policies governing interaction with a given enterprise computing platform and which at the same time can expedite the evaluation of both new and modified assets.

As described herein example systems and apparatuses solve both these needs and others by providing a security engine configured to automatically evaluate assets for compliance with the security policies of an enterprise computing platform. In some embodiments the security engine utilizes machine learning techniques that facilitate the preprocessing and classification of security policy related information regarding assets and the subsequent prediction of continuous variables statistical regression and dimension reduction reducing irrelevant variables to identify. By doing so example embodiments introduce greater rigor to security analysis thus ensuring better protection of the enterprise computing platform against potential attacks that may otherwise take advantage of security gaps.

Moreover by requiring installation of a component agent on assets that have been authorized to interact with an enterprise computing platform and by introducing the use of a component scanner configured to communicate with the component agent changes to assets already authorized to interface with the enterprise computing platform can be rigorously identified and evaluated thereby unlocking the opportunity to evaluate the ongoing security profile of assets as they evolve over time. In conjunction these concepts illustrate a configuration of an enterprise computing platform enabling the automated assessment of new assets and changing assets mitigating two historical points of weakness in enterprise computing platform security assessment.

As described in greater detail below various embodiments described herein improve upon existing asset assessment and security policy enforcement techniques. The embodiments described herein are directed to improvements in the technical character ability and efficiency of an enterprise computing platform.

Methods apparatuses and computer program products of the present invention may be embodied by any of a variety of devices. For example the method apparatus and computer program product of an example embodiment may be embodied by a networked device such as a server or other network entity configured to communicate with one or more devices such as one or more client devices. Additionally or alternatively the computing device may include fixed computing devices such as a personal computer or a computer workstation. Still further example embodiments may be embodied by any of a variety of mobile terminals such as a portable digital assistant PDA mobile telephone smartphone laptop computer tablet computer or any combination of the aforementioned devices.

In this regard discloses an example computing system within which embodiments of the present invention may operate. Various assets may desire access and to an enterprise computing platform via a network e.g. the Internet or the like using computing devices A through N A through N and A through N respectively.

The computing devices A through N A through N and A through N may be embodied by any computing devices known in the art. Electronic data received by the enterprise computing platform from the diagnostic laboratory devices A N medical provider devices A N and third party devices A N may be provided in various forms and via various methods. For example these devices may include desktop computers laptop computers smartphones netbooks tablet computers wearable devices and or any combination of devices or entities adapted to perform the functions operations and or processes described herein and the electronic data may be provided using various transmission modes and or protocols associated with these devices.

Additionally or alternatively the diagnostic laboratories medical providers and other third parties may interact with the enterprise computing platform via a web browser. As yet another example the devices A N A N and A N may include various hardware or firmware designed to interface with the lab extraction computing system e.g. where an example device or is a purpose built device offered for the primary purpose of communicating with the enterprise computing platform such as a kiosk .

The enterprise computing platform may comprise a security engine that may be in communication with a database and a component scanner . The security engine may be embodied as a computer or computers as known in the art. The security engine may receive electronic data from various sources including but not necessarily limited to the devices A N A N and A N and may be operable to analyze assets represented provided and or represented by these devices.

The database may be embodied as a data storage device such as a Network Attached Storage NAS device or devices or as a separate database server or servers. The database includes information accessed and stored by the security engine to facilitate the operations of the enterprise computing platform . For example the database may include without limitation one or more security policies standards baselines and or patterns established for the enterprise computing platform . In this regard a security policy is a broad sweeping document that provides security guidance from a business and technology perspective on a matter while a standard is more granular and typically more technical document containing details that are often too specific to contain in the broader security policy. A baseline refers to a series of instructions or requirements that must be met before a technology is allowed into the enterprise. Accordingly as described in greater detail below the enterprise computing platform includes components e.g. security engine and component scanner to ingest design requirements corresponding to assets under evaluation both functional and non functional and map those requirements and the technology being evaluated based on its compliance with said policies standards baselines and patterns in order to determine whether there exist any security gaps that could introduce risk into the enterprise. Beyond these security policies standards baselines and patterns however the database may store other information such as security related data protection suites for the database and or application program interface API integration hooks.

Finally the component scanner may comprise a resource facilitating indirect communication between the security engine and one or more component agents installed on assets with which the enterprise computing platform may interact. By avoiding direct communication between component agents and the security engine itself the component scanner provides an additional layer of protection to the enterprise computing platform . In this regard the component scanner may provide benefits similar to those provided by a bastion host because even if the component scanner is compromised due as a result of its interactions with an asset via a corresponding component agent hosted by a particular asset the component scanner itself does not store or provide access to any sensitive information and security of the enterprise computing platform may be maintained despite the compromise.

It will be understood that while the component scanner enables retrieval of data from component agents hosted by various assets e.g. providing information to the security engine facilitated analysis of the risk profile of interfacing with the asset this communication can be bidirectional and the security agent may transmit information back to the asset via the component scanner and the asset s component agent such transmissions may include indications of changes needed for continued interoperability with the enterprise computing platform .

The component scanner provides an additional function as well. It is configured to determine differences between proposals from an asset which are provided by that asset s component agent to identify whether renewed evaluation of the risk profile of the asset is warranted. By doing so the component scanner provides the enterprise computing platform with the ability to avoid the development of gaps in security despite the fact that the feature sets provided by assets evolve continually over time.

The security engine may be embodied by one or more computing devices such as apparatus shown in . As illustrated in the apparatus may include a processor a memory input output circuitry communications circuitry and risk evaluation circuitry . The apparatus may be configured to execute the operations described above with respect to and below with respect to . Although these components are described with respect to functional limitations it should be understood that the particular implementations necessarily include the use of particular hardware. It should also be understood that certain of these components may include similar or common hardware. For example two sets of circuitry may both leverage use of the same processor network interface storage medium or the like to perform their associated functions such that duplicate hardware is not required for each set of circuitry. The use of the term circuitry as used herein with respect to components of the apparatus therefore includes particular hardware configured to perform the functions associated with the particular circuitry described herein.

Of course while the term circuitry should be understood broadly to include hardware in some embodiments it may also include software for configuring the hardware. In some embodiments circuitry may include processing circuitry storage media network interfaces input output devices and the like. In some embodiments other elements of the apparatus may provide or supplement the functionality of particular circuitry. For example the processor may provide processing functionality the memory may provide storage functionality the communications circuitry may provide network interface functionality and the like.

The processor and or co processor or any other processing circuitry assisting or otherwise associated with the processor may be in communication with the memory via a bus for passing information among components of the apparatus. The memory may be non transitory and may include for example one or more volatile and or non volatile memories. In other words the memory may be an electronic storage device e.g. a computer readable storage medium . The memory may be configured to store information data content applications instructions or the like for enabling the apparatus to carry out various functions in accordance with example embodiments of the present invention.

The processor may be embodied in a number of different ways and may for example include one or more processing devices configured to perform independently. Additionally or alternatively the processor may include one or more processors configured in tandem via a bus to enable independent execution of instructions pipelining and or multithreading. The use of the term processing circuitry may be understood to include a single core processor a multi core processor multiple processors internal to the apparatus and or remote or cloud processors.

In an example embodiment the processor may be configured to execute instructions stored in the memory or otherwise accessible to the processor. Alternatively or additionally the processor may be configured to execute hard coded functionality. As such whether configured by hardware or software methods or by a combination of hardware with software the processor may represent an entity e.g. physically embodied in circuitry capable of performing operations according to an embodiment of the present invention while configured accordingly. Alternatively as another example when the processor is embodied as an executor of software instructions the instructions may specifically configure the processor to perform the algorithms and or operations described herein when the instructions are executed.

In some embodiments the apparatus may include input output circuitry that may in turn be in communication with processor to provide output to a user and in some embodiments to receive an indication of user input. The input output circuitry may comprise a user interface and may include a display and may comprise a web user interface a mobile application a client device a kiosk or the like. In some embodiments the input output circuitry may also include a keyboard a mouse a joystick a touch screen touch areas soft keys a microphone a speaker or other input output mechanisms. The processor and or user interface circuitry comprising the processor may be configured to control one or more functions of one or more user interface elements through computer program instructions e.g. software and or firmware stored on a memory accessible to the processor e.g. memory and or the like .

The communications circuitry may be any means such as a device or circuitry embodied in either hardware or a combination of hardware and software that is configured to receive and or transmit data from to a network and or any other device circuitry or module in communication with the apparatus . In this regard the communications circuitry may include for example a network interface for enabling communications with a wired or wireless communication network. For example the communications circuitry may include one or more network interface cards antennae buses switches routers modems and supporting hardware and or software or any other device suitable for enabling communications via a network. Additionally or alternatively the communication interface may include the circuitry for interacting with the antenna s to cause transmission of signals via the antenna s or to handle receipt of signals received via the antenna s .

Risk evaluation circuitry includes hardware configured to implement the security engine . Accordingly risk evaluation circuitry is designed to analyze information regarding an asset and identify security gaps for potential remediation. In this regard the risk evaluation circuitry may utilize machine learning to evaluate the architecture of an asset against the security policies standards baselines or patterns established for the enterprise computing platform in order to identify security gaps. To do this risk evaluation circuitry includes a machine learning and or artificial intelligence component designed to capture security gaps based on understanding the proposed architecture and any outliers within this proposed architecture based for instance on a baseline that the risk evaluation circuitry itself develops over time using training data. The risk evaluation circuitry is therefore configured to use interpretive analysis and analytics to determine if there are any false positives to heal broken architectures that are out of compliance to policy standards or baselines that would be housed within the logic as reference points and updated as those policies standards and baselines are revised in the enterprise.

Risk evaluation circuitry may utilize processing circuitry such as the processor to perform the above operations and may utilize memory to store the generated results of each risk evaluation. It should also be appreciated that in some embodiments the risk evaluation circuitry may include a separate processor specially configured field programmable gate array FPGA or application specific interface circuit ASIC to perform its functions. The risk evaluation circuitry is therefore implemented using hardware components of the apparatus which in turn are configured by either hardware or software for implementing these planned functions.

As will be appreciated any such computer program instructions and or other type of code may be loaded onto a computer processor or other programmable apparatus s circuitry to produce a machine such that the computer processor other programmable circuitry that execute the code on the machine create the means for implementing various functions including those described herein.

In addition however each apparatus may further include a component agent comprising hardware configured to interact with the component scanner . The component agent made be temporal in nature residing on the asset to allow communication updates from the platform to the other solution components should a change take place in the asset architecture as determined by the scanner and reported to the security engine. The component agent may comprise a lightweight and unobtrusive component stored on the asset. It should be appreciated that in some embodiments the component agent may comprise a hardware module including a separate processor specially configured field programmable gate array FPGA or application specific interface circuit ASIC to perform these functions. In some embodiments component agent is therefore implemented using hardware components of the apparatus configured by either hardware or software for implementing these planned functions although it should be understood that in some embodiments component agent may be configured entirely in software and may execute by utilizing the previously described components of the apparatus .

As described above and as will be appreciated based on this disclosure example embodiments of the present invention may be configured as methods mobile devices backend network devices and the like. Accordingly embodiments may comprise various means including entirely of hardware or any combination of software and hardware. Furthermore embodiments may take the form of a computer program product on at least one non transitory computer readable storage medium having computer readable program instructions e.g. computer software embodied in the storage medium. Any suitable computer readable storage medium may be utilized including non transitory hard disks CD ROMs flash memory optical storage devices or magnetic storage devices.

Having described the circuitry comprising some example embodiments contemplated herein it should be understood that the enterprise computing platform may advantageously evaluate the architecture of assets in association with security policies of the enterprise computing platform . In accordance with example embodiments illustrate a high level system design a contextual component design and a system level design respectively.

Turning first to a high level system design is provided for evaluating the architecture of assets in association with security policies standards baselines and patterns of the enterprise computing platform hosted by policy server . As shown in the system design relies on the use of TCG TNC working group NIST industry standard architecture and protocols such as Secure Content Automation Protocol NIST 800 117 SCAP that provide a protocol vocabulary for communication regarding asset security. A security engine which relies upon machine learning artificial intelligence may be embedded into the control plane of the solution and may communicate with the various other elements in the enterprise computing platform via IF MAP bus . The artificial intelligence employed by the security engine may in some embodiments be based upon sci kit learn in Python. This would aid in pre processing data classification ID regression predicting continuous variables and dimensionality reduction reducing random variables considered. In other embodiments Oryx may be used for machine learning ML AI as it may be possible to leverage their lambda architecture and built upon H20 on Hadoop with HDFS at the computation layer interacting with the service layer and the bus. Finally although not shown in a SCAP enabled endpoint asset may interface with the enterprise computing platform using the above referenced component agent to allow for constant communications with the platform and the IF MAP bus using the IF MAP open protocol. The security policies standards and baselines stored on the policy server can therefore be referenced to determine and heal security gaps to reduce risk and improve the proposed architectures being evaluated by the platform.

While provides a high level design it will be understood that a contextual component design CCD of an example enterprise computing platform may often be segmented in various zones having different access rights and operational roles. Typically an enterprise will provide segmentation and isolation of the zones within its architecture to prevent access from a low security zone to a high security zone. The arrangement and architecture of these zones may be customized as requirements are determined for each particular enterprise architecture based on where the assets reside. Accordingly the security engine may sit in a presentation layer zone that allows for easy access and communication with external assets thus facilitating near real time assessment based on business and technical requirements. Alternatively the security engine may be located in deeper zone within the enterprise architecture thus provide greater security from external sources. The component scanner may also be located in the presentation zone to facilitate interaction with assets at a distinct layer from core operational components of the enterprise computing platform to enhance the security of the platform as a whole. The component agent would correspondingly reside on critical information assets communicating with the component scanner to determine if changes have been made outside of current policy patterns standards and baselines of the enterprise computing platform . It should be understood that the security engine also contains a database and web server component as shown in using which all communications into and out of the security engine are secured and reported upon.

Turning now to the provided flowchart illustrates a sequence of operations for reducing security risk through automated assessment of applications and enforcement of security policies. As noted previously these operations may be performed by an enterprise computing platform with the assistance of and or under the control of a computing device such as apparatus . In this regard the apparatus hosts the security engine and thus comprises the device implementing the functionality of security engine .

In operation apparatus includes means such as input output circuitry communications circuitry or the like for receiving a proposed architecture for evaluation. Each received proposed architecture corresponds to an asset designed for interfacing with the enterprise computing platform . The proposed architecture may comprise a document having any format capable of describing the proposed architecture of the enterprise computing platform upon interfacing with the asset e.g. the document may comprise a Visio diagram .vsd a Word document .doc an excel spreadsheet .xls a PowerPoint presentation ppt or the like or even raw data . The proposed architecture received may include high level and system level designs plus functional and non functional architectural requirements for integrating the asset into the enterprise computing platform .

In operation apparatus includes means such as risk evaluation circuitry or the like for dynamically evaluating the proposed architecture against embedded enterprise security policies standards baselines and or patterns. This operation may be performed using one or more machine learning algorithms enabling interpretation of the proposal for security evaluation. In some embodiments this operation may be performed by the risk evaluation circuitry implementing functionality of the security engine . The machine learning algorithms may utilize supervised learning unsupervised learning regressive algorithms e.g. predictions that can be made based on a model e.g. instance based algorithms and decision tree algorithms or Bayesian algorithms association rule learning algorithms ARLA such as Apriori Eclat or the like deep learning or artificial neural network algorithms back propagation RBFN .

In operation the apparatus includes means such as risk evaluation circuitry or the like for determining whether the dynamic evaluation of the proposed architecture contains any security gaps that may violate the security policies standards baselines or patterns established for the enterprise computing platform . In this regard a security gap comprises either an aspect of the proposed architecture that is known to be out of compliance with the security policies standards baselines or patterns of enterprise computing platform or an aspect of the proposed architecture for which the security engine as implemented by the risk evaluation circuitry is unable to determine compliance status. In an instance in which one or more security gaps are identified the procedure advances to operation . However if no security gaps are identified the procedure advances directly to operation for generation of a report regarding the proposed architecture.

In operation the apparatus includes means such as risk evaluation circuitry or the like for determining for each security gap identified whether the security gap is known to be out of compliance or for which its compliance status is unable to be determined by the security engine . If the security gap is known to be out of compliance the procedure advances to operation to determine possible changes that might remediate the security gap. If the security gap is status is unable to be determined the procedure advances to operation to request manual intervention.

Turning next to operation the apparatus includes means such as risk evaluation circuitry or the like for determining changes to the proposed architecture that would remediate the security gap. In this regard when the security engine is able to identify an out of compliance security gap this identification stems from the ability of the security engine to identify a particular portion of a security policy standard baseline or pattern that is violated. Accordingly determining changes to the proposed architecture that would remediate the security gap may in some embodiments reference the violated policy standard baseline or pattern and identify the nature of the violation and by extension the manner by which the violation could be corrected. In this regard security gap non compliance may be determined by the inputs e.g. the data training set used to generate the policies standards baselines and patterns for the enterprise or anomaly signature set and baseline related data identifying normal or allowed architectures for the enterprise. This operation may thus be performed in real time or near real time rather than in a batch or delayed process as would be required to implement a similar feature manually.

As noted previously however it may not always be the case that the security engine is able to diagnose each identified security gap. In such instances where diagnosis is not possible the procedure advances from operation to operation . In operation the apparatus includes means such as input output circuitry communications circuitry or the like for retrieving manual intervention regarding the changes to the proposed architecture that would remediate the undiagnosed security gap. Retrieval of manual intervention may include transmission of a request for manual intervention followed be receipt of a response to the request from a user. These data transmissions may be made via input output circuitry of the apparatus or via communications circuitry if the user provides the response from a separate terminal. One aspect of a machine learning system that benefits from this operation is that user diagnosis of each otherwise undiagnosed security gap will itself comprise a training input that can thereafter be used by the security engine to diagnose similar aspects of proposed architecture prospectively. In this fashion while manual intervention may be more common upon initial utilization of the security engine over time it will become less and less necessary as the machine learning components generate larger sets of training data that can be mined to diagnose all aspects of later proposed architectures.

In operation the apparatus includes means such as processor memory risk evaluation circuitry or the like for determining whether additional security gaps have been identified and if so the procedure returns to operation for processing of the remainder of the identified security gaps. If not however the procedure advances to operation for generation of a report regarding the proposed architecture.

Finally in operation the apparatus includes means such as communications circuitry or the like for generating a report regarding the proposed architecture. In this regard the report may comprise a document describing any security gaps identified during the evaluation of the proposed architecture and indicating what changes to the proposed architecture may be necessary to remediate those security gaps. In some embodiments however the report may comprise a series of documents e.g. one for each identified security gap . In yet other embodiments the report may not comprise a single document but a data stream that can be stored by a receiving component for instance the security engine may transmit these changes in sequential fashion to the component scanner . In an instance in which no security gaps were identified the report may indicate that the proposed architecture has been validated and in this case after this process completes the proposed architecture and its corresponding asset s would be determined as compliant and require no remediation allowing this solution to be integrated by continuously monitored in the enterprise architecture 

If the proposed architecture represents a change to an asset that has previously been validated the apparatus may cause transmission of the report to a component agent residing on the asset that has changed. As noted above if the changes to the proposed architecture needed to remediate the security gap are sequentially transmitted to the component scanner the component scanner may itself collate the changes into a report for delivery to the component agent or may relay the changes in sequential fashion to the component agent residing on the asset to which the proposed architecture relates.

Turning now to a flowchart is provided that illustrates a sequence of operations for ensuring that already evaluated assets that change do not introduce new security gaps. These operations may be performed by an enterprise computing platform which may for instance comprise an apparatus . In some embodiments the apparatus implements the security engine and in addition implements the component scanner . In this case even though the same apparatus implements both the security engine and the component scanner it should be understood that these two components may be distinct operative elements executed by the apparatus rather than being parts of a single application. It should be understood though that in some other embodiments the apparatus implements the security engine but does not implement the component scanner and instead is in operative communication with a separate apparatus that implements the component scanner . In any embodiment the component scanner in turn is in communication with a component agent residing on an asset.

In operation the apparatus may include means such as communications circuitry risk evaluation circuitry or the like for causing transmission by a component scanner of one or more change identification messages to a component agent residing on an asset. In an instance in which the apparatus embodies the component scanner as well as the security engine this operation may include transmitting the change identification message to the component agent directly. Of course in an instance in which the apparatus does not itself embody the component scanner this operation may include transmitting a message to the component scanner instructing the component scanner to in turn transmit the change identification message to the component agent.

In operation the apparatus may include means such as processor communications circuitry risk evaluation circuitry or the like for receiving from the component agent an indication of an architecture of the asset. As with operation above the particular sub steps taken in operation may be different depending on whether the apparatus itself embodies the component scanner or not.

In an instance in which the apparatus embodies the component scanner as well as the security engine operation includes receiving a message from the component agent describing the asset architecture and further includes evaluating the asset architecture to identify changes to the asset architecture from the version of the architecture that had previously been evaluated by the security engine.

Alternatively in an instance in which the apparatus does not itself embody the component scanner the component scanner may receive the message describing the architecture from the component agent and may identify any changes to the asset architecture from the version of the architecture that had previously been evaluated. In this case in operation the apparatus may simply receive an indication from the component scanner of whether there have been any changes to the asset architecture from the version of the architecture that was previously evaluated by the security engine.

As indicated by operation in an instance in which the asset architecture has changed the procedure moves to operation to begin a new evaluation of the changed architecture to ensure no security gaps have been introduced by the change. Alternatively in an instance in which the asset architecture has not change no further action need be performed and the procedure may end.

The following scenarios illustrate example operations that may occur when a user wishes to integrate a new asset into the enterprise computing platform . In the following examples the asset comprises a new software module that allows transmission of PHI PII or PCI data between the enterprise computing platform and a user s mobile device e.g. elements or in . For the first two examples it will be assumed that a security policy of the enterprise computing platform includes a prohibition against unencrypted transmission of PHI PII or PCY data.

In the first example the proposed architecture incorporating the new asset facilitates unencrypted transmission of PCI data between the enterprise computing platform and the user s mobile device. In operation a user generates and submits a proposed architecture including this asset for evaluation by the enterprise computing platform . In operation the security engine dynamically evaluates the proposed architecture against the embedded security policies standards baselines and patterns of the enterprise computing platform . At operation the enterprise computing platform identifies a security gap the proposed architecture would facilitate unencrypted PCI data transmission. Accordingly the procedure advances to operation for determination of whether this security gap is known. It is so the procedure advances to operation to identify what changes may remediate this security gap. In operation the enterprise computing platform determines that a change to the proposed architecture requiring encrypted transmission of PCI data would remediate the problem and enable use of the asset with the enterprise computing platform . Because this is the only security gap identified in this example the procedure advances through operation to operation to generate a report to the user indicating that the PCI data transmission must be encrypted for the asset to be used with the enterprise computing platform .

In a second example a proposed architecture incorporating the new asset facilitates encrypted transmission of this data between the enterprise computing platform and the user s mobile device. Here as in the first example in operation a user generates and submits a proposed architecture including this asset for evaluation by the enterprise computing platform . Also similar to the first example in operation the security engine dynamically evaluates the proposed architecture against the embedded security policies standards baselines and patterns of the enterprise computing platform . However at operation the enterprise computing platform does not identify a security gap because in this example the proposed architecture uses encrypted PCI data transmission there is no problem with the proposal. Accordingly the procedure advances directly to operation to generate a report to the user indicating that the asset is validated and may be utilized with the enterprise computing platform .

In a third example a proposed architecture incorporating the asset facilitates encrypted transmission of PCI data between the enterprise computing platform and the user s mobile device but uses a type of encryption that is not identified in the security policies standards baselines or patterns of the enterprise computing platform . As with the first two examples in operation a user generates and submits a proposed architecture including this asset for evaluation by the enterprise computing platform . In operation the security engine dynamically evaluates the proposed architecture against the embedded security policies standards baselines and patterns of the enterprise computing platform . At operation the enterprise computing platform identifies a security gap the proposed architecture would facilitate encrypted PCI data transmission but the encryption protocol is unrecognized. Accordingly the procedure advances to operation for determination of whether this security gap is known. Because the encryption protocol is unrecognized the security gap is not known and the procedure advances to operation to acquire manual intervention. In operation the manual intervention may indicate one of two things either the encryption protocol is adequately secure in which case there is not a security gap or the encryption protocol is not sufficiently secure and the proposed architecture does include a security gap after all.

In the latter case the manual intervention will thus provide both the confirmation of a security gap and identify the changes to the architecture that would remediate the security gap a proposal of an alternative encryption scheme . Regardless of whether the manual intervention confirms the existence of a security gap or not this is the only security gap identified in this example and the procedure advances through operation to operation to generate a report to the user. If there is no security gap then the report validates the asset for use with the enterprise computing platform . However if there remains a security gap then the report indicates the change necessary to the encryption scheme to enable the PCI data transmission to be used with the enterprise computing platform . Either way the manual intervention represents another training data point that is thereafter ingested by the security engine for use during dynamic evaluation of future proposed architectures.

Finally in a fourth example the asset has been validated previously when it facilitated encrypted transmission of sensitive data between the enterprise computing platform and the user s mobile device but a change to the architecture of the asset would enable the unencrypted transmission of some types of PCI data. As an initial matter when an asset is validated and used in connection with the enterprise computing platform example embodiments described herein may mandate that the asset when used have a component agent stored thereon to facilitate communication between the asset and a component scanner residing within the enterprise computing platform and in communication with the security engine . Accordingly the following procedure would be performed. First in operation the component scanner would transmit a change identification message to the component agent residing on the asset. In response the component agent transmits an indication of the architecture of the asset. In operation the component scanner compares this current architecture against the architecture of the asset that was validated in the past and determines that there has been a change. Accordingly the procedure advances to operation in which the component scanner submits the changed architecture to the security engine for analysis.

Subsequently in operation the security engine dynamically evaluates the changed architecture against the embedded security policies standards baselines and patterns of the enterprise computing platform . At operation the enterprise computing platform identifies a security gap the changed architecture would facilitate unencrypted PCI data transmission. Accordingly the procedure advances to operation for determination of whether this security gap is known. It is so the procedure advances to operation to identify what changes may remediate this security gap. In operation the enterprise computing platform determines that a further change to the changed architecture requiring encrypted transmission of PCI data would remediate the problem and enable continued use of the asset with the enterprise computing platform . Because this is the only security gap identified in this example the procedure advances through operation to operation to generate a report to the user indicating that the PCI data transmission must be encrypted for the asset to continue to be used with the enterprise computing platform .

As described above example embodiments of the present invention enable improved security of an enterprise computing platform. Through implementation of an artificially intelligent security analysis system example embodiments expedite the process of security gap identification while at the same time improving both the consistency of security analysis and newly facilitating remediation of identified security gaps both for new assets that may be introduced to the enterprise computing platform and existing assets that evolve over time.

Accordingly blocks of the flowcharts support combinations of means for performing the specified functions and combinations of operations for performing the specified functions. It will be understood that one or more blocks of the flowcharts and combinations of blocks in the flowcharts can be implemented by special purpose hardware based computer systems which preform the specified functions or combinations of special purpose hardware and computer instructions.

In some embodiments certain ones of the operations above may be modified or further amplified. Furthermore in some embodiments additional optional operations may be included. Modifications amplifications or additions to the operations above may be performed in any order and in any combination.

As described above certain example embodiments of the present invention are directed to improved apparatuses methods and computer readable media for improving upon the technical character ability and efficiency of traditional computing devices. Through the use of data based heuristics referenced above embodiments described herein enable data extraction operations to ignore portions of lab reports containing irrelevant information. In this fashion embodiments described herein provide improvements in efficiency that increase in the throughput of data extraction efforts and enable the generation of more up to date sets of structured data for subsequent actuarial uses among others .

Many modifications and other embodiments of the inventions set forth herein will come to mind to one skilled in the art to which these inventions pertain having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore it is to be understood that the inventions are not to be limited to the specific embodiments disclosed and that modifications and other embodiments are intended to be included within the scope of the appended claims. Moreover although the foregoing descriptions and the associated drawings describe example embodiments in the context of certain example combinations of elements and or functions it should be appreciated that different combinations of elements and or functions may be provided by alternative embodiments without departing from the scope of the appended claims. In this regard for example different combinations of elements and or functions than those explicitly described above are also contemplated as may be set forth in some of the appended claims. Although specific terms are employed herein they are used in a generic and descriptive sense only and not for purposes of limitation.

