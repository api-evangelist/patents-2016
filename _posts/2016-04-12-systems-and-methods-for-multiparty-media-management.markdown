---

title: Systems and methods for multi-party media management
abstract: Systems and methods for recording full quality audio and/or video from a plurality of parties, while also facilitating a real-time conversation or other interaction over low-bandwidth network links are provided. A voice over Internet protocol (VoIP) conversation, or other type of session, is facilitated between two or more parties using methods that reduce sound or video quality to achieve a low-latency connection. During the VoIP conversation, or other type of session, the audio and/or video from each party is recorded directly onto a storage medium of their respective device and stored as one or more data files. These data files can be generally unmodified, or merely lightly modified or compressed, resulting in a higher quality recording of the audio and/or video as compared to the audio and/or video that was transmitted to the other party during the session. The data files are then merged to create a final merged high-quality composite recording of the session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479547&OS=09479547&RS=09479547
owner: Ringr, Inc.
number: 09479547
owner_city: Mahomet
owner_country: US
publication_date: 20160412
---
This application claims the benefit of U.S. provisional patent application Ser. No. 62 146 637 filed on Apr. 13 2015 the disclosure of which is incorporated herein by reference in its entirety.

Conventional telephone systems and VoIP systems significantly reduce the quality of the transmitted audio. The reduction in quality can enable transmission over a low bandwidth connection. Typically low pass filtering and other compression techniques are utilized both of which can significantly alter the quality of the audio. For example traditional POTS telephone systems limit the frequency spectrum of transmitted audio to about the 350 Hz 3.3 kHz range. By comparison the range of frequencies produced by human speech is generally about 60 Hz 14 khz. While some telephone systems do offer wide band audio support that can increase the range of audio recorded to about 7 kHz however this increase still only covers around half of the frequency range of human speech. When audio transmitted through a conventional telephone system or VoIP system is recorded the difference in the audio quality is detectable by an untrained ear.

Various non limiting embodiments of the present disclosure will now be described to provide an overall understanding of the principles of the structure function and use of systems and methods disclosed herein for recording of high quality multi party sessions over network links that do not have sufficient bandwidth to support such recording in real time including the majority of internet connections. One or more examples of these non limiting embodiments are illustrated in the selected examples disclosed and described in detail with reference made to in the accompanying drawings. Those of ordinary skill in the art will understand that systems and methods specifically described herein and illustrated in the accompanying drawings are non limiting embodiments. The features illustrated or described in connection with one non limiting embodiment may be combined with the features of other non limiting embodiments. Such modifications and variations are intended to be included within the scope of the present disclosure.

The systems apparatuses devices and methods disclosed herein are described in detail by way of examples and with reference to the figures. The examples discussed herein are examples only and are provided to assist in the explanation of the apparatuses devices systems and methods described herein. None of the features or components shown in the drawings or discussed below should be taken as mandatory for any specific implementation of any of these apparatuses devices systems or methods unless specifically designated as mandatory. For ease of reading and clarity certain components modules or methods may be described solely in connection with a specific figure. In this disclosure any identification of specific techniques arrangements etc. are either related to a specific example presented or are merely a general description of such a technique arrangement etc. Identifications of specific details or examples are not intended to be and should not be construed as mandatory or limiting unless specifically designated as such. Any failure to specifically describe a combination or sub combination of components should not be understood as an indication that any combination or sub combination is not possible. It will be appreciated that modifications to disclosed and described examples arrangements configurations components elements apparatuses devices systems methods etc. can be made and may be desired for a specific application. Also for any methods described regardless of whether the method is described in conjunction with a flow diagram it should be understood that unless otherwise specified or required by context any explicit or implicit ordering of steps performed in the execution of a method does not imply that those steps must be performed in the order presented but instead may be performed in a different order or in parallel.

Reference throughout the specification to various embodiments some embodiments one embodiment some example embodiments some exemplary embodiments one example embodiment or an embodiment means that a particular feature structure or characteristic described in connection with any embodiment is included in at least one embodiment. Thus appearances of the phrases in various embodiments in some embodiments in one embodiment some example embodiments one example embodiment or in an embodiment in places throughout the specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

Throughout this disclosure references to components or modules generally refer to items that logically can be grouped together to perform a function or group of related functions. Like reference numerals are generally intended to refer to the same or similar components. Components and modules can be implemented in software hardware or a combination of software and hardware. The term software is used expansively to include not only executable code for example machine executable or machine interpretable instructions but also data structures data stores and computing instructions stored in any suitable electronic format including firmware and embedded software. The terms information and data are used expansively and includes a wide variety of electronic information including executable code content such as text video data and audio data among others and various codes or flags. The terms information data and content are sometimes used interchangeably when permitted by context. It should be noted that although for clarity and to aid in understanding some examples discussed herein might describe specific features or functions as part of a specific component or module or as occurring at a specific layer of a computing device for example a hardware layer operating system layer or application layer those features or functions may be implemented as part of a different component or module or operated at a different layer of a communication protocol stack. Those of ordinary skill in the art will recognize that the systems apparatuses devices and methods described herein can be applied to or easily modified for use with other types of equipment can use other arrangements of computing systems such as client server distributed systems and can use other protocols or operate at other layers in communication protocol stacks than are described.

The present disclosure is generally directed to systems and methods for recording of full quality audio and or video from a plurality of parties while also facilitating a real time conversation or other interaction over low bandwidth network links. As described in more detail below in some embodiments a VoIP conversation can be facilitated between two or more parties using conventional methods that may reduce sound quality to achieve a low latency audio connection via a device such as a smart phone or computer per party. During the VoIP conversation or other type of session the audio and or video from each party can be recorded directly onto a storage medium of their respective device and stored as one or more data files. These records can be generally unmodified or merely lightly modified or compressed resulting in a higher quality recording of the audio and or video as compared to the audio and or video that was transmitted to the other party during the session.

As described in more detail below timing information for each party s recording function can also be maintained to facilitate the eventual alignment and merging by a multi party media management controller of the plurality of recordings associated with a session. The data file s created by each party s device can be uploaded to a multi party media management controller after the session ends or at any other suitable time such as at intervals during the session. The multi party media management controller can then process the two or more separate data files to produce a final merged high quality composite recording of the session. This merged media file can then be made available to any suitable recipient such as one or more of the parties or any other person or entity. In some embodiments the merged media file can be downloaded to a computing device or otherwise transferred through a suitable transfer mechanism. While the systems and methods described herein can be applicable to real time recording and subsequent merging of multi media elements i.e. audio and video various examples are described herein in the context of audio only based systems merely for the purposes of explanation. Such examples are not intended to be limiting.

Referring now to which depicts an example system diagram comprising a multi party media management controller the multi party media management controller can be in communication with one or more communications networks . The multi party media management controller can be provided using any suitable processor based device or system such as a personal computer laptop server mainframe other processor based device or a collection e.g. network of multiple computers for example. In some embodiments the multi party media management controller can generally be a cloud based service available to a plurality of users through various communication networks.

The multi party media management controller can include one or more processors and one or more memory units. For convenience only one processor and only one memory unit are shown in . The processor can execute software instructions stored on the memory unit . The processor can be implemented as an integrated circuit IC having one or multiple cores. The memory unit can include volatile and or non volatile memory units. Volatile memory units can include random access memory RAM for example. Non volatile memory units can include read only memory ROM as well as mechanical non volatile memory systems such as a hard disk drive optical disk drive or other non volatile memory. The RAM and or ROM memory units can be implemented as discrete memory ICs.

The memory unit can store executable software and data for a media management engine . When the processor of the multi party media management controller executes the software instructions of the media management engine the processor can be caused to perform the various operations of the multi party media management controller . The various operations of the multi party media management controller can include but are not limited to the following create and maintain user accounts schedule and host session determine recording timing data receive uploaded data files from numerous user computing devices determine media alignments process and merge uploaded data files and provide merged media files to recipients as well as perform other operations as discussed in more detail below.

The media management engine can use data from various sources including but not limited to one or more databases . The data stored in the databases can be stored in a non volatile computer memory such as a hard disk drive read only memory e.g. a ROM IC or other types of non volatile memory. In some embodiments one or more of the databases can be stored on a remote electronic computer system and can be accessed by the multi party media management controller via the communications network . As one having ordinary skill in the art would appreciate a variety of other databases or other types of memory storage structures such as those illustrated in can be utilized or otherwise associated with the multi party media management controller .

Also shown in the multi party media management controller can include one or more computer servers which can include one or more web servers one or more application servers and or one or more other types of servers such as VoIP servers i.e. an internet based telephone system . For convenience only one web server one application server and one VoIP server are depicted in although one having ordinary skill in the art would appreciate that the disclosure is not so limited. Further while VoIP server is schematically depicted as being a component of the multi party media management controller in some embodiments the VoIP server can be provided by a separate system. In any event the servers can cause content to be sent to first and second party communication devices described in more detail below via the communication network in any of a number of formats which can include but are not limited to phone calls text based messages multimedia messages email messages smart phone notifications web pages and other message formats. The servers can be comprised of processors e.g. CPUs memory units e.g. RAM ROM non volatile storage systems e.g. hard disk drive systems and other elements. The servers may utilize one or more operating systems including but not limited to Solaris Linux Windows Server or other server operating systems.

In some embodiments the web server can provide a graphical web user interface through which various users can interact with the multi party media management controller . The graphical web user interface can also be referred to as a graphical user interface client portal client interface graphical client interface and so forth. The web server can accept requests such as HTTP requests from various entities including but not limited to first entities second entities and third entities and serve responses to those entities such as HTTP responses along with optional data content such as web pages e.g. HTML documents and linked objects such as images video and so forth . The application server can provide a user interface for users who do not communicate with the multi party media management controller using a web browser. Such users can have special software installed on their communication device to allow the user to communicate with the application server via the communication network .

The multi party media management controller can be in communication with a plurality of communication devices via the communications network . For convenience only first and second party communication devices are schematically depicted in . The network can be an electronic communications network and can include but is not limited to the Internet LANs WANs GPRS networks other networks or combinations thereof. The network can include wired wireless fiber optic other connections or combinations thereof. In general the communications network can be any combination of connections and protocols that will support communications between the multi party media management controller and the first and second party communication devices and or other devices and systems as described in more detail below. Data communicated via the communications network can be of various formats and can include for example textual visual audio written language other formats or combinations thereof. The data communicated via the communications network can be in the form of files containing data in any of the aforementioned formats and can be uploaded to or downloaded from the multi party media management controller . The nature of data communicated via the communications network will be discussed in further detail in association with other exemplary embodiments.

As shown by the exemplary embodiment in a first party can be associated with one or more first party communication devices and a second party can be associated with one or more second party communication devices . Each of the communication devices can be any type of computer device suitable for communication over the network and having recording capabilities and storage capabilities. The first party communication device and or the second party communication device can be any of for example a laptop computer which also includes a netbook or other portable computing device a desktop computer a tablet computer a personal digital assistant PDA a smartphone combination telephone and handheld computer or other suitable mobile communications device such as a networked gaming device a media player for example . In some embodiments any of the communication devices can be a wearable computing device. Examples of wearable computing devices include devices that incorporate an augmented reality head mounted display as well as other computing devices that can be worn on the body of the user such as worn on the wrist.

In some embodiments similar to the exemplary embodiment in a first party and a second party can each install special software on their respective communication devices to allow the first and second parties to communicate with the application server via the communication network . The software for the communication devices can be downloaded to the communication device via the communication network or installed through other techniques known in the art. In some embodiments the software may be downloaded from the multi party media management controller . In some embodiments the software can be an app that is available from the Apple iStore or another app store for downloading onto and executing on an Apple iPhone or iPAd .

In some embodiments one or both of the communication devices can provide a variety of applications for allowing the respective first and second parties to accomplish one or more specific tasks using the multi party media management controller . Applications can include for example a web browser application e.g. INTERNET EXPLORER MOZILLA FIREFOX SAFARI OPERA GOOGLE CHROME and others telephone application e.g. cellular VoIP PTT and others networking application messaging application e.g. e mail IM SMS MMS BLACKBERRY Messenger and others and so forth. The communication devices can include various software programs such as system programs and applications to provide computing capabilities in accordance with the described embodiments. System programs can include but are not limited to an operating system OS device drivers programming tools utility programs software libraries application programming interfaces APIs and so forth. Exemplary operating systems can include for example a PALM OS MICROSOFT WINDOWS OS X iOS ANDROID OS UNIX OS LINUX OS SYMBIAN OS EMBEDIX OS Binary Runtime Environment for Wireless BREW OS Java OS a Wireless Application Protocol WAP OS and others.

The communication devices can include various components for interacting with the multi party media management controller such as a display or a keypad keyboard for inputting data and or commands. The communication devices can include other components for use with one or more applications such as a stylus a touch sensitive screen keys e.g. input keys present and programmable hot keys buttons e.g. action buttons a multi directional navigations button preset and programmable shortcut buttons switches a microphone camera speakers an audio headset and so forth.

In the illustrated embodiment the first party can function as an originating party and interacts with the multi party media management controller via a variety of other electronic communications techniques including but not limited to HTTP requests API calls and the like. The first party can for example create an account with the multi party media management controller and then setup a session with any number of participants such as second party and or others. Generally the session is to be recorded locally by the communication devices and then processed and merged by the multi party media management controller as described in more detail below.

The multi party media management controller can facilitate the setup of a session with the second party and or additional parties via any number of routes including but not limited to email invites SMS invites social media notifications push notifications for example via in app push notification services offered by APPLE and or the messaging systems offered by GOOGLE cloud or any other appropriate communication techniques. The invitation can include for example instructions on where to retrieve and install software that may be required to facilitate and record the session as well as information that may be required to join the session such as an invite code host code account name and so forth . The invitation can also contain a proposed time date for the session to be conducted or the invitation can be for a session that is to commence immediately or in the very near future. Leading up to the scheduled session reminders can be issued via mechanisms similar to those used to issue the invites.

Each first and second party can join the session at the designated time date. As each person enters the session the software resident on their communication devices can be provided with the access details for a VoIP connection via a Session Initiation Protocol SIP server i.e. the VoIP server and each can be asked to wait while the other parties join. Once all parties are ready the multi party media management controller can record the start time of the session i.e. using its own clock and issue a START signal to each communication device . When received each party s communication device can record the time the signal was received i.e. using its own clock begin a visible countdown displayed on a display screen of the respective communication device i.e. 3 seconds to allow each party to receive the start signal and to prepare themselves for the session to begin and then join the VoIP call. The communication devices can each start recording the local party s audio such that the first communication device records the audio of the first party and the second communication device records the audio of the second party .

The communication devices can also each issue a response to the START signal confirming to the multi party media management controller the start of recording. In order to aid in the post session merging of the recordings in some embodiments the response can also include a number of milliseconds between receipt of the START signal and the actual start of recording which can be referred to as the start delay as tracked and logged by each of the communication devices . When the START response is received by the server for each communication devices multi party media management controller can calculate and record the total roundtrip time by subtracting the time that it sent the START signal from the time at which it received the response referred to as the rtt delay. The start delay and rtt delay values for each participant can later be used to align the separate recordings to produce a merged recording as described in more detail below. In some embodiment the values can be refined by further SYNC signals issued by the multi party media management controller which can be handled in a similar fashion to the START signal except that they can also contain additional synchronization metrics such as the number of milliseconds since recording started in order to refine the estimate of the start time of recording on each device.

Once the call has started the first and second parties and any other parties that may be participating on the call via their own respective communication devices can converse as normal over a VoIP connection . Simultaneously the audio for each of the first and second parties can be recorded locally on their respective communication devices . In some embodiments the recorded audio on each device can generally contain no crosstalk or any evidence of the other participants as it can be purely a recording of the input to the microphone at the respective communication device rather than a recording of the VoIP conversation. When the session is complete the originating party may stop the session and a STOP signal can be issued to all parties by the multi party media management controller at which point the software will disconnect from the VoIP call immediately. As noted above while this embodiment is described in the context of an audio recording it is to be readily appreciated that similar techniques can be used to locally record video locally at each of the respective communication devices using analogous techniques.

On disconnection from the VoIP call or otherwise in response to a stop command or other event i.e. local memory storage is full each participant s communication device can cease recording and prepare to transmit the high quality recorded audio or video as may be the case to the multi party media management controller for processing. It is noted that prior to transmission to the multi party media management controller some relatively limited processing maybe performed on the data such as encoding the audio to reduce its storage size. The processing performed can have an emphasis on retaining a relatively high quality. Additionally in some cases chunking partitioning can be used to facilitate the upload of smaller portions of the recording at a time making the upload more robust to transmission issues and connection drops. In any event each communication devices can eventually upload the data files that contain the recorded audio to the multi party media management controller . A readout of the progress of each party s upload number of chunks completed vs. total chunks to upload can be made available to one or more of the parties . Should any communication devices fail to upload their data file s reminder notifications can be issued using the same mechanisms as those used to invite each participant.

Once the high quality audio or other media files from each communication devices has been uploaded to the multi party media management controller the audio files can be aligned and merged to form a composite media file containing the audio from each of the first and second parties . The start delay and rtt delay values for each of the communication devices can be used to calculate how the period of time it took for the communication device to start recording after the START signal was issued by the multi party media management controller . In one embodiment the recording delay for each communication device can be determined using the equation 1  delay start delay 2 start delay recording delay EQ. 1

As stated above in some embodiments these values can be refined through additional measurements made in response to SYNC calls from the multi party media management controller . The communication device with the smallest calculated recording delay can be determined to be the first communication device that began recording and all other recordings received by the multi party media management controller associated with that session can be padded at the beginning of with a number of milliseconds of silence or dead space. The amount of padding can generally be equal to the difference between the recording delay for that particular communication device and the lowest recording delay value in order to align the recordings when combined into a composite media file.

While the approach described above is one technique to align recordings additional or alternative alignment techniques can be used without departing from the scope of the current disclosure. For example synchronization of clocks on each communication device involved in a session can be utilized for example by using a Network Time Protocol NTP server or direct analysis of all the received recordings to determine the alignment where the where the audio overlaps the least i.e. when the least number of participants are talking at any time. In some embodiments more than one technique can be used to facilitate alignment of the data files received from a plurality of communication devices. Additionally in accordance some embodiments prior to merging the plurality of separate audio files volume levels of each recording can be normalized using a procedure based on perceived loudness in order to produce a merged media file in which each participant appears to be speaking at roughly the same volume. As is to be appreciated other suitable forms of equalization and processing can be applied to the data files either prior or post merging in an effort to improve the overall quality of the audio files.

Once aligned the recordings can be merged by the multi party media management controller to produce one or more output versions of the session as merged media file s . In some embodiments for example the output versions can include any of a composite audio file containing audio from all participants and or the aligned padded audio from a single participant. In some implementations the multi party media management controller can additionally or alternatively return the aligned audio from each communication devices a single channel mono version of the combined audio and a multi channel stereo for two participants version of the combined audio with one participant per audio channel. The merged recordings may be encoded in a suitable lossy or lossless audio codec or maintained in raw form i.e. as a WAV file . The merged recordings depicted as merged media file in can be provided to any number of suitable receiving entities such as the first communication devices of the first party or any other entity as shown by receiving entities . This access maybe provided via any suitable file transfer mechanism.

In some embodiments either of the first or second parties or other entity can request alternative versions of the merged recording including but not limited to alternative encodings and encoding qualities versions processed with noise removal techniques which may be applied to each individual recording more effectively than to the merged recording versions with a single or dynamically varying gain adjustment applied manually or via an automated procedure for each participant versions with a varying manual gain adjustment including muting of sections for each participant or versions with other added audio effects or sound effects manually or automatically applied.

Similar to the system described in the multi party media management controller can be utilized to setup user accounts and schedule a VoIP call between the communication devices . In this regard notifications and or emails can be dispatched by the multi party media management controller to the interviewer and interviewee. A SIP server can be utilized to initiate and manage the VoIP call between the communication devices . The communication devices can each record audio content locally into a storage medium and eventually upload the audio files to a storage service of the multi party media management controller . The received audio files can then be merged by the multi party media management controller and stored in a database for transfer to one or more recipients.

After the VoIP session or in some cases during the VoIP session the communication device can prepare the audio file for transfer. In the illustrated embodiment light encoding is applied to the file using an encoder . In one embodiment a VORBIS codec is utilized to generate an OGG file although this disclosure is not so limited. The encoded audio file can then optionally be chunked or otherwise partitioned using a chunked upload module . Chunking partitioning the encoded audio file can be helpful to upload of smaller portions of the encoded audio file making the upload process more robust to transmission issues and connection drops. The audio file chunks can then be uploaded to a multi party media management controller .

Referring first to at the application on the communication device is opened by the session originator. At it is determined if the originator is logged in to the system. If not the originator is directed to a menu where various inputs can be supplied such as a session code or account information. If a session code is entered at the originator can begin the process flow as a participant as shown in . Still referring to if account information is entered a sign up sequence can be initiated such as by entering a user name and email address and or other identifying information. At it can be determined if the account is available and if so a confirmation email can be sent at to validate the account and the originator can be presented with a welcome screen .

If the user is logged in or subsequent to creating a new account a main menu can be presented. The communication device can also check the available local storage at . If insufficient storage space is available a storage warning can be provided to the user. In some embodiments the total session length available for storage can be presented to the user based on available storage metrics.

At a new session code is generated schematically depicted as an interview code and invitation delivery techniques are presented to the originator. At it is determined which invitation delivery selection technique s was selected by the originator. At if SMS was selected a phone number for the recipient is received and an invitation is sent via text message. At if email was selected an email address for the recipient is received and an invitation is sent via email. As is to be appreciated other forms of notification and invitation can be utilized such as in app messages push notifications social media notifications and so forth. The invitations can be sent from the multi party media management controller coordinating the session or any other suitable entity. At the communication device is connected to a VoIP session. At it is determined if the invited user has joined the session. In some embodiments at a notification can be provided to the originator if the invited user is not executing the proper application. Once the other user has connected at the session begins.

Referring now to at the invited user receives the invitation. The invitation can be received via any suitable medium such as an inbound text message email or other communication. Additionally or alternatively the invitation can be presented as an in app message or notification. The invitation can include a hyperlink that the user can activate as indicated at . At it can be determined if the invited user has installed the application on the communication device. If not the invited user can be directed to a webpage describing the system and eventually to an online application repository for the downloading of the application. Once downloaded as indicated by process the invited user can create an account. At the downloaded application can be opened. At it is determined if the invited user is logged in. If yes a main menu is presented. If no the invited user can be prompted to enter an invitation code and or sign up for an account. At a code is entered or is otherwise prepopulated to link the invited user to a particular session. Referring again to the opening sequence if it is determined at that the application is installed on the communication device of the invited user the application can be opened locally on the communication device when the invited user activates the link.

At it is determined if the code is valid and then various privacy notifications can be presented to the invited user at . At it is determined if the originating user has joined the session. In some embodiments at a notification can be provided to the invited user if the originating user is not executing the proper application. Once the other user or user s have connected at the session begins.

Referring now to the process flow for a multi party media management controller and the process flow for each communication device participating in a session are depicted. At it is determined by the multi party media management controller if all participants are online. If yes at a START signal can be issued to each of the communication devices. For simplicity only depicts a START signal being issued to a single communication . At the communication device records the time the START signal was received and a countdown to session commencement can be displayed on a display screen to the user.

When the session commences two audio based processes can be started. First at a VoIP session can be initiated and encoded decoded audio can be transmitted received at . Second at the recording of the audio and in some cases video can be initiated and the start delay can be calculated based on the amount of time that transpired between the receipt of the START signal and the commencement of recording.

At the communication device can respond to the multi party media management controller with the start delay. At relatively high quality audio can be recorded locally on the communication device during session. At the multi party media management controller can receive the START response and start delay from the communication device and the other communication devices involved in the session. The multi party media management controller can then calculate rrt delay.

At an end button is pressed on the communication device . The communication device can inform the multi party media management controller that a party has ended the session and at the multi party media management controller can record the end time and can transmit and END signal to the other communication devices participating in the session.

At the communication device ends the recording function and ends the VoIP session. At the record audio is uploaded to the multi party media management controller . In some embodiments at the local recording of the audio is automatically deleted by the communication device . At the multi party media management controller receives the audio uploads from all of the communication devices participating in the session. At it is determined if all of the audio files have been uploaded to the multi party media management controller . At the multi party media management controller determines the synchronization of the recordings based on the rtt delay values calculated at . At a merged recording is produced. It is noted that the merged recording can be generated produced processed or otherwise prepared automatically by the multi party media management controller without intervention or involvement by a human operator. The merged recording can be disseminated through any suitable technique such as via an in app download as indicated at or via an email with a link to access the download as indicated at . In some embodiments the merged recording can be available for dissemination less than approximately 1 hour subsequent to the audio files being uploaded to the multi party media management controller . In some embodiments the merged recording can be available for dissemination less than approximately 30 minutes subsequent to the audio files being uploaded to the multi party media management controller . In some embodiments the merged recording can be available for dissemination less than approximately 15 minutes subsequent to the audio files being uploaded to the multi party media management controller . In some embodiments the merged recording can be available for dissemination less than approximately 1 minute subsequent to the audio files being uploaded to the multi party media management controller .

In general it will be apparent to one of ordinary skill in the art that at least some of the embodiments described herein can be implemented in many different embodiments of software firmware and or hardware. The software and firmware code can be executed by a processor or any other similar computing device. The software code or specialized control hardware that can be used to implement embodiments is not limiting. For example embodiments described herein can be implemented in computer software using any suitable computer software language type using for example conventional or object oriented techniques. Such software can be stored on any type of suitable computer readable medium or media such as for example a magnetic or optical storage medium. The operation and behavior of the embodiments can be described without specific reference to specific software code or specialized hardware components. The absence of such specific references is feasible because it is clearly understood that artisans of ordinary skill would be able to design software and control hardware to implement the embodiments based on the present description with no more than reasonable effort and without undue experimentation.

Moreover the processes described herein can be executed by programmable equipment such as computers or computer systems and or processors. Software that can cause programmable equipment to execute processes can be stored in any storage device such as for example a computer system nonvolatile memory an optical disk magnetic tape or magnetic disk. Furthermore at least some of the processes can be programmed when the computer system is manufactured or stored on various types of computer readable media.

It can also be appreciated that certain portions of the processes described herein can be performed using instructions stored on a computer readable medium or media that direct a computer system to perform the process steps. A computer readable medium can include for example memory devices such as diskettes compact discs CDs digital versatile discs DVDs optical disk drives or hard disk drives. A computer readable medium can also include memory storage that is physical virtual permanent temporary semipermanent and or semitemporary.

A computer computer system host server or processor can be for example and without limitation a processor microcomputer minicomputer server mainframe laptop personal data assistant PDA wireless e mail device cellular phone pager processor fax machine scanner or any other programmable device configured to transmit and or receive data over a network. Computer systems and computer based devices disclosed herein can include memory for storing certain software modules used in obtaining processing and communicating information. It can be appreciated that such memory can be internal or external with respect to operation of the disclosed embodiments. The memory can also include any means for storing software including a hard disk an optical disk floppy disk ROM read only memory RAM random access memory PROM programmable ROM EEPROM electrically erasable PROM and or other computer readable media. Non transitory computer readable media as used herein comprises all computer readable media except for transitory propagating signals.

In various embodiments disclosed herein a single component can be replaced by multiple components and multiple components can be replaced by a single component to perform a given function or functions. Except where such substitution would not be operative such substitution is within the intended scope of the embodiments. The computer systems can comprise one or more processors in communication with memory e.g. RAM or ROM via one or more data buses. The data buses can carry electrical signals between the processor s and the memory. The processor and the memory can comprise electrical circuits that conduct electrical current. Charge states of various components of the circuits such as solid state transistors of the processor s and or memory circuit s can change during operation of the circuits.

Some of the figures can include a flow diagram. Although such figures can include a particular logic flow it can be appreciated that the logic flow merely provides an exemplary implementation of the general functionality. Further the logic flow does not necessarily have to be executed in the order presented unless otherwise indicated. In addition the logic flow can be implemented by a hardware element a software element executed by a computer a firmware element embedded in hardware or any combination thereof.

The foregoing description of embodiments and examples has been presented for purposes of illustration and description. It is not intended to be exhaustive or limiting to the forms described. Numerous modifications are possible in light of the above teachings. Some of those modifications have been discussed and others will be understood by those skilled in the art. The embodiments were chosen and described in order to best illustrate principles of various embodiments as are suited to particular uses contemplated. The scope is of course not limited to the examples set forth herein but can be employed in any number of applications and equivalent devices by those of ordinary skill in the art.

