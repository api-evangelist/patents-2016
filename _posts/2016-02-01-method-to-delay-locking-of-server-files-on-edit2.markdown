---

title: Method to delay locking of server files on edit
abstract: A server is implemented with a modified file open action, which, when a user performs the modified open, initially opens a file without locking the file. When a user indicates (either explicitly or implicitly) that the user is attempting to or intending to open the file, the file can then be locked for editing. In this way, the default action when a user requests a file is to open the file without denying other users access to the file. Then, when the user indicates that editing should occur, the lock for the file is obtained.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09594925&OS=09594925&RS=09594925
owner: Microsoft Technology Licensing, LLC
number: 09594925
owner_city: Redmond
owner_country: US
publication_date: 20160201
---
This application is a continuation of U.S. patent application Ser. No. 14 256 313 filed Apr. 18 2014 now granted U.S. Pat. No. 9 280 553 which is a continuation of U.S. patent application Ser. No. 10 376 716 filed Feb. 28 2003 now granted U.S. Pat. No. 8 706 760 both of which are entitled METHOD TO DELAY LOCKING OF SERVER FILES ON EDIT. The entire contents of U.S. patent application Ser. No. 14 256 313 now granted U.S. Pat. No. 9 280 553 and U.S. patent application Ser. No. 10 376 716 now granted U.S. Pat. No. 8 706 760 are incorporated herein by reference in their entireties.

This invention relates to the field of document management and in particular to a method and system for delaying the locking of server files being accessed by a user.

Server computers such as web servers can perform double duty. A server can be used as a publishing location where a user can access content. A server can also be used as a collaboration environment where two or more users can collaborate on a document. Each user may update or otherwise edit the document. When a server is used as a publishing location it can deliver an individual copy of a file to any user who requests the file maintaining the version on the server without changes. When a server is used as a collaboration environment it can allow a user who wishes to edit the file access to the most recent copy. Often however a server is used for both of these purposes at once supporting both a publishing and a collaboration functions.

Such a dual use creates a problem. For example if the server is a web server the default mechanism for accessing a file on a web server by following a hyper link will do only one of two actions. Depending on the hyper link and web server either clicking on the hyper link will create a copy of the file that the user can read without altering the original file or clicking on the hyper link will open the file on the server and allow the user to edit the file. When a file is opened for editing it is locked and no other users are allowed to edit the file.

Generally a file may be opened with varying permissions granted to the user opening the file. When opening the file for reading the file is opened read only which allows the user to read browse or otherwise view or use the data in the file as long as the data is not changed. When opening for editing the file is opened read write which allows the user the same privileges but also allows the user to modify the data or append to it. When a file is opened read write the file is locked. This locking ensures that only one user is modifying the file at a time preventing conflicting modifications by two or more users.

The problem arises when the default action is not what the user desires. For example if the user wishes to edit the file if the default is opening a copy for reading the desired functionality for the user is not provided. Similarly if the default is opening the file for editing but the user wished only to read the file the file is locked and another user who wishes to edit the file will be locked out from editing the file. A user who opens the file for reading and then wishes to edit the file must exit the file and then reopen it for editing.

A server is implemented with a modified file open action which when a user performs the modified open initially opens a file without locking the file. When a user indicates either explicitly or implicitly that the user is attempting to or intending to open the file the file can then be locked for editing. In this way the default action when a user requests a file is to open the file without denying other users access to the file. Then when the user indicates that editing should occur the lock for the file is obtained.

In order to allow flexibility when a user opens a document on a shared server a modified open is implemented. When the modified open is used to open a file the file is opened read only. Only when and if the user that has opened the file using the modified open indicates that an edit to the file should be made is the lock on the file obtained making the file read write for the user and locking any other users out of obtaining editing privileges for that file.

Although not required the invention can be implemented via an operating system for use by a developer of services for a device or object and or included within application software that operates according to the invention. Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs automated teller machines server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs appliances lights environmental control elements minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network bus or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices and client nodes may in turn behave as server nodes.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer system . Components of computer system may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus .

Computer system typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer system and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to Random Access Memory RAM Read Only Memory ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disk Read Only Memory CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer system . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer system such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer system may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer system . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer system through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A graphics interface such as Northbridge may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU or host processing unit and assumes responsibility for accelerated graphics port AGP communications. One or more graphics processing units GPUs may communicate with graphics interface . In this regard GPUs generally include on chip memory storage such as register storage and GPUs communicate with a video memory . GPUs however are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer system . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface which may in turn communicate with video memory . In addition to monitor computer systems may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer system may operate in a networked or distributed environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer system although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer system is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer system typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer system or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web enabled interface for applications and computing devices making computing activities increasingly Web browser or network oriented.

For example MICROSOFT s .NET platform includes servers building block services such as Web based data storage and downloadable device software. While exemplary embodiments herein are described in connection with software residing on a computing device one or more portions of the invention may also be implemented via an operating system application programming interface API or a middle man object between any of a coprocessor a display device and requesting object such that operation according to the invention may be performed by supported in or accessed via all of .NET s languages and services and in other distributed computing frameworks as well.

With reference to a file resides on a server computer . A user with permissions for makes a request to open the file. The user may be connected to the server computer in a number of ways. For example the user may connect directly via a local area network LAN or remotely via a network such as the Internet. In the exemplary user computer is connected via network to the server computer . Additionally other users computers are connected via network to the server computer .

The user requests that the file be opened. One possible method of submitting such a request is by selecting a hyperlink on a web page served by the server computer . When the request is received by the server the server allows the user computer to open the file. The file is opened on the user s computer by an application . For example this application may be a word processing application a spreadsheet application an audio player application or any application by which a user may utilize the data being downloaded. In one embodiment the user selects a hyperlink in a webpage being viewed in a web browsing application on the user computer and the web browsing application opens the file with the appropriate application.

When the file is opened in one embodiment a copy of the file is made in the user computer s cache. It is the copy on the server computer which the user browses or reads or otherwise interacts with e.g. by playing it in an audio player if the file includes audio data. When the file is initially opened the file is opened with read only permissions. In this way more than one user may access the file and use it.

In an alternate embodiment instead of a local copy being made in user computer all users with read only permissions are viewing the file on the server.

Locking of the file only occurs upon an indication that the user intends to edit the file. The lock would allow the user to have read write permissions on the file. The user could then modify or append file data.

This intent to edit indication may be one of a number of different things. In one embodiment the intent to edit is indicated by the user modifying the file in any way. In another embodiment the intent to edit is indicated by the user. This may occur through a specialized edit command incorporated into the application or when the user requests that changes already made be saved. In another embodiment the intent to edit determination is a determination that the user has had said file open for a pre specified period of time. For example if the user has had the file open in read only mode for ten minutes it may be inferred that the user intends to edit the file.

In one embodiment when the lock is obtained a determination is made whether the copy of the file in the user computer s cache is the same version as the version currently on the server. This is to ensure that edits have not occurred in the interim. For example User A opens a first version of the file but does not demonstrate an intent to edit and therefore does not trigger a lock . If User A then triggers the locking by demonstrating an intent to edit it must be ensured that the version of the file currently on the server is the same as that which User A is viewing and intending to edit. If User B has opened and modified the file on the server computer at some point between User A s opening of the file and User A s demonstration of an intent to edit a conflict may occur. Conflict resolution options should be presented to the user.

For example User A may have made substantial changes to the file and may decide that the changes should supplant any changes that have occurred in the interim. The version on the user computer is then written to the server computer as file and the file is locked so that User A has read write privileges. Alternatively User A may decide to save the version that User A is working on locally as another file and reopen the file on the server computer for editing. Other conflict resolution options may also be presented to the user.

In order to determine whether the copy of the file in user computer is the same version as the version of the file currently on the server version information may be stored and compared. This may include a version number time and date saved information or other version data. Alternatively a full comparison may be made of the actual file and the cached version in the user computer to determine if the contents of the file are the same.

In an alternate embodiment where a user does not copy file to user computer but instead opens it directly from server computer when the intent to edit triggering event occurs the lock on editing file is obtained for the user.

As shown in a request is received to open the file in step . In step the file is opened. In one embodiment the file is opened directly from the server in read only mode in an alternate embodiment a copy of the file is made and opened. In step the determination is made that an editing trigger event has occurred. This editing trigger event may be the user saving changes to a local copy of the file where one has been made. This editing trigger event may also be the user attempting to change the file where the server copy of the file was opened read only. This editing trigger event may also be that a predetermined period of time has elapsed an edit indication received from a user or any other event which necessitates the locking of the server file for editing.

In step the lock is obtained on the file. This locks the server copy of the file for the user to modify without the possibility of conflicting modifications.

As shown in conflict resolution may be implemented in one embodiment. As in the first step is when a request is received to open the file. In the second step a local copy is made of the file and that local copy is opened for editing. In the third step a determination is made that an editing trigger event has occurred. A comparison is then made to determine whether the version of the file on the server is the same as the version which had been copied in step . If it is the same version then the lock is obtained on the file step . If the user has made changes to the local copy of the file the server copy of the file may be updated to reflect those changes. If the version has changed conflict resolution options are presented to the user in step . This may lead to the lock being obtained on the file step however it may also lead to other conflict resolution options.

In this way a file may be opened by a number of users simultaneously who can all use the content of the file. However when a user wishes to modify the file the lock is then obtained for the user and the user will have read write privileges for the file.

As mentioned above while exemplary embodiments of the present invention have been described in connection with various computing devices and network architectures the underlying concepts may be applied to any computing device or system in which it is desirable to implement a modified file open. Thus the methods and systems of the present invention may be applied to a variety of applications and devices. While exemplary programming languages names and examples are chosen herein as representative of various choices these languages names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code that achieves the same similar or equivalent systems and methods achieved by the invention.

The various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the present invention or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers the computing device will generally include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may utilize the signal processing services of the present invention e.g. through the use of a data processing API or the like are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer a video recorder or the like or a receiving machine having the signal processing capabilities as described in exemplary embodiments above becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally any storage techniques used in connection with the present invention may invariably be a combination of hardware and software.

While the present invention has been described in connection with the preferred embodiments of the various figures it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. Furthermore it should be emphasized that a variety of computer platforms including handheld device operating systems and other application specific operating systems are contemplated especially as the number of wireless networked devices continues to proliferate. Therefore the present invention should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

