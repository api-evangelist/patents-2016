---

title: Network-based malware detection
abstract: In an embodiment, a system, device and method for detecting a malicious attack is described. Herein, the system includes a security network device that conducts an analysis on received network traffic to detect a suspicious object associated with the network traffic and determine an identifier associated with a source of the suspicious object. Both information associated with the suspicious object and ancillary data, including information that identifies a return path for analysis results to a customer, are uploaded to a detection cloud. The detection cloud includes provisioning logic and one or more virtual machines that are provisioned by the provisioning logic in accordance with at least a portion of the ancillary data. The provisioning logic to customize functionality of the detection cloud for a specific customer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09661009&OS=09661009&RS=09661009
owner: FireEye, Inc.
number: 09661009
owner_city: Milpitas
owner_country: US
publication_date: 20160718
---
This application is a continuation of U.S. patent application Ser. No. 14 316 714 filed Jun. 26 2014 now U.S. Pat. No. 9 398 028 issued Jul. 19 2016 the entire contents of which are incorporated by reference herein.

Embodiments of the disclosure relate to the field of network and cyber security. More specifically one embodiment of the disclosure relates to a system device and method for detecting a malicious attack based at least in part on real time communications with a web server associated with network traffic determined to be suspicious.

Over the last decade malicious attacks have become a pervasive problem for Internet users as most networked resources include vulnerable software. For instance over the past few years more and more vulnerabilities are being discovered in software that is loaded onto network endpoints such as vulnerabilities within operating systems and applications installed on endpoint systems. While some software vulnerabilities continue to be addressed through software patches network endpoints will continue to be targeted for attack in efforts to acquire sensitive information or adversely affect operations of various enterprises.

In general efforts have been made to counter malicious attacks over web traffic. One effort has been directed to security appliances that monitor web traffic coming into an enterprise network and performs both preliminary and virtual machine VM based analysis of objects associated with the web traffic in order to detect the presence of exploits. Although effective in detecting malicious attacks these types of security appliance have a few challenges.

In its current configuration the security appliance handles VM based analysis which consumes a great amount of processing and memory resources. Due to memory and or processing constraints that exist for all standalone security appliances there will be limits on the number of virtual machines VMs as well as the number of permutations of software profiles e.g. software images of operating systems and application versions that can be supported by the security appliance. Also as most of the memory and or processing resources with the security appliance are directed to preliminary and VM based analysis it is difficult to introduce new or experimental features or enhancements without increased processing or memory as such features or enhancements would equate to lesser processing and or memory reserved for core preliminary or VM based analysis.

Various embodiments of the disclosure relate to an electronic device with network connectivity referred to as a security network device for example which is responsible for conducting preliminary analysis of an object associated with monitored network traffic to determine whether the object appears to be part of a multi phase malicious attack e.g. beginning of a drive by attack where an exploit is initially injected into a client device in order to effectuate subsequent downloading of the malicious payload . Upon determining that the object under analysis is suspected of being part of a malicious drive by attack the security network device uploads an identifier associated with the origin of the monitored network traffic e.g. a Uniform Resource Locator URL to a detection cloud e.g. cloud computing services conducting dynamic analysis at a prescribed location . Virtual execution logic within the detection cloud conducts an in depth analysis of the suspicious URL by provisioning one or more virtual machines hereinafter VM s within the cloud to establish real time communications with the malicious host. Thereafter the behaviors of the VM s during communications with the source are monitored and the detected presence of certain anomalies may indicate that the network traffic is associated with a malicious drive by attack. This embodiment constitutes an improvement to an existing technological process of malware detection.

As described below one or more security network devices are located on premises and are deployed within an enterprise network. For instance a first security network device may be configured to conduct a preliminary analysis on one or more objects associated with monitored incoming network traffic e.g. web traffic . The preliminary analysis may include i pattern matching such as exploit matching ii vulnerability checks iii heuristic statistical or deterministic analysis or iv any combination thereof.

The first security network device is communicatively coupled to the detection cloud which is configured to conduct dynamic analysis on information associated with one or more objects deemed suspicious by the first security network device. The dynamic analysis may involve virtual processing of the information associated with the suspicious object s by VM s deployed as part of virtual execution logic where the detection cloud communicates directly or indirectly with a web server distributing web traffic including the suspicious object s . The communicative coupling between the first security network device and the detection cloud may be achieved through a dedicated transmission medium or a non dedicated transmission medium supporting secured e.g. encrypted or otherwise obfuscated communications.

According to one embodiment of the disclosure deployed within the first security network device a preliminary analysis engine filters objects associated with the web traffic and determines at least one identifier e.g. URL of a source for one or more of the objects that are determined to be suspicious. An object is deemed suspicious when there is a prescribed probability of that object being associated with a malicious attack.

The preliminary analysis engine transmits the identifier of the source of the suspicious object s for use in VM based analysis at a location outside the confines of the housing of the first security network device normally at a geographic location remotely located from the first security network device. Stated differently once the URL associated with a suspicious object has been identified by the preliminary analysis engine instead of sending the suspicious URL to one or more VMs operating within the security network device itself the suspicious URL along with certain ancillary data is sent to the detection cloud. The ancillary data comprises 1 an identification of a customer responsible for the security network device hereinafter Customer ID and or 2 a hash value for an Internet Protocol IP address of the client device targeted by the suspicious web traffic hereinafter Hash Client IP Addr .

It is contemplated that providing ancillary data e.g. Customer ID Hash Client IP Addr etc. that corresponds to the suspicious URL is useful to customize functionality of the detection cloud especially when the number of simultaneous VMs provisioned in the detection cloud for each customer may vary. Also the types and number of software profiles e.g. Guest OS and applications images provisioned for these VMs can also vary based on customer preference and or enterprise deployment. For instance an enterprise network deploying network devices that are capable of operating with three different operating systems OSes such as Windows XP Windows 7 and Windows 8 for example may provision and utilize a greater number software profiles for dynamic analysis than an enterprise with electronic devices loaded with a single type of OS such as Windows 8 only.

Once suitable VM s are provisioned within the detection cloud the VM s establish a communication session with a suspect e.g. potentially malicious source namely a suspect web server. The communication session may be established directly using the suspicious URL and the VM based analysis is conducted using responses from this live website. Live website inter communications are available since the on premise security network device detected the suspect web server being accessed from the enterprise network moments ago.

In cases where a malicious attack is detected by the VMs an alert message including details of the infection e.g. time of infection URL name malware name etc. is generated in the detection cloud. The alert message may be returned to the on premises security network device where information with the alert message may be populated within the local database and or re routed to one or more network administrators managing the enterprise network.

It is contemplated that the functionality of the security network device may be implemented with any type of electronic device such as a client device that includes a desktop computer or a mobile device such as a laptop computer netbook tablet computer or smart phone. Herein the electronic device includes the preliminary analysis logic which upon determining that an object under analysis is suspected of being part of a malicious drive by attack uploads an identifier associated with the origin of the monitored network traffic to the detection cloud.

Based on direct interaction with the suspect web server the detection cloud conducts an in depth analysis of the suspicious object and when determined to be malicious provides one or more alert messages to the electronic device. The alert message may provide a displayed warning to the user regarding the malicious attack or may signal logic within the electronic device to quarantine information associated with the malicious object or to conduct remediation operations.

In the following description certain terminology is used to describe features of the invention. For example in certain situations both terms logic and engine are representative of hardware firmware and or software that is configured to perform one or more functions. As hardware logic or engine may include circuitry having data processing or storage functionality. Examples of such circuitry may include but is not limited or restricted to a microprocessor one or more processor cores a programmable gate array a microcontroller an application specific integrated circuit wireless receiver transmitter and or transceiver circuitry semiconductor memory or combinatorial logic.

Logic or engine may be software in the form of one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an applet a servlet a routine source code object code a shared library dynamic load library or one or more instructions. These software modules may be stored in any type of a suitable non transitory storage medium or transitory storage medium e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals or digital signals . Examples of non transitory storage medium may include but are not limited or restricted to a programmable circuit a semiconductor memory non persistent storage such as volatile memory e.g. any type of random access memory RAM persistent storage such as non volatile memory e.g. read only memory ROM power backed RAM flash memory phase change memory etc. a solid state drive hard disk drive an optical disc drive or a portable memory device. As firmware the executable code is stored in persistent storage.

The term object generally refers to a collection of data such as a group of related packets associated with a request response message pairing for example normally having a logical structure or organization that enables classification for purposes of analysis. For instance an object may be a self contained element where different types of such objects may include an executable file non executable file such as a document or a dynamically link library a Portable Document Format PDF file a JavaScript file Zip file a Flash file a document for example a Microsoft Office document etc. an electronic mail email downloaded web page and or an instant message accordance with Session Initiation Protocol SIP or another messaging protocol.

The term flow generally refers to a collection of related objects e.g. messages communicated during a single communication session between a single source network device e.g. client device and a single destination network device e.g. server . For instance a first flow GET HTTP Request message may be user initiated while subsequent flows e.g. other HTTP messages initiated to complete the GET HTTP Request message may be initiated automatically without user intervention.

A communication session may be defined as a semi permanent information exchange between source and destination network devices. For example the communication session may be in accordance with protocols at the application layer e.g. Hypertext Transfer Protocol HTTP session layer or transport layer e.g. Transmission Control Protocol TCP of the Open Systems Interconnection OSI model.

A message generally refers to information transmitted in a prescribed format where each message may be in the form of one or more packets frames HTTP based transmissions or any other series of bits having the prescribed format.

The term transmission medium is a physical or logical communication path between two or more electronic devices e.g. any devices with data processing and network connectivity such as for example a server a mainframe a computer such as a desktop or laptop netbook tablet firewall smart phone router switch bridge etc. . For instance the communication path may include wired and or wireless segments and or shared memory locations. Examples of wired and or wireless segments include electrical wiring optical fiber cable bus trace or a wireless channel using infrared radio frequency RF or any other wired wireless signaling mechanism.

The term computerized generally represents that any corresponding operations are conducted by hardware in combination with software and or firmware. Also the terms compare or comparison generally mean determining if a match e.g. a certain level of matching is achieved between two items where one of the items may include a particular signature pattern.

Lastly the terms or and and or as used herein are to be interpreted as inclusive or meaning any one or any combination. Therefore A B or C or A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions steps or acts are in some way inherently mutually exclusive.

As this invention is susceptible to embodiments of many different forms it is intended that the present disclosure is to be considered as an example of the principles of the invention and not intended to limit the invention to the specific embodiments shown and described.

Referring to an exemplary block diagram of a communication system deploying a security network device which is an electronic device that is deployed within an enterprise network and adapted to analyze information associated with network traffic received via a communication network . The communication network may include a public network such as the Internet in which case one or more network devices such as a firewall for example may be positioned in front of or integrated into the security network device . Alternatively the communication network may be a private network such as a wireless data telecommunication network wide area network a type of local area network LAN or a combination of networks.

Herein the security network device may be one of a plurality of security network devices that are geographically distributed from each other and communicatively coupled to a management system . The geographic distribution of the security network devices may enable scalability to support growth of the enterprise network and reduced customer response time in conducting dynamic analysis of submitted identifiers e.g. URLs based on distribution of work load in communications with detection cloud .

As shown security network device upon detection of suspicious network traffic namely traffic having a prescribed probability of being part of a malicious attack transmits information associated with the suspicious network traffic. For instance as an illustrative example the security network device may transmit the URL associated with the suspicious traffic sometimes referred to as the suspicious URL to detection cloud that establishes communications with the potential malicious web server for subsequent analysis of the communications.

Referring still to the management system may be adapted to manage the security network devices including security network device . For instance the management system may be responsible for updating software executed by one or more hardware processors within the security network device . Such updating may be conducted automatically or conducted manually via uploads by an administrator. Also such updating may be conducted freely among the security network devices or subject to a service subscription.

Of course it is contemplated that as an alternative embodiment the functionality of the security network device may be implemented with any or all of the client devices where M 1 . Examples of the client devices include tablet computer desktop or laptop computer or smart phone. For clarity sake the architecture and functionality of security network device is described below.

Referring now to the security network device comprises a preliminary analysis engine that is configured to analyze characteristics of objects associated with the network traffic . In particular the preliminary analysis engine may include one or more software modules that when executed by one or more hardware processors located within the security network device operate as a filter that i parses the incoming network traffic ii aggregates and analyzes information associated with characteristics of the network traffic from the same source for a given communication session and iii optionally stores information associated with the characteristics within the data store .

More specifically preliminary analysis engine may be configured with exploit matching logic vulnerability matching logic and or heuristic logic . Exploit matching logic is adapted to perform exploit signature checks which may involve a comparison of a suspect object against one or more pre stored exploit signatures e.g. pre configured and predetermined attack patterns from signature database . Additionally or in the alternative the preliminary analysis engine may be configured with vulnerability matching logic that is adapted to perform vulnerability signature checks which may include a process of uncovering deviations in messaging practices set forth in applicable communication protocols e.g. HTTP TCP etc. .

Also additionally or in the alternative the preliminary analysis engine may be configured with heuristic logic that is adapted for analysis of certain portions of an object to determine whether any portion corresponds to a suspicious identifier. An example of a suspicious identifier may include but are not limited or restricted to a particular URL that is associated with known exploits a particular source or destination address that is associated with known exploits particular exploit patterns or particular shell code patterns.

A statistical analysis engine may be configured based on statistical analysis of the object under analysis to generate a score value that represents a probability or level of confidence that this object is associated with a malicious attack. For instance the score value may be based at least in part on i pattern matches ii analyzed deviations in messaging practices set forth in applicable communication protocols e.g. HTTP TCP etc. iii analyzed compliance with certain message formats established for the protocol e.g. out of order commands and or iv analyzed header or payload parameters to determine compliance. Where the score value exceeds a prescribed value e.g. 9 out of 10 the object under analysis is deemed suspicious . This score determination may also require assistance of some emulation e.g. Javascript emulation techniques to de obfuscate certain object types before they can be analyzed.

After the object under analysis is determined to be suspicious the security network device generates preliminary analysis results . The preliminary analysis results are uploaded to a dynamic analysis engine of the detection cloud where the dynamic analysis engine is responsible for dynamic analysis of network traffic resulting from accessing a website designated by the suspicious URL. According to one embodiment the preliminary analysis results comprise 1 a URL associated with the website hosted by a potentially malicious web server that previously provided the network traffic including the suspicious object 2 an identifier for an entity company individual governmental department etc. that owns leases or is responsible for the security network device hereinafter Customer ID and or 3 a hash value for an Internet Protocol IP address of a client device targeted by the suspicious network traffic hereinafter Hash Client IP Addr . Optionally the preliminary analysis results may include the score value generated by the statistical analysis engine .

According to one embodiment of the disclosure the detection cloud is a cloud computing service that is geographically remote from the security network device and is responsible for conducting an in depth analysis of resultant communications with a web server hosting a website designated by the suspicious URL. As an alternative embodiment the detection cloud may be implemented within a secure isolated sub network of the enterprise network rather than outside the enterprise network.

This in depth analysis comprises virtual processing information received from communications with a website designated by the suspicious URL in order to determine i whether the communications are associated with a malicious attack and ii whether the web server providing such communications is infected with malware. The later determination may prompt placement of the web server onto a blacklist and or cause the detection cloud to transmit a message to notify the web server either directly or through a third party e.g. Internet service provider ISP wireless carrier governmental agency etc. of the detected malicious attack. In general under control of controller data extraction logic receives the preliminary analysis results and extracts the URL the Customer ID the Hash Client IP Addr and or score value .

The URL is used during virtual processing operations conducted by the dynamic analysis engine to communicate with the web server that distributed the suspicious web traffic in efforts to determine if the web server is malicious e.g. compromised servers that are unknowingly infected with malware so as to unintentionally propagate exploits to other network devices server designed to infect network devices with particular exploits etc. .

The Customer ID identifies the enterprise network and or the specific security network device that detected suspicious web traffic under further analysis by the virtual execution logic . The Customer ID ensures that the dynamic analysis results are correctly returned. Additionally through a customer portal each customer may choose a configuration of guest images that are run within a provisioned virtual machine of the one or more virtual machines VMs N 1 operating inside the detection cloud . As a result the Customer ID and or the Hash Client IP Addr may be used for provisioning one or more VMs with different types and or versions of operating systems e.g. Windows based OS MAC based OS Windows Mobile OS Android iOS etc. different types and or versions of browser or other applications e.g. Internet Explorer Mozilla Chrome FireFox Adobe Reader 8.0 MS Office 2013 etc. supported by and available to the virtual execution logic . The Hash Client IP Addr may also be used for recording purposes to identify targeted client devices. The goal of this customization is to get the closest possible match to the operating system and application versions that are running on the endpoints in the customer s network.

Aspects of the invention may be practiced for providing malware detection services to customers who for example avail themselves of the services on a paid subscription basis. For instance where the customer subscribes to a particular service level the Customer ID may cause the dynamic analysis engine to provision a first set of VMs e.g. X VMs or provision VMs until a first prescribed VM capacity level has been reached e.g. simultaneous VMs . Where additional VM capacity may be necessary to provision VMs for additional OS or application configurations that may be necessary to provide a complete analysis e.g. where targeted client device identified by Hash Client IP Addr is capable of supporting a large subset of browsers the controller may issue an alert message to network security personnel of the enterprise network for authorization to increase the subscription level that would enable VMs to be provisioned until a second prescribed VM capacity level has been reached e.g. simultaneous VMs .

After the VMs have been provisioned the virtual execution logic virtually processes the suspicious URL which initiates a HTTP Request message that is sent to the web server and establishes a communication session with the web server or another web server for re direction to web server . Such redirection is intended to provide an added level of protection from being detected by malware and malicious actors. Subsequent communications during the established communication session are monitored for anomalous behaviors such as receiving content with embedded executables that alter registry keys of the OS upload of a subroutine such as Command and Control CnC exploit receipt of call back commands etc. Monitoring logic within the virtual execution logic captures the anomalous behaviors which are subsequently reported to the security network device or another network device within the enterprise network for reporting to network administrator s .

Referring to a first exemplary block diagram of the communication system is shown where the operations conducted by the security network device and the detection cloud are identified. According to one embodiment of the disclosure the security network device analyzes portions of incoming web traffic operation 1 .

Upon determining that an object associated with monitored web traffic appears to be part of a multi phase malicious attack e.g. beginning of a drive by attack where the exploit is loaded and the malicious payload is loaded subsequently the security network device submits the preliminary analysis results to the detection cloud via communication interface operation 2 . Of course as an alternative embodiment the network security device may only upload the preliminary analysis results to the detection cloud if the customer subscribes to that service and or the score value assigned to the object is above a certain threshold.

As described above the preliminary analysis results comprise a first identifier e.g. URL associated with the website hosted by a potentially malicious web server 2 a second identifier e.g. Customer ID that identifies the customer responsible for the security network device and or 3 a third identifier e.g. Hash Client IP Addr that can be used to identify the IP address of the client device targeted by the suspicious web traffic as shown in .

Upon receipt by the detection cloud a scheduler receives the preliminary analysis results and stores contents of the preliminary analysis results into a first data store operation 3 and operation 4 . The first data store is accessible by scheduler reputation logic VM provisioning logic dynamic analysis engine and or alert generation logic .

Thereafter the scheduler conducts a look up of a second data store to identify guest software images namely software images of operating systems applications or other software components for provisioning one or more VMs operation 5 . The identification as to which software profiles for use in provisioning the VMs may be accomplished through the use of the Customer ID to identify the customer with ownership of the enterprise network and or the Hash IP Client Addr to identify the specific client device s targeted to receive the suspicious web traffic.

For instance based on the Customer ID the scheduler operating in combination with VM provisioning logic may configure VMs with software profiles corresponding to software images stored within client devices of that are actually implemented within the enterprise network . As an alternative embodiment the VMs may be configured according to different types and or versions of software configurations that can be used by client devices connected to enterprise network e.g. client device or even the most prevalent types of software configurations e.g. a Windows 8 OS a popular version of Internet Explorer web browser currently in use popular version of Adobe PDF reader application currently in use etc. or simply an appropriate software profile to process the content.

As an optional feature shown in dashed lines the detection cloud may comprise reputation logic that conducts operations to customize and or optimize operability of the virtual execution logic operation 6 . Stated differently one function of the reputation logic is to avoid conducting dynamic analysis associated with suspicious URLs that are already determined to be malicious or benign.

For instance the reputation logic may operate in combination with the scheduler to select software profiles e.g. guest images that are more prone to attack by Japanese based websites in lieu of U.S. based websites where the detection cloud handles network traffic in Japan. Additionally the reputation logic may include blacklists or whitelists that identify URLs determined to be non malicious perhaps including age based results to identify stale results by recording the last time that the URL was determined to be non malicious. A match of the blacklist may prompt the reputation logic to transmit data for generation of an alert message operation 7 . This alert message will be identical to a Web infection alert generated locally on the security device in its current shipping version.

Herein the VM provisioning logic receives the selected guest software images along with the Customer ID operation 8 . The Customer ID may be used to determine for the particular customer a maximum number of simultaneous VMs allowed to run in the detection cloud for that particular customer. If processing and or storage capacities are approaching or have exceeded maximums so that all of the selected guest images cannot be provisioned to concurrently run at the same time or in an overlapping manner on the VMs information is provided to alert generation logic to generate a message that alerts network security personnel of the customer associated with the enterprise network that he she may want to alter its subscription to increase execution capacity operation 9 .

Thereafter the VMs are provisioned within the virtual execution logic operation 10 and subsequently launched. Upon launching one or more VMs commence to virtually execute a browser application which now attempts to access a website hosted by the live web server using the suspicious URL and establish a communication session operations 11 12 . For instance a first VM that virtually executes the browser application transmits a GET POST or other HTTP request message to web server using the suspicious URL.

In response the web server hosting the accessed website returns information perhaps as part of a response message to the first VM operation 13 . Monitoring logic within the virtual execution logic may be configured to monitor behaviors of one or more VMs . . . and or such as VM configured to execute the browser application that launched the suspicious URL operation 14 . This monitoring is conducted to detect anomalous unexpected or irregular activity indicative of an exploit. When anomalous activity is detected the monitoring logic operating with an optional score determination logic not shown may route VM based results e.g. computed score information associated with the detected anomalous behaviors and other information associated with the detected malicious activity by the suspect object to the alert generation logic operation 15 . Of course as an option the security network device may conduct further analysis on information from the web server in parallel with at the same time or in an overlapping manner or following the virtual processing by the virtual execution logic .

While monitoring logic analyzes information exchanged with the web server the first VM continues its communication session with the web server operation 16 . The communication session is maintained until a prescribed time has elapsed or the monitoring logic has conducted sufficient operations to determine that the web server is malicious or non malicious.

Although not shown it is noted that score determination logic may be implemented within the dynamic analysis engine or the alert generation logic so that VM based results may be subsequently weighted by the alert generation logic upon reporting the findings by the virtual execution logic .

Optionally prior to passing the information from the web server to the virtual execution logic secondary analysis logic may initially conduct additional operations e.g. emulation heuristics etc. on the information in order to determine whether the content within the response can be determined to be malicious or benign without further processing by the VMs operation 17 . For instance secondary analysis logic may compare the page URL returned content and software profile with similar responses of both malicious and non malicious servers.

If a match is found where the match is directed to a response from a malicious server according to one embodiment results of the secondary analysis are provided to the alert generation logic to produce one or more alert messages to represent that the URL is associated with a malicious server. Otherwise the virtual execution logic may be notified that the URL is associated with a non malicious server and to discontinue further virtual processing associated with the suspicious URL.

Upon receiving the VM based results or the secondary analysis results the alert generation logic generates alert messages to identify that the web traffic is associated with a malicious attack based on analyzed interaction with a malicious web server operation 18 . The alert messages are routed to the security network device which conducts certain post processing operations such as mapping the alert message to a corresponding client device using the hash IP Client Addr and or storing the alert message for subsequent conveyance for display and access by network security personnel of the enterprise network operation 19 .

Referring to a second exemplary block diagram of the communication system is shown where operations conducted by the security network device and the detection cloud are described. According to this embodiment of the disclosure a set of anonymizing proxies is positioned between the detection cloud and the web server operations 12A 12B 13A 13B . The anonymizing proxy operates to obfuscate the origination of the HTTP GET or POST request so that the web server does not create defenses by refraining to transmit exploits for access requests within the client IP address range.

Referring to a general exemplary flowchart illustrating a threat detection process is shown where VM based analysis is conducted within a detection cloud separate from the security network device. First the detection cloud receives from a security network device an identifier e.g. a URL that sources objects from monitored web traffic that are determined to be suspicious block . The security network device is implemented within an enterprise network and has secured access to the detection cloud. In response to receipt of the suspicious identifier logic within the detection cloud provisions one or more VMs within the virtual execution logic and conducts virtual processing of the suspicious identifier blocks and . During virtual processing of the suspicious identifier one or more web servers are accessed to retrieve information therefrom.

During virtual processing the behaviors of the one or more VMs are monitored and a determination is made as to whether any anomalous behaviors e.g. processing or communication behaviors have been detected blocks and . If not a determination is made as to whether the virtual processing of the suspicious identifier has completed block . If the virtual processing has completed the threat detection process ends. Otherwise the virtual processing continues and the resultant behaviors of the one or more VMs are monitored.

Upon detecting anomalous behaviors by the one or more VMs during virtual processing one or more alert messages may be generated. An alert message may comprise the URL now determined to be associated with a malicious web server along with information associated with the detected anomalous behaviors and the Hash IP Client Addr to identify the targeted client device block . Thereafter as set forth in block the alert message is sent to the security network device within the enterprise network for post processing and providing such findings in a manner that can be perceived by network security personnel e.g. GUI display audio message text message etc. .

Referring to a more detailed exemplary flowchart illustrating a threat detection process is shown where VM based analysis is conducted within a detection cloud separate from the security network device. First the detection cloud receives from a security network device a URL that sources objects from monitored web traffic that are determined to be suspicious along with ancillary metadata that may be used for customer identification VM provisioning and reporting purposes block . The security network device is implemented within an enterprise network associated with a particular client and has secured access to the detection cloud. In response to receipt of the suspicious URL and corresponding metadata logic within the detection cloud provisions one or more VMs within virtual execution logic deployed within the detection cloud and conducts virtual processing of the suspicious URL blocks and . During virtual processing of the suspicious URL one or more web servers are accessed to retrieve information therefrom blocks .

During virtual processing the behaviors of the one or more VMs are monitored by the monitoring logic and a determination is made as to whether any anomalous behaviors have been detected block . Upon detecting anomalous behaviors by the one or more VMs during virtual processing the information associated with the anomalous behaviors is reported back to the enterprise network such as providing a return message to the security network device block .

In the foregoing description the invention is described with reference to specific exemplary embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims.

