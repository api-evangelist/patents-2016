---

title: Data access and anonymity management
abstract: Techniques described herein provide data access and data anonymity management within various implementations of content distribution networks. In some embodiments, a data anonymity management system may include multiple different data stores configured to store identity data, user data, and/or linking data, as well as a data anonymity server configured to support data anonymity features such as active user data anonymity, one-way linking and permanently breakable links between user identity data and associated user data. In some embodiments, storage systems and techniques may be used for storing identity data, user data, and link data in multiple different data stores, with different data storage requirements and different processes and policies for data availability, data backup, online disaster recovery, offline storage archiving, and the like. Additionally, cryptographic hash functions may be used to implement one-way encryption between identity data and user data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09590989&OS=09590989&RS=09590989
owner: PEARSON EDUCATION, INC.
number: 09590989
owner_city: New York
owner_country: US
publication_date: 20160205
---
The present application is a continuation of U.S. application Ser. No. 14 724 620 filed May 28 2015 and entitled DATA ACCESS AND ANONYMITY MANAGEMENT the entire contents of which are incorporated herein by reference for all purposes.

In many computer systems and networks the protection of user identity data and other private user information is an important concern as more and more information is stored and shared electronically. The types of user identity data and private user information may vary from system to system but generally include any data or combination of data unique to individuals such as names addresses social security numbers account numbers passwords employment information demographic information financial data and the like. Such user identity data and private user information are common targets of cyberattacks and several jurisdictions have enacted laws governing how such data should be used stored and transmitted.

Another type of data collected and stored in many computer systems and networks may be referred to as user data. User data may include personal and or confidential information relating to users behaviors and interactions within the computer system or network. Examples of such user data may include without limitation a user s web browsing history online media resources and content requested and accessed by a user online purchases made by a user discussion posts submitted by a user a user s test or evaluation scores within a system a user s access times and usage patterns within a system and the like. Unlike identity data user data might not directly reveal a user s identity but may nonetheless include personal and confidential user information that should be protected from cyberattacks and unintentional disclosures.

Various techniques e.g. systems methods computer program products tangibly embodied in a non transitory machine readable storage medium etc. are described herein providing data access and data anonymity management within various implementations of content distribution networks. In some embodiments a data anonymity management system may include multiple different data stores configured to store identity data user data and or linking data as well as a data anonymity server configured to support data anonymity features such as active user data anonymity one way linking and permanently breakable links between user identity data and associated user data. For instance a data anonymity server may receive and handle requests to access user data of a content distribution network. The data anonymity server may receive or determine a user identifier corresponding to the request access a data store to retrieve a key value associated with the user identifier and then may execute a cryptographic hash function to generate a hash value based on the key value. The hash value may be used to access user data and may be regenerated each time user data is to be accessed for a particular user.

Embodiments described herein also storage systems and techniques in which identity data user data and link data may be stored in multiple different data stores. Each different data store may be explicitly designed and or configured to store certain data and not to store other data in order to implement data anonymity features such as one way linking and permanently breakable links between user identity data and associated user data. In some cases different processes and procedures may be implemented to control data availability data backup online disaster recovery offline storage archiving and the like for the different data stores.

Additional techniques described herein may use cryptographic hash functions to implement one way hashing or one way encryption between identity data and user data. For example a unique key value associated with a user identifier may be provided as input to a cryptographic hash function generating a corresponding hash value that may be used to retrieve user data from a user data store. However in certain embodiments the hash value cannot be used to derive the corresponding key value and thus also cannot be used to determine any user identity data or private user information based on the hash value and or user data.

In the appended figures similar components and or features may have the same reference label. Further various compo of the same type may be distinguished by following the reference label by a dash and a second label that distinguishes among the similar components. If only the first reference label is used in the specification the description is applicable to any one of the similar components having the same first reference label irrespective of the second reference label.

The ensuing description provides illustrative embodiment s only and is not intended to limit the scope applicability or configuration of the disclosure. Rather the ensuing description of the illustrative embodiment s will provide those skilled in the art with an enabling description for implementing a preferred exemplary embodiment. It is understood that various changes can be made in the function and arrangement of elements without departing from the spirit and scope as set forth in the appended claims.

With reference now to a block diagram is shown illustrating various components of a content distribution network CDN which implements and supports certain embodiments and features described herein. Content distribution network may include one or more content management servers . As discussed below in more detail content management servers may be any desired type of server including for example a rack server a tower server a miniature server a blade server a mini rack server a mobile server an ultra dense server a super server or the like and may include various hardware components for example a motherboard a processing units memory systems hard drives network interfaces power supplies etc. Content management server may include one or more server farms clusters or any other appropriate arrangement and or combination or computer servers. Content management server may act according to stored instructions located in a memory subsystem of the server and may run an operating system including any commercially available server operating system and or any other operating systems discussed herein.

The content distribution network may include one or more data store servers such as database servers and file based storage systems. Data stores may comprise stored data relevant to the functions of the content distribution network . Illustrative examples of data stores that may be maintained in certain embodiments of the content distribution network are described below in reference to . In some embodiments multiple data stores may reside on a single server either using the same storage components of server or using different physical storage components to assure data security and integrity between data stores. In other embodiments each data store may have a separate dedicated data store server .

Content distribution network also may include one or more user devices and or supervisor devices . User devices and supervisor devices may display content received via the content distribution network and may support various types of user interactions with the content. User devices and supervisor devices may include mobile devices such as smartphones tablet computers personal digital assistants and wearable computing devices. Such mobile devices may run a variety of mobile operating systems and may be enabled for Internet e mail short message service SMS Bluetooth mobile radio frequency identification M RFID and or other communication protocols. Other user devices and supervisor devices may be general purpose personal computers or special purpose computing devices including by way of example personal computers laptop computers workstation computers projection devices and interactive room display systems. Additionally user devices and supervisor devices may be any other electronic devices such as a thin client computers an Internet enabled gaming systems business or home appliances and or a personal messaging devices capable of communicating over network s .

In different contexts of content distribution networks user devices and supervisor devices may correspond to different types of specialized devices for example student devices and teacher devices in an educational network employee devices and presentation devices in a company network different gaming devices in a gaming network etc. In some embodiments user devices and supervisor devices may operate in the same physical location such as a classroom or conference room. In such cases the devices may contain components that support direct communications with other nearby devices such as a wireless transceivers and wireless communications interfaces Ethernet sockets or other Local Area Network LAN interfaces etc. In other implementations the user devices and supervisor devices need not be used at the same location but may be used in remote geographic locations in which each user device and supervisor device may use security features and or specialized hardware e.g. hardware accelerated SSL and HTTPS WS Security firewalls etc. to communicate with the content management server and or other remotely located user devices . Additionally different user devices and supervisor devices may be assigned different designated roles such as presenter devices teacher devices administrator devices or the like and in such cases the different devices may be provided with additional hardware and or software components to provide content and support user capabilities not available to the other devices.

The content distribution network also may include a privacy server that maintains private user information at the privacy server while using applications or services hosted on other servers. For example the privacy server may be used to maintain private data of a user within one jurisdiction even though the user is accessing an application hosted on a server e.g. the content management server located outside the jurisdiction. In such cases the privacy server may intercept communications between a user device or supervisor device and other devices that include private user information. The privacy server may create a token or identifier that does not disclose the private information and may use the token or identifier when communicating with the other servers and systems instead of using the user s private information.

As illustrated in the content management server may be in communication with one or more additional servers such as a content server a user data server and or an administrator server . Each of these servers may include some or all of the same physical and logical components as the content management server s and in some cases the hardware and software components of these servers may be incorporated into the content management server s rather than being implemented as separate computer servers.

Content server may include hardware and software components to generate store and maintain the content resources for distribution to user devices and other devices in the network . For example in content distribution networks used for professional training and educational purposes content server may include data stores of training materials presentations interactive programs and simulations course models course outlines and various training interfaces that correspond to different materials and or different types of user devices . In content distribution networks used for media distribution interactive gaming and the like a content server may include media content files such as music movies television programming games and advertisements.

User data server may include hardware and software components that store and process data for multiple users relating to each user s activities and usage of the content distribution network . For example the content management server may record and track each user s system usage including their user device content resources accessed and interactions with other user devices . This data may be stored and processed by the user data server to support user tracking and analysis features. For instance in the professional training and educational contexts the user data server may store and analyze each user s training materials viewed presentations attended courses completed interactions evaluation results and the like. The user data server may also include a repository for user generated material such as evaluations and tests completed by users and documents and assignments prepared by users. In the context of media distribution and interactive gaming the user data server may store and process resource access data for multiple users e.g. content titles accessed access times data usage amounts gaming histories user devices and device types etc. .

Administrator server may include hardware and software components to initiate various administrative functions at the content management server and other components within the content distribution network . For example the administrator server may monitor device status and performance for the various servers data stores and or user devices in the content distribution network . When necessary the administrator server may add or remove devices from the network and perform device maintenance such as providing software updates to the devices in the network . Various administrative tools on the administrator server may allow authorized users to set user access permissions to various content resources monitor resource usage by users and devices and perform analyses and generate reports on specific network users and or devices e.g. resource usage tracking reports training evaluations etc. .

The content distribution network may include one or more communication networks . Although only a single network is identified in the content distribution network may include any number of different communication networks between any of the computer servers and devices shown in and or other devices described herein. Communication networks may enable communication between the various computing devices servers and other components of the content distribution network . As discussed below various implementations of content distribution networks may employ different types of networks for example computer networks telecommunications networks wireless networks and or any combination of these and or other networks.

With reference to an illustrative distributed computing environment is shown including a computer server four client computing devices and other components that may implement certain embodiments and features described herein. In some embodiments the server may correspond to the content management server discussed above in and the client computing devices may correspond to the user devices . However the computing environment illustrated in may correspond to any other combination of devices and servers configured to implement a client server model or other distributed computing architecture.

Client devices may be configured to receive and execute client applications over one or more networks . Such client applications may be web browser based applications and or standalone software applications such as mobile device applications. Server may be communicatively coupled with the client devices via one or more communication networks . Client devices may receive client applications from server or from other application providers e.g. public or private application stores . Server may be configured to run one or more server software applications or services for example web based or cloud based services to support content distribution and interaction with client devices . Users operating client devices may in turn utilize one or more client applications e.g. virtual client applications to interact with server to utilize the services provided by these components.

Various different subsystems and or components may be implemented on server . Users operating the client devices may initiate one or more client applications to use services provided by these subsystems and components. The subsystems and components within the server and client devices may be implemented in hardware firmware software or combinations thereof. Various different system configurations are possible in different distributed computing systems and content distribution networks . The embodiment shown in is thus one example of a distributed computing system and is not intended to be limiting.

Although exemplary computing environment is shown with four client computing devices any number of client computing devices may be supported. Other devices such as specialized sensor devices etc. may interact with client devices and or server .

As shown in various security and integration components may be used to send and manage communications between the server and user devices over one or more communication networks . The security and integration components may include separate servers such as web servers and or authentication servers and or specialized networking components such as firewalls routers gateways load balancers and the like. In some cases the security and integration components may correspond to a set of dedicated hardware and or software operating at the same physical location and under the control of same entities as server . For example components may include one or more dedicated web servers and network hardware in a datacenter or a cloud infrastructure. In other examples the security and integration components may correspond to separate hardware and software components which may be operated at a separate physical location and or by a separate entity.

Security and integration components may implement various security features for data transmission and storage such as authenticating users and restricting access to unknown or unauthorized users. In various implementations security and integration components may provide for example a file based integration scheme or a service based integration scheme for transmitting data between the various devices in the content distribution network . Security and integration components also may use secure data transmission protocols and or encryption for data transfers for example File Transfer Protocol FTP Secure File Transfer Protocol SFTP and or Pretty Good Privacy PGP encryption.

In some embodiments one or more web services may be implemented within the security and integration components and or elsewhere within the content distribution network . Such web services including cross domain and or cross platform web services may be developed for enterprise use in accordance with various web service standards such as the Web Service Interoperability WS I guidelines. For example some web services may use the Secure Sockets Layer SSL or Transport Layer Security TLS protocol to provide secure connections between the server and user devices . SSL or TLS may use HTTP or HTTPS to provide authentication and confidentiality. In other examples web services may be implemented using the WS Security standard which provides for secure SOAP messages using XML encryption. In other examples the security and integration components may include specialized hardware for providing secure web services. For example security and integration components may include secure network appliances having built in features such as hardware accelerated SSL and HTTPS WS Security and firewalls. Such specialized hardware may be installed and configured in front of any web servers so that any external devices may communicate directly with the specialized hardware.

Communication network s may be any type of network familiar to those skilled in the art that can support data communications using any of a variety of commercially available protocols including without limitation TCP IP transmission control protocol Internet protocol SNA systems network architecture IPX Internet packet exchange Secure Sockets Layer SSL or Transport Layer Security TLS protocols Hyper Text Transfer Protocol HTTP and Secure Hyper Text Transfer Protocol HTTPS and the like. Merely by way of example network s may be local area networks LAN such as one based on Ethernet Token Ring and or the like. Network s also may be wide area networks such as the Internet. Networks may include telecommunication networks such as a public switched telephone networks PSTNs or virtual networks such as an intranet or an extranet. Infrared and wireless networks e.g. using the Institute of Electrical and Electronics IEEE 802.11 protocol suite or other wireless protocols also may be included in networks .

Computing environment also may include one or more data stores and or back end servers . In certain examples the data stores may correspond to data store server s discussed above in and back end servers may correspond to the various back end servers . Data stores and servers may reside in the same datacenter or may operate at a remote location from server . In some cases one or more data stores may reside on a non transitory storage medium within the server . Other data stores and back end servers may be remote from server and configured to communicate with server via one or more networks . In certain embodiments data stores and back end servers may reside in a storage area network SAN .

With reference to an illustrative set of data stores and or data store servers is shown corresponding to the data store servers of the content distribution network discussed above in . One or more individual data stores may reside in storage on a single computer server or a single server farm or cluster under the control of a single entity or may reside on separate servers operated by different entities and or at remote locations. In some embodiments data stores may be accessed by the content management server and or other devices and servers within the network e.g. user devices supervisor devices administrator servers etc. . Access to one or more of the data stores may be limited or denied based on the processes user credentials and or devices attempting to interact with the data store.

The paragraphs below describe examples of specific data stores that may be implemented within some embodiments of a content distribution network . It should be understood that the below descriptions of data stores including their functionality and types of data stored therein are illustrative and non limiting. Data stores server architecture design and the execution of specific data stores may depend on the context size and functional requirements of a content distribution network . For example in content distribution systems used for professional training and educational purposes separate databases or file based storage systems may be implemented in data store server s to store trainee and or student data trainer and or professor data training module data and content descriptions training results evaluation data and the like. In contrast in content distribution systems used for media distribution from content providers to subscribers separate data stores may be implemented in data stores server s to store listings of available content titles and descriptions content title usage statistics subscriber profiles account data payment data network usage statistics etc.

A user profile data store may include information relating to the end users within the content distribution network . This information may include user characteristics such as the user names access credentials e.g. logins and passwords user preferences and information relating to any previous user interactions within the content distribution network e.g. requested content posted content content modules completed training scores or evaluations other associated users etc. .

An accounts data store may generate and store account data for different users in various roles within the content distribution network . For example accounts may be created in an accounts data store for individual end users supervisors administrator users and entities such as companies or educational institutions. Account data may include account types current account status account characteristics and any parameters limits restrictions associated with the accounts.

A content library data store may include information describing the individual content items or content resources available via the content distribution network . In some embodiments the library data store may include metadata properties and other characteristics associated with the content resources stored in the content server . Such data may identify one or more aspects or content attributes of the associated content resources for example subject matter access level or skill level of the content resources license attributes of the content resources e.g. any limitations and or restrictions on the licensable use and or distribution of the content resource price attributes of the content resources e.g. a price and or price structure for determining a payment amount for use or distribution of the content resource rating attributes for the content resources e.g. data indicating the evaluation or effectiveness of the content resource and the like. In some embodiments the library data store may be configured to allow updating of content metadata or properties and to allow the addition and or removal of information relating to the content resources.

A pricing data store may include pricing information and or pricing structures for determining payment amounts for providing access to the content distribution network and or the individual content resources within the network . In some cases pricing may be determined based on a user s access to the content distribution network for example a time based subscription fee or pricing based on network usage and. In other cases pricing may be tied to specific content resources. Certain content resources may have associated pricing information whereas other pricing determinations may be based on the resources accessed the profiles and or accounts of the user and the desired level of access e.g. duration of access network speed etc. . Additionally the pricing data store may include information relating to compilation pricing for groups of content resources such as group prices and or price structures for groupings of resources.

A license data store may include information relating to licenses and or licensing of the content resources within the content distribution network . For example the license data store may identify licenses and licensing terms for individual content resources and or compilations of content resources in the content server the rights holders for the content resources and or common or large scale right holder information such as contact information for rights holders of content not included in the content server .

A content access data store may include access rights and security information for the content distribution network and specific content resources. For example the content access data store may include login information e.g. user identifiers logins passwords etc. that can be verified during user login attempts to the network . The content access data store also may be used to store assigned user roles and or user levels of access. For example a user s access level may correspond to the sets of content resources and or the client or server applications that the user is permitted to access. Certain users may be permitted or denied access to certain applications and resources based on their subscription level training program course grade level etc. Certain users may have supervisory access over one or more end users allowing the supervisor to access all or portions of the end user s content activities evaluations etc. Additionally certain users may have administrative access over some users and or some applications in the content management network allowing such users to add and remove user accounts modify user access permissions perform maintenance updates on software and servers etc.

A source data store may include information relating to the source of the content resources available via the content distribution network. For example a source data store may identify the authors and originating devices of content resources previous pieces of data and or groups of data originating from the same authors or originating devices and the like.

An evaluation data store may include information used to direct the evaluation of users and content resources in the content management network . In some embodiments the evaluation data store may contain for example the analysis criteria and the analysis guidelines for evaluating users e.g. trainees students gaming users media content consumers etc. and or for evaluating the content resources in the network . The evaluation data store also may include information relating to evaluation processing tasks for example the identification of users and user devices that have received certain content resources or accessed certain applications the status of evaluations or evaluation histories for content resources users or applications and the like. Evaluation criteria may be stored in the evaluation data store including data and or instructions in the form of one or several electronic rubrics or scoring guides for use in the evaluation of the content users or applications. The evaluation data store also may include past evaluations and or evaluation analyses for users content and applications including relative rankings characterizations explanations and the like.

In addition to the illustrative data stores described above data store server s e.g. database servers file based storage servers etc. may include one or more external data aggregators . External data aggregators may include third party data sources accessible to the content management network but not maintained by the content management network . External data aggregators may include any electronic information source relating to the users content resources or applications of the content distribution network . For example external data aggregators may be third party data stores containing demographic data education related data consumer sales data health related data and the like. Illustrative external data aggregators may include for example social networking web servers public records data stores learning management systems educational institution servers business servers consumer sales data stores medical record data stores etc. Data retrieved from various external data aggregators may be used to verify and update user account information suggest user content and perform user and content evaluations.

With reference now to a block diagram is shown illustrating an embodiment of one or more content management servers within a content distribution network . As discussed above content management server s may include various server hardware and software components that manage the content resources within the content distribution network and provide interactive and adaptive content to users on various user devices . For example content management server s may provide instructions to and receive information from the other devices within the content distribution network in order to manage and transmit content resources user data and server or client applications executing within the network .

A content management server may include a content customization system . The content customization system may be implemented using dedicated hardware within the content distribution network e.g. a content customization server or using designated hardware and software resources within a shared content management server . In some embodiments the content customization system may adjust the selection and adaptive capabilities of content resources to match the needs and desires of the users receiving the content. For example the content customization system may query various data stores and servers to retrieve user information such as user preferences and characteristics e.g. from a user profile data store user access restrictions to content recourses e.g. from a content access data store previous user results and content evaluations e.g. from an evaluation data store and the like. Based on the retrieved information from data stores and other data sources the content customization system may modify content resources for individual users.

A content management server also may include a user management system . The user management system may be implemented using dedicated hardware within the content distribution network e.g. a user management server or using designated hardware and software resources within a shared content management server . In some embodiments the user management system may monitor the progress of users through various types of content resources and groups such as media compilations courses or curriculums in training or educational contexts interactive gaming environments and the like. For example the user management system may query one or more databases and or data store servers to retrieve user data such as associated content compilations or programs content completion status user goals results and the like.

A content management server also may include an evaluation system . The evaluation system may be implemented using dedicated hardware within the content distribution network e.g. an evaluation server or using designated hardware and software resources within a shared content management server . The evaluation system may be configured to receive and analyze information from user devices . For example various ratings of content resources submitted by users may be compiled and analyzed and then stored in a data store e.g. a content library data store and or evaluation data store associated with the content. In some embodiments the evaluation server may analyze the information to determine the effectiveness or appropriateness of content resources with for example a subject matter an age group a skill level or the like. In some embodiments the evaluation system may provide updates to the content customization system or the user management system with the attributes of one or more content resources or groups of resources within the network . The evaluation system also may receive and analyze user evaluation data from user devices supervisor devices and administrator servers etc. For instance evaluation system may receive aggregate and analyze user evaluation data for different types of users e.g. end users supervisors administrators etc. in different contexts e.g. media consumer ratings trainee or student comprehension levels teacher effectiveness levels gamer skill levels etc. .

A content management server also may include a content delivery system . The content delivery system may be implemented using dedicated hardware within the content distribution network e.g. a content delivery server or using designated hardware and software resources within a shared content management server . The content delivery system may receive content resources from the content customization system and or from the user management system and provide the resources to user devices . The content delivery system may determine the appropriate presentation format for the content resources based on the user characteristics and preferences and or the device capabilities of user devices . If needed the content delivery system may convert the content resources to the appropriate presentation format and or compress the content before transmission. In some embodiments the content delivery system may also determine the appropriate transmission media and communication protocols for transmission of the content resources.

In some embodiments the content delivery system may include specialized security and integration hardware along with corresponding software components to implement the appropriate security features content transmission and storage to provide the supported network and client access models and to support the performance and scalability requirements of the network . The security and integration layer may include some or all of the security and integration components discussed above in and may control the transmission of content resources and other data as well as the receipt of requests and content interactions to and from the user devices supervisor devices administrative servers and other devices in the network .

With reference now to a block diagram of an illustrative computer system is shown. The system may correspond to any of the computing devices or servers of the content distribution network described above or any other computing devices described herein. In this example computer system includes processing units that communicate with a number of peripheral subsystems via a bus subsystem . These peripheral subsystems include for example a storage subsystem an I O subsystem and a communications subsystem .

Bus subsystem provides a mechanism for letting the various components and subsystems of computer system communicate with each other as intended. Although bus subsystem is shown schematically as a single bus alternative embodiments of the bus subsystem may utilize multiple buses. Bus subsystem may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. Such architectures may include for example an Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus which can be implemented as a Mezzanine bus manufactured to the IEEE P1386.1 standard.

Processing unit which may be implemented as one or more integrated circuits e.g. a conventional microprocessor or microcontroller controls the operation of computer system . One or more processors including single core and or multicore processors may be included in processing unit . As shown in the figure processing unit may be implemented as one or more independent processing units and or with single or multicore processors and processor caches included in each processing unit. In other embodiments processing unit may also be implemented as a quad core processing unit or larger multicore designs e.g. hexa core processors octo core processors ten core processors or greater.

Processing unit may execute a variety of software processes embodied in program code and may maintain multiple concurrently executing programs or processes. At any given time some or all of the program code to be executed can be resident in processor s and or in storage subsystem . In some embodiments computer system may include one or more specialized processors such as digital signal processors DSPs outboard processors graphics processors application specific processors and or the like.

I O subsystem may include device controllers for one or more user interface input devices and or user interface output devices . User interface input and output devices may be integral with the computer system e.g. integrated audio video systems and or touchscreen displays or may be separate peripheral devices which are attachable detachable from the computer system .

Input devices may include a keyboard pointing devices such as a mouse or trackball a touchpad or touch screen incorporated into a display a scroll wheel a click wheel a dial a button a switch a keypad audio input devices with voice command recognition systems microphones and other types of input devices. Input devices may also include three dimensional 3D mice joysticks or pointing sticks gamepads and graphic tablets and audio visual devices such as speakers digital cameras digital camcorders portable media players webcams image scanners fingerprint scanners barcode reader 3D scanners 3D printers laser rangefinders and eye gaze tracking devices. Additional input devices may include for example motion sensing and or gesture recognition devices that enable users to control and interact with an input device through a natural user interface using gestures and spoken commands eye gesture recognition devices that detect eye activity from users and transform the eye gestures as input into an input device voice recognition sensing devices that enable users to interact with voice recognition systems through voice commands medical imaging input devices MIDI keyboards digital musical instruments and the like.

Output devices may include one or more display subsystems indicator lights or non visual displays such as audio output devices etc. Display subsystems may include for example cathode ray tube CRT displays flat panel devices such as those using a liquid crystal display LCD or plasma display projection devices touch screens and the like. In general use of the term output device is intended to include all possible types of devices and mechanisms for outputting information from computer system to a user or other computer. For example output devices may include without limitation a variety of display devices that visually convey text graphics and audio video information such as monitors printers speakers headphones automotive navigation systems plotters voice output devices and modems.

Computer system may comprise one or more storage subsystems comprising hardware and software components used for storing data and program instructions such as system memory and computer readable storage media . The system memory and or computer readable storage media may store program instructions that are loadable and executable on processing units as well as data generated during the execution of these programs.

Depending on the configuration and type of computer system system memory may be stored in volatile memory such as random access memory RAM and or in non volatile storage drives such as read only memory ROM flash memory etc. The RAM may contain data and or program modules that are immediately accessible to and or presently being operated and executed by processing units . In some implementations system memory may include multiple different types of memory such as static random access memory SRAM or dynamic random access memory DRAM . In some implementations a basic input output system BIOS containing the basic routines that help to transfer information between elements within computer system such as during start up may typically be stored in the non volatile storage drives . By way of example and not limitation system memory may include application programs such as client applications Web browsers mid tier applications server applications etc. program data and an operating system .

Storage subsystem also may provide one or more tangible computer readable storage media for storing the basic programming and data constructs that provide the functionality of some embodiments. Software programs code modules instructions that when executed by a processor provide the functionality described herein may be stored in storage subsystem . These software modules or instructions may be executed by processing units . Storage subsystem may also provide a repository for storing data used in accordance with the present invention.

Storage subsystem may also include a computer readable storage media reader that can further be connected to computer readable storage media . Together and optionally in combination with system memory computer readable storage media may comprehensively represent remote local fixed and or removable storage devices plus storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information.

Computer readable storage media containing program code or portions of program code may include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information. This can include tangible computer readable storage media such as RAM ROM electronically erasable programmable ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or other tangible computer readable media. This can also include nontangible computer readable media such as data signals data transmissions or any other medium which can be used to transmit the desired information and which can be accessed by computer system .

By way of example computer readable storage media may include a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM DVD and Blu Ray disk or other optical media. Computer readable storage media may include but is not limited to Zip drives flash memory cards universal serial bus USB flash drives secure digital SD cards DVD disks digital video tape and the like. Computer readable storage media may also include solid state drives SSD based on non volatile memory such as flash memory based SSDs enterprise flash drives solid state ROM and the like SSDs based on volatile memory such as solid state RAM dynamic RAM static RAM DRAM based SSDs magnetoresistive RAM MRAM SSDs and hybrid SSDs that use a combination of DRAM and flash memory based SSDs. The disk drives and their associated computer readable media may provide non volatile storage of computer readable instructions data structures program modules and other data for computer system .

Communications subsystem may provide a communication interface from computer system and external computing devices via one or more communication networks including local area networks LANs wide area networks WANs e.g. the Internet and various wireless telecommunications networks. As illustrated in the communications subsystem may include for example one or more network interface controllers NICs such as Ethernet cards Asynchronous Transfer Mode NICs Token Ring NICs and the like as well as one or more wireless communications interfaces such as wireless network interface controllers WNICs wireless network adapters and the like. Additionally and or alternatively the communications subsystem may include one or more modems telephone satellite cable ISDN synchronous or asynchronous digital subscriber line DSL units FireWire interfaces USB interfaces and the like. Communications subsystem also may include radio frequency RF transceiver components for accessing wireless voice and or data networks e.g. using cellular telephone technology advanced data network technology such as 3G 4G or EDGE enhanced data rates for global evolution WiFi IEEE 802.11 family standards or other mobile communication technologies or any combination thereof global positioning system GPS receiver components and or other components.

The various physical components of the communications subsystem may be detachable components coupled to the computer system via a computer network a FireWire bus or the like and or may be physically integrated onto a motherboard of the computer system . Communications subsystem also may be implemented in whole or in part by software.

In some embodiments communications subsystem may also receive input communication in the form of structured and or unstructured data feeds event streams event updates and the like on behalf of one or more users who may use or access computer system . For example communications subsystem may be configured to receive data feeds in real time from users of social networks and or other communication services web feeds such as Rich Site Summary RSS feeds and or real time updates from one or more third party information sources e.g. data aggregators . Additionally communications subsystem may be configured to receive data in the form of continuous data streams which may include event streams of real time events and or event updates e.g. sensor data applications financial tickers network performance measuring tools clickstream analysis tools automobile traffic monitoring etc. . Communications subsystem may output such structured and or unstructured data feeds event streams event updates and the like to one or more data stores that may be in communication with one or more streaming data source computers coupled to computer system .

Due to the ever changing nature of computers and networks the description of computer system depicted in the figure is intended only as a specific example. Many other configurations having more or fewer components than the system depicted in the figure are possible. For example customized hardware might also be used and or particular elements might be implemented in hardware firmware software or a combination. Further connection to other computing devices such as network input output devices may be employed. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

With reference now to block diagrams are shown illustrating example systems and for providing data access and supporting various data anonymity features for users interacting with content distribution networks. The data access and data anonymity management systems and illustrated in this example each of which may be interchangeably referred to simply as a data anonymity system may be integrated within or configured to operate in collaboration with content distribution networks . For example a data anonymity system may correspond to a content distribution network CDN in which a data anonymity server may be a content provider or other content management server within the CDN . In such cases the data anonymity server may receive requests directly or indirectly from client devices e.g. user devices and to access backend content resources or perform other CDN supported functionality. The data anonymity server may retrieve and provide the resources to clients from backend content servers user data servers administrative servers data store servers etc. In other examples the data anonymity server might not directly receive and respond to requests from client devices but may be implemented as another content management server operating in collaboration with one or more content provider servers and other backend CDN systems to provide various data anonymity management features.

In the various embodiments described herein data anonymity systems may include components configured to collect store and manage various types of data associated with users in CDNs . As discussed below data anonymity servers and or other components within data anonymity systems may be designed and configured to support features such as active user data anonymity one way linking from user identity data and private user information to associated user data permanently breakable links between identity data private data and associated user data and the preservation of anonymous user data for purposes of evaluation data analytics and the like without association to any current or previous user identity or private user data. In order to perform such features each of the components and sub components discussed in the example data anonymity systems may correspond to a single computer server or a complex computing system including a combination of computing devices storage devices network components etc. Each of these components and their respective subcomponents may be implemented in hardware software or a combination thereof. Further certain components within data anonymity systems may include special purpose hardware devices and or special purpose software such as those discussed included in the key generator and hash generator data store archive system and data stores discussed below.

As shown in data anonymity systems may include separate data stores for storing user data identity data and link data. An identity data store may be designated and configured to store private user information. Private user information which may also be referred to herein as identity data and or personally identifiable information PII may include data from which the identity of a user can be determined. The scope of private user information may vary from system to system but may generally include any data or combination of data unique to individuals such as names addresses social security numbers account numbers passwords employment information demographic information financial data and the like.

In contrast a user data store may be designated and configured to store data relating to user interactions with and usage of the CDN but from which a user generally cannot be specifically identified. Many different types of user data may be collected and stored within user data stores and such user data may depend on the type and characteristics of the associated CDN s . The different types of content distribution networks and or data access and anonymity management systems may include without limitation media distribution systems and networks educational and professional training systems and networks interactive gaming systems and networks enterprise application systems and networks and or social networking dating systems and networks. User data collected and stored in user data stores may include for example and without limitation the specific resources accessed by a user in the CDN resource access times login and logout times usage patterns and preferences within the CDN user feedback user scores user relationships and interactions with other users and the like. As an example for CDNs used for professional training and educational purposes the user data may include the user s courses classes assignment scores test scores and other evaluations system usage times and patterns system usage on different devices discussion posts and interactions with instructors and other users and the like. For CDNs used for media distribution and or interactive gaming the user data may include the specific resources e.g. music titles games television programs movies etc. accessed by the user via the CDN the access times and frequencies devices and device types used for accessing the CDN data usage amounts content reviews and preferences game scores gaming records game reviews game playing time and patterns purchases during gaming sessions and the like. For CDNs used for Internet access and or eCommerce the user data may include the system usage access times and patterns devices and device types browsing histories time spent on different web pages user histories of product purchases and indications of interest and the like. As yet another example for CDNs used for social networking and online dating the user data may include the system usage access times and patterns devices and device types histories of user discussion posts invitations questions and responses and other user actions within the social networking or online dating system .

A third data store referred to a link data store may be included in certain data anonymity systems . As described below in more detail link data stores may include combinations of user identifiers and associated key values that may be used to support data access and data anonymity features.

In some embodiments one or more user data stores identity data stores and or link data stores each may be configured to store certain data and may be explicitly designed and or configured not to store other data in order to implement data anonymity features such as one way linking and permanently breakable links between user identity data and associated user data. For instance a user data store may be configured to store various types of user data along with associated hash values but in some implementations should be expressly designed and or configured not to store user identifiers key values or private user information. A link data store may be configured to store user identifiers and associated encryption key values but in some implementations should be expressly designed and or configured not to store user data hash values or private user information. Additionally an identity data store may be configured to store user identifiers and private user information but in some implementations should be expressly designed and or configured not to store user data key values or hash values.

Data stores may be implemented as databases file based storage and or other storage systems. In some embodiments data stores may be implemented as separate and isolated storage devices logical databases and or file based logical storage structures. In some cases one or more of the data stores may be integrated within other system devices such as a data anonymity server other data store servers and or other devices within system . In some cases one or more of the data stores may be implemented as a cloud based storage system. Each data store may include a single computer server or combination of servers storage devices network components etc. In some embodiments data stores may correspond to various data store servers in and or and may include some or all of the same hardware software storage and network components described above.

Additionally in certain embodiments data stores may have different database backup and recovery profiles. That is different processes and procedures may be implemented by the data anonymity server and or the individual data store servers to control data availability data backup online disaster recovery offline storage archiving and the like for the data stores . For example as discussed below the link data store may be expressly designed and or configured not to be permanently backed up or archived in an offline storage system thereby assuring that the associations between identity data and user data may be permanently deleted and cannot be recreated using archived data from an offline storage system. In contrast the user data store and or identity data store may be configured for periodic archiving in an offline storage system.

The data anonymity server may include components and subsystems to receive store and manage the data within data stores to provide various data access and data anonymity features. As discussed below data anonymity server may be configured to perform tasks such as creating new users storing modifying and retrieving user data and deleting users. In connection with these tasks data anonymity server may support various data anonymity features such as active user data anonymity one way linking and permanently breakable links between user identity data and associated user data discussed below.

In order to execute the functions and tasks described herein the data anonymity server may include a single computer server or combination of computer servers storage devices network components etc. Data anonymity server may be implemented using any combination of the computer hardware software storage and network components discussed above such as those in illustrative computer system and also may be implemented within any of the computing environments discussed above such as content distribution network and or distributed computing environment . For example data anonymity server may include secure storage device s to store data from data stores processors and software execution engines for generating encryption key values hash values and implementing data store backup and archiving procedures and network interface components for receiving transmitting requests and responses to client devices data stores and other devices within the system and or CDN .

In some embodiments the data anonymity server may include a key generator comprising specialized hardware and or software for generating and assigning key values to users within the data anonymity system and or CDN . Although a key value may be any data item in some embodiments the key generator may be configured to generate large and or random numbers or strings to be used as key values within the data anonymity system . For example the key generator may implement a pseudorandom number generator algorithm and or a pseudorandom string generator algorithm. In some cases the key generator may execute a pseudorandom number generator algorithm and then may store convert the numerical output as a string data type in order to avoid size limitations of various numeric data types. Thus the key generator may be implemented as a specialized software component. However in other cases hardware based random number generators and or random string generators may be used for the key generator .

A hash generator may be implemented within the data anonymity server either within the same device component as the key generator or as a separate device or component. As discussed below the hash generator may be configured to execute a cryptographic hash function on a key value input such as the key values provided by the key generator and or stored within the link data store . In some embodiments the hash generator may implement a secure hash algorithm such as the SHA 1 SHA 2 or SHA 3 standard cryptographic hash functions or the MD5 message digest algorithm. In other embodiments the hash generator may be a key generator in a cryptography system in which one or more algorithms e.g. a public key algorithm symmetric key algorithm etc. are used to generate pairs of cryptographic keys. In some cases a hash function executed by the hash generator e.g. SKEIN KECCAK RADIOGATUN etc. may output arbitrarily long data streams to be used as stream ciphers. Stream ciphers also may be built from fixed length digest hash functions. In such cases the hash generator may include a cryptographically secure pseudorandom number generator and then use its stream of random bytes as keystream.

Data anonymity systems also may include one or more data store archive systems . Data store archive systems may be implemented within the data anonymity server within data stores e.g. data store servers or databases or elsewhere within the system. As discussed below in more detail data store archive systems may be configured to implement database availability policies and to perform database backup and disaster recovery tasks. For example one or more data stores may be mirrored or clustered to provide high availability in the event of a failure of a hardware software or network component within the data store . Each data store may include clustered databases with multiple database instances which also may be multi regional in some cases. Data store archive systems also may be configured to initiate the creation of offline data store backups and archives either periodically or based on event occurrences for one or more data stores . Such offline data store archives may be implemented using removable media such as tape or optical disk storage and may be designed for long term storage. Certain offline archive systems provide for read only search and retrieval of data and modification of the offline archives may be difficult or impossible. Thus as discussed below data store archive systems and other components within data anonymity systems may be configured expressly designed and or configured not to create archive certain data stores offline e.g. link data store thereby supporting permanent disassociation between users and user data.

As shown in a data anonymity system may be implemented on one or more computer servers and or devices within a single data center by a single entity or organization. For example CDNs provided and maintained by various entities e.g. media distribution entities eCommerce entities interactive gaming entities professional training or eLearning entities etc. may incorporate a data anonymity system into the same hardware software and or network infrastructure of the CDN . In such cases even when the components of the data anonymity system are implemented on separate hardware devices software systems networks etc. these components still may be under the control of the same administrators and administrative servers and may operate within the same secure data centers and trusted networks as other components within the CDN .

In contrast as shown in data anonymity systems may be implemented across multiple different computer networks. Referring now to a data anonymity system is shown that may be implemented across two different computer networks and . In this example computer network may correspond to a content distribution network such as a media distribution network interactive gaming CDN eCommerce network professional training or educational CDN social networking CDN or any other examples of CDNs described herein. The computer network may be operated as a secure network of a first entity including computer servers and devices specialized software and various network components which may be implemented at one or more data centers of the first entity. In this example network may include various content management servers content servers administrative servers and other CDN systems and components discussed above.

Data anonymity system also includes a second computer network labeled as data anonymity network in this example. Computer networks and may correspond to two different secure networks operated by two different entities and including computer servers and devices specialized software various network components and the like implemented within separate data centers of the first and second entities. Networks and may communicate over various communication networks e.g. the Internet using secure communication channels. Due to the secure and confidential nature of the data that may be transmitted between networks and such as private user information user data key values and hash values etc. a variety of different secure network appliances and or secure network communication techniques and protocols may be used for implementing communication between networks and including any devices and techniques discussed above in reference to security and integration components and or communication networks .

In this example data anonymity network includes data anonymity server s as well as a link data store . The data anonymity server s in system may include a key generator hash generator data store archive system and or some or all of the additional specialized hardware and software components discussed above in connection with the data anonymity server and may be configured to perform the same functionality discussed above for providing data anonymity features.

In some cases content distribution network may operate as a fully functional CDN before ever connecting to data anonymity network or data anonymity server . For instance CDN may include content management servers along with user data store and identity data store and therefore it may be configured to perform any CDN related functionality described herein such as managing content resources receiving and handling content requests from client device and the like. In some cases CDN may be implemented and operational before the data anonymity network is created or connected to the CDN . In such cases the data anonymity network may be implemented after the initiation of the CDN as a separate system configured implement various data anonymity features within the CDN . In systems data anonymity networks therefore may be created and destroyed or attached and unattached during the operation of the CDN in a manner entirely transparent to client devices and certain of the content management servers and without affecting the primary functionality of the CDN .

Referring now to another example of a data anonymity system is shown that may be implemented across two different computer networks and . Similar to data anonymity system the computer networks and may correspond to two different secure networks operated by two different entities and including computer servers and devices specialized software various network components and the like implemented within separate data centers of the first and second entities. As described above networks and may communicate over various communication networks e.g. the Internet using secure communication channels and a variety of different secure network appliances and or secure network communication techniques and protocols.

In this example computer network may correspond to a content distribution network such as a media distribution network eCommerce network professional training or educational CDN an interactive gaming CDN a social networking CDN or any other examples of CDNs described herein. The computer network may be operated as a secure network of a first entity including computer servers and devices specialized software and various network components which may be implemented at one or more data centers of the first entity. In this example network may include various content management servers content servers administrative servers and other CDN systems and components discussed above. Additionally the CDN in this example includes a user data store a link data store and data anonymity servers s e.g. including key a generator hash generator data store archive system etc. . Thus CDN may be configured to support some or all of the same data anonymity functionality discussed above such as active user data anonymity one way linking and permanently breakable links between user identity data and associated user data.

Data anonymity system includes a second computer network labeled as identity and private user information storage network which includes one or more identity management servers and identity data store . As discussed above identity data store may be designated and configured to store various private user information from which the identity of a user can be determined including unique and secure data such as names addresses social security numbers account numbers passwords and the like. Therefore in this example network may function as a secure identity and PII storage network. Specifically identity management server s may be configured to receive store and manage any user identity data or PII associated with CDN users and or client devices . The identity management server s may provide an application programming interface API such as a secure web service or other client server application to receive and handle authorized requests from the CDN and or client devices for identity data and PII. As described in more detail below the creation of an identity storage network may allow CDN to operate as a functional content distribution network that includes support for data anonymity features but in which user identity data and confidential PII may be securely stored separately in network . Therefore in data anonymity system if any of the servers or systems within the CDN are compromised by malware or subjected to a cyberattack then all user identity data and PII may remain secure within identity network .

Referring now to a flow diagram is shown illustrating a process of creating a new user within a data access and data anonymity management system. As described below the steps in this process may be performed by one or more components in the example data anonymity systems described above in such as data anonymity servers content management servers data stores and or identity management servers . However it should be understood that the processes of providing users with data access in a CDN while and supporting data anonymity features as described herein need not be limited to the specific systems and hardware implementations described above in but may be performed within other computing environments comprising other combinations of the hardware and software components described herein.

In step a new user identifier may be received or generated for example by a data anonymity server within a data anonymity system . In various different implementations a user identifier may be any data item e.g. a number and or string value and may correspond to a user login name account number employee ID number student ID number or the like. In some cases step may be initiated after a client device logs into a CDN and or data access and data anonymity system and requests creation of a new account within the CDN and or system . For example in data anonymity system a client device may access data anonymity server to request the creation of a new user account and or new user identifier. The data anonymity server may create the user account and or user identifier which may be selected by the user or assigned automatically by the data anonymity server or other components within the CDN and or system . As another example in data anonymity system a client device may access one or more content management servers responsible for creating new user accounts and assigning user identifiers. In this example a content management server may transmit an indication with a new or updated user identifier to the data anonymity server the indication confirming that a new user account has been created or that an existing user account has been modified. As yet another example in data anonymity system new user identifiers either may be created within the CDN e.g. by a content management server or the data anonymity server and transmitted to the identity management server or may be created by the identity management server and transmitted back to the data anonymity server .

In step an associated key value may be created for the user identifier received or generated in step . As discussed above a key generator comprising specialized hardware and or software may be implemented within a data anonymity server to generate new key values for the data anonymity system . A key value generated in step may be any data item. However as described above in some embodiments key values may be large and or random numbers or strings. For example the key value may be the output of a pseudorandom number or string generator algorithm or output from a hardware based random number and or random string generator .

In step the data anonymity server may confirm the uniqueness of the key value generated in step . In some embodiments the data anonymity system may require both the user identifier received or generated in step and the key value generated in step to be unique within the system . Thus the data anonymity server may perform comparisons during or after of the creation of these data items to confirm their uniqueness. For example in some embodiments user identifiers may be stored within identity data stores and link data stores while key values may be stored only in link data stores . Thus the data anonymity system may query or analyze data stores to confirm that any newly create user identifiers and or key values do not already exist within the system . If a new key value and or a new user identifier is determined to already exist within data stores No then the duplicate may be discarded and another new key value and or another new user identifier may be generated in step and or step .

If the user identifier and the newly generated key value are unique within the data anonymity systems Yes then the key value may be used to generate a hash value in step . In some embodiments a hash generator within the data anonymity server may execute a cryptographic hash function using the key value as input to create the hash value in step . For example hash generator may execute a secure hash algorithm e.g. SHA 1 SHA 2 or SHA 3 MD5 etc. and or a key generation algorithm. Generally any number of functions or algorithms may be used to generate the hash value in step as long as the key value and hash value satisfy the requirements of one way hashing or one way encryption . That is in some embodiments it may be a requirement of step and or of the hash generator that the generated hash value must be relatively easy to reproduce given the key value e.g. by executing the hash function again on the same key value but the hash value cannot be used to easily derive the key value.

In step the data anonymity server may confirm the uniqueness of the hash value generated in step . As described below in more detail when a user leaves the data anonymity system their key value may be deleted but the corresponding hash value may remain within data stores . Therefore it is possible that even if a newly generated key value is unique within the system Yes that the hash value generated in step based on that key value might not be unique No . In this case the process may return to step discarding both the key value and hash value and generating new ones.

If both the new key value is unique Yes and the corresponding hash value generated using that key value is unique Yes then in steps and the new hash value and new key value may be stored at predetermined separate storage locations within the data anonymity system . For example in step the hash value may be stored within the user data store and in step the key value may be stored within the link data store .

Referring now to three example data tables are shown illustrating sample data that may be stored within data stores after creating a new user within a data anonymity system . shows an example data table including sample data that may be stored within an identity data store . In this example identity data table includes a unique user identifier and a corresponding set of private user information for a plurality of users within the system . The private user information in identity data table includes a user s name date of birth address account number social security number and payment information e.g. credit card number or bank account data etc. . In other examples identity data table may include any personally identifiable information PII or any data or combination of data from which a user s identity may be determined.

The example data tables in also may be used to illustrate the principle of one way hashing also called one way encryption which may be a requirement of data anonymity systems in some embodiments. As discussed above the hash generator may be configured to generate hash values in step that are relatively easy e.g. requiring minimal computing resources to reproduce given the same input key value but from which it is very difficult and may be practically impossible depending on the available processing power and memory within the system to derive the key value. As shown in example data tables it may be easy to retrieve specific user data from identity data but it may be very difficult or even impossible to determine identity data based on specific user data. To illustrate a user identifier selected from the identity data table may be used to retrieve the associated key value from the link data table . This key value may be provided as input to the hash function to generate the corresponding hash value which may be used to retrieve user data from table . However in contrast a hash value selected from user data table cannot be used to derive the corresponding key value in link table and thus also cannot be used to determine which user in identity table if any is associated with the selected hash value and user data in table . This characteristic of a data storage system may be referred to as one way hashing or one way encryption.

Referring now to a flow diagram is shown illustrating a process of using an existing user identifier to access user data within a data access and data anonymity management system . As described below the steps in this process may be performed by one or more components in the example data anonymity systems described above in such as data anonymity servers content management servers data stores and or identity management servers . However it should be understood that the processes of providing users with data access in a CDN while and supporting data anonymity features as described herein need not be limited to the specific systems and hardware implementations described above in but may be performed within other computing environments comprising other combinations of the hardware and software components described herein.

In step a request is received to access user data associated with one or more specific users in a data anonymity system . The type of data requested in various examples may include any data stored within a user data store that relates to a user s interactions with a CDN system . For example and without limitation the user data requested in step may include a user s access times usage patterns and preferences resources requested resources consumed discussion posts submitted or other user inputs behaviors purchases scores user feedback data interactions with other users and the like. Moreover the access request received in step may include a request to retrieve data from a user data store but alternatively or additionally may include a request to modify data within a user data store insert new user data into a user data store or remove data from a user data store .

Requests to access user data from a user data store may be initiated by a variety of different devices and systems. A data anonymity server may receive such requests in step directly or indirectly from a client device or other computing device within a CDN and or data anonymity system . For example the request in step may be a request from a content management server CMS to insert data into a user data store based on a recent set of user interactions recorded by the CMS within the CDN . As noted above data anonymity servers may be implemented within CMSs in some cases and thus the request received in step may be a request to and from processes systems within the same server. In other examples the request in step may be a request to retrieve specific user data to perform data analyses on the user data. For instance a CMS within a CDN system or a third party analytics server outside of a CDN system may request and analyze user data retrieved from the user data store . Such analyses of user data may include analyses of user behaviors within the CDN user interactions and preferences within the CDN performance of the various components of the CDN resource usage and purchases within the CDN and the like. In still other examples the request received in step may be initiated by an end user client device . For instance an end user of the CDN system may transmit a request from a client device to insert retrieve or modify the user s data within the user data store . In any of these examples the request in step may include certain identification and or authentication data associated with the user s within the CDN system whose user data is being requested.

In step one or more user identifiers may be received or retrieved by the data anonymity server in connection with the request for user data. The user identifiers may correspond to the same identifiers stored in the identity data store and link data store discussed above. In some cases user identifiers may be provided to the data anonymity server along with the request in step . However in other cases the request in step may include other identification or authentication information such as a user login account number and or password. Additionally a device identifier e.g. MAC address or IP address may be provided with the request in step . Therefore it may be necessary in some cases for the data anonymity server to retrieve the user identifier s associated with the request.

As an example in data anonymity system shown in various client devices e.g. end user devices system administrator client devices third party data analysis client devices etc. may transmit requests to the data anonymity server within the CDN data anonymity system in order to access the user data store . User authentication data e.g. a login and password may be provided in connection with these requests. In this example the data anonymity server may first authenticate the user credentials transmitted with the request and then confirm that the user is authorized for the requested access within the user data store . After confirming authentication authorization the data anonymity server then may contact the identity storage network to retrieve the corresponding user identifier s from the identity data store . For instance the data anonymity server may provide the authentication credentials associated with the request or a set of user names or other characteristics from the request to the identity data API . In response the identity data management server may retrieve the corresponding user identifiers from the identity data store and transmit them back to the data anonymity server via the identity data API .

In step the data anonymity server may use the user identifier or identifiers to retrieve the associated key value or values . As discussed above user identifiers and their associated key values may be stored within a link data store such as example data table .

In step the data anonymity server may use the key value or values retrieved in step to generate a corresponding hash value or values . In some embodiments determining the hash value that corresponds to a key value may require regenerating the hash value using a cryptographic hash function. Thus step may be similar or identical to step discussed above. For example the data anonymity server may invoke hash generator providing the key value as input to regenerate the same hash value that was previously generated when the user was created within the system . As discussed above certain data anonymity systems may support one way encryption in which hash values may be generated and consistently regenerated from key values relatively easily but where it may be difficult or practically impossible to derive the key value from the hash value. Such systems may require a user s hash value to be regenerated in step each time the user s data is accessed from user data store rather than persistently storing a key hash association that may allow the key value to be easy derived and therefore compromise the one way encryption characteristic of the system .

In step the hash value generated in step may be used to access the user data store and perform the retrievals and or modifications of user data indicated by the request received in step . As discussed above the request for access to user data may correspond to a request to retrieve a specific user s data e.g. for analysis purposes insert new user data associated with a specific user or to modify or remove existing user data associated with a specific user. Any of these functions may be performed within the user data store using the hash value generated in step . At the completion of the requested operations in step the hash value generated by the data anonymity server may be discarded when the process terminates.

Referring now to a flow diagram is shown illustrating a process of disassociating a user s identity data from the user s user data within a data access and data anonymity management system . As described below the steps in this process may be performed by one or more components in the example data anonymity systems described above in such as data anonymity servers content management servers data stores and or identity management servers . However it should be understood that the processes described herein for disassociating identity data from user data need not be limited to the specific systems and hardware implementations described above in but may be performed within other computing environments comprising other combinations of the hardware and software components described herein

In step a request may be received to disassociate one or more users within a CDN and or data anonymity system from their respective user data. Requests to disassociate users from their user data may be initiated by individual users or initiated automatically based on user data anonymity policies implemented within the CDN and or data anonymity system . Accordingly requests may be received in step from a CMS administrator server or from various client devices such as end user devices content presenter devices supervisor devices or devices of system administrators etc.

As discussed above certain user data stored in user data store may include sensitive and or confidential information relating to users behaviors and interactions within a CDN . Examples of such user data may include without limitation a user s resource requests web browsing history online purchases discussion posts test evaluation scores system access times and patterns reviews and feedback etc. Thus as a matter of individual user preference system policy and or legal requirements the CDN system may require that it is possible to temporarily or permanently disassociate users from their user data in such a manner that the user s identity cannot thereafter be derived from the user data. One technique of assuring that user data cannot be used to derive a user s identity is to delete all of the user s data from data store including any backup data stores and offline archives. However permanently deleting all user data may be a difficult and costly process. Furthermore permanent deletion of user data prevents that data from being used for analyses purposes which may be valuable to the operation of the CDN and or system . For instance user behaviors and interactions within a CDN may be analyzed to determine usage patterns and preferences advertising effectiveness correlations between user behaviors and content resource selections purchases professional training and eLearning outcomes and the like. Therefore it may be desirable in some embodiments to retain user data while providing a breakable link which allows users to be permanently disassociated from their user data so that neither the individual user nor the system nor any administrator or third party can ever derive a user s identity from the user data in data store .

In step after receiving the request to dissociate a user from that user s user data the user identifier of the corresponding user may be received or retrieved by the data anonymity server . Step may be similar or identical to step discussed above. For example in some cases a user identifier may be provided to the data anonymity server with the request in step . However in other cases the data anonymity server may retrieve the user identifier from an identity data store based on the authentication credentials and or other data received in connection with the request.

In step the key value associated with the user identifier received or retrieved in step may be accessed and deleted. As discussed above in step the data anonymity server may use the user identifier from step to access the associated key value within a link data store such as example data table . After identifying the associated key value for the user to be disassociated the data anonymity server may delete e.g. zero out or otherwise permanently deleting the key value.

Referring briefly to three example data tables are shown illustrating the sample data that may be stored within data stores after deleting a user s key value. In this example data tables may correspond to the same tables discussed above in . The only difference between tables and tables is that the first key value i.e. for user identifier 0046711 in the example link data table has been zeroed out for example in response to a request to disassociate this user i.e. user AAA bbb from his her user data.

Once the appropriate key value has been deleted in step it is no longer possible to generate the hash value corresponding to that key value. Moreover as discussed above the one way encryption characteristic of certain data anonymity systems may mean that it is very difficult and or practically impossible to regenerate the deleted key value from the corresponding hash value. Therefore after deleting the key value in step the user has been permanently disassociated from his her user data so that the user s identity data stored in an identity data store e.g. identity data table cannot be derived from the user s user data stored in a user data store e.g. user data table . This example demonstrates a permanent disassociation or permanent breaking of the link between a user s identity data and the user s user data even though all of the user s identity data and user data have been retained within the system .

In some embodiments key values might only be stored in a link data store such as link data table and might not be stored in within an identity data store or within a user data store . Therefore step might only require deleting the key value from a single location within a single data store e.g. a database table file storage etc. and need not require accessing either the identity data store or the user data store . Additionally as discussed above in some embodiments the link data store may be expressly designed and or configured not to be permanently backed up or archived in an offline storage system thereby assuring that the associations between identity data and user data may be permanently deleted and cannot be recreated using archived data from an offline storage system. In contrast the user data store and or identity data store may be configured for periodic archiving in offline storage systems.

In step the data anonymity server may determine whether or not to delete the disassociated user s identity data from the identity data store . In some cases the request to disassociate a user received in step may be a request to remove the user from the CDN and or data anonymity system . In such cases data anonymity server may determine that the user is permanently leaving the system and may determine that the user s identity data private user information should be deleted from the identity data store Yes which may be performed in step . Alternatively the data anonymity server may determine that the user is not leaving the system or may determine for other reasons that the user s identity data should be retained within the system No .

In some embodiments the data anonymity server may support permanent disassociation between users and their respective user data while allowing the users to remain active users within the CDN and or system . For example an active user may request to have all of the user s previously collected user data cleared from the system . In other examples certain CDNs and or systems such as eLearning CDNs and interactive gaming CDNs may want to periodically clear all of a user s previously collected user data when the user reaches a certain age time or level milestone e.g. completion of a class or grade in an eLearning CDN completion of a gaming level in a gaming CDN etc. . In these examples the requested clearing of a user s user data is effectively performed by deleting the key value in step and the user s identity data may be retained within the system No . Additionally a new key value may be generated for the existing user for example by re performing the steps when assigning a new user identifier to the user or only steps when allowing the user to keep the same user identifier .

In step the data anonymity server may determine whether or not the system may provide an option to re associate the user s identity data and user data at some future time. As described above when the key value associated with the user s identifier is deleted in step the user becomes permanently disassociated from his her user data. However in some embodiments a data anonymity server may provide an option for temporary disassociation and the potential for future re association by saving a temporary copy of the key value before permanently deleting it in step . In some cases the option to re associate the user s identity data and user data at some future time may be given to the user or system initiating the request in step . In other cases a data anonymity server may be configured either to allow or not allow future re association by either saving or not saving a copy of the key value before permanently deleting it from the link data store in step .

If the data anonymity server is configured to allow future re association of a user s identity data and user data Yes or if the user or system initiating the disassociation in step requests the option to re associate in the future Yes then the data anonymity server may save a copy of the key value before deleting it from the link data store in step . In step the data anonymity server may store the key value within secure and or encrypted storage within system . Alternatively or additionally in step the data anonymity server may securely transmit the key value to the user or system that requested the disassociation in step . In some embodiments the key value may be provided to the client user or system e.g. CMS administrator system client device and then permanently deleted from the system thereby giving the client user or system complete control and autonomy over the option to re associate the user identity and user data in the future.

If the option to allow future re association of a user s identity data and user data is provided Yes and the key value is retained either within the CDN and or system or within a client device or other external system then the key value may be used to perform the re association at any point in the future. For example a user opting to rejoin the CDN and or data anonymity system may provide the key value when rejoining. The data anonymity server then may replace the deleted e.g. zeroed out key value from the link data store with the key value provided by the user thereby reestablishing the one way encryption link between the user s identity data and user data.

A number of variations and modifications of the disclosed embodiments can also be used. Specific details are given in the above description to provide a thorough understanding of the embodiments. However it is understood that the embodiments may be practiced without these specific details. For example well known circuits processes algorithms structures and techniques may be shown without unnecessary detail in order to avoid obscuring the embodiments.

Implementation of the techniques blocks steps and means described above may be done in various ways. For example these techniques blocks steps and means may be implemented in hardware software or a combination thereof. For a hardware implementation the processing units may be implemented within one or more application specific integrated circuits ASICs digital signal processors DSPs digital signal processing devices DSPDs programmable logic devices PLDs field programmable gate arrays FPGAs processors controllers micro controllers microprocessors other electronic units designed to perform the functions described above and or a combination thereof.

Also it is noted that the embodiments may be described as a process which is depicted as a flowchart a flow diagram a swim diagram a data flow diagram a structure diagram or a block diagram. Although a depiction may describe the operations as a sequential process many of the operations can be performed in parallel or concurrently. In addition the order of the operations may be re arranged. A process is terminated when its operations are completed but could have additional steps not included in the figure. A process may correspond to a method a function a procedure a subroutine a subprogram etc. When a process corresponds to a function its termination corresponds to a return of the function to the calling function or the main function.

Furthermore embodiments may be implemented by hardware software scripting languages firmware middleware microcode hardware description languages and or any combination thereof. When implemented in software firmware middleware scripting language and or microcode the program code or code segments to perform the necessary tasks may be stored in a machine readable medium such as a storage medium. A code segment or machine executable instruction may represent a procedure a function a subprogram a program a routine a subroutine a module a software package a script a class or any combination of instructions data structures and or program statements. A code segment may be coupled to another code segment or a hardware circuit by passing and or receiving information data arguments parameters and or memory contents. Information arguments parameters data etc. may be passed forwarded or transmitted via any suitable means including memory sharing message passing token passing network transmission etc.

For a firmware and or software implementation the methodologies may be implemented with modules e.g. procedures functions and so on that perform the functions described herein. Any machine readable medium tangibly embodying instructions may be used in implementing the methodologies described herein. For example software codes may be stored in a memory. Memory may be implemented within the processor or external to the processor. As used herein the term memory refers to any type of long term short term volatile nonvolatile or other storage medium and is not to be limited to any particular type of memory or number of memories or type of media upon which memory is stored.

Moreover as disclosed herein the term storage medium may represent one or more memories for storing data including read only memory ROM random access memory RAM magnetic RAM core memory magnetic disk storage mediums optical storage mediums flash memory devices and or other machine readable mediums for storing information. The term machine readable medium includes but is not limited to portable or fixed storage devices optical storage devices and or various other storage mediums capable of storing that contain or carry instruction s and or data.

While the principles of the disclosure have been described above in connection with specific apparatuses and methods it is to be clearly understood that this description is made only by way of example and not as limitation on the scope of the disclosure.

