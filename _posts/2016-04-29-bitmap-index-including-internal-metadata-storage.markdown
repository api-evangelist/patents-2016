---

title: Bitmap index including internal metadata storage
abstract: A method includes receiving a query directed to a bitmap index. The bitmap index includes a plurality of bit strings, where a value stored in a particular location in each of the bit strings indicates whether a corresponding signal associated with a signal source has been received, and where the bitmap index includes at least a first metadata value associated with each of the bit strings, at least a second metadata value associated with each of a plurality of signal sources, or both. The method also includes generating a query execution plan for the query and generating query results based on the query execution plan. The query results identify at least one signal associated with at least one bit string of the plurality of bit strings, at least one signal source of the plurality of signal sources, and at least one of the first metadata value or the second metadata value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09489410&OS=09489410&RS=09489410
owner: Umbel Corporation
number: 09489410
owner_city: Austin
owner_country: US
publication_date: 20160429
---
Computer networks such as public networks e.g. the Internet and private networks e.g. at medical institutions financial institutions business enterprises etc. have become a medium for research communication distribution and storage of data. Consequently more and more devices are network enabled. To illustrate on any given day a typical user may access a half dozen or more network enabled devices such as their mobile phone tablet computer home security system devices one or more wearable devices a home laptop or desktop a work laptop or desktop and home entertainment devices e.g. televisions game consoles set top boxes etc. . Moreover Internet of Things IoT protocols enable network enabled devices to communicate with each other without user intervention. Thus there is an increasing amount of data being accessed transferred and stored online. As users use networks to access data they also generate a large amount of data regarding themselves. On websites such as social networks users actively and willingly share data regarding themselves. Analyzing such large data sets in a timely fashion may be difficult. In addition because the data sets may be stored in multiple data structures e.g. tables querying the data sets may include performing lookup operations on various data structures which may be inefficient.

Systems and methods of using a bitmap index are disclosed. The bitmap index may index big data such as data related to people that access a media property e.g. website . A system may track various characteristics of the users based on actions performed by the users on the website actions performed by the users on other websites accessing the users social networking profiles etc. This raw data may be stored in a distributed storage network and the bitmap index may include bit strings corresponding to the raw data or a portion thereof . To illustrate the bitmap index may include a bit string for the demographic property Male and a bit string for the demographic property Age 21 25. The same position in each bit string may correspond to the same user. For example if a particular user is assigned a user identifier ID of N then the value of the Nbit of the Male bit string indicates whether the particular user is male and the value of the Nbit of the Age 21 25 bit string indicates whether the particular user is between the ages of 21 and 25.

The bitmap index may enable real time or near real time computation of various metrics or queries that combine logical set operations such as AND OR and NOT operations. When the underlying data set is large the bit strings of the bitmap index may be stored in distributed fashion across multiple network attached storage nodes and executing queries on the bitmap index may involve parallel computations on multiple storage nodes. In particular examples the bitmap index includes metadata name value pairs. Inclusion of such metadata within the bitmap index may enable generating query results without having to perform lookup operations on external data structures.

In accordance with at least one described embodiment a method includes receiving at a computing device including a processor a query directed to a bitmap index. The bitmap index includes a plurality of bit strings where a value stored in a particular location in each of the bit strings indicates whether a corresponding signal associated with a signal source e.g. a user a computing device associated with the user or a computing device not associated with any user such as an IoT device has been received and where the bitmap index includes at least a first metadata value associated with each of the bit strings at least a second metadata value associated with each of a plurality of signal sources or both. The method also includes generating query results based on the query. The query results identify at least one signal associated with at least one bit string of the plurality of bit strings at least one signal source of the plurality of signal sources and at least one of the first metadata value or the second metadata value.

In another particular embodiment an apparatus includes a processor and a memory storing instructions executable by the processor to perform operations including receiving a query directed to a bitmap index. The bitmap index includes a plurality of bit strings where a value stored in a particular location in each of the bit strings indicates whether a corresponding signal associated with a signal source has been received and where the bitmap index includes at least a first metadata value associated with each of the bit strings at least a second metadata value associated with each of a plurality of signal sources or both. The operations also include generating query results based on the query. The query results identify at least one signal associated with at least one bit string of the plurality of bit strings at least one signal source of the plurality of signal sources and at least one of the first metadata value or the second metadata value.

In another particular embodiment a non transitory computer readable medium stores instructions that when executed cause a computer to perform operations including receiving a query directed to a bitmap index. The bitmap index includes a plurality of bit strings where a value stored in a particular location in each of the bit strings indicates whether a corresponding signal associated with a signal source has been received and where the bitmap index includes at least a first metadata value associated with each of the bit strings at least a second metadata value associated with each of a plurality of signal sources or both. The operations also include generating query results based on the query. The query results identify at least one signal associated with at least one bit string of the plurality of bit strings at least one signal source of the plurality of signal sources and at least one of the first metadata value or the second metadata value.

The measurement system may be implemented using one or more computing devices e.g. servers . For example such computing devices may include one or more processors or processing logic memories and network interfaces. The memories may include instructions executable by the processors to perform various functions described herein. The network interfaces may include wired and or wireless interfaces operable to enable communication to local area networks LANs and or wide area networks WANs such as the Internet. In the illustrated example the measurement system is communicably coupled to a network .

The event signals may include information associated with audience members of a media property. For example when an audience member creates an account or otherwise registers with a media property using social networking identification the measurement system may retrieve event signals corresponding to data stored in social networking profiles of the audience member. As another example the event signals may identify specific interactions by the audience members with respect to the media property e.g. what action was taken at a media property when the action was taken for how long the action was taken etc. . The interactions may include interactions with advertisements presented by the media property and or interactions with content presented by the media property. In a particular embodiment each of the event signals identifies a property e.g. Property 1 and an audience member alternately referred to herein as a user . For example if a user having a user ID N made a purchase on the website for Property 1 a corresponding event signal received by the measurement system may be userID N property Property 1 behavior Purchase . In some examples an event signal may also include metadata regarding an audience member and or an attribute. In alternate embodiments a different format may be used to represent an event signal.

The measurement system may include a data processing module and a query execution module each of which may be implemented using instructions executable by one or more processors at the measurement system . The data processing module may receive the event signals and store raw data corresponding to the event signals e.g. a copy of the event signals in cloud based storage . The data processing module may also store indexing data for the cloud based storage in a bitmap index . In a particular embodiment unlike the cloud based storage the bitmap index may be local or more quickly accessible to the measurement system . To illustrate data for the bitmap index may be stored across one or more data storage devices e.g. nodes that are part of the measurement system or accessible to the measurement system via a LAN or other private high speed network as opposed to a WAN. Alternatively or in addition data of the bitmap index may be stored in memory such as in RAM. Thus read and write operations with respect to the bitmap index may be faster than corresponding read and write operations with respect to the cloud based storage .

The measurement system may maintain a bitmap index for each media property being measured. Data in the bitmap index may be stored in the form of bit strings. The bitmap index may store bit strings corresponding to at least a subset of the data stored in the cloud based storage . Thus depending on implementation the bitmap index may for a particular media property include bit strings for all of the data stored in the cloud based storage or less than all of the data stored in the cloud based storage . In a particular embodiment the bitmap index for a particular media property includes for each audience member of the media property data regarding one or more attributes of the audience member which may include but are not limited to demographic attributes brand affinities behaviors e.g. interactions with the media property etc. It is to be understood that the techniques of the present disclosure may be used with bitmap indexes having an arbitrary number of rows e.g. R where R is an integer greater than or equal to one and an arbitrary number of columns e.g. C where C is an integer greater than or equal to one .

To illustrate a media property may have a known audience of one hundred thousand registered members. The bitmap index for the media property may include bit strings representing various attributes associated with each of the hundred thousand audience members. Thus each of the bit strings may be one hundred thousand bits in length. Further the same location in each bit string may correspond to the same audience member. For example if the Nlocation in a Male bit string has a value of 1 and the Nlocation in a Watches video bit string has a value of 1 this indicates that the Naudience member who has a userID N is a male that has watched at least one video on the property.

In some examples the bitmap index for a media property may store bit strings corresponding to less than all of the data stored in the cloud based storage . For example although the cloud based storage may include raw data corresponding millions of signals also referred to herein as tiles the bitmap index may store bit strings for a smaller subset of the most popular signals tiles e.g. the top fifty thousand signals tiles . In an alternative embodiment the bitmap index may store bit strings for all of the signals tiles tracked in the cloud based storage . Examples of the bitmap index are further described herein. In a particular embodiment the bitmap index is automatically sorted based on a parameter such as the total count of asserted bits in each bit strings as an illustrative non limiting example.

The query execution module may be configured to use the bitmap index to execute queries regarding measurement data for a media property. For example the query execution module may receive a query corresponding to the question What are the top 50 tiles signals for my audience In a particular embodiment the query may be generated using a query generation interface. If the bitmap index is already sorted by the total number of asserted bits or includes sort index metadata as further described with reference to the query execution module may return data regarding the first fifty strings in the bitmap index or the fifty strings with the lowest sort index values .

Alternatively if the bitmap index is not sorted the query execution module may perform count operations on bit strings stored in the bitmap index . In a particular embodiment because the bit strings may be stored across multiple nodes the query execution module may formulate a query execution plan that parallelizes execution of the query across multiple nodes and minimizes the amount of data that is transferred between nodes during execution of the query . By executing the query on bit strings stored in the bitmap index in parallel without retrieving data from the cloud based storage and by reducing or minimizing data transfers the query execution module may achieve real time or near real time performance. For example the query execution module may have a maximum query execution latency less than or equal to one hundred milliseconds. Further examples regarding query execution are described herein.

During operation the measurement system may receive the event signals from various event sources. Each event signal may include a unique identifier such as a user ID. If the user is a new audience member the user may be assigned a new user ID and a user profile may be created for the user. Data for the user profile may be stored in the cloud based storage and or the bitmap index . In a particular embodiment data for the user profile may be retrieved from third party data sources including but not limited to social networks. For example the data may include but is not limited to demographic information associated with the user e.g. a name an age a geographic location a marital family status a homeowner status etc. social information associated with the user e.g. social networking activity of the user social networking friends likes interests of the user etc. and other types of data. The cloud based storage and the bitmap index may be updated as additional event signals are received e.g. when additional users register with the media property interact with the media property etc. .

When the measurement system receives the query the query execution module may execute the query based on a query execution plan that parallelizes execution and reduces minimizes the amount of bit string data that is transferred between nodes during execution of the query . The system of may thus enable audience measurement and analysis based on data e.g. event signals received from various sources. For example event signals may be generated in response to user interactions with websites web pages audio items video items games and or text associated with various media properties. Further the system of may enable real time or near real time execution of queries on the collected data. For example the query execution module may execute complex top N queries using the bitmap index in real time or near real time e.g. within one hundred milliseconds .

In some examples there may be interest in finding out more about the individual audience members in a segment rather than merely what are my top 50 segments. For example it may be useful to after identifying the top fifty segments for a property retrieve a list of e mail addresses of the users in each of the top fifty segments. As another example it may be useful to compare the relative popularity of the segments for the property to a larger measurement universe that includes data for multiple properties. To determine such information one or more additional external data structures and lookup operations may typically be used. For example the measurement system or the cloud based storage may include a tiles lookup table and a profiles lookup table which may map metadata items to individual tiles and to individual profile IDs respectively. Thus to determine the e mail addresses for users in a segment additional lookups to the profiles lookup table based on the profile IDs in the segment may be required. However having to perform these additional lookup operations may be inefficient.

In accordance with the present disclosure instead of storing tile and profile metadata in external data structures such metadata may be stored as a part of the bitmap index as custom internal metadata. Consequently e mail addresses for users instead of or in addition to profile IDs may be returned as a query result. Thus including custom internal metadata in the bitmap index may remove the need to access data structures or perform post query external lookup operations in some cases.

In alternate embodiments the described bitmap index may correspond to patients and the event signals may identify a patient and may correspond to a healthcare event e.g. a visit to a doctor s office a prescription being filled etc. . Bit strings of the bitmap index may correspond to medical attributes such as medical history allergy information medication taken etc. The same location in each bit string may correspond to the same patient. As another example a tracked audience may correspond to inventory or customers of a store. Bit strings of the bitmap index may correspond to attributes of inventory such as color price demand etc. and or attributes of customers. The same location in each bit string may correspond to the same inventory item or the same customer. As yet another example in the financial industry the same location in each bit string may correspond to the same investor the same financial advisor the same financial product etc. As yet another example bit strings of the bitmap index may correspond to data output by devices in an IoT environment and the same location of each bit string may correspond to the same device.

Referring to a particular embodiment of a bitmap index is shown. In an illustrative embodiment the bitmap index is the bitmap index of . The bitmap index may correspond to a particular media property tracked by the measurement system of . The bitmap index stores a plurality of bit strings which correspond to rows or portions thereof in the bitmap index . Each bit string represents a tile which in the example of correspond to demographic signals brand affinity signals and or behavior signals exhibited by the audience members. For purposes of illustration the bitmap index is shown as a grid where each row of the bitmap index corresponds to a bit string. In a bit string count is shown for the brand affinity bit strings. For example the bit string for Coffee Shop A has a total of 7 indicating that 7 audience members have a brand affinity for Coffee Shop A. 

As described with reference to the same location in each bit string may correspond to the same audience member e.g. profile or user ID . Thus each column of the bitmap index corresponds to a particular audience member. For example a zero 0 at the intersection of the row and the column indicates that the user having a user ID equal to Q does not have an income in the range of 100 000 110 000. It should be noted that the specific tiles shown in for example only. Bit strings may be stored for more fewer and or different tiles in alternative embodiments.

In a particular embodiment each bit string in the bitmap index is subdivided into slices e.g. sub strings . In the illustrated example each slice includes S bits where S is a positive integer. Thus a first slice of each bit string includes data related to audience members having IDs 0 to S 1. A last e.g. X slice includes data related to audience members having IDs X 1 S to Q. When bit strings are subdivided into slices different slices of the same bit string may be stored in different locations e.g. storage nodes . A hashing algorithm such as consistent hashing may be used e.g. during read operations write operations query execution etc. to identify locations of the slices of a bit string. The value of S which represents the maximum length of each slice may be set based on a desired query execution latency. In a particular embodiment S is equal to 65 535 e.g. each slice includes 2bits .

The bitmap index may also include custom tile metadata and custom profile metadata . In an illustrative example such metadata is represented as name value pairs as shown in . As further described herein when a query is executed on the bitmap index the corresponding query results may include at least a portion of the metadata .

During operation the capture processor may receive an event signal corresponding to a new user registration event for the user . The event signal indicates that the user is to be assigned a new user ID and is a new user for the media property Property 1. The event signal also indicates e.g. on the basis of retrieved social networking data and or third party data that the user is a male has an income of 105 000 is single and has an e mail address of john site.com. In alternate embodiments such information may be automatically retrieved by a measurement system after the new user registration event as further described herein.

The capture processor which may implement a capture application programming interface API may send the event signal to the event processor . Because the user is a new audience member the event processor may generate and assign a new user ID to the user . For example the event processor may atomically increment a largest previously assigned user ID e.g. Q to generate a new user ID e.g. Q 1 . In a particular embodiment the event processor requests the new user ID from an atomic incrementer service e.g. a web service . The event processor may then store data corresponding to the event signal in the data store the SQL database and or the bitmap index . For example a new column may be created in the bitmap index by storing a new Q 1 bit in each of the bit strings in the bitmap index. When allocating and storing data in the Q 1 column involves creating a new slice the event processor may automatically generate a new slice for each bit string of the bitmap index . The value of the Q 1 bit in the Male Income 100 110 k and Single bit strings may be set to 1 based on the event signal. The value of the Q 1 bit in the remaining bit strings may be zero e.g. a default value . In addition a new pair may be set in the custom profile metadata for e mail address of the newly added audience member as shown at . In alternative embodiments contact information other than or in addition to e mail addresses may be included in the profile metadata .

As described with reference to in some embodiments the bitmap index includes bit strings for fewer than all of the attributes tiles being tracked. For example although all demographic and or behavioral tiles may be stored in the bitmap index bit strings for only the top N brands may be included in the bitmap index where N is an integer greater than or equal to one. In such embodiments a received event signal may cause a particular tile to become elevated into or fall out of the top N tiles. illustrates a particular embodiment of updating the bitmap index responsive to an event signal.

For ease of illustration the bitmap index is depicted as storing three brand affinity bit strings i.e. N 3 . Initially the three brands may be Coffee Shop A Store B and Television Network C. The brand affinity counts for the three brands are 7 5 and 10 audience members respectively. Brand affinity data for additional brands e.g. brands outside the top N brands may be stored in the data store .

A received event signal may indicate that the user has an affinity for Clothing brand D. Upon receiving the event signal the event processor may determine that a brand affinity bit string for Clothing Brand D is not stored in the bitmap index . Thus the event processor may store data for the event signal in the data store . The event processor or a background process or thread may determine that because of the event signal Store B which has a count of 5 has fallen outside of the top N brands and that Clothing Brand D which now has a count of 6 has become elevated into the top N brands. In response to the determination a bit string for Store B including any associated tile metadata may be replaced in the bitmap index with a bit string for Clothing Brand D along with any associated tile metadata .

Resolving the query may include ANDing each bit string location i.e. each user of a Male bit string with a corresponding location of an Income 100 110 k bit string as shown. When both corresponding locations contain a 1 the corresponding location of the filter string is set to 1. At the conclusion of the AND operations the filter string corresponds to a custom audience segment of men who earn 100 000 110 000.

In a particular embodiment the filter string is stored and available for use during execution of subsequent queries. The filter string may also be used to query the data store e.g. cloud based storage or the SQL database e.g. a user profile database regarding the custom audience segment. It should be noted that while the illustrated query calls for a single set operation to generate the filter string the described techniques may be used with more complex queries that involve any number of union operations intersection operations and or count operations. For example illustrates a particular embodiment of resolving a more complex second query to generate a second filter string . In the query is a top Z brand affinities query where Z is a positive integer .

The query requests identification of audience members that are male and that like Coffee Shop A or have made a purchase on the media property. The filter string may be generated by ORing a Coffee Shop A bit string with a Purchase bit string to generate an intermediate result string not shown . The filter string may be generated by ANDing the Male bit string with the intermediate result string. The audience members having a 1 in the filter string represent the audience members who are male and either have a brand affinity for Coffee Shop A or have made a purchase. In a particular embodiment the filter string may be stored and used during execution of subsequent queries. For example to answer the question What are the top 50 brands for men in my audience that either have an affinity for Coffee Shop A or have made a purchase the filter string may be generated. The filter string may be ANDed with each of the brand affinity bit strings to generate result strings. Count operations may be performed on the result strings and the 50 brand affinities with the highest counts may be returned in response to the question.

As another example to answer the query What are the e mail addresses for men in my audience that either have an affinity for Coffee Shop A or have made a purchase after the filter string is generated e mail addresses may be determined based on the custom profile metadata for each user whose corresponding value in the filter string is 1. To illustrate because the user having the ID Q 1 has a value of 1 in the filter string the e mail address john site.com is returned as a result for the query.

It will be appreciated that during query execution the AND OR operations performed on bit strings are performed one bit at a time and the result of an operation on any single bit location does not impact the result of the operation on any other bit location. Thus query execution may be parallelized. For example when slices of the bit strings are stored at different network nodes performing an operation with respect to bit strings may be parallelized into performing the operation with respect to individual slices at individual nodes. To determine where and in what order such parallel operations should be performed a query execution module may generate a query execution plan.

For example illustrates a particular embodiment of generating of a query execution plan to resolve the query of . Upon receiving the query a query execution module may generate a query execution plan . In a particular embodiment because data transfers between nodes may represent a bottleneck the query execution plan may be generated such that data transfers are reduced minimized. In a particular embodiment the query execution module is part of one of the nodes . Alternately the query execution module may be part of a separate node e.g. a load balancing node .

For example the query execution module may determine that resolution of the query of involves performing operations on the Male bit string the Coffee Shop A bit string and the Purchase bit string. In the illustrated example each of the bit strings has three slices. A first slice of the Male bit string designated Maleis stored on Node A . A Maleslice and a Maleslice are stored on Node B . Coffee Shop A Coffee Shop A Coffee Shop A and Purchaseslices and are stored on Node C . Purchaseand Purchaseslices and are stored on Node D .

In an illustrative embodiment each slice corresponds to a data object that includes a bit array an array of profile IDs corresponding to the bits in the bit array or alternatively a starting profile ID and an ending profile ID a tile ID a slice ID an array of pairs for tile metadata and an array of pairs for profile metadata. Thus when the following description refers to copying or moving a slice the various IDs and metadata stored in conjunction with the slice may also be copied or moved.

The query execution plan identifies operations and at what nodes are to perform the operations. For example the query execution plan indicates that in a first step Node C is to perform a union OR operation between Coffee Shop Aslice and the Purchaseslice to generate an intermediate result slice Union. In parallel Node A is to transfer a copy of the Maleslice to Node C and Node B is to transfer copies of the Maleslice and the Maleslice to Node C . Node D is to transfer copies of the Purchaseslice and the Purchaseslice to Node C .

In a second step Node C performs two operations in parallel ORing the Purchaseslice and the Coffee Shop Aslice to generate an intermediate result slice Union and ORing the Purchaseslice and the Coffee Shop Aslice to generate an intermediate result slice Union.

In a third step Node C performs three operations in parallel to generate three intermediate bit strings. The first intermediate bit string Resultis generated by ANDing the Unionslice with the Maleslice. The second intermediate bit string Resultis generated by ANDing the Unionslice with the Maleslice. The third intermediate bit string Resultis generated by ANDing the Unionslice with the Maleslice. In a fourth step Node C concatenates the Result Result and Resultbit strings to generate the filter string of .

In the foregoing description bit strings are described as being subdivided into slices. For example each slice may include 64 kibibits 1 kibibit 2bits 1 024 bits . In a particular embodiment slices may be further divided into chunks. For example chunks may be up to 2 kibibits in length e.g. each slice is subdivided into 32 chunks . To reduce the amount of space occupied by bit strings of a bitmap index chunks may be stored in a compressed fashion. For example illustrates a particular embodiment of compressing and storing data of a bitmap index. In particular depicts Node A of which stores the Maleslice . The bit array of Maleslice may be compressed in accordance with various compression schemes. In the illustrated compression scheme chunks that have only zeroes are not stored. Chunks that include a one are stored. A flag corresponding to each chunk is stored. If a flag has a value of zero the corresponding chunk is stored in its entirety. For example a first flag and a third flag have a value of zero indicating that corresponding first chunk and third chunk are stored at Node A . If a flag has a value of one the corresponding chunk is compressed by not being stored. For example a second flag has a value of one indicating that a corresponding second chunk includes only zeroes and is not stored. During queries the second chunk may be dynamically generated by introducing zeroes e.g. 2 048 zeroes between the first chunk and the third chunk .

While illustrates one example of a compression scheme in alternate embodiments different compression schemes may be used. Further data for the compression scheme may be stored in different places. For example the chunks and may be stored at Node A and the flags and may be stored in a different location e.g. as part of a hash table that is used to identify where slices chunks of a bit string are stored .

In accordance with the present disclosure multiple sortable metadata items may be included in the bitmap index . In the example of the count corresponds to the count of 1 values in each bit string. In some examples the count for an individual slice may be the count of 1 values in the slice rather than the bit string as a whole. Alternatively the total count may be stored along with each slice. The count sort index may enable the bitmap index to be quickly sorted by the count . When the bitmap index is sorted by the count the bit strings for Income 100 110 k and TV Network C will rise to the top therefore those bit strings have count sort indexes of 1. Adding sort indexes to the bitmap index may enable the bitmap index to function as a cache that is concurrently sorted by multiple individual custom sorting parameters e.g. count universal index etc. . As data in the bitmap index changes the sort indexes can be updated without having to relocate bit strings higher or lower within the bitmap index.

In an illustrative embodiment the universe index is based on a comparison of a popularity of a tile with respect to a media property e.g. website and a popularity of the tile with respect to a larger measurement universe that includes multiple media properties e.g. websites . To illustrate a measurement system such as the measurement system of may collect data regarding audiences of a large number of media properties. If a media property owner opts in to aggregate data metrics then the universe index may be generated in the bitmap index for the media property. In the example of a universe index of 100 indicates that the corresponding tile is equally popular in the measurement universe as it is for the individual media property. If the tile is less popular for the media property than for the measurement universe the universe index has a value of less than 100. If the tile is more popular for the media property than for the measurement universe the universe index has a value of more than 100. In the illustrated example Store B has a relatively low count of 5 but a large universe index of 415 indicating that the media property has a much larger proportion of Store B fans than the measurement universe as a whole. Based on this information the owner of the media property may tailor content and or marketing campaigns with information related to Store B in the hopes of turning their media property into a go to Internet location for information about Store B. 

Although not shown in it is to be understood that various other types of tile and or profile metadata may be stored in the bitmap index . For example the bitmap index includes a category for bit strings. To illustrate each of multiple brands of beer wine and spirits may have alcoholic beverages listed as a category. The category metadata may enable determining a custom composite segment that includes each of the beer wine and spirit brands. For example although individual brands may have low counts the custom segment for alcoholic beverages may have a large enough count to warrant marketing attention. Such category metadata may also enable querying the bitmap index using alcoholic beverage rather than having to OR together individual beer wine and spirit brands.

Referring to a particular embodiment of a method of using a bitmap index is shown. In an illustrative embodiment the method may be performed by a computing device having a processor such as a computing device included in the measurement system of .

The method includes receiving a query directed to a bitmap index at . The bitmap index includes a plurality of bit strings where a value stored in a particular location in each of the bit strings indicates whether a corresponding signal associated with a signal source has been received. As illustrative non limiting examples a signal source may include a user a computing device associated with the user or a computing device not associated with any user e.g. an IoT device . The bitmap index includes at least a first metadata value associated with each of the bit strings at least a second metadata value associated with each of a plurality of signal sources or both. The method also includes generating a query execution plan for the query at and generating query results based on the query execution plan at . The query results identify at least one signal associated with at least one bit string of the plurality of bit strings at least one signal source of the plurality of signal sources and at least one of the first metadata value or the second metadata value.

The bitmap index described herein may thus enable a measurement system such as the measurement system to quickly provide analysis for raw data stored in an offsite e.g. cloud based storage location. The bitmap index may represent an on the fly index of binary representations of different audience traits that can be mined to determine what set of audience members is most likely to be receptive to particular content a particular advertisement etc. Audience traits may be combined into long bit strings where each bit string represents a single trait for an entire audience. By keeping the bitmap index hot in memory ad hoc queries may be performed efficiently and with reduced latency and the results of such queries can include metadata regarding the audience traits and or audience members. The described techniques may also be used with other types of systems. For example in alternate embodiments the same location in each bit string of the bitmap index may correspond to an identifier other than a user ID such as an inventory number an employee number a hospital patient identifier etc. illustrate additional scenarios in which a bitmap index may be generated and used.

In particular illustrates an alternate embodiment of a measurement system and is generally designated . A measurement system may be communicatively coupled to one or more user devices e.g. illustrative user devices and to one or more content delivery networks CDNs e.g. illustrative CDN and to properties e.g. websites and . In the properties and are illustrated by corresponding servers e.g. web servers . The measurement system may be implemented using one or more computing devices e.g. servers . For example such computing devices may include one or more processors or processing logic memories and network interfaces. The memories may include instructions executable by the processors to perform various functions described herein. The network interfaces may include wired and or wireless interfaces operable to enable communication to local area networks and or wide area networks e.g. the Internet .

The user devices may be associated with various users. For example the desktop computing device and the tablet computing device may be associated with a first user and the mobile telephone device e.g. smartphone may be associated with a second user . It should be noted that the user devices are shown for example only and are not to be considered limiting. In alternate embodiments fewer additional and or different types of user devices may be present in the system . For example a radio frequency identification RFID enabled device may be carried by a user and may transmit a signal in response to detecting that the user is visiting a particular physical location. In a particular embodiment the user devices may execute applications that are operable to access the properties and . For example the user devices may include applications developed using a mobile software development kit SDK that includes support for audience measurement functions. To illustrate when the SDK based applications interact with the properties and the applications may generate first event signals that are transmitted by the user devices to the measurement system .

The first event signals may include information identifying specific interactions by the users via the user devices e.g. what action was taken at a media property when the action was taken for how long the action was taken etc. . The user interactions may include interactions with advertisements presented by the media property and or interactions with content presented by the media property. The event signals may also include an identifier such as a browser identifier browser ID generated by the SDK. In a particular embodiment browser identifiers are unique across software installations and devices. For example a first installation of a SDK based application at the desktop computing device and a second installation of the same SDK based application at the tablet computing device may use different browser IDs even though both installations are associated with the same user .

In another particular embodiment Browser IDs may remain consistent until applications or web browsers are reset e.g. caches cookies are cleared . In some embodiments the user devices may execute applications other than browser applications such as downloadable mobile applications that generate the event signals based on user interactions with advertisements and or content presented by the applications.

The user devices may access content provided by the properties and directly or via the CDN . The CDN may provide distributed load balanced access to audio video graphics and web pages associated with the media properties and . For example the CDN may include geographically distributed web servers and media servers that serve Internet content in a load balanced fashion. The CDN may send second event signals to the measurement system . The second event signals may include information identifying interactions with media properties and browser IDs provided to the CDN by the user devices and or the properties and . For example the second event signals may include CDN logs or data from CDN logs.

The media properties and may be controlled by the same entity e.g. may be part of a federated property or by different entities. The properties and may send third event signals to the measurement system . The third event signals may include information identifying interactions with the media properties and browser IDs provided by the user devices during communication with the properties and e.g. communication via hypertext transfer protocol HTTP transport control protocol internet protocol TCP IP or other network protocols .

In a particular embodiment the third event signals may include server logs or data from server logs. Alternately or in addition the third event signals may be generated by SDK based e.g. web SDK based applications executing at the properties and such as scripts embedded into web pages hosted by the properties and .

The first event signals from the user devices and the second event signals generated by the CDN may be considered first party event signals. The third event signals from the properties and may be considered third party event signals. First party event signals may be considered more trustworthy and reliable than third party event signals because of the possibility that third party event signals could be modified by a media property owner prior to transmission to the measurement system .

In a particular embodiment the properties and may send data to the measurement system and receive data from the measurement system regarding advertisements and or content presented by the properties and . Such communication is illustrated in as advertisement content communication . For example an advertisement or software associated with the advertisement that is executing on a client device such as web server a computer a mobile phone a tablet device etc. may collect and transmit data on a per advertisement per user basis. The data may include or identify a profile of a user a duration that the user viewed the advertisement action s performed by the user with respect to the advertisement etc. As another example a content item or software associated therewith may collect and transmit data regarding user interactions with the content item.

In a particular embodiment the measurement system includes a data filtering module a data processing module a data reporting module and a query execution module . In a particular embodiment each of the modules is implemented using instructions executable by one or more processors at the measurement system .

The data filtering module may receive the event signals and . The data filtering module may check the event signals and for errors and may perform data cleanup operations when errors are found. The data filtering module may also receive and perform cleanup operations on advertisement measurement data and content measurement data received from the properties and and from applications executing on the user devices . In a particular embodiment the data filtering module may implement various application programming interfaces APIs for event signal collection and inspection. The data filtering module may store authenticated verified event signals in a database event cache archive and or cloud storage . In a particular embodiment the measurement system includes or has access to a brand database that tracks brands. For example raw data corresponding to the brand database and other collected data may be stored in the cloud storage . Signals received from the properties and and from applications executing the user devices may identify a brand that matches one of the brands in the brand database. The measurement system may thus track advertisements content for various brands across multiple properties.

The data processing module may operate as described with reference to the data processing module of . Alternately or in addition the data processing module may associate received event signals and interactions represented thereby with user profiles of users. For example when an event signal having a particular browser ID is a social networking registration event e.g. when a user logs into a website using a Facebook account a Twitter account a LinkedIn account or some other social networking account the data processing module may retrieve a corresponding social networking profile or other user profile data from third party data sources . Facebook is a registered trademark of Facebook Inc. of Menlo Park Calif. Twitter is a registered trademark of Twitter Inc. of San Francisco Calif. LinkedIn is a registered trademark of LinkedIn Corp. of Mountain View Calif.

It will be appreciated that interactions that were previously associated only with the particular browser ID i.e. impersonal alphanumeric data may be associated with an actual person e.g. John Smith after retrieval of the social networking profile or user profile. Associating interactions with individuals may enable qualitative analysis of the audiences of media properties. For example if John Smith is a fan of a particular sports team the measurement system may indicate that at least one member of the audience of the first property or the second property is a fan of the particular sports team. When a large percentage of a media property s audience shares a particular characteristic or interest the media property may use such information in selecting and or generating advertising or content. User profiles e.g. a profile of the user John Smith and audience profiles e.g. profiles for the media properties associated with the properties and may be stored in the cloud storage and or in another database. An audience profile for a particular media property may be generated by aggregating the user profiles of the individual users e.g. including John Smith that interacted with the particular media property.

Audience profiles may be generated using as few as one or two user profiles although any number of user profiles may be aggregated. In a particular embodiment audience profiles may be updated periodically e.g. nightly weekly monthly etc. in response to receiving updated data for one or more users in the audience in response to receiving a request for audience profile data or any combination thereof. Audience profiles may similarly be generated for audiences of a particular mobile application based on signals generated by installations of the mobile application on various user devices.

The data reporting module may generate various interfaces. The data reporting module may also support an application programming interface API that enables external devices to view and analyze data collected and stored by the measurement system . In a particular embodiment the data reporting module is configured to segment the data.

As used herein a segment is based on a group of people e.g. an audience or a subset thereof . As further described herein a digital genome may be determined for each segment. Examples of segments include but are not limited to brand affinity segments also called brand segments demographic segments geographic segments social activity segments employer segments educational institution segments professional group segments industry category of employer segments brand affinity category segments professional skills segments job title segments and behavioral segments. In a particular embodiment behavioral segments are defined by a client e.g. property owner or publisher or by the measurement system and represent actions taken on a client s property.

Additional examples of segments include segments based on an advertisement an advertisement campaign an advertisement placement an advertisement context a content item a content context content placement a platform e.g. desktop laptop computer vs. mobile phone vs. tablet computer etc. Segments may be used to understand or evaluate characteristics of an audience craft a content strategy generate advertising leads create advertising pitches and respond to inbound advertising requests. Segments may also be used to acquire additional audience members receive information from advertisements content items and send information to advertisements content items. In a particular embodiment the measurement system may be operable to define new segments based on performing logical operations e.g. logical OR operations and logical AND operations .

The measurement system may also include a bitmap index e.g. the bitmap index of and or the bitmap index of . The bitmap index may store bit strings corresponding to at least a subset of the raw data stored in the cloud storage . In one example a different bitmap index is maintained for each property . The bitmap index for a particular property may include for each audience member of the property data regarding a demographic attribute of the audience member a brand affinity of the audience member and or behaviors e.g. interactions with the media property of the audience member. The same location in each bit string of the bitmap index may correspond to the same user.

The data processing module may also be configured to upon receiving an event signal parse the event signal to identify what user and media property the event signal corresponds to. The data processing module may store data corresponding to the event signal in one or more databases e.g. the cloud storage a user profile database etc. . The data processing module may also store indexing data corresponding to the event signal in the bitmap index for the identified media property. If the user is a new audience member for the media property the data processing module may assign a new ID to the user. Event signals may be processed as described above with reference to .

The query execution module may operate as described with reference to the query execution module of and or the query execution module of . For example the query execution module may receive a query and generate a query execution plan that parallelizes execution and reduces minimizes data transfers between storage nodes during query execution.

During operation the users may interact with the media properties and and with applications executing on the user devices . In response to the interactions the measurement system may receive the event signals and or . Each event signal may include a unique identifier such as a browser ID and or an audience member ID. If the user is a new audience member the data processing module may create a user profile. Data for the user profile may be stored in the cloud storage and or the bitmap index . In a particular embodiment data for the user profile may be retrieved from the third party data sources .

For example the data processing module may retrieve and store data from one or more social network profiles of the user. The data may include demographic information associated with the user e.g. a name an age a geographic location a marital family status a homeowner status etc. social information associated with the user e.g. social networking activity of the user social networking friends likes interests of the user etc. and other types of data. The data processing module may also collect and store data associated with advertisements and content served by the properties and and by applications executing on the user devices . In a particular embodiment the measurement system is further configured to receive offline data from external data sources. For example the measurement system may receive data regarding transactions e.g. purchases made by an audience and may use the transaction data to generate additional signals that contribute to the digital genome of an audience brand property etc. Another example of offline data may be a data dump of data collected by an RFID enabled device or an RFID detector. Offline data may be stored in one or more computer readable files that are provided to the measurement system . In a particular embodiment offline data can include previously collected data regarding users or audience members e.g. names addresses etc. .

The data reporting module may report data collected by the measurement system . For example the data reporting module may generate reports based on an audience profile of a media property or application where the audience profile is based on aggregating user profiles of users that interacted with the media property or application . To illustrate the data reporting module may generate an interface indicating demographic attributes of the audience as a whole e.g. a percentage of audience members that are male or female percentages of audience members in various age brackets percentages of audience members in various income bracket most common audience member cities states of residence etc. . The interface may also indicate social attributes of the audience as a whole e.g. the most popular movies sports teams etc. amongst members of the audience . Audience profiles may also be segmented and or aggregated with other audience profiles as further described herein. Audience profiles may further be segmented based on advertisement advertisement campaign brand content item etc. Audience profiles may also be constructed by combining segments as further described herein.

In a particular embodiment the system may also receive event signals based on measurements e.g. hardware measurements made at a device. For example an event signal from the tablet computing device or the mobile telephone device may include data associated with a hardware measurement at the tablet computing device or the mobile telephone device such as an accelerometer or gyroscope measurement indicating an orientation a tilt a movement direction and or a movement velocity of the tablet computing device or the mobile telephone device . As another example the system may receive a signal in response to an RFID device detecting that a user is visiting a particular physical location. The system of may also link interactions with user profiles of users. This may provide information of how many viewers and how long the viewers watched a particular video e.g. as in direct response measurement systems and also who watched the particular video e.g. demographic social and behavioral attributes of the viewers .

The system of may thus enable audience measurement and analysis based on data e.g. event signals received from various sources. Further the system of may enable real time or near real time execution of queries on collected data such as execution of top N queries using the bitmap index .

The system includes or has access to an authentication provider third party data sources an audience web application a first framework a second framework a database an interrogator a data store and a bitmap index . In an illustrative embodiment the third party data sources are the third party data sources of the event processing tier and the interrogator correspond to the data processing module of and the bitmap index is the bitmap index of .

The data collection tier includes a content management system CMS cloud storage content delivery networks client browsers and client servers . The data collection tier may further include an application programming interface API . The API includes a load balancer capture servers and cloud storage .

The event processing tier includes a job queues module an anonymous buffer and an event bundle buffer . The job queues module includes an authentication token handler an event dispatch and an event bundle handler . In alternate embodiments the job queues module may include more fewer and or different handlers than illustrated in .

The monitoring tier includes an internal monitoring module a ping monitor and a notifications module . The internal monitoring module includes a penetration monitor a performance analysis module a system monitor and an alert rules module .

During operation the content management system may be used to generate a client specific script e.g. webscript for various clients e.g. media properties . The client specific script may be stored in the cloud storage and replicated to the content delivery networks . As audience members register and interact with a media property the content delivery networks may deliver the client specific script along with property content to the client browsers . Based on the client specific script the client browsers may generate tags e.g. a tag corresponding to a particular user activity such as watching a video or tokens e.g. a social networking registration token . The tags or tokens may be sent to the load balancer . The client servers may also generate tags or tokens to send to the load balancer based on user registrations and user activity at media properties. The tags or tokens from the client servers may be authenticated by the authentication provider .

The load balancer may send the tags or tokens to the capture servers based on a load balancing algorithm. The capture servers may generate event data e.g. event signals based on the tags or tokens. The capture servers may store the event data in event logs in the cloud storage and send the event data to the job queues module .

The job queues module may distribute the event data to different event handler s based on the type of the event data. For example event data including an authentication token may be sent to the authentication token handler . In addition event data requiring additional information from social media sources may be sent to the authentication token handler . The handler may perform asynchronous event collection operations based on the received event data. For example when a new user registers with a media property using a social networking profile a token may be provided by the data collection tier to the authentication token handler . The handler may use the token to retrieve demographic and brand affinity data for the user from the user s social networking profile.

Event signals may also be sent to the event dispatch which determines whether the event signals corresponds to known or unknown users. When event data corresponds to an unknown user the event dispatch buffers the event data in the anonymous buffer . After a period of time e.g. three days event data from the anonymous buffer may be sent to the job queues module to be processed again.

When event data corresponds to a known user e.g. a user that has already been assigned a user ID the event dispatch may send the event data to the event bundles buffer . The event bundle handler may retrieve event data stored in the event bundles buffer every bundling period e.g. one hour . The event bundle handler may bundle event data received each bundling period into an event bundle that is sent to the interrogator .

The interrogator may parse the event bundle and update the data store the SQL database and or the bitmap index . For example the interrogator may perform bitmap index generation and update operations as described herein. In a particular embodiment the database corresponds to a profiles database that is accessible the first framework to the audience web application . For example the first framework may be a database driven framework that is operable to dynamically generate webpages based on data in the database . The audience web application may be operable to generate various graphical user interfaces to analyze the data collected by the system . The bitmap index may be accessible to the audience web application via the second framework . In one example the second framework supports representational state transfer REST based data access and webpage navigation. Although not shown in particular embodiments the data store may also be accessible to the audience web application .

The monitoring tier may monitor the various components of the system during operation to detect errors bottlenecks network intrusions and other issues. For example the penetration monitor may collect data indicating unauthorized access to or from the capture servers and the first framework . The penetration monitor may provide the data to the alert rules module . Similarly the system monitor may collect performance data from the capture servers from the second framework and from the data store . The system monitor may provide the performance data to the performance analysis module which may analyze the data and send the analyzed data to the alert rules module . The alert rules module may compare received data to alert rules and based on the comparison send an alert to the notifications module . For example the alert rules module may determine that an intruder has accessed components of the system or that the system is not operating at a desired level of efficiency and may send an alert to the notifications module .

The notifications module may also receive alerts from the ping monitor . The ping monitor may monitor the load balancer and the audience web application and collect data regarding uptime downtime and performance and provide alerts to the notification module .

The notification module may send notifications e.g. via short message service SMS e mail instant messaging paging etc. to one or more technical support staff members to enable timely response in the event of errors performance bottlenecks network intrusion etc.

In accordance with various embodiments of the present disclosure the methods functions and modules described herein may be implemented by software programs executable by a computer system. Further in an exemplary embodiment implementations can include distributed processing component object distributed processing and parallel processing. Alternatively virtual computer system processing can be constructed to implement one or more of the methods or functionality as described herein.

Particular embodiments can be implemented using a computer system executing a set of instructions that cause the computer system to perform any one or more of the methods or computer based functions disclosed herein. A computer system may include a laptop computer a desktop computer a mobile phone a tablet computer a set top box a media player or any combination thereof. The computer system may be connected e.g. using a network to other computer systems or peripheral devices. For example the computer system or components thereof can include or be included within any one or more devices modules and or components illustrated in . In a networked deployment the computer system may operate in the capacity of a server or as a client user computer in a server client user network environment or as a peer computer system in a peer to peer or distributed network environment. The term system can include any collection of systems or sub systems that individually or jointly execute a set or multiple sets of instructions to perform one or more computer functions.

In a particular embodiment the instructions can be embodied in a computer readable or a processor readable device. The terms computer readable device and processor readable device include a single storage device or multiple storage devices such as a centralized or distributed database and or associated caches and servers that store one or more sets of instructions. The terms computer readable device and processor readable device also include any device that is capable of storing a set of instructions for execution by a processor or that cause a computer system to perform any one or more of the methods or operations disclosed herein. For example a computer readable or processor readable device or storage device may include random access memory RAM flash memory read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM registers a hard disk a removable disk a disc based memory e.g. compact disc read only memory CD ROM or any other form of storage device. A computer readable or processor readable device is not a signal.

The illustrations of the embodiments described herein are intended to provide a general understanding of the structure of the various embodiments. The illustrations are not intended to serve as a complete description of all of the elements and features of apparatus and systems that utilize the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be utilized and derived from the disclosure such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Accordingly the disclosure and the figures are to be regarded as illustrative rather than restrictive.

Although specific embodiments have been illustrated and described herein it should be appreciated that any subsequent arrangement designed to achieve the same or similar purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all subsequent adaptations or variations of various embodiments. Combinations of the above embodiments and other embodiments not specifically described herein will be apparent to those of skill in the art upon reviewing the description.

The Abstract of the Disclosure is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description various features may be grouped together or described in a single embodiment for the purpose of streamlining the disclosure. This disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter may be directed to less than all of the features of any of the disclosed embodiments.

The above disclosed subject matter is to be considered illustrative and not restrictive and the appended claims are intended to cover all such modifications enhancements and other embodiments which fall within the true scope of the present disclosure. Thus to the maximum extent allowed by law the scope of the present disclosure is to be determined by the broadest permissible interpretation of the following claims and their equivalents and shall not be restricted or limited by the foregoing detailed description.

