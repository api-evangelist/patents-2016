---

title: Protecting network devices by a firewall
abstract: Systems and methods provide for scaling and management of a gateway. In one embodiment, a method includes: in response to a request from a client device, establishing, by a computer system implementing a gateway to a private network, a network tunnel between the client device and the gateway; and after establishing the network tunnel, starting a separate firewall service with a separate set of firewall rules on the computer system for selectively blocking and allowing network traffic between the client device and one or more network devices in the private network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09628444&OS=09628444&RS=09628444
owner: CRYPTZONE NORTH AMERICA, INC.
number: 09628444
owner_city: Waltham
owner_country: US
publication_date: 20160225
---
This application claims the benefit of and priority to U.S. Provisional Application Ser. No. 62 292 702 filed Feb. 8 2016 entitled SYSTEMS AND METHODS FOR PROTECTING NETWORK DEVICES BY A FIREWALL by Glazemakers et al. the entire contents of which application is incorporated by reference as if fully set forth herein.

At least some embodiments generally relate to the field of network protection and more particularly but not limited to the protection of private networks by a gateway including a tunnel server such as a VPN server and a firewall.

In order to protect private networks from unwanted network access a firewall may be implemented in a gateway in order to selectively filter communication from and to the private network. By applying firewall rules the firewall then lets network packets pass or blocks them in one or both directions. The rules are typically defined by the source and or destination addresses of the network packets or the source and or destination ports of the network packets.

A firewall may further perform stateful packet inspection thereby keeping track of the state of networking connections such as for example TCP or UDP networking connections. This way a finer grained control is possible as the rules become dependent on the network connection and thus dynamic. The firewall keeps track of all open network connections by maintaining a table the state table or state list with all the pending connections.

In order to have better control on the network traffic passing by a gateway the firewall may further perform deep packet inspection by controlling the payload data of the networking packets. This way different types of control can be implemented such as for example user access or authorization protocol compliance spam filtering and virus detection.

In order to protect a private network further the gateway s firewall may be combined with network tunnelling. Access to the private network may then be established by a VPN Virtual Private Network where a secured networking tunnel is set up between a client device and the gateway. The setup of such a tunnel is only granted upon successful authentication with the gateway which then functions as a VPN server. By the combination of a firewall and VPN server in the gateway access to devices in the private network can be authorized on a client or a user level by the VPN server and on a network level by the firewall.

Several problems may arise with combined gateway systems as described above. First the amount of firewall rules will increase with each additional user making the management of all the rules difficult for large systems. Because of this each incoming packet will have to be processed against all of these rules.

A second problem relates to the failover of the gateway. In one failover scheme referred to as passive failover all the information in the gateway i.e. firewall rules state list and active networking tunnels is constantly synchronized with a second redundant gateway. If there is a failure of the first gateway the second gateway automatically takes over from the first gateway. Because of the synchronization no active network connections are lost during failover.

In another failover scheme referred to as active failover several gateways are also synchronized with each other but all are active at the same time such that the load can be balanced between the gateways. Also in this case because of the synchronization one gateway can take over all connections from another gateway upon failure without losing the network connections.

A problem with the two schemes is scalability because the system cannot be scaled by just adding new gateways. First the bandwidth between the gateways needed for synchronization will increase exponentially with the amount or number of gateways. Second because the state list is kept synchronized the size of the state list and firewall rules for each gateway will also increase linearly when scaling. Because of this the needed bandwidth processing power and memory space of each gateway will increase when adding a new gateway.

Various embodiments are described herein that alleviate the above problems and provide a gateway that can be scaled and managed in an easy and straightforward manner. Some embodiments are summarized in this section.

Embodiments of the present disclosure help protect network devices from unauthorized access. Among other things embodiments of the disclosure allow full access to application servers and other network devices that a client is authorized to access while preventing all access or even knowledge of network devices the client is not authorized to access.

A computer implemented method according to one embodiment of the present disclosure includes upon a request from a client device establishing by a computer system implementing a gateway to a private network a network tunnel between the client device and the gateway and upon establishing the network tunnel starting a separate firewall service with a separate set of firewall rules on the computer system for selectively blocking and allowing network traffic between the client device and one or more network devices in the private network.

The present disclosure includes various methods apparatuses including computer systems that perform such methods and computer readable media containing instructions that when executed by computing systems cause the computing systems to perform such methods.

Other features will be apparent from the accompanying drawings and from the detailed description which follows.

Subject matter will now be described more fully hereinafter with reference to the accompanying drawings which form a part hereof and which show by way of illustration specific example embodiments. Subject matter may however be embodied in a variety of different forms and therefore covered or claimed subject matter is intended to be construed as not being limited to any example embodiments set forth herein example embodiments are provided merely to be illustrative. Likewise a reasonably broad scope for claimed or covered subject matter is intended. Among other things for example subject matter may be embodied as methods devices components or systems. Accordingly embodiments may for example take the form of hardware software firmware or any combination thereof other than software per se . The following detailed description is therefore not intended to be taken in a limiting sense.

In the accompanying drawings some features may be exaggerated to show details of particular components and any size material and similar details shown in the figures are intended to be illustrative and not restrictive . Therefore specific structural and functional details disclosed herein are not to be interpreted as limiting but merely as a representative basis for teaching one skilled in the art to variously employ the disclosed embodiments.

Reference in this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover various features are described which may be exhibited by some embodiments and not by others. Similarly various requirements are described which may be requirements for some embodiments but not other embodiments.

Any combination and or subset of the elements of the methods depicted herein may be combined with each other selectively performed or not performed based on various conditions repeated any desired number of times and practiced in any suitable order and in conjunction with any suitable system device and or process. The methods described and depicted herein can be implemented in any suitable manner such as through software operating on one or more computer systems. The software may comprise computer readable instructions stored in a tangible computer readable medium such as the memory of a computer system and can be executed by one or more processors to perform the methods of various embodiments.

The private network and other components in may utilize any number and type of communication protocols also referred to as the Internet Protocol IP or as the Transmission Control Protocol Internet Protocol TCP IP . For example the private network may have address ranges as set by RFC 1918 for Internet Protocol Version 4 or IPv4 and RFC 4193 for Internet Protocol Version 6 or IPv6.

Networking devices may correspond to application servers that provide services over the network to other computing devices. Any number and type of application servers and associated services may be used in conjunction with embodiments of the present disclosure such as mail servers file servers Customer Relationship Management or CRM services Enterprise Resource Planning or ERP services and or document management services.

A data connection may then be established with any of application servers by opening a communication socket with the respective application server on a port or port range associated with the service. Application servers may correspond to physical devices with a physical networking interface associated with a private network address. Alternatively application servers may also correspond to virtual server instances running on one or more physical servers. Virtual server instances may each have a virtual network interface with an associated private network address. Virtual server instances may include as well as operate in conjunction with one or more user space instances also known as software containers virtual engines virtual private servers and or jails . Such user space instances may be implemented in any suitable manner including for example via the DOCKER software tool.

In the example shown in the private network is separated from an external network by a gateway thereby allowing networking traffic between the external network and the private network in a controlled way. The system of can identify clients as trusted clients having access rights to one or more of the application servers within the private network in order to use the services running thereon. The clients may be or include physical hardware and or virtual components. For example a client may include a virtual operating system running on a physical device such as a mobile device. The system can also grant network access to a selection of the application servers which the clients are allowed to access and deny network access to any application server the clients are not allowed to access.

In order to control access by the clients to the application servers networking tunnels are established between the clients and the gateway . This way the private network is extended to the clients . In some embodiments a virtual private network or VPN is established through tunnels . In this manner a client although not physically in the private network is provided a private network address in the range of the private network and can thus potentially access all application servers by their respective private network address provided access is allowed as is discussed in more detail below .

All initial network connection requests from clients are handled by tunnel module implemented in gateway . In one embodiment tunnel module looks at the initial connection e.g. typically a first TLS packet that is arriving and then determines whether to handover the connection to management module discussed below in the case of metadata or to one of tunnel services discussed below in the case of the actual tunnel traffic i.e. data from the clients. Once the connection is handed over e.g. this can be done by passing over a file descriptor to management module or one of the tunnel service modules tunnel module is not involved anymore. Then the connection goes directly from the client to management module or to the selected tunnel service .

The initial network connection request may be a connection request for establishing a new tunnel by a new client device or a new network connection request within an existing tunnel. The data travelling over the connections in the tunnels may further be protected by encryption such as according to the Internet Protocol Security or IPsec protocol Transport Layer Security or TLS and or Datagram Transport Layer Security or DTLS . In an example the tunnel module operates according to TLS or SSL and sets up the networking connections as TCP network connections. In order to do so the clients send the request to an open port or port range of the gateway preferably the standard port 443 for TLS SSL encrypted TCP connections.

Gateway further implements firewall services . Each respective firewall service then implements a firewall for selectively blocking and allowing network traffic between the respective client device and the network devices in the private network. Each firewall service also comprises a set of firewall rules defining the access rules for a respective client device. In other words gateway runs a separate firewall for each connected client . An advantage of this is that the size of the firewall rules of a firewall service does not grow with the amount of connected clients. This way an increase in connected clients does not result in a performance loss due to an increase in the amount of firewall rules that have to be managed by a single firewall service.

In the next step the management module receives tunnel information from the client device over the first network connection. This information is further referred to as the client tunnel list. This client tunnel list includes information in order to establish the networking tunnel with the gateway such as for example authentication information for authenticating the client with the gateway. After successful authentication by the management module the process proceeds to step .

In step the management module receives a client access list from client . This client access list comprises a listing of the networking devices or applications in the private network that the client device is allowed to access. The listing may for example comprise a network address such as an IPv4 or IPv6 network address identifying the respective networking device in the private network . Also a port number or port number range may be specified in order to limit the access to the respective networking device to one or more specific applications. The listing may also identify the respective networking device by its host name or by a fully qualified domain name FQDN . The listing may also identify the respective networking device indirectly by specifying a further service from where one or more respective networking devices may be received. Such a service may for example be the Amazon Web Services which enables retrieval of a list of network devices using the AWS REST API according to metadata assigned to virtual instances in the Amazon cloud.

The client may further retrieve this client access list and or tunnel list from an authentication service that manages the client access to private network . In order to avoid a situation in which the client compromises the client access list and or tunnel list the lists may be made unalterable i.e. protected such that an alteration of one or both of the lists may be detected by the management module .

Various methods and systems for authenticating the client and providing a client and tunnel list are further disclosed in U.S. Pat. No. 9 148 408 B1 which is hereby incorporated by reference in its entirety.

Then in step the tunnel module establishes a second network connection with the client upon request of the client . As this is a new connection the tunnel module inspects the first data packet received over this second connection. This second connection is used for the actual networking tunnel because the client has already established the first connection for the exchange of control information with the gateway . The inspected data packet is therefore identified as a first packet for the not yet established networking tunnel .

More specifically in one embodiment two connections are required for each tunnel e.g. two TCP connections in the case of a TLS tunnel . One connection is for uploading the tokens metadata and the other connection is for the actual tunnel traffic. The tunnel is only established after step see below and is only allowing traffic after step see below because the firewall is blocked by default.

Thereupon in step the tunnel module passes the second network connection the connection that is responsible for tunnelling the traffic coming from the client to tunnel service . Tunnel services and handle the tunnel traffic . Tunnel services are responsible to decrypt encrypt the traffic coming and going to the respective client . . . implemented on the gateway . The tunnel service then verifies with the management module whether the networking tunnel can be established. In the following step the tunnel service establishes the networking tunnel by starting the firewall service . From this moment on all data exchanged over the second network connection and thus over the networking tunnel passes through firewall service . In other words payload data from the networking tunnel is forwarded to the started firewall service . This firewall service implements a firewall that blocks by default all traffic between the client and private network . In the next step firewall service applies the appropriate firewall rules to the firewall by retrieving the firewall rules from the management module . The management module on its turn derives these firewall rules from the client access list.

More specifically in one embodiment the access rules are basically descriptive firewall rules and the management module fills in some of these descriptions. Some examples are as follows 

By the process according to a network tunnel between the client device and the gateway is thus established together with a separate firewall with a separate set of firewall rules for selectively blocking and allowing network traffic between the client device and the network devices in the private network . This process is performed for every client that connects to the private network thereby obtaining the respective firewall services .

According to a further embodiment the gateway is implemented on a computer system comprising multiple processor cores. Management module tunnel module tunnel service and firewall services and may then be implemented on the computer system by computer executable instructions executed on the processor cores. The gateway then includes a separate tunnel service running on each processor core. This is illustrated by the exemplary embodiment of where tunnel service and firewall services and are implemented on the first processor core and tunnel service and firewall services and are implemented on a second processor core . Tunnel services and may for example be implemented as software processes running on the respective processor cores. The firewall services may be implemented as software threads run by the respective software process i.e. the respective tunnel services .

An advantage of running separate tunnel services on each processor core is that inter process communication between the firewall services and communication between a firewall service and the tunnel service is limited to the same core. As a result when the gateway scales up by adding more processor cores there will be no loss in performance due to increased inter process communication.

Firewall may be a stateful firewall configured to perform stateful packet inspection thereby keeping track of the state of networking connections established over the networking tunnel between client and network devices in private network . Each such connection may relate to TCP or UDP networking connections. This way a finer grained control is possible as the rules become dependent on the network connection and are thus dynamic. The firewall keeps track of all open network connections by maintaining a list the state list with all the pending connections. These states may for example be stored in a file or database residing in memory of the computing system implementing the gateway .

Each firewall service thus maintains a separate state list . An advantage of this is that the size of the state list of the firewall service does not grow with the amount of clients connected to the gateway . This way an increase in connected clients does not result in a performance loss due to an increase in the amount of states that have to be managed by a single firewall service.

Firewall service may further include an encryption and or decryption component for respectively encrypting and decrypting data transmitted to or received from the client . Encryption and decryption may further be performed according to the Internet Protocol Security or IPsec protocol Transport Layer Security or TLS and or Datagram Transport Layer Security or DTLS . Encrypting and decrypting may further be hardware accelerated by a hardware component in the processor core on which the firewall service is running.

By the process of a separate backup can be made of each firewall in the gateway . This has several advantages. First of all this can be done quickly as only a limited set of states need to be transmitted each time. As a result when the system is scaled the time for synchronization of a single firewall service does not increase. Second this allows for a fail over arrangement which is scalable as will be demonstrated below.

After establishment of the networking tunnel firewall service A continuously synchronizes the state list with the client by regularly sending a copy or update of the state list to the client device . For example the state only needs to be synced if the actual state is changed. Thus if the client does not open new connections to the protected servers no state synchronization will occur. Also this synchronization is configurable and can be done for example continuously or at least every 1 5 seconds etc. As long as the networking tunnel is in place the synchronization is active as illustrated by the loop . The synchronization of the state list may further be performed according to the process as illustrated in .

For purposes of exemplary discussion consider that at a certain moment in time the networking tunnel is interrupted. As a result of this interruption the process proceeds to step . The interruption of the networking tunnel may be caused by several factors such as for example by a failure in the networking path between the client and the gateway or by a failure of the gateway itself. When the client detects the failure of the networking tunnel it establishes a new networking tunnel with second gateway which also provides access to private network . This may for example be done by the process as illustrated by by forwarding the tunnel authentication information and client access list to the second gateway .

More specifically in one embodiment the information about all of the available gateways is part of the tunnel lists described above. This information may come from for example a central authentication server controller such as described in U.S. Pat. No. 9 148 408 B1 which was incorporated by reference above. This information is available at the first connection i.e. before the first connection may fail . The central authentication server simply picks another candidate from the tunnel list and establishes the connection. The only source information coming from copy or update is the actual connection state from the firewall service that will be synced once the new tunnel is established.

Upon establishment of the tunnel the firewall service B is started on gateway with identical firewall rules as used in firewall service A because the same access list was used by the management module of gateway to derive the firewall rules.

Upon establishment of the second network tunnel the client also transmits the state list to the gateway under step of the process. In one embodiment the copy or update is the source of state list . The connections were going to tunnel before the failover. During the active connections the state has been continuously synced to client and also updated when the states are updated for firewall service A. When the tunnel is dropped a new tunnel is established and the latest received state is synched to firewall service B.

The state list may for example be forwarded to the management module. The management module checks that the state list was not changed by the client and then provides the state list to the firewall service B that uses it as its state list in order restore the state of the firewall under step . After restoring the state of the firewall the client resumes under step its communication with the private network thereby achieving a continuous fail over i.e. without a loss of the pending network connections established over the initial networking tunnel .

Alternatively the state list may also be sent over the networking tunnel directly to the firewall service B wherein this service will check that the state list was not altered. This checking may be done by using the same shared secret signature key between the gateways. In one embodiment because the firewall states are temporarily stored in memory on the client there is a potential risk of unauthorized tampering with the states. In order to avoid this risk the states are signed with a secret shared key between the gateways. So if the states are tampered with the signature is broken and the states will not be accepted.

The process of has the advantage that no synchronization of firewall rules and states between the gateways and is needed. Therefore the system can be easily scaled by adding a gateway e.g. gateway without bandwidth requirements between the gateways note that there remains no requirements for any bandwidth to be utilized between the gateways . Furthermore upon failure of gateway the networking tunnels can be transferred across the gateways and . For example the firewall service A may be moved to gateway as service B while firewall A is transferred to gateway as service B.

Steps performed according to the above processes may be implemented as computer executable instructions. These instructions may then be executed on processor cores upon performing the processes. This way steps executed by tunnel module management module tunnel services and firewall services may for example be implemented as instructions on computing system thereby implementing gateway . Processor cores may correspond to processor cores of gateway . A tunnel service is then run on each of the processor cores . Each processor core then runs separate firewall services respectively started by one of the tunnel services. Data packet communication between client devices and the gateway may be performed over a networking interface . Also data packets communicated between gateway and private network may be exchanged over a networking interface . The computer executable instructions may form or be part of a computer program product that is stored on storage element or any computer readable storage medium.

Communication among systems devices and components operating in conjunction with embodiments of the present disclosure may be performed using any suitable communication method such as for example a telephone network an extranet an intranet the Internet point of interaction device point of sale device personal digital assistant e.g. iPhone Palm Pilot Blackberry cellular phone kiosk etc. online communications satellite communications off line communications wireless communications transponder communications local area network LAN wide area network WAN virtual private network VPN networked or linked devices keyboard mouse and or any suitable communication or data input modality. Systems and devices of the present disclosure may utilize TCP IP communications protocols as well as IPX Appletalk IP 6 NetBIOS OSI any tunnelling protocol e.g. IPsec SSH or any number of existing or future protocols.

While some embodiments can be implemented in fully functioning computers and computer systems various embodiments are capable of being distributed as a computing product in a variety of forms and are capable of being applied regardless of the particular type of machine or computer readable media used to actually effect the distribution.

A machine readable medium can be used to store software and data which when executed by a data processing system causes the system to perform various methods. The executable software and data may be stored in various places including for example ROM volatile RAM non volatile memory and or cache. Portions of this software and or data may be stored in any one of these storage devices. Further the data and instructions can be obtained from centralized servers or peer to peer networks. Different portions of the data and instructions can be obtained from different centralized servers and or peer to peer networks at different times and in different communication sessions or in a same communication session. The data and instructions can be obtained in entirety prior to the execution of the applications. Alternatively portions of the data and instructions can be obtained dynamically just in time when needed for execution. Thus it is not required that the data and instructions be on a machine readable medium in entirety at a particular instance of time.

Examples of computer readable media include but are not limited to recordable and non recordable type media such as volatile and non volatile memory devices read only memory ROM random access memory RAM flash memory devices floppy and other removable disks magnetic disk storage media optical storage media e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others. The computer readable media may store the instructions.

In various embodiments hardwired circuitry may be used in combination with software instructions to implement the techniques. Thus the techniques are neither limited to any specific combination of hardware circuitry and software nor to any particular source for the instructions executed by the data processing system.

Although some of the drawings illustrate a number of operations in a particular order operations which are not order dependent may be reordered and other operations may be combined or broken out. While some reordering or other groupings are specifically mentioned others will be apparent to those of ordinary skill in the art and so do not present an exhaustive list of alternatives. Moreover it should be recognized that the stages could be implemented in hardware firmware software or any combination thereof.

For the sake of brevity conventional data networking application development and other functional aspects of the systems and components of the individual operating components of the systems may not be described in detail herein. Furthermore the connecting lines shown in the various figures contained herein are intended to represent exemplary functional relationships and or physical couplings between the various elements. It should be noted that many alternative or additional functional relationships or physical connections may be present in a practical system.

The various system components discussed herein may include one or more of the following a host server or other computing systems including a processor for processing digital data a memory coupled to the processor for storing digital data an input digitizer coupled to the processor for inputting digital data an application program stored in the memory and accessible by the processor for directing processing of digital data by the processor a display device coupled to the processor and memory for displaying information derived from digital data processed by the processor and a plurality of databases. Various databases used herein may include shipping data package data and or any data useful in the operation of the system.

Various functionality may be performed via a web browser and or application interfacing utilizing a web browser. Such browser applications may comprise Internet browsing software installed within a computing unit or a system to perform various functions. These computing units or systems may take the form of a computer or set of computers and any type of computing device or systems may be used including laptops notebooks tablets hand held computers personal digital assistants set top boxes workstations computer servers main frame computers mini computers PC servers network sets of computers personal computers and tablet computers such as iPads iMACs and MacBooks kiosks terminals point of sale POS devices and or terminals televisions or any other device capable of receiving data over a network. Various embodiments may utilize Microsoft Internet Explorer Mozilla Firefox Google Chrome Apple Safari Opera or any other of the myriad software packages available for browsing the internet.

Various embodiments may operate in conjunction with any suitable operating system e.g. Windows NT 95 98 2000 CE Mobile Windows 7 8 OS2 UNIX Linux Solaris MacOS PalmOS etc. as well as various conventional support software and drivers typically associated with computers. Various embodiments may include any suitable personal computer network computer workstation personal digital assistant cellular phone smart phone minicomputer mainframe or the like. Embodiments may implement security protocols such as Secure Sockets Layer SSL Transport Layer Security TLS and Secure Shell SSH . Embodiments may implement any desired application layer protocol including http https ftp and sftp.

The various system components may be independently separately or collectively suitably coupled to a network via data links which includes for example a connection to an Internet Service Provider ISP over the local loop as is typically used in connection with standard modem communication cable modem satellite networks ISDN Digital Subscriber Line DSL or various wireless communication methods. It is noted that embodiments of the present disclosure may operate in conjunction with any suitable type of network such as an interactive television ITV network.

The system may be partially or fully implemented using cloud computing. Cloud or Cloud computing includes a model for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be rapidly provisioned and released with minimal management effort or service provider interaction. Cloud computing may include location independent computing whereby shared servers provide resources software and data to computers and other devices on demand.

Various embodiments may be used in conjunction with web services utility computing pervasive and individualized computing security and identity solutions autonomic computing cloud computing commodity computing mobility and wireless solutions open source biometrics grid computing and or mesh computing.

Any databases discussed herein may include relational hierarchical graphical or object oriented structure and or any other database configurations. Moreover the databases may be organized in any suitable manner for example as data tables or lookup tables. Each record may be a single file a series of files a linked series of data fields or any other data structure. Association of certain data may be accomplished through any desired data association technique such as those known or practiced in the art. For example the association may be accomplished either manually or automatically.

Any databases systems devices servers or other components of the system may be located at a single location or at multiple locations wherein each database or system includes any of various suitable security features such as firewalls access codes encryption decryption compression decompression and or the like.

Encryption may be performed by way of any of the techniques now available in the art or which may become available e.g. Twofish RSA El Gamal Schorr signature DSA PGP PKI and symmetric and asymmetric cryptosystems.

Embodiments may connect to the Internet or an intranet using standard dial up cable DSL or any other Internet protocol known in the art. Transactions may pass through a firewall in order to prevent unauthorized access from users of other networks.

The computers discussed herein may provide a suitable website or other Internet based graphical user interface which is accessible by users. For example the Microsoft Internet Information Server IIS Microsoft Transaction Server MTS and Microsoft SQL Server may be used in conjunction with the Microsoft operating system Microsoft NT web server software a Microsoft SQL Server database system and a Microsoft Commerce Server. Additionally components such as Access or Microsoft SQL Server Oracle Sybase Informix MySQL Interbase etc. may be used to provide an Active Data Object ADO compliant database management system. In another example an Apache web server can be used in conjunction with a Linux operating system a MySQL database and the Perl PHP and or Python programming languages.

Any of the communications inputs storage databases or displays discussed herein may be facilitated through a website having web pages. The term web page as it is used herein is not meant to limit the type of documents and applications that might be used to interact with the user. For example a typical website might include in addition to standard HTML documents various forms Java applets JavaScript active server pages ASP common gateway interface scripts CGI extensible markup language XML dynamic HTML cascading style sheets CSS AJAX Asynchronous Javascript And XML helper applications plug ins and the like. A server may include a web service that receives a request from a web server the request including a URL and an IP address. The web server retrieves the appropriate web pages and sends the data or applications for the web pages to the IP address. Web services are applications that are capable of interacting with other applications over a communications means such as the Internet.

Various embodiments may employ any desired number of methods for displaying data within a browser based document. For example data may be represented as standard text or within a fixed list scrollable list drop down list editable text field fixed text field pop up window and the like. Likewise embodiments may utilize any desired number of methods for modifying data in a web page such as for example free text entry using a keyboard selection of menu items check boxes option boxes and the like.

The exemplary systems and methods illustrated herein may be described in terms of functional block components screen shots optional selections and various processing steps. It should be appreciated that such functional blocks may be realized by any number of hardware and or software components configured to perform the specified functions. For example the system may employ various integrated circuit components e.g. memory elements processing elements logic elements look up tables and the like which may carry out a variety of functions under the control of one or more microprocessors or other control devices. Similarly the software elements of the system may be implemented with any programming or scripting language such as C C C Java JavaScript VBScript Macromedia Cold Fusion COBOL Microsoft Active Server Pages assembly PERL PHP AWK Python Visual Basic SQL Stored Procedures PL SQL any UNIX shell script and extensible markup language XML with the various algorithms being implemented with any combination of data structures objects processes routines or other programming elements. Further it should be noted that the system may employ any number of conventional techniques for data transmission signalling data processing network control and the like. Still further the system could be used to detect or prevent security issues with a client side scripting language such as JavaScript VBScript or the like.

The systems and methods of the present disclosure may be embodied as a customization of an existing system an add on product a processing apparatus executing upgraded software a stand alone system a distributed system a method a data processing system a device for data processing and or a computer program product. Accordingly any portion of the system or a module may take the form of a processing apparatus executing code an internet based embodiment an entirely hardware embodiment or an embodiment combining aspects of the internet software and hardware. Furthermore the system may take the form of a computer program product on a computer readable storage medium having computer readable program code means embodied in the storage medium. Any suitable computer readable storage medium may be utilized including hard disks CD ROM optical storage devices magnetic storage devices and or the like.

The system and method is described herein with reference to screen shots block diagrams and flowchart illustrations of methods apparatus e.g. systems and computer program products according to various embodiments. It will be understood that each functional block of the block diagrams and the flowchart illustrations and combinations of functional blocks in the block diagrams and flowchart illustrations respectively can be implemented by computer program instructions.

These computer program instructions may be loaded onto a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions that execute on the computer or other programmable data processing apparatus create means for implementing the functions specified in the flowchart block or blocks. These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.

Accordingly functional blocks of the block diagrams and flowchart illustrations support combinations of means for performing the specified functions combinations of steps for performing the specified functions and program instruction means for performing the specified functions. It will also be understood that each functional block of the block diagrams and flowchart illustrations and combinations of functional blocks in the block diagrams and flowchart illustrations can be implemented by either special purpose hardware based computer systems which perform the specified functions or steps or suitable combinations of special purpose hardware and computer instructions. Further illustrations of the process flows and the descriptions thereof may make reference to user windows webpages websites web forms prompts etc. Practitioners will appreciate that the illustrated steps described herein may comprise in any number of configurations including the use of windows webpages web forms popup windows prompts and the like. It should be further appreciated that the multiple steps as illustrated and described may be combined into single webpages and or windows but have been expanded for the sake of simplicity. In other cases steps illustrated and described as single process steps may be separated into multiple webpages and or windows but have been combined for simplicity.

The term non transitory is to be understood to remove only propagating transitory signals per se from the claim scope and does not relinquish rights to all standard computer readable media that are not only propagating transitory signals per se. Stated another way the meaning of the term non transitory computer readable medium should be construed to exclude only those types of transitory computer readable media which were found in In Re Nuijten to fall outside the scope of patentable subject matter under 35 U.S.C. 101.

Benefits other advantages and solutions to problems have been described herein with regard to specific embodiments. However the benefits advantages solutions to problems and any elements that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as critical required or essential features or elements of the disclosure.

Although the disclosure includes a method it is contemplated that it may be embodied as computer program instructions on a tangible computer readable carrier such as a magnetic or optical memory or a magnetic or optical disk. All structural chemical and functional equivalents to the elements of the above described exemplary embodiments that are known to those of ordinary skill in the art are expressly incorporated herein by reference and are intended to be encompassed by the present claims. Moreover it is not necessary for a device or method to address each and every problem sought to be solved by the present disclosure for it to be encompassed by the present claims. Furthermore no element component or method step in the present disclosure is intended to be dedicated to the public regardless of whether the element component or method step is explicitly recited in the claims. No claim element herein is to be construed under the provisions of 35 U.S.C. 112 sixth paragraph unless the element is expressly recited using the phrase means for. As used herein the terms comprises comprising or any other variation thereof are intended to cover a non exclusive inclusion such that a process method article or apparatus that comprises a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus.

Where a phrase similar to at least one of A B or C at least one of A B and C one or more A B or C or one or more of A B and C is used it is intended that the phrase be interpreted to mean that A alone may be present in an embodiment B alone may be present in an embodiment C alone may be present in an embodiment or that any combination of the elements A B and C may be present in a single embodiment for example A and B A and C B and C or A and B and C.

Changes and modifications may be made to the disclosed embodiments without departing from the scope of the present disclosure. These and other changes or modifications are intended to be included within the scope of the present disclosure as expressed in the following claims.

