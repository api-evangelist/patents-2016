---

title: Adaptive connectivity in network-based collaboration background information
abstract: Various embodiments include at least one of systems, methods, software, and data structures for peer-to-peer exchange of at least a portion of networked collaboration session data. Client and server solutions allow for switching between peer-to-peer and server-centric modes of collaboration data sharing. Some embodiments also allow for sharing of data of a first type via a collaboration server and data of a second type via peer-to-peer connections.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09565249&OS=09565249&RS=09565249
owner: Adobe Systems Incorporated
number: 09565249
owner_city: San Jose
owner_country: US
publication_date: 20160212
---
This application filed on Feb. 12 2016 and entitled Adaptive Connectivity in Network Based Collaboration Background Information is a Continuation of U.S. patent application Ser. No. 12 269 736 filed on Nov. 12 2008 and entitled Adaptive Connectivity in Network Based Collaboration Background Information having issued on Mar. 22 2016 as U.S. Pat. No. 9 294 291 the entirety of which is incorporated by reference herein.

Use of network hosted conferencing such as over the Internet has grown considerably in recent years. Many products on the market allow a presenter to share views and audio over a central server with many conference participants. Some of these products may also be used in a collaborative environment such as between members of a development team. In such instances control of a computer or computer application on one computer may be shared over a network with other users. Such products offer such functionally in a very similar manner through a server that requires a standalone client software application on each computer of each participant. Such client software is tightly coupled to a server that receives data from one client and distributes the data among other participating clients. The client software is typically created and distributed by the developer of the server software to prevent compatibility and security issues between the client and server software.

Various embodiments described herein include one or more of systems methods software and data structures for peer to peer P2P transmitting of data. In some instances certain types of collaboration session data such as audio video data that may originate with a camera and microphone may be transmitted between collaboration session participants in a P2P manner while the remaining collaboration session data are transmitted through the collaboration server. A collaboration server may facilitate P2P sharing of data and may coordinate switching between a traditional server centric Hub and Spoke HaS mode and a P2P mode of sharing various streams of collaboration session data. These and other embodiments are described and illustrated herein.

In the following detailed description reference is made to the accompanying drawings that form a part hereof and in which is shown by way of illustration specific embodiments in which the inventive subject matter may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice them and it is to be understood that other embodiments may be utilized and that structural logical and electrical changes may be made without departing from the scope of the inventive subject matter. Such embodiments of the inventive subject matter may be referred to individually and or collectively herein by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed. The following description is therefore not to be taken in a limited sense and the scope of the inventive subject matter is defined by the appended claims.

The functions or algorithms described herein are implemented in hardware software or a combination of software and hardware in one embodiment. The software comprises computer executable instructions stored on computer readable media such as memory or other types of storage devices. Further described functions may correspond to modules which may be software hardware firmware or any combination thereof. Multiple functions are performed in one or more modules as desired and the embodiments described are merely examples. The software is executed on a digital signal processor application specific integrated circuit ASIC microprocessor or other type of processor operating on a system such as a personal computer server a router or other device capable of processing data including network interconnection devices.

Some embodiments implement the functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules or as portions of an application specific integrated circuit. Thus the exemplary process flow is applicable to software firmware and hardware implementations.

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented modules.

Similarly the methods described herein may be at least partially processor implemented. For example at least some of the operations of a method may be performed by one or processors or processor implemented modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processor or processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

The one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. Application Program Interfaces APIs .

In some embodiments the collaboration services when called or otherwise utilized may consume manipulate create or store data. This data may be stored on the collaboration server on another server not illustrated in a database not illustrated or in another data storage location not illustrated . In some embodiments this data may include data identifying authorized users user or organizational collaboration service subscription and usage information configuration settings and other data that may be consumed manipulated created or stored during operation of one or more of the collaboration services.

The collaboration services on the collaboration server may divide functionality of collaboration applications to allow other applications to leverage collaboration functionality. This provides the potential to develop any number of different kinds of client applications that all rely on the same collaboration services. Accordingly a developer may conveniently add new features to a client leveraging a provided set of collaboration services. For example one embodiment may expose streaming audio video data messaging and presence user identity roles and the like as services that may be leveraged by client applications.

The various embodiments described herein may provide different mechanisms whereby collaboration data may be communicated between clients in a P2P manner bypassing the collaboration server . In some such embodiments the collaboration services of the collaboration server may include a P2P facilitation and monitoring module that receives or otherwise obtains or generates data pertinent to facilitating P2P data sharing among clients . This data may include data regarding each client participating in a collaboration session such as connectivity data current data transmission and reception rates software version data network ports available to the respective clients and other data depending on the particular embodiment. In some other embodiments P2P facilitation may be performed by the clients . For example a software element may be present on the clients that gathers and shares local data pertinent to facilitating P2P data sharing and receives this data from the other clients . The data may initially be shared via the collaboration server but upon making P2P connections the clients may share updates to this data via either the collaboration server or the P2P connections.

In some embodiments the collaboration server may evaluate the data and determine if P2P sharing of one or more data streams of a collaboration session is possible and feasible according to determinable criterion such as bandwidth requirements a number of participants and other criteria. In other embodiments each client may make a local determination if P2P connections by the local client are possible and feasible. P2P sharing may not be possible in some circumstances. For instance if the data being considered for P2P sharing needs software of a particular type or version to communicate in a P2P manner and that software is not present on one of the clients of the collaboration session P2P sharing is not possible. Also if the collaboration session is being recorded by the collaboration server the collaboration session data typically flows to the collaboration server in order to be recorded and P2P sharing would defeat that. Other scenarios where P2P sharing is not possible may occur when P2P sharing requires communication over a network port not available to one or more clients the network is configured to prevent P2P communications a lack of available bandwidth needed for a particular collaboration session or a data stream thereof to be conducted in a P2P manner and other factors that may prevent one or more clients from P2P communications. Thus the P2P possibility and feasibility determinations may be made by one or more of the clients the collaboration server or by both clients and the collaboration server .

The term feasible is used herein to describe factors that may make P2P communication undesirable even if possible. For example P2P communication between three clients collaboration session participants may be feasible. However P2P communication between four or more collaboration session participants may not be desirable although possible due to the large amount of network bandwidth that would be consumed by four participant P2P communications. There may be many factors that may be considered alone or in combination to determine feasibility. These factors may be specified within one or more services of the collaboration server on a client or as configuration settings on either.

In one scenario two or more clients may connect over the network to a collaboration session hosted by the collaboration server . Each client participant will evaluate various properties of the connection to the collaboration session and report those properties to the collaboration server . The collaboration server may then determine if one or more data streams of the collaboration session may be transitioned to P2P communication between the client participants. If possible and feasible the service of the collaboration server may send a command instructing the client participants to transition one or more data streams such as an audio video data stream to P2P between the participants. The command may include connectivity information needed by each client participant to connect to the other client collaboration session participants over the network .

In another scenario two or more clients may connect over the network to a collaboration session hosted by the collaboration server . The clients may obtain P2P connectivity data needed to establish P2P connections with the other clients from the collaboration server . Each client participant will evaluate various properties of the connection to the collaboration session and properties of the collaboration session such as one or more of the number of participants bandwidth usage types of data being shared and other properties. Each client determines if it is possible for the particular client to conduct at least a portion of the collaboration session via P2P connections. Data representative of the client determinations may then be shared via one or both of the collaboration server and P2P connections that are established or previously existing. If a client determines that P2P sharing is possible and feasible the client may then attempt to establish such connections. If all of the clients successfully establish P2P connections with the other clients some or all collaboration session data may then be shared via the P2P connections. Data not shared via the P2P connections may continue to be shared via the collaboration server .

Other streams of collaboration session data may continue to flow through the collaboration server such as a shared desktop view and shared whiteboard data. The collaboration server may continue to monitor the collaboration session that includes the P2P communication and reevaluate whether P2P communication should continue. If the P2P communication should not continue such as if the communication becomes no longer possible or unfeasible or if the collaboration session is later designated for recording a service of the collaboration server may send a command to each of the client participants to resume all communications via the collaboration server .

Although the illustration of includes three clients other numbers of clients may be connected to the network and to a particular collaboration session. For example a collaboration session may be between two or more client participants. Further some embodiments may include a cloud of servers dedicated to provisioning of collaboration services which may host collaboration rooms or sessions of virtually any client.

Further any number of variations and types of client applications may be specifically built and embedded within other applications such as a graphics editing application a page description language view application a word processing application and other typical standalone application types. Some embodiments may also include leveraging of collaboration services by websites allowing collaboration between team members communication between a customer and merchant buyer and seller teacher and student friends and family and others through off the shelf applications custom applications websites and the like.

The one or more collaboration services such as web services may be utilized by client collaboration applications. The one or more collaboration services may be provided by service modules that typically receive data from a first client collaboration application through a web service call and broadcast the received data to other client collaboration applications participating in a collaboration session such as by joining a collaboration room. 

The collaboration server typically provides several collaboration services . These one or more collaboration services may be objects programs application programming interfaces or other units of software. In some embodiments each service is embodied in a single module. In other embodiments multiple services are embodied in a single module. Combinations of services within modules may be made based on a class of functionality such as by the type of data communicated through the module the type of communication such as inbound or outbound or in virtually any other manner. However in other embodiments a single service module may include a single service that is entirely data and application agnostic. Thus the services described below may be provided in a single module a few modules or many modules. The name given to the particular service in the following description is given merely to describe the type of functionality the particular service is provided for and is not intended to limit modules within which services may be included.

The services may include client side modules to implement functionality such as a P2P module roster chat polling notes screen sharing web cam or other streaming video shared white board file transfer audio and visual general data transfer gesture tool such as a pointing device or cursor user interface controls administration and others depending on the embodiment. In some embodiments the services may be called by client applications to implement the functionality of the client service modules on the client. In such embodiments the client service modules include client side logic to handle data that may be communicated via the one or more collaboration services .

A roster service in some embodiments includes one or more services to identify collaboration session participants and present participant information in a roster type control on one or more client collaboration applications connected to a collaboration session. The roster services may identify and implement roles of one or more collaboration session participants such as organizer presenter administer participant and the like.

Administration services may be used to create or schedule a collaboration session authorize participants of a collaboration session modify or create participant roles and permissions declare a collaboration session as closed to a finite number of participants certain participants or publicly available.

Chat services typically enable text based chat between collaboration session participants. In some embodiments the chat services may allow a participant to send a chat message to less than all of the other participants if desired. In some embodiments based on a permissions of a certain role as declared via the administration service messages of a particular participant may be blocked from transmission to other participants such as in the event the blocked participant is abusing the chat functionality. Chat messages may also be sent to an administrator for approval prior to communication to other collaboration session participants.

A polling service typically allows one participant to set up a poll for other participants to answer. A note service typically allows transmission of a note to one or more other participants. This may include a text block placed as a control on a certain portion of a shared screen view. A screen share service typically allows a screen view of one client application to be shared with other participants. The screen share services may also allow sharing control of the screen such as allowing one or more other participants to provide input via a keyboard and pointing device.

A web cam service may allow sharing of streaming video between collaboration session participants. In some embodiments use of the web cam service may be configured through services of one or more of the administration and web cam services to limit the number of shared video streams or allow only a presenter s video stream to be displayed. A shared video stream may also include audio.

A white board service typically provides functionality to clients to receive and share whiteboard type input. Whiteboard type input typically includes drawings made within a virtual whiteboard. As with the streaming video services described above use of the whiteboard services may be limited to only a presenter and or other roles.

A file transfer service typically allows one collaboration session participant to upload a file and transfer the file to all or a select number of other participants. An audio visual service provides for exchanging audio video and combined audio and video such as in streams between collaboration session participants.

However as mentioned above some embodiments include a data agnostic collaboration service that may be called to share collaboration data of virtually any type so long as the service call is properly made. The service call may be properly made in some embodiments simply by identifying the proper collaboration session and a sender of the service call. The payload data of the data agnostic collaboration service call is not of concern and is simply relayed to the other collaboration session participants.

The P2P facilitation and monitoring module monitors collaboration session performance and polls client participants for data to determine if P2P sharing of collaboration session data is possible and feasible. The P2P facilitation and monitoring module is also able to generate and transmit commands to collaboration session participants to initiate and terminate T2P share of collaboration session data.

For example the P2P facilitation and monitoring module may maintain or have access to data identifying collaboration session participants and data needed by the various participant clients to connect to the other participant clients. The P2P facilitation and monitoring module may further aggregate data into a table such as is illustrated in along with data received from client collaboration session participants. The data in the table of includes a row of data for each collaboration session participant. The data in each row includes a collaboration session identifier and a version number of a P2P client application or application plug in. The data in each row further includes data received from a client collaboration session participant such as from an application or application plug in enabled to communicate with the collaboration server over a network. The data in each row may include a version number of a P2P client an indicator if the client is configured for P2P communications and data indicating ports that are either available for or restricted from use in P2P communication. The data in each row may further include data indicative of a data upload rate and a data download rate as determined by the client the server or a combination thereof. Each row of data may also include connectivity data such as an IP address or other data as needed to establish a P2P connection with a respective client. The data included in the table of is just one example and the data may vary depending on the particular details of an embodiment.

In one embodiment the P2P facilitation and monitoring module upon receipt of data from each collaboration session participant client may evaluate the data and determine that P2P sharing of an audio video stream of collaboration data may be exchanged in a P2P manner. The P2P facilitation and monitoring module will send a message to each client indicating that such data stream will now be communicated via P2P connections. The message will also include connectivity data for each of the other participants. Upon establishing the P2P connections the participant clients will send all further data of the audio video stream via the P2P connections. The switching from server centric sharing of the audio video collaboration data to P2P sharing is performed without human user intervention.

In some embodiments the P2P facilitation and monitoring module may also or alternatively be included within client participant software. In such embodiments the client participant P2P facilitation and monitoring modules may perform the same functionality but based on client specific factors. The client participant P2P facilitation and monitoring modules may also include a table of aggregated P2P connectivity data such as the table of . The data of this table may be received from one or both clients over P2P connections or from the collaboration server and populated into the table. The data in this table may be included in client determinations as to possibility and feasibility of P2P connectivity.

Computer readable instructions stored on a computer readable medium are executable by the processing unit of the computer . A hard drive CD ROM and RAM are some examples of articles including a computer readable medium. For example a computer program capable of providing the various collaboration services of a collaboration server as described above may be encoded on a computer readable medium. A further example of a computer program is a web browser and a web browser plug in such as a FLASH PLAYER plug in available from ADOBE SYSTEMS INCORPORATED of San Jose Calif. that is enabled with P2P functionality e.g. FLASH PLAYER version 10.0 . The computer program such as the plug in may include an application programming interface API that provides an interface to P2P connectivity and communication services for implementing one or more of the embodiments described herein.

In some embodiments the evaluated P2P Connectivity factors include at least one of a download network connection rate an upload connection rate a version of a software application plug in and availability of network communication ports for sending and receiving data over the network. The evaluating of P2P connectivity factors to obtain the factor data and transmitting the factor data over the network to the collaboration server may be performed at periodic intervals while connected to the collaboration server hosted collaboration session. Receiving further P2P connectivity data may include receiving data instructing a switch from exchanging the portion of collaboration session data designated for exchange via the P2P connection to exchanging all data via the collaboration server.

Connecting to the collaboration server hosted collaboration session may include downloading an instruction set executable on a local computing device. The instruction set in such embodiments may include instructions to perform the transmitting receiving establishing and participating . Participating in the collaboration session may include displaying a representation of received collaboration data intended for display. Participating may also include capturing input received on a computing device performing the method and transmitting the captured input to collaboration session participants via one of the collaboration server or one or more P2P connections.

In some embodiments evaluating the collaboration session connection status data to determine if P2P connections between the participants are possible and feasible includes evaluating alone or in combination collaboration session connection status data received from each participant. The collaboration session connection status data may include status data representative of a number of P2P connections each participant has established upload and download rates of each participant available network communication ports of each participant and a version of a software element used by each participant to participate in the collaboration session.

The method may further include receiving a command from a participant to record the collaboration session. In such instances all collaboration data may flow through a collaboration server such as a collaboration server performing the method . The method may then transmit a P2P connection termination message to each participant directing the participants to terminate the P2P connections and to exchange all collaboration data via a collaboration server performing the computer implemented method . The collaboration session may then be recorded.

In the foregoing Detailed Description various features are grouped together in a single embodiment to streamline the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments of the inventive subject matter require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

It will be readily understood to those skilled in the art that various other changes in the details material and arrangements of the parts and method stages which have been described and illustrated in order to explain the nature of the inventive subject matter may be made without departing from the principles and scope of the inventive subject matter as expressed in the subjoined claims.

Also in the foregoing detailed description numerous specific details are set forth to provide a thorough understanding of claimed subject matter. However it will be understood by those skilled in the art that claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.

Some portions of the foregoing detailed description are presented in terms of algorithms or symbolic representations of operations on data bits or binary digital signals stored within a computing system memory such as a computer memory. These algorithmic descriptions or representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. An algorithm is here and generally is considered to be a self consistent sequence of operations or similar processing leading to a desired result. In this context operations or processing involve physical manipulation of physical quantities. Typically although not necessarily such quantities may take the form of electrical or magnetic signals capable of being stored transferred combined compared or otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to such signals as bits data values elements symbols characters terms numbers numerals or the like. It should be understood however that all of these and similar terms are to be associated with appropriate physical quantities and are merely convenient labels. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining or the like refer to actions or processes of a computing platform such as a computer or a similar electronic computing device that manipulates or transforms data represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the computing platform.

