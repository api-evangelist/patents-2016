---

title: Disaster recovery as a dynamic service
abstract: A system, method and program product that provides a disaster recovery (DR) brokerage infrastructure. A system is described that includes: a network of intermediate storage nodes and peering points; and a brokerage manager that periodically evaluates a set of DR as a service (DRaaS) providers and selects a cost optimal DRaaS provider for a subscriber, wherein the brokerage manager replicates DR related data for the subscriber in an intermediate storage node prior to delivery to the cost optimal DRaaS provider.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09430337&OS=09430337&RS=09430337
owner: International Business Machines Corporation
number: 09430337
owner_city: Armonk
owner_country: US
publication_date: 20160107
---
The subject matter of this invention relates to disaster recovery and more particularly to a system and method of providing disaster recovery as a dynamic service on a network infrastructure such as the cloud.

Disaster recovery DR is a process by which critical aspects of an entity s information technology IT environment is replicated at a remote site. In the event of a failure a failover procedure takes place that switches IT operations to the remote site to provide operational continuity. Depending on the nature of the operations being performed by the entity different levels of disaster recovery may be appropriate. For example critical operations may need to be up and running very quickly while less critical functions can wait.

Two key metrics for measuring recovery plan requirements include recovery point objective RPO and recovery time objective RTO . RPO is the maximum period in which data might be lost due to an interruption while RTO is the time and service level within which a business process must be restored. A cost benefit analysis is typically used to determine the aggressiveness of a recovery plan. For example a business may seek an RPO of 30 minutes and an RTO of 72 hours.

Various network or cloud based DR services are currently available to meet the particular DR requirements of a given entity. However current DR services are essentially static in nature. In other words once a DR vendor and plan are selected there is little or no flexibility to easily change vendors or modify the plan without a significant investment of time and resources. Accordingly there is no simple mechanism for customers to manage DR costs easily change RPO RTO targets or switch vendors.

The present disclosure provides a DR service infrastructure in which a brokerage manager dynamically evaluates selects and changes DR as a service DRaaS providers based on a best fit approach. In this manner DR is rendered into a modular open and redundant platform that loosely couples providers and subscribers. And importantly the physical distance between the subscriber and the DRaaS provider is no longer a restriction for quality of service QoS thereby drastically opening up the DR marketplace for subscribers.

The total cost of ownership TCO for DR subscribers is optimized because DR service is transformed into a DR marketplace. The efficiency of the DR marketplace is increased because a subscriber need not be locked into a particular provider. Moreover benefits of enhanced utilization accrue because the network backbone of the brokerage manager can be shared across subscribers. Further because the brokerage fabric is open advanced services such as DR prediction can be readily integrated.

A first aspect provides a disaster recovery DR brokerage infrastructure comprising a system that provides access to a network of intermediate storage nodes and peering points and a brokerage manager that periodically evaluates a set of DR as a service DRaaS providers and selects a cost optimal DRaaS provider for a subscriber wherein the brokerage manager replicates DR related data for the subscriber in a selected intermediate storage node prior to delivery to the cost optimal DRaaS provider.

A second aspect provides a computer program product stored on computer readable storage medium which when executed by a computer system provides a disaster recovery DR brokerage infrastructure comprising programming instructions for managing a network of intermediate storage nodes and peering points programming instructions that periodically evaluate a set of DR as a service DRaaS providers and selects a cost optimal DRaaS provider for a subscriber and programming instructions that manage replication of DR related data for the subscriber in a selected intermediate storage node prior to delivery to the cost optimal DRaaS provider.

A third aspect provides a method of implementing a disaster recovery DR brokerage infrastructure comprising providing access to a network of intermediate storage nodes and peering points periodically evaluating a set of DR as a service DRaaS providers and selecting a cost optimal DRaaS provider for a subscriber and replicating DR related data for the subscriber in a selected intermediate storage node prior to delivery to the cost optimal DRaaS provider.

The drawings are not necessarily to scale. The drawings are merely schematic representations not intended to portray specific parameters of the invention. The drawings are intended to depict only typical embodiments of the invention and therefore should not be considered as limiting the scope of the invention. In the drawings like numbering represents like elements.

Referring now to the drawings depicts a DR brokerage service infrastructure that dynamically links subscribers to DR as a service DRaaS providers . As described in this illustrative embodiment a brokerage manager dynamically evaluates selects and changes DRaaS providers for a subscriber based on the most cost optimal solution. For the purposes of this disclosure the phrase cost optimal may be determined based on any assessment e.g. financial impact time quality prior relationships etc. Accordingly rather than contracting directly with a DRaaS provider the subscriber contracts with the DR brokerage service infrastructure which in turn periodically evaluates available DRaaS providers and selects a best fit.

DR brokerage service infrastructure generally includes a network of peering points and intermediate storage nodes ISNs . Peering points provide access points through which subscribers and DRaaS providers can connect to infrastructure based on geographic proximity. Peering points also may act as switches for relaying data throughout the network. ISNs provide storage systems in which DR related data from a subscriber is temporarily replicated before being loaded to a selected DRaaS provider . DR related data generally includes information technology IT data and information from the subscriber necessary to implement a DR failover in the event that the subscriber s primary IT system fails.

Brokerage manager generally includes 1 a replication orchestrator for selecting an ISN for the subscriber and scheduling replication of the DR related data therein 2 a candidate selection system that periodically evaluates the set of DRaaS providers and selects the most cost optimal DRaaS provider 3 a switchover manager that manages a process of switching to a new DRaaS provider for the subscriber and 4 a failover manager that triggers failover procedures for the subscriber to the selected DRaaS provider in the event of an IT failure. Brokerage manager may also include an external information manager for receiving external cues to assist in failover decision making.

Accordingly DR brokerage service infrastructure provides a network of peering points that carry DR traffic. The ISNs provide storage systems for replicating DR related data from the subscriber s primary storage either as full replicas or incremental changes. Once DR related data is replicated to an ISN it is then further replicated to the selected DRaaS provider . By providing peering points near the subscriber the subscriber need not have close proximity to the DRaaS provider to meet RPO requirements. Furthermore in situations where both the peering point and selected ISN e.g. ISN are geographically proximate the subscriber synch replication of the primary storage may be implemented.

Selection of the ISN may be done in any manner. In one illustrative embodiment the ISN is selected based on the RPO requirements of the subscriber . In the current approach improved RPO is achieved by coupling the feasible modes of data replication to the distance between the subscriber and the nearest peering point rather than to the distance between the subscriber and the DR failover site i.e. DRaaS . Once selected the replication orchestrator schedules replication of the data into the selected ISN based on the subscriber requirements.

Candidate selection system evaluates and identifies feasible DRaaS providers based on the constraints of the subscriber s workload and then chooses a DRaaS provider who is the most cost optimal for the subscriber . DRaaS providers may be evaluated periodically for potential switching e.g. based on a predetermined time period based on a triggering event such as a user request based on workload requirements etc. A switchover is scheduled from the current DRaaS provider to a new DRaaS provider if a more cost optimal solution is available.

Once a decision has been made and scheduled to switch from one DRaaS provider to another switchover manager operationalizes the process. Timing of the switch may be based on cost variables such as contractual penalties. Switchover manager ensures the continuous uninterrupted offloading of DR related data from the subscriber to the ISN and then to the new selected DRaaS provider . Data migration implemented by the switchover manager may be outsourced to a third party e.g. when there is a need to switch between DR sites supporting disparate hypervisors or image formats.

The failover manager is responsible for implementing actual failover procedures in the event of an IT failure for a subscriber . Failover manager is also responsible for orchestrating subsequent failback procedures to the subscribers system once the failure has been resolved. The candidate selection system switchover manager and failover manager are threaded asynchronously.

The failover manager may base failover decisions from cues received from the external information manager . Illustrative cues may include information about impending disasters social media information financial crisis information etc. Furthermore additional Application Programming Interfaces APIs may be provided that subscribers and DRaaS providers can use for programmatic control and which third party vendors can leverage to provide value added services.

In a first thread at S failover manager determines determines if an IT failure has occurred or might potentially occur . If an IT failure occurred failover and failback procedures are implemented with the DRaaS provider for the subscriber .

In a second thread candidate DRaaS providers are re evaluated to determine which can provide the optimal solution at S and at S a periodic determination is made whether a switch is warranted. If so a switchover process is implemented at S and replication of data with the newly selected DRaaS provider at S.

In the case where subscribers have more relaxed RTO requirements the following may be implemented. Firstly the ISN may include a primary storage pool to ingest incremental data being replicated from various subscribers . The replicated data can then be offloaded to a secondary storage pool loosely coupled to the DR brokerage service infrastructure but spatially proximate the selected DRaaS provider . In this approach the switchover manager does not provide the storage replication as part of the DR plan for the selected DRaaS provider . Instead the failover manager migrates data from the secondary storage pool to the selected DRaaS provider when a failover is triggered.

It is understood that although this disclosure includes a detailed description that may be utilized to provide cloud based computing services implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based e mail . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes. Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as Private Community Public or Hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Referring now to a set of functional abstraction layers provided by cloud computing environment is shown. It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted the following layers and corresponding functions are provided Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes RISC Reduced Instruction Set Computer architecture based servers servers blade servers storage devices and networks and networking components . In some embodiments software components include network application server software and database software .

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients . In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and Pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators.

Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provide pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA. Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and in this case DRaaS.

Referring again to it is understood that brokerage manager may be implemented as a computer program product stored on a computer readable storage medium. The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Java Python Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

Furthermore it is understood that the brokerage manager or relevant components thereof such as an API component agents etc. may also be automatically or semi automatically deployed into a computer system by sending the components to a central server or a group of central servers. The components are then downloaded into a target computer that will execute the components. The components are then either detached to a directory or loaded into a directory that executes a program that detaches the components into a directory. Another alternative is to send the components directly to a directory on a client computer hard drive. When there are proxy servers the process will select the proxy server code determine on which computers to place the proxy servers code transmit the proxy server code then install the proxy server code on the proxy computer. The components will be transmitted to the proxy server and then it will be stored on the proxy server.

The foregoing description of various aspects of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and obviously many modifications and variations are possible. Such modifications and variations that may be apparent to an individual in the art are included within the scope of the invention as defined by the accompanying claims.

