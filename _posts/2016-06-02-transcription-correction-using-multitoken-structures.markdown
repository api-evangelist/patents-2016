---

title: Transcription correction using multi-token structures
abstract: Examples of the present disclosure describe generation of a multi-arc confusion network to improve, for example, an ability to return alternatives to output generated. A confusion network comprising token representations of lexicalized hypotheses and normalized hypotheses is generated. Each arc of the confusion network represents a token of a lexicalized hypothesis or a normalized hypothesis. The confusion network is transformed into a multi-arc confusion network, wherein the transforming comprising realigning at least one token of the confusion network to span multiple arcs of the confusion network. Other examples are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09460081&OS=09460081&RS=09460081
owner: Microsoft Technology Licensing, LLC
number: 09460081
owner_city: Redmond
owner_country: US
publication_date: 20160602
---
This application is a continuation application of U.S. patent application Ser. No. 14 606 706 now U.S. Pat. No. 9 384 188 entitled TRANSCRIPTION CORRECTION USING MULTI TOKEN STRUCTURES filed on Jan. 27 2015 the entire disclosure of which is hereby incorporated herein by reference.

Advances in automated speech recognition ASR has led to increasing interest in spoken language understanding SLU . A challenge in large vocabulary spoken language understanding is robustness to compensate for ASR errors. Speech recognition is not perfect and every user understands that occasional recognition mistakes are a fact of life. From a user s perspective easiness of correction of recognition mistakes has a substantial impact on an overall experience of a user when speech recognition applications or programs are used. It is with respect to this general technical environment that the present application is directed.

Examples of the present disclosure describe generation of a multi arc confusion network to improve for example an ability to return alternatives to output generated. A confusion network comprising token representations of lexicalized hypotheses and normalized hypotheses is generated. Each arc of the confusion network represents a token of a lexicalized hypothesis or a normalized hypothesis. The confusion network is transformed into a multi arc confusion network wherein the transforming comprising realigning at least one token of the confusion network to span multiple arcs of the confusion network. Other examples are also described.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Additional aspects features and or advantages of examples will be set forth in part in the description which follows and in part will be apparent from the description or may be learned by practice of the disclosure.

Approaches to correct speech recognition mistakes may use word confusion networks that can offer alternatives for some words once the user indicates that that a hypothesis e.g. result provided to the user was not the result the user intended. However commonly a word confusion network WCN does not address the issue of alternatives or corrections spanning several words or nodes of a WCN. An additional challenge comes from the fact that speech recognition happens at the lexical level and thus WCNs are produced at a lexical level where text presented to a user contains tokens that are the result of text normalization on lexical outputs. Accordingly common WCNs may struggle with handling corrections in the presence of altering words associated with a spoken utterance.

Examples of the present disclosure describe generation of a multi arc token level confusion network representing hypotheses of recognition results for a spoken utterance to improve an ability to return alternatives to a user for token representations presented to the user. The generated multi arc confusion network comprises token representations resulting from normalization of lexicalized hypotheses. Additionally the generated multi arc token level confusion network is a weighted token level confusion network with arcs spanning multiples nodes to improve processing in returning alternatives to the user.

For example when results are returned to a user in response to a spoken utterance the user may indicate that the output presented is not what the user was looking for or the user may simply request an alternative to an element or token presented in an output. Weighted token level multi arc confusion networks of the present application are usable to accurately and efficiently return alternatives to the user as it makes obvious alternatives that are available for any selected identified node span. A number of technical advantages are achieved based on the present disclosure including increased efficiency and accuracy in speech recognition processing increased efficiency and accuracy in processing of alternatives for a user reduced processing load for follow up queries from user increased processing speed reduction in error rate for speech recognition and improved user interaction performance among the other plurality of technical advantages.

As one example the system includes components such as a speech recognition component a normalization component a confusion network creation component and a knowledge store each having one or more additional components. The scale of systems such as system may vary and include more or less components than those described in . Interfacing between components of the system occurs through a network connecting components of a system and or resources external to a system. In one example components of system exist locally on a device such as a mobile device. In at least one other example components of the system may be connected through a distributed environment such as a cloud computing environment.

Components of exemplary systems interface with an OS of a processing device to allow input understanding and processing including a user interface UI for entering an input and receiving a response. For example system may receive input from a client e.g. user or service . Components of the exemplary system are used to capture and process input and generate and or update a token confusion network e.g. to create a multi arc token confusion network . As an example system may operate as an intelligent personal assistant. An intelligent personal assistant is a mobile software agent that can perform tasks or services for an individual based on user input location awareness and the ability to access information from a variety of online sources. Examples of intelligent personal assistants that the system may operate with include but are not limited to SILVIA S Voice Voice Mate Google Now Cortana Hidi and Siri among other examples.

Exemplary system comprises a speech recognition component that is used to capture process and transcribe a captured input. As an example the speech recognition component is able to process spoken queries into text. Examples of the speech recognition component include but are not limited to an automatic speech recognition ASR computer speech recognition or speech to text STT among other examples. The speech recognition components may interface with an OS of a processing device to provide a user interface for a user to enter input. The speech recognition component runs speech recognition on a captured input. Speech recognition processing transcribes a received input for example a speech input into a lexical recognition result or hypothesis by analyzing an electrical signal e.g. speech signal and generating one or more n best results. The speech recognition component may utilize the knowledge store when analyzing a captured signal to improve robustness of speech recognition processing to generate the lexical recognition results. Lexicalized models are applied to an input signal so that the speech recognition component generates lexicalized results hypotheses. For instance the speech recognition component may transform a captured input signal into a sequence of one or more elements. An element is a unit associated with vocabulary such as a letter symbol character word etc. An example of a lexicalized recognition result is find the closest seven eleven store. In addition to transforming a signal into a lexicalized result the speech recognition component assigns a score or weight to one or more elements of a lexicalized result. As an example a score may be associated with an acoustic score for a lexicalized element where the score assesses a probability that the speech signal represents this lexicalized element or with a language model score that assesses a probability that one lexicalized element follows other lexicalized elements. Using the above lexical result a score may be assigned to one or more elements of find the closest seven eleven store where the speech recognition component assesses the probability that it accurately interpreted the lexical result. In the case of n best recognition results each of the results are provided with a separate score derived from the scores of the lexicalized elements it contains.

The speech component also interfaces directly with the confusion network creation component for output of generated confusion networks and multi arc confusion networks. In a first processing operation a confusion network or multi arc confusion network is generated. In another processing operation an input is received where a user requests an alternative for a token of a result returned to a user. In that example system processes the request from the user and identifies e.g. using the speech recognition component that a user would like an alternative representation of one or more tokens identified by the user. System outputs alternatives to the user based on evaluation of the multi arc confusion network. Thus a request for alternatives can be provided directly to the confusion network creation component to identify and output alternatives to a system user. In other examples output of alternative is triggered by a decision of system rather than a request for alternatives from a user.

Additionally the speech recognition component interfaces with one or more knowledge components such as knowledge store . Knowledge store is a resource that increases an amount of information that an exemplary system possesses such as system so that it can make more informed decisions at a given point in time. Knowledge store stores any structured and unstructured information that is usable by components of system such as the speech recognition component the normalization component and the confusion network creation component to enhance execution of processing. An example of information stored by the knowledge store is knowledge data being any data that enhances robustness of an exemplary system or is able to be applied to improve processing by a component of an exemplary system. Examples of knowledge data stored by knowledge store include but are not limited to definitions information for input understanding and transcription lexical and grapho phonetical information rules name data historical data including data from previous queries interrelationships between components of systems restrictions e.g. formal stated descriptions of truth for evaluating data classes e.g. collections concepts programming types attribute data e.g. properties features characteristics parameters axioms modeling data including language models adapted language models normalization models token level modeling statistical data event and functional term information usage patterns word associations contextual information among other examples. The knowledge store may also communicate with components or resources outside of exemplary systems in order to gather or collect information relevant to performing processing and making a best possible decision as to how systems such as system may respond to an input or a request for alternative output. As examples the knowledge store may be linked to network resources over the Internet for example search engines e.g. Bing Google Search Yahoo Search Ask WebCrawler Dogpile etc. .

A normalization component interfaces with the speech recognition component to generate normalized results for each lexicalized result generated by the speech recognition component . The normalization component performs text normalization e.g. inverse text normalization ITN to a lexicalized result transforming the text of a lexicalized result into a canonical form that a person would write or express e.g. a readable representation . As an example a readable representation of an input of seven eleven is 7 11. The normalization component converts each of the n best recognition alternatives from lexicalized level to token level. Each normalized result hypotheses comprises one or more tokens. A token is a unit of communication that is a result of normalization of a lexical element expressing how an output would be presented to a user e.g. word or alpha numeric expression .

In some examples the normalization component identifies that a lexicalized result hypothesis does not require changing. In that case normalization of a lexicalized result keeps a same lexical representation of a hypothesis as was created by the speech recognition component . That is elements of lexicalized results are the tokens for generation of a confusion network. In the example where a hypothesis result is find the closest seven eleven store one token may be generated for each element of the lexicalized hypothesis totaling six words. This creates a token representation of a lexicalized hypothesis result. In another example normalization processing may generate pseudo word tokens to include in a token representation. For example a token of 7 11 is generated as an alternative to tokens representing the words seven and eleven. In general each lexicalized result can give rise to one or more alternative normalized results.

The normalization component is configured to interface with the knowledge store to improve normalization and scoring associated with normalization by accessing resources such as knowledge data of the knowledge store . In one example the text normalization component provides each normalized result with its own score and combines that score with a score for the lexicalized result from which the normalized result was formed to generate a final score for a normalized result. As an example a score generated for one or more tokens created by the normalization is a probability that an alternative token representation is an accurate estimation of a received input. In alternative examples normalized results or hypotheses can be assigned new scores based on application of a normalization model e.g. large scale normalization language model such as BingLM or GoogleLM . As an example a robust normalization model is combined with an acoustic score of a lexicalized result to generate a score for one or more tokens of a normalized hypothesis.

A confusion network creation component interfaces with the normalization component to receive data associated with normalized results for generation of token level confusion networks. The confusion network creation component takes recognition results that have been normalized aligns the recognition results and creates a token level confusion network. The confusion network creation component generates a token level confusion network for the normalized results. The confusion network is a sequence of ordered nodes where each pair of consecutive nodes is connected by at least one arc and the sum of probabilities of all arcs leaving one nodes sums up to one 1 or alternatively is associated with a percentage that adds up to one hundred. Each arc of the confusion network is associated with a label for a token of a normalized result and a weight probability score . In forming the token level confusion network scores for hypotheses are propagated to individual arcs of the confusion network.

Knowledge store interfaces with the confusion network creation component to improve robustness for alignment of results and generation of confusion networks where the confusion network creation component has access to resources such as knowledge data of the knowledge store . The confusion network creation component may align normalized hypotheses results based on analyzing similarities in parameters associated with one or more tokens of a normalized result. In some examples alignment of normalized hypotheses results is executed using dynamic programming. In one example exhaustive dynamic programming is used to align the normalized hypotheses results. In other examples dynamic programming algorithms used are tailored for practical application of multiple sequence alignment e.g. exact Multiple Sequence Alignment algorithm star alignment algorithm Carrillo Lipman algorithm etc. .

In some examples the confusion network creation component modifies the created token confusion network for example into a multi arc token confusion network. In examples the confusion network creation component re aligns tokens of generated confusion network to transform a token level confusion network into a multi arc token level confusion network. As an example the confusion network creation component re aligns token representations of a normalized result based on a comparison of time information and grapho phonetical information associated with a representation e.g. token or tokens of a normalized result. Grapho phonetical information used is any information indicating a relationship between written symbols letters and sounds associated with such symbols letters. Examples of grapho phonetical information include but are not limited to spelling e.g. a spelling for though is similar to tough pronunciation e.g. tough is pronounced similar to puff and arrangement or sequence of letters in comparison with other tokens among other examples. Although examples of time and grapho phonetical factors are described one skilled in the art will recognize that other parameters of elements or tokens of results can be used to perform alignment of lexicalized results and normalized results including discriminative or generative modeling.

The confusion network creation component transforms the generated confusion network into a multi arc confusion network where nodes remain as aligned before in the confusion network but the starting ending points of individual arcs can be migrated to different nodes searching for the closest one in terms of time information. A traditional confusion network encodes possibilities for one to one corrections e.g. an input of nine is represented as a token 9 however many to many corrections e.g. a token 928 as an alternative to individual elements of 9 20 8 are still non trivial. Thus a confusion network is improved by transforming the confusion network into a multi arc confusion network. Transforming the confusion network into a multi arc confusion network comprises realigning at least one token of the confusion network to span multiples arcs of the confusion network based on analyzing similarities in time information and grapho phonetical information of the token associated with an arc of the confusion network. The resultant structure offers correction functionality as it makes clearer which alternatives are available for any selected node span. Accordingly processing of user input is improved as alternative results hypotheses can be more accurately identified and more efficiently returned to a user for example when a user identifies that it would like to receive an alternative to a sequence of several tokens presented to a user.

As shown in block speech recognition processing can yield multiple results or hypotheses for a captured input. In block examples of lexicalized hypotheses determined are shown. In some examples a score may be associated with elements of the lexicalized hypotheses. Scoring of lexicalized hypotheses results may be determined based on application of speech recognition language models. As an example scoring of lexicalized hypotheses may comprise determination of an acoustic score or a language model score as described in the description of .

Proceeding to block examples are shown of hypotheses results from normalization processing of the lexicalized hypotheses results. Normalization processing includes performing ITN or text normalization on the lexicalized hypotheses. The normalizing processing comprises generating one or more tokens for elements of each normalized hypothesis. In some examples normalization processing performed identifies that an element of a lexicalized result hypothesis does not require changing. In that case normalization of an element of a lexicalized result keeps a same representation of a hypothesis as was generated by the speech recognition processing by creating one or more tokens are created for elements of the lexicalized hypothesis. For example a normalized hypothesis creates a token representation for lexicalized hypotheses of Hundred Dollars for New Phone and One Hundred Dollars For A New Phone. In addition alternative normalized hypotheses such as 100 for New Phone and 100 for A New Phone are generated as shown in block . Furthermore as described in a score may be associated with tokens generated in the normalization processing. For instance a score may be generated for a normalized result hypothesis by applying at least one token level language model to a normalized hypothesis to generate scores for one or more tokens of a normalized hypothesis. In another example scoring for a normalized result hypothesis is generated by rescoring an acoustic score for each of the lexicalized hypotheses to generate a score for each of the normalized hypotheses by applying a token language model to acoustic scores of the lexicalized hypotheses.

Confusion network creation processing creates a token level confusion network for the normalized hypotheses as shown in block . In one example creation of a token level confusion network comprises aligning normalized hypotheses or scored normalized results hypotheses . In an example of aligning scored responses the aligning performed by the confusion network creation processing is based on evaluation of parameters associated with tokens of normalized hypotheses. Arcs between numbered nodes of block of the generated confusion network have labels e.g. representing tokens and scores weights shown in parentheses for each arc of block e.g. 0.2 . Arcs e.g. A one as shown between nodes and of block are labeled with tokens representing alternatives to elements of a hypothesis result. As a note epsilon denoted as in block is used to represent a connection between nodes that is null or represents no token.

Confusion network creation processing further transforms the token level confusion network into a multi arc token confusion network as shown in Block . Block shows a visual representation of an exemplary multi arc token confusion network. Block is a transformation of the token confusion network shown in block and includes an exemplary multi arc alternative representative of a token e.g. token of 100 spans multiple arcs to offer an alternative to one hundred dollars or a hundred dollars . Thus alternatives to tokens are readily identifiable for output when a system or service is programmed to output alternatives for tokens or a request for alternatives for tokens is made by a user.

Flow begins at operation where speech recognition is executed on a captured input. Input may be captured and processed by a speech recognition component or module such as the speech recognition component described in . Lexicalized hypotheses as described in are generated based on processing of the captured input by a speech recognition component or module. A generated lexicalized hypothesis comprises one or more elements as described in the description of . An element is a unit associated with vocabulary such as a letter symbol character word etc. In some examples generation of lexicalized hypotheses further comprises generating a score for each of the lexicalized hypotheses. As an example an acoustic score and or a language model score is generated for each of the lexicalized hypotheses.

Flow proceeds to operation where lexicalized hypotheses are normalized by performing normalization processing. A normalized hypothesis as described in is a result of normalization of a lexicalized hypothesis and comprises one or more tokens as described in the description of . Normalization processing is performed in operation to generate the normalized hypotheses based on the lexicalized hypotheses or elements of lexicalized hypotheses determined from speech recognition processing. In one example of normalization processing token representations are generated for elements of a lexicalized hypothesis result. In some examples of normalization processing token representations are newly generated offering alternative representations e.g. a token of 1 may be an alternative for the word dollar to an element of a lexicalized hypothesis result. Processing of operation may further comprise generating a score for token representations of normalized hypotheses. In one example score generation performed in operation comprises generating a final score for each of the normalized hypotheses based on a combination of the score for a lexicalized hypothesis and the score for a normalized hypothesis. In another example scoring performed in operation comprises rescoring the acoustic score for each of the lexicalized hypotheses to generate a score for each of the normalized hypotheses by applying a token language model or adapted token language model to acoustic scores of the lexicalized hypotheses. Scoring for hypotheses may be generated based on any statistical analysis of the lexicalized and or normalized hypotheses.

From operation flow proceeds to operation where a confusion network is generated based on the normalization of lexicalized hypotheses. In one example each arc of the confusion network generated in operation is a representation of a token of a normalized result. Exemplary confusion networks are referenced in and the accompanying description. Generation of the confusion network may comprise aligning tokens of normalized results. For instance similarities in time information and grapho phonetical information for tokens are analyzed to initially place arcs of a confusion network. Each arc of the generated confusion network is associated with a token and a weight e.g. score probability value . In at least one example alignment of hypotheses is completed by dynamic programming approximation that identifies an optimal alignment solution based on evaluation of the time information and the grapho phonetical information for tokens of the normalized results. In another example aligning of tokens is executed using exact Multiple Sequence Alignment algorithms.

To improve a system or services ability to output alternatives to a user flow proceeds to operation where the confusion network is transformed into a multi arc confusion network. As the dynamic programming approximates alignment of tokens additional processing is performed to transform the confusion network into a multi arc confusion network. The processing performed in operation comprises realigning at least one token of the confusion network to span multiples arcs of the confusion network based on analyzing similarities in time information and grapho phonetical information of tokens associated with arcs of the confusion network. Re alignment performed in operation comprises changing a starting point and an ending point for an arc associated with the token to span multiple arcs of alternative results hypotheses.

Flow of method begins at operation where a request is received for alternatives in response to one or more tokens of a token representation presented to a user. For example when results are returned to a user in response to a spoken utterance the user may indicate that the output presented is not what the user was looking for or the user may request an alternative to a token presented in the output provided to the user. For instance an output e.g. token representation of Find the Closest Seven Eleven may be presented to a user. A user may request alternatives for tokens of seven and eleven. 

Proceeding to operation the multi arc confusion network is used to determine alternatives for one or more tokens. In operation the multi arc confusion network is analyzed to identify an alternative token representation for tokens. As an example a token representation of 7 11 may be identified from the multi arc confusion network as being an alternative to the combination of the words seven and eleven. 

Flow proceeds to operation where alternative token representations are output from the multi arc confusion network. For example an alternative representation identified from the multi arc confusion network is output to a user. A processing device or service using a generated multi arc confusion network may output one or more alternatives to a range of elements or tokens identified by a user of a processing device e.g. mobile device or service e.g. application or program . For example a user may request alternatives to one or more words of a hypothesis result provided to a user.

At any point in time a user may identify that a system or service incorrectly understood a received input and incorrectly interpreted a hypothesis result. Processing for generation or modification of a confusion network may create a new confusion network and or multi arc confusion network or alternatively modify an existing confusion network based on additional feedback from a user.

As stated above a number of program modules and data files may be stored in the system memory . While executing on the processing unit the program modules e.g. application Input Output I O manager and other utility may perform processes including but not limited to one or more of the stages of the operational methods illustrated in for example. Other program modules that may be used in accordance with examples of the present invention may include electronic mail and contacts applications word processing applications spreadsheet applications database applications slide presentation applications input recognition applications drawing or computer aided application programs etc.

Furthermore examples of the invention may be practiced in an electrical circuit comprising discrete electronic elements packaged or integrated electronic chips containing logic gates a circuit utilizing a microprocessor or on a single chip containing electronic elements or microprocessors. For example examples of the invention may be practiced via a system on a chip SOC where each or many of the components illustrated in may be integrated onto a single integrated circuit. Such an SOC device may include one or more processing units graphics units communications units system virtualization units and various application functionality all of which are integrated or burned onto the chip substrate as a single integrated circuit. When operating via an SOC the functionality described herein may be operated via application specific logic integrated with other components of the computing device on the single integrated circuit chip . Examples of the present disclosure may also be practiced using other technologies capable of performing logical operations such as for example AND OR and NOT including but not limited to mechanical optical fluidic and quantum technologies. In addition examples of the invention may be practiced within a general purpose computer or in any other circuits or systems.

The computing device may also have one or more input device s such as a keyboard a mouse a pen a sound input device a device for voice input recognition a touch input device etc. The output device s such as a display speakers a printer etc. may also be included. The aforementioned devices are examples and others may be used. The computing device may include one or more communication connections allowing communications with other computing devices . Examples of suitable communication connections include but are not limited to RF transmitter receiver and or transceiver circuitry universal serial bus USB parallel and or serial ports.

The term computer readable media as used herein may include computer storage media. Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures or program modules. The system memory the removable storage device and the non removable storage device are all computer storage media examples i.e. memory storage. Computer storage media may include RAM ROM electrically erasable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other article of manufacture which can be used to store information and which can be accessed by the computing device . Any such computer storage media may be part of the computing device . Computer storage media does not include a carrier wave or other propagated or modulated data signal.

Communication media may be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media.

One or more application programs may be loaded into the memory and run on or in association with the operating system . Examples of the application programs include phone dialer programs e mail programs personal information management PIM programs word processing programs spreadsheet programs Internet browser programs messaging programs and so forth. The system also includes a non volatile storage area within the memory . The non volatile storage area may be used to store persistent information that should not be lost if the system is powered down. The application programs may use and store information in the non volatile storage area such as e mail or other messages used by an e mail application and the like. A synchronization application not shown also resides on the system and is programmed to interact with a corresponding synchronization application resident on a host computer to keep the information stored in the non volatile storage area synchronized with corresponding information stored at the host computer. As should be appreciated other applications may be loaded into the memory and run on the mobile computing device including application IO manager and other utility described herein.

The system has a power supply which may be implemented as one or more batteries. The power supply might further include an external power source such as an AC adapter or a powered docking cradle that supplements or recharges the batteries.

The system may include peripheral device port that performs the function of facilitating connectivity between system and one or more peripheral devices. Transmissions to and from the peripheral device port are conducted under control of the operating system . In other words communications received by the peripheral device port may be disseminated to the application programs via the operating system and vice versa.

The system may also include a radio that performs the function of transmitting and receiving radio frequency communications. The radio facilitates wireless connectivity between the system and the outside world via a communications carrier or service provider. Transmissions to and from the radio are conducted under control of the operating system . In other words communications received by the radio may be disseminated to the application programs via the operating system and vice versa.

The visual indicator may be used to provide visual notifications and or an audio interface may be used for producing audible notifications via the audio transducer . In the illustrated example the visual indicator is a light emitting diode LED and the audio transducer is a speaker. These devices may be directly coupled to the power supply so that when activated they remain on for a duration dictated by the notification mechanism even though the processor and other components might shut down for conserving battery power. The LED may be programmed to remain on indefinitely until the user takes action to indicate the powered on status of the device. The audio interface is used to provide audible signals to and receive audible signals from the user. For example in addition to being coupled to the audio transducer the audio interface may also be coupled to a microphone to receive audible input such as to facilitate a telephone conversation. In accordance with examples of the present invention the microphone may also serve as an audio sensor to facilitate control of notifications as will be described below. The system may further include a video interface that enables an operation of an on board camera to record still images video stream and the like.

A mobile computing device implementing the system may have additional features or functionality. For example the mobile computing device may also include additional data storage devices removable and or non removable such as magnetic disks optical disks or tape. Such additional storage is illustrated in by the non volatile storage area .

Data information generated or captured by the mobile computing device and stored via the system may be stored locally on the mobile computing device as described above or the data may be stored on any number of storage media that may be accessed by the device via the radio or via a wired connection between the mobile computing device and a separate computing device associated with the mobile computing device for example a server computer in a distributed computing network such as the Internet. As should be appreciated such data information may be accessed via the mobile computing device via the radio or via a distributed computing network. Similarly such data information may be readily transferred between computing devices for storage and use according to well known data information transfer and storage means including electronic mail and collaborative data information sharing systems.

Reference has been made throughout this specification to one example or an example meaning that a particular described feature structure or characteristic is included in at least one example. Thus usage of such phrases may refer to more than just one example. Furthermore the described features structures or characteristics may be combined in any suitable manner in one or more examples.

One skilled in the relevant art may recognize however that the examples may be practiced without one or more of the specific details or with other methods resources materials etc. In other instances well known structures resources or operations have not been shown or described in detail merely to observe obscuring aspects of the examples.

While example examples and applications have been illustrated and described it is to be understood that the examples are not limited to the precise configuration and resources described above. Various modifications changes and variations apparent to those skilled in the art may be made in the arrangement operation and details of the methods and systems disclosed herein without departing from the scope of the claimed examples.

