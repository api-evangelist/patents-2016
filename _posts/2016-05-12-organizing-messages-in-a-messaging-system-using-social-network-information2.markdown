---

title: Organizing messages in a messaging system using social network information
abstract: A messaging system receives a message that is intended for a recipient, who is a user of a social networking system. An object associated with the message is identified based on the message content and/or metadata associated with the message. The messaging system accesses a social networking system database to obtain social information about a relationship between the recipient and the identified object. The message is then indexed using the social information, wherein an entry for the message is stored in a message index based on the social information. This process may be repeated for each received message, and multiple different message indexes may be generated for received messages to track different types of social information. A user interface for viewing messages uses the message index to organize the messages, such as to filter, categorize, and/or sort the messages in the display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09590944&OS=09590944&RS=09590944
owner: Facebook, Inc.
number: 09590944
owner_city: Menlo Park
owner_country: US
publication_date: 20160512
---
This application is a continuation of U.S. patent application Ser. No. 14 586 127 filed on Dec. 30 2014 and issued as U.S. Pat. No. 9 356 905 on May 31 2016 which is a divisional of U.S. patent application Ser. No. 13 952 372 filed on Jul. 26 2013 and issued as U.S. Pat. No. 8 984 081 on Mar. 17 2015 which is a continuation of U.S. patent application Ser. No. 12 913 701 filed on Oct. 27 2010 and issued as U.S. Pat. No. 8 499 048 on Jul. 30 2013 the contents of which are all incorporated by reference herein in their entirety.

This invention relates generally to messaging systems and more specifically to indexing and organizing messages for a user of a social networking system using social network information.

People communicate with each other in an online environment by sending and receiving messages. One area in which large numbers of messages are involved is in social networking. Social networking systems allow users to form relationships with other users applications events and many other objects. Users can then communicate with other users in the social network by sending messages such as electronic mail e mail and chat messages.

Due to the vast number of users and objects in a social networking system a user can quickly be overwhelmed by a constant stream of incoming messages. In addition messages may come from sources that are outside of the social networking system. It is difficult for a user to determine what messages are important without identifying the source of the message or reading part of the message itself such as the title or body of the message. Further a user s mailbox may contain millions of lines of text in tens of thousands of messages collected over decades of use making it even more difficult for a user to distinguish relevant messages from non relevant messages.

Embodiments of the invention leverage the social network information for a user of a social networking system to organize and display messages for the user in a messaging system. In this way users of a social networking system can better identify messages by their social relevance based on the users social relationships in the social networking system.

In one embodiment a social networking system identifies a plurality of recipients of a message where the recipients of the message are users of the social networking system. A social networking database that includes social information about a relationship between the recipients of the message is accessed. For example the social information may indicate whether the recipient and sender have established a connection in the social networking system. The message is organized based on the social information about the relationship between the recipients. For example the message may be filtered categorized or sorted based on the social information.

In one embodiment a messaging system receives a message that is intended for a recipient who is a user of a social networking system. An object associated with the message is identified. For example the object may be another user in the social networking system that sent the message and which is identified based on the message content and or metadata associated with the message. The messaging system accesses a social networking system database to obtain social information about a relationship between the recipient and the identified object. A label is determined for the message in accordance with the relationship between the recipient and the identified object of the social networking system which can be used to tag the message. When a change in the social relationship about the relationship is identified the label for the message is updated based on the change.

In one embodiment the message is indexed using the social information wherein an entry for the message is stored in a message index based on the social information. This process may be repeated for each received message and multiple different message indexes may be generated for received messages to track different types of social information. The message index thus provides contextual information about the social relevance of the messages for the recipient of the message. The message index enables messages to be processed and presented in a number of useful ways. In one embodiment the messaging system provides a user interface to the user of the social networking system where the user interface displays a plurality of messages associated with the user i.e. messages from the user s mailbox . To organize the messages in the user interface the messaging system accesses the index to obtain social information for each of a plurality of messages and organizes the messages at least in part based on the social information associated with the messages. The organizing may comprise sorting categorizing and or filtering the messages in the display among various other organizing schemes that can leverage the message index. For example messages received from friends of the user can quickly be identified as such and displayed to the user thereby providing the user with messages that are socially relevant to the user. Further the message index enables social context for the messages to be identified quickly while only consuming a small amount of computing resources rather than requiring the messaging system to access the social networking system database whenever messages are to be displayed.

The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

A user of the client device interacts with the social networking system via an application such as a web browser or a native application to perform operations such as browsing content posting and sending messages retrieving and sorting messages received from other users and the like. Additionally the third party website can also interact with the social networking system via a system provided application programming interface API . For example the third party website can perform operations supported by the API such as delivering messages to the social network system retrieving messages stored by the social networking system and obtaining social information about users of the social networking system .

The social networking system comprises an object store a graph information store an indexing engine and a post processing module . The object store stores information on objects represented in or by the social networking environment. The graph information store stores information on the relationships of the objects in the object store . The indexing engine receives messages from various sources such as client devices and third party website . Messages can be in any electronic message format such as electronic mail e mail messages chat messages comments left on a user s webpage and short message service SMS text messages. The indexing engine indexes the messages into the message index store using social relationship information from the graph information store . For example a message sent from Adam to Bob who are friends can be tagged as being from a friend and indexed using this social relationship information. The post processing module uses the message index store to generate a set of messages that can be presented to a user of client device .

The object store stores information on various objects tracked by the social networking system . These objects may represent a variety of things with which a user may interact in the social networking system including without limitation other users of the social networking system represented e.g. as a profile object for the user applications e.g. a game playable within the social networking system events e.g. a concert that users may attend groups to which users may belong pages or hubs e.g. pages constituting a particular organization s presence on the system items of media e.g. pictures videos audio text or any other type of media content locations associated with a user e.g. Santa Clara Calif. USA and even concepts or other terms e.g. Victorian literature . An object in the object store may represent an entity existing within the social networking system e.g. an application available on the social networking system a virtual entity that exists outside the domain of the social networking system e.g. a website or a real world entity e.g. a sports team or a retail store . The object store may further store objects representing other data routinely produced by users of the social networking system such as messages status updates photos and videos.

The object store may store all of the objects existing within the social networking system such as messages or the image data associated with an image media item . Alternatively for virtual entities existing outside of the social networking system the object store may contain some form of pointer or reference to the entities such as the uniform resource locator URL of an external media item . Additionally the object store may also store metadata associated with the objects such as a name describing the object e.g. Charles Williams for a person Birthday Reminder for an application or Penguin Fanciers for a group an image representing the object e.g. a user profile picture one or more labels assigned to the object by users e.g. the textual strings game crime and strategy for a strategy game application or different e mail addresses of a user object e.g. jeremy1234 gmail.com and jeremy1234 yahoo.com . Different types of objects may have different types of metadata such as a set of associated users for a group a media type e.g. video for a media item object and a unique user ID and name tokens e.g. separate first and last names Charles and Williams for a user object .

The graph information store represents the objects of the object store as nodes that are linked together in a social graph. The graph information store thus comprises information about the relationships between or among the objects represented as the edges connecting the various object nodes. Various examples of edges in the social graph include an edge between two user objects representing that the users are have a relationship in the social networking system e.g. are friends or have communicated viewed the other s profile or interacted in some way an edge between a user object and an application object representing that the user has used the application an edge between a user object and a group object representing that the user belongs to the group and an edge between a user object and a page object representing that the user has viewed the page to name just a few. For example if one user establishes a relationship with another user in the social networking system the two users are each represented as a node and the edge between them represents the established relationship the two users are then said to be connected in the social network system. Continuing this example one of these users may send a message to the other user within the social networking system. This act of sending the message is another edge between those two nodes which can be stored and or tracked by the social networking system. The message itself may be treated as a node. In another example one user may tag another user in an image that is maintained by the social networking system. This tagging action may create edges between the users as well as an edge between each of the users and the image which is also a node. In yet another example if a user confirms attending an event the user and the event are nodes where the indication of whether or not the user will attend the event is the edge. Using a social graph therefore a social networking system may keep track of many different types of objects and edges the interactions and connections among those objects thereby maintaining an extremely rich store of socially relevant information.

In one embodiment edges in the graph information store have associated metadata such as a label describing the type of relationship e.g. friend as the label between two user objects family as the label between brother and sister or an affinity value quantifying the strength of the relationship. Further a relationship degree or distance between any two objects can be ascertained by determining the number of edges on the shortest path between the objects. For example two user objects that have an edge between them e.g. denoting a friendship relationship have a relationship degree or distance of one and are considered first order connections. Similarly if a user object A is a first order connection of user object B but not of user object C and B is a first order connection of C then objects A and C have a relationship degree of two indicating that C is a second order connection of A and vice versa .

In one embodiment the social networking system adds information to the graph information store in real time as it observes events taking place indicating relationships between the various objects such as a user interacting with an application . Alternatively and or additionally the graph information store may be created based on existing stored information from which relationships can be inferred. For example the friend list of a user might indicate that the user has a friend relationship with another user or the data for a group might indicate that some set of users has a membership relationship with that group and this information could be reflected in the graph information store .

U.S. application Ser. No. 12 193 702 filed Aug. 18 2008 which is incorporated by reference in its entirety describes an example of a social networking system that maintains data for a number of different types of objects used by the social networking system. U.S. application Ser. No. 12 485 856 filed Jun. 16 2009 which is incorporated by reference in its entirety describes embodiments of a social networking system that maintains objects and connections among the objects in a social graph.

The social networking system comprises an indexing engine that receives and indexes messages using relationships in the social graph e.g. relationship between the sender and recipient of a message . The indexes enable the social networking system to efficiently process and generate a set of messages based on social relationship criteria. For example the post processing module can use the indexes to filter indexed messages by social relationship thereby presenting a user of the social network system with only the messages that are socially relevant to that particular user.

The indexing engine itself contains a number of sub modules . Extraction module receives messages and extracts information from the messages. Identification module identifies objects in the social graph that match the extracted information such as the sender and recipient of the message. Tagging module tags the messages with the relationships of the objects in the social graph. Indexing module indexes the messages into message indexes using the tags. Updating module updates the indexed messages as necessary to reflect changes in the social graph. The detailed operation of these various modules will be described by reference to which illustrates a flowchart of a method for indexing and organizing messages for a user of a social networking system using social network information according to one embodiment.

The extraction module receives a message that is directed to a user of the social networking system . As explained previously a message can be in any electronic message format. The extraction module can receive the message for example from a client or a third party website in real time as the message enters the social networking system . Alternatively the message may already be stored in the object store and retrieved by the extraction module so that the message can be indexed.

The extraction module extracts information the extracted information from the received message. In one embodiment the extracted information includes information that can be used to identify the sender and recipient of the message. For example information extracted from the metadata associated with a message may include the name of the user who sent the message the name of the user who received the message the sender s e mail address the recipient s e mail address or a unique identifier associated with a sender or recipient of the message. In another embodiment the extracted information includes information related to the content of the message itself. For example the extracted information can include the title of the message URL s embedded in the body of the message an image attached to the message a time stamp associated with the message etc.

The identification module identifies objects in the social graph that match the extracted information. In one embodiment the graph search module uses the extracted information to identify the object that is the intended recipient of the message the message recipient and the object that sent the message the message sender . For example if an e mail message is sent to jeremy1234 facebook.com and this e mail address is associated with a particular user object then the system identifies that user object as the message recipient.

In another embodiment the identification module also uses the extracted information to identify other objects that are related to the content of the message the related objects . For example the URL www.yankees.com may be extracted from the content of a message. In the object store this URL is associated with an object for the baseball team the NEW YORK YANKEES. As such the identification module identifies the object that corresponds to the NEW YORK YANKEES as a related object for the message.

Because the object store is extremely large it may be inefficient to search the entire object store for objects that match the extracted information. Instead it may be more efficient to identify matching objects by searching objects that are socially relevant to the message recipient. In one embodiment the identification module first identifies the message recipient. The identification module then traverses the social graph to identify first order and second order user connections of the message recipient that match the extracted information. Specifically the identification module identifies a set of objects comprising the first order connections of the message recipient. The identification module then further identifies a set of all the first order connections of the objects within the identified set this latter set of connections constituting the second order connections of the message recipient. From these objects the identification module identifies objects e.g. message sender or related objects that match the extracted information.

It is appreciated that although the identification module has been described as identifying first and second order connections any number of orders of connection could be identified. For example the identification module could also identify third order connections in addition to those of first and second order. The exact configuration of the identification module can be specified by settings provided by an administrator of the social networking system .

The tagging module tags a message with social network information. Tagging comprises identifying social relationships from the social graph and associating the message with the social relationships. In one embodiment a message is tagged with social relationships between the message recipient and message sender. As discussed above the relationship between one object and another is represented in the social graph with one or more edges. Each edge is also associated with a label e.g. friend family and an affinity. A message may be tagged in one embodiment by associating these labels or affinities with the message. If there is more than one edge linking the message recipient and message sender the message can be tagged with more than one label. For example Adam and Bob may be connected by one edge with the label friend and another edge with the label high school classmates. If Adam sends a message to Bob the message is tagged with both of these labels. Further if Adam and Bob are second order friends that are indirectly connected by two serially connected edges in the social graph the message can be tagged as being from a friend of a friend. 

As another example multiple user objects may be members of a user created social group within the social networking system . Group members can post messages to the group which are then delivered to other group members. A group may be to an object in the social graph and members of the group are linked to the group via edges of the social graph. If a message recipient and a message sender are both members of the same group the message can be tagged with a social relationship indicating that the message is from a fellow group member. To illustrate suppose that Adam and Bob are members of the group Vegas 2011. Messages sent from Adam to Bob would be tagged with the relationship Vegas 2011. 

In another embodiment the tagging module tags each message based on the social relationship between the message recipient and any related objects. For example Bob may be the message recipient. The object store contains an object for the NEW YORK YANKEES. The website www.yankees.com is located within the content of the message which is used to identify the YANKEES object as being related to the message. Bob is connected to the YANKEES object through an edge that has the label fan of. Therefore the tagging module tags the incoming message with the fan of label. Alternatively or additionally the tagging module can tag the message with an identifier for the related object such as the object name which in this example is YANKEES.

The indexing module indexes the message using the social relationships associated with the message. Indexing messages enables the social networking system to efficiently process and generate a set of messages based on social relationship criteria. In one embodiment each user object is associated with a message index and any messages that are intended for the user object e.g. if the object is the message recipient are indexed into the message index. In a further embodiment each user object may be associated with multiple message indexes each of which is designated to store messages associated with a particular social relationship. For example there may be one message index for messages tagged with a friend relationship and a separate message index for messages tagged with a high school classmates relationship. In such an embodiment a single message that is associated with multiple social relationships can be indexed into more than one message index.

In one embodiment a message index may contain several data fields for storing information about each indexed message. Because the contents of a message itself are stored in the object store each entry in the index may include a data field that specifies the location of the message contents in the object store . Each entry may further include one or more data fields for the social relationship information e.g. friends friends of friends degree of connection affinity etc. that is associated with the message. In addition each entry may also contain any other information that is appropriate for storing in an index such as the title of the message the sender of the message a time stamp associated with the message etc. The indexing module then stores the indexes into the message index store .

In some embodiments a message may have multiple recipients. For each recipient the indexing module indexes the message using the social relationships corresponding to the recipient. This includes social relationships between the message recipient and the message sender as well as the social relationships between the message recipient and the other recipients. For example suppose Adam sends an e mail to both Bob and Charles. The e mail can be indexed into Bob s message index using Bob s social relationships with Adam and Charles. The e mail can also be indexed into Charles message index using Charles social relationships with Adam and Bob.

The updating module updates the message indexes to reflect new changes in the social graph. As described above a user s social graph is dynamic and the relationship between objects in the social graph can change over time. Changes in the social graph can affect the social relationship information associated with the messages. For example a message that was tagged as being from a friend of a friend may later need to be updated as being from a friend if the message recipient becomes friends with the sender of the message. The updating module can be configured to update the indexes on a periodic basis. Alternatively the updating module can update the indexes whenever the number of changes to the social graph for a user exceeds a certain threshold. For example the updating may occur whenever a user adds more than three new friends.

Once the indexes are created and stored in the message index store the post processing module utilizes the indexes to enable a variety of uses. In one embodiment the post processing module organizes messages using social relationship information from the message indexes. For example a user s messages may be collected into an mailbox of messages and organized within the mailbox based the social relationship tag for each message. The organized messages are output in a user interface to a client for display to a user of the social networking system or output to a third party website through the API .

Organizing messages in this way allows a user to easily identify messages that are socially relevant. Socially relevant messages can be presented in a manner that emphasizes their importance whereas less socially relevant messages can be presented in a manner that emphasizes their lack of importance.

In one embodiment the post processing module organizes messages by filtering messages using social relationship information. For example a user of the social networking system may request to view messages in his mailbox received from friends of friends by entering a command in a user interface. As such the post processing module accesses the message indexes to identify messages that are tagged with the social relationship friends of friends . The post processing module then outputs this set of messages to the user while hiding or not outputting messages tagged with other social relationships.

In a related embodiment the post processing module organizes messages by categorizing messages using social relationship information. Messages can be categorized by placing the messages into individual folders. Each folder contains a sub set of a user s messages that are placed into the folder based on their perceived relevance. For example referring to FIGS. illustrated is a user interface for organizing messages for a user of a social networking system using social network information according to one embodiment. As shown the user interface has interactive tabs that allow messages to be placed into different folders. Tab represents the primary folder of the user s mailbox and contains messages tagged as being from friends. Tab is for other messages such as messages tagged as being from friends of friends from group members or messages tagged with other types of social relationships. Tab is for spam messages such as messages that are not tagged with any social relationship. Here the user has selected the primary tab which causes the post processing module to access the message indexes in the message index store to identify messages that are tagged with a friend relationship. The post processing module then outputs a set of messages received from the user s friends.

In another embodiment social relationships are only one of many factors used to categorize messages. Other factors may include for example whether the message includes malicious information as determined by a virus scanning tool whether the sender of a message is a known source of spam or whether the message contains an attachment. By considering social relationships along with other factors a message can be accurately placed into a folder that best corresponds to the perceived importance of the message. In other embodiments each tab e.g. primary other spam may be its own separate window that is simultaneously displayed side by side with other windows.

In another embodiment the post processing module organizes messages by sorting i.e. ordering messages based on social relationship information. Different types of social relationships can be prioritized such that messages tagged with one type of social relationship e.g. friends are displayed higher in a list than messages tagged with other types of social relationships e.g. friends of friends . Messages can also be sorted based on the strength of a social relationship. For example the post processing module may sort messages within a mailbox in descending order based on a user s affinity for the sender of the message. Messages from persons that a user has a high affinity for are pushed to the top of the mailbox while messages from persons that a user has a low affinity for are pushed to the bottom of the mailbox. Additionally messages may be sorted according to a default policy or sorted according to a user input entered via the user interface.

In another embodiment the post processing module generates messages for display by changing the appearance of a message based on the social relationship associated with the message. For example messages from family members may be displayed with a green color while messages from co workers may be displayed with a yellow color. The appearance of a message can be changed in any manner that is visually distinctive such as with color highlighting bolding etc.

In a further embodiment the post processing module generates messages that match a search query and are also tagged with a certain social relationship. For example a user of a client may enter a textual query for the keyword party in messages received from users that are friends of friends. The post processing module then uses the message indexes to identify messages that are tagged with the social relationship friends of friends and executes the keyword search on those messages.

The foregoing description of the embodiments of the invention has been presented for the purpose of illustration it is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Persons skilled in the relevant art can appreciate that many modifications and variations are possible in light of the above disclosure.

Some portions of this description describe the embodiments of the invention in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are commonly used by those skilled in the data processing arts to convey the substance of their work effectively to others skilled in the art. These operations while described functionally computationally or logically are understood to be implemented by computer programs or equivalent electrical circuits microcode or the like. Furthermore it has also proven convenient at times to refer to these arrangements of operations as modules without loss of generality. The described operations and their associated modules may be embodied in software firmware hardware or any combinations thereof.

Any of the steps operations or processes described herein may be performed or implemented with one or more hardware or software modules alone or in combination with other devices. In one embodiment a software module is implemented with a computer program product comprising a non transitory computer readable medium containing computer program code which can be executed by a computer processor for performing any or all of the steps operations or processes described.

Embodiments of the invention may also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes and or it may comprise a general purpose computing device selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a non transitory computer readable storage medium or any type of media suitable for storing electronic instructions and coupled to a computer system bus. Furthermore any computing systems referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.

Finally the language used in the specification has been principally selected for readability and instructional purposes and it may not have been selected to delineate or circumscribe the inventive subject matter. It is therefore intended that the scope of the invention be limited not by this detailed description but rather by any claims that issue on an application based hereon. Accordingly the disclosure of the embodiments of the invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

