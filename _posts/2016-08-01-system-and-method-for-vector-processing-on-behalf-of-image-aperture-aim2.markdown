---

title: System and method for vector processing on behalf of image aperture aim
abstract: Provided is a system and method for aiming an image capturing mobile data processing system, performing a shoot action (e.g. shooting a picture), and subsequently processing a virtual vector determined between the image capturing mobile data processing system and a particular user carried mobile data processing system subject of the aim. Aiming information may include location information, directional and posture information, distance information, target size, and/or other shooting data to further qualify the shoot action. Permissions and configurations can govern data pulled or pushed. Wave forms which are not controllably aimed by nature can be accurately aimed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09584993&OS=09584993&RS=09584993
owner: 
number: 09584993
owner_city: 
owner_country: 
publication_date: 20160801
---
This application is a continuation of application Ser. No. 14 941 398 filed Nov. 13 2015 and entitled System and Method for Confirming Data Processing System Target s which is a continuation of application Ser. No. 14 551 437 now U.S. Pat. No. 9 204 275 issued Dec. 1 2015 filed Nov. 24 2014 and entitled System and Method for Targeting Data Processing System s With Data which is a continuation of application Ser. No. 14 217 661 now U.S. Pat. No. 8 942 693 issued Jan. 27 2015 filed Mar. 18 2014 and entitled System and Method for Targeting Data Processing System s With Data which is a continuation of application Ser. No. 12 807 806 now U.S. Pat. No. 8 761 751 issued Jun. 24 2014 filed Sep. 14 2010 and entitled System and Method for Targeting Data Processing System s With Data which is a continuation in part of application Ser. No. 12 800 394 now U.S. Pat. No. 8 566 839 issued Oct. 22 2013 and Ser. No. 12 800 395 now U.S. Pat. No. 8 750 841 issued Jun. 10 2014 each filed May 14 2010 and entitled System and Method for Automated Content Presentation Objects and System and Method for Automatically Leaving an Outgoing Caller Message respectively which are each a continuation in part of application Ser. No. 12 590 831 now U.S. Pat. No. 8 634 796 issued Jan. 21 2014 filed Nov. 13 2009 and entitled System and Method for Location Based Exchanges of Data Facilitating Distributed Locational Applications which is a continuation in part of application Ser. No. 12 287 064 now U.S. Pat. No. 8 639 267 issued Jan. 28 2014 filed Oct. 3 2008 and entitled System and Method for Location Based Exchanges of Data Facilitating Distributed Locational Applications which is a continuation in part of application Ser. No. 12 077 041 now U.S. Pat. No. 8 600 341 issued Dec. 3 2013 filed Mar. 14 2008 and entitled System and Method for Location Based Exchanges of Data Facilitating Distributed Locational Applications hereinafter referred to as the parent applications. This application contains an identical specification to Ser. No. 14 941 398. Only the title claims and abstract differ.

The present disclosure relates generally to communicating data from one data processing to another and more particularly to communicating data from a first data processing system to a second data processing by physically pointing aiming the first data processing e.g. Mobile data processing System MS at the second data processing system e.g. MS and performing a shoot action.

Different users use different types of Mobile data processing Systems MSs which are also called mobile devices laptops tablet computers Personal Computers PCs Personal Digital Assistants PDAs cell phones automobile dashboard mounted data processing systems shopping cart mounted data processing systems mobile vehicle or apparatus mounted data processing systems Personal Navigational Devices PNDs Android enabled devices iPhones iPhone is a trademark of Apple Inc. iPads iPad is a trademark of Apple Inc. and other various handheld mobile data processing systems etc. There are many applications which use various message formats to carry out a variety of functionality. Many of these applications involve communicating data between systems for example over a wireless wave spectrum. Targeting a receiving system for example over Radio Frequency RF waves typically involves using a destination address in one form or another. It is possible that many receiving data processing systems in the vicinity can see the data which is being sent in particular as wireless spectrum advances increase coverage distance. Processing at the receiving data processing systems may use destination address information and or originator information to filter out data packets which are not meant to be received and processed. Many wireless wave spectrums for example RF waves radiate out uncontrollably in all directions. For security and privacy reasons it is desirable to minimize the number of data processing systems in the vicinity that may see certain data. There are also fun gaming and useful business applications for aiming a mobile data processing system at a target data processing system and shooting it to initiate subsequent interaction. It is desirable to control the direction of data carried on RF waves without relying on target address processing.

Intuitive user interfaces are preferred in many technology areas. Easing a learning curve and leveraging instinctive human behavior is preferred. Recent touch user interfaces have demonstrated that a user interface can be made natural and intuitive thereby enhancing the user experience. Application user interfaces should always strive for improved user interfaces. Physically pointing aiming or directing is an instinctive human action.

User interfaces can also be fun to use thereby further improving the user experience. For example Bump Technologies provides a cool Bump application for communicating data from one MS to another. Bump is a quick and easy way to send data between MSs by simply bumping them together. Data such as phone number photos or friend information can be exchanged with just a bump. The detectable simultaneous bump of MSs is used to connect the MSs together for communicating data. A drawback of bump processing is that each MS must be right next to each for the bump contact. There can be a variety of reasons you may want to send or receive data from a MS but also not want to bump or come in contact with that MS e.g. germs inconvenient locations of the bumper and or bumpee at the time of wanting to bump don t want bumper or bumpee to know at the time of bump that they are being bumped etc . The bump methodology does provide an interesting approach however for secure targeting of data without relying on addressing.

Location Based Exchanges LBX MS embodiments are heavily involved in communicating data between systems. For example MSs in the vicinity of each other may communicate directly and wirelessly with each other. A MS may also communicate directly and wirelessly with a data processing system that may be in the vicinity. It is intuitive for a user to point to or aim at something they wish to act upon perhaps preferably from a distance. It is perhaps fun for a user to physically point to or aim at something e.g. data processing system they wish to act upon from some distance. It is desirable to make a user interface fun and intuitive. Providing more secure data communications and providing means for targeting of data using uncontrollable non directional waves e.g. radio sound etc makes such a user interface more desirable.

Disclosed is a system and method for targeting data processing system s with data by aiming a sending data processing system at a receiving data processing system and performing a shoot action. In a preferred embodiment aiming information is used to qualify a shoot action for targeting of the data. Aiming information is transmitted from the sending data processing system to receiving data processing systems in the vicinity for determining whether or not a receiving data processing system was aimed at by the sending data processing system for example to direct data. Data may be included e.g. sent with the shoot action or subsequently sent after the shoot action. Data may be immediately received after the shoot action or subsequently received after the shoot action. Various embodiments or protocols govern processing initiated by a shoot action. In one example a user shoots a target data processing system by first aiming his sending data processing system at the target data processing system. After aiming the sending user shoots at the target data processing system. Sent to the target data processing system is a data packet containing aiming information including location information of the sending data processing system directional and posture information for determining a target of the shoot action distance information for determining a distance of the shoot action and target size for determining the inclusion of targeted data processing system s . Embodiments are also available for lobbing or curving a shoot action to a target data processing system for example to go around or avoid other data processing systems that may be viewed as in the way or to emulate a specific user action in context of a particular application e.g. casting a fishing rod swinging a racket etc . The disclosed techniques may be incorporated to any of the variety of wave forms discussed in parent applications. Permissions charters Message Area Data Record MADR objects and other configurations may be used to govern processing that occurs thereafter.

A primary advantage herein is to further enhance security of directing data between mobile data processing systems by using aiming information together with address information in order to enforce directing data by radio waves or sound waves or the like . Only the targeted data processing system s become candidate for interaction. The sending and receiving data processing system bind for subsequent interaction through a receiving data processing system confirming the aim and shoot action by a sending data processing system. Coupling the physical aim of an intended recipient with other recipient identifier information ensures a high level of security over uncontrollable non directional wave forms e.g. Radio Frequency RF blue tooth sound any radio wave carried protocol or other wave form requiring clarification with data for what is being pointed to aimed at .

It is an advantage to provide a MS with options for shooting other data processing systems. A MS may be equipped with infrared interfaces and or laser interfaces as well as uncontrollable non directional wave form interfaces. Because of the way MSs are designed held or carried it may be undesirable to shoot a directed conventional infrared or laser guided wave form to another MS for example like shooting i.e. operating a remote controlled television or the methods of laser tag games. Also non directional wave forms e.g. RF sound etc have an advantage of not requiring a direct line of sight to signal receiving means. There is no guarantee a direct line of sight will be available to the receiving MS or that the receiving MS has well placed signal reception means. However it still may be useful to equip a MS with infrared a laser or another directed wave form for the purpose of shooting data to data processing systems which provide an easy target for example when the housing is made of appropriate receptor means or receiving material. A cell phone can shoot another cell phone with data or a cell phone can shoot a remote data processing system e.g. for a transaction with data.

It is an advantage to deploy Virtual Vector VV determination for data communications between MSs. A VV is defined herein as a vector implied i.e. virtual in non directional wave forms e.g. Radio Frequency Sound etc for carrying data wherein the vector starting point is initiated at a sending MS and then determined geometrically or geodetically geocentrically Euclidian ally or like methods for the intended endpoint e.g. the receiving MS . Vector characteristics are mathematically determined as well known to those skilled in the art when calculating characteristics of Euclidean vectors spatial vectors geometric vectors or the like. A variety of different well known mathematical models and coordinate systems may be used such as geocentric geodetic Cartesian polar etc or combinations thereof.

While it is not the intent to limit the present disclosure to a particular embodiment one preferred three dimensional model for VV determination is a geodetic coordinate system using earth latitude longitude and an altitude alternately elevation or the like . Dynamic elliptical latitude and longitude adjustments for earth s non conformance to a perfect sphere are accounted for in modern Global Positioning System GPS deployments. While such units are good for identifying points in space for substantially long distances they may not be so good for short distances between MS users. Preferably a precise localized mathematical model and coordinate system is used after determining reference points to an earth mathematical model. Survey grade GPS to 1 cm accuracy is more commonplace today than ever before and equipment is smaller and cheaper. Latest survey improvements provide computerized theodolites optical survey instrument such as Total Stations which also include an Electronic Distance Measurement device EDM . Since their introduction total stations have made the technological shift from being optical mechanical devices to being fully electronic with an onboard data processing system. In fact modern total stations no longer require a reflector or prism used to return light pulses for distancing to return distance measurements. Useful total station processing with respect to shooting disclosed herein can be incorporated into a MS with or without EDM functionality. Also all available geometric measurements are determined for a sending MS and they are transmitted to a receiving MS for facilitating a most accurate vector determination. In another embodiment high precision triangulation is performed for identifying or adjusting MS locations as disclosed in parent applications. Recursive Whereabouts Determination RWD is also leveraged to provide most accurate location and position information.

Another advantage is maintaining of statistical data for why how when and where shoot actions take place and who is involved with related processing. This provides means for reporting.

Yet another advantage is using permissions and or charters to govern aspects of shoot action processing for example governing why how when and where to process shoot actions at a sending or receiving MS.

Another advantage is providing a shoot platform wherein a vast range of differing applications are easily plugged into the implementation. Many applications are supported for participating in shoot actions.

Further features and advantages of the disclosure as well as the structure and operation of various embodiments of the disclosure are described in detail below with reference to the accompanying drawings. In the drawings like reference numbers generally indicate identical functionally similar and or structurally similar elements. Dashed outlines e.g. process blocks data record fields may be used in the drawings to highlight or indicate optional embodiments. None of the drawings discussions or materials herein is to be interpreted as limiting to a particular embodiment. The broadest interpretation is intended. Other embodiments accomplishing same functionality are within the spirit and scope of this disclosure. It should be understood that information is presented by example and many embodiments exist without departing from the spirit and scope of this disclosure.

With reference now to detail of the drawings the present disclosure is described. Obvious error handling is omitted from the flowcharts in order to focus on key aspects. Obvious error handling includes database I O errors field validation errors errors as the result of database table data constraints or unique keys data access errors communications interface errors or packet collision hardware failures checksum validations bit error detections corrections and any other error handling as well known to those skilled in the relevant art in context of this disclosure. A thread synchronization scheme e.g. semaphore use is assumed where appropriate. A semicolon may be used in flowchart blocks to represent and separate multiple blocks of processing within a single physical block. This allows simpler flowcharts with fewer blocks in the drawings by placing multiple blocks of processing description in a single physical block of the flowchart. Flowchart processing is intended to be interpreted in the broadest sense by example and not for limiting methods of accomplishing the same functionality. Preferably field validation in the flowcharts checks for SQL injection attacks communications protocol sniff and hack attacks preventing of spoofing system or MS addresses syntactical appropriateness and semantics errors where appropriate. Disclosed user interface processing and or screenshots are also preferred embodiment examples that can be implemented in various ways without departing from the spirit and scope of this disclosure. Alternative user interfaces since this disclosure is not to be limiting will use similar mechanisms but may use different mechanisms without departing from the spirit and scope of this disclosure. Novel features disclosed herein need not be provided as all or none. Certain features may be isolated in some embodiments or may appear as any subset of features and functionality in other embodiments.

The data processing system may also include a display device interface for driving a connected display device not shown . The data processing system may further include one or more input peripheral interface s to input devices such as a keyboard keypad Personal Digital Assistant PDA writing implements touch interfaces mouse voice interface or the like. User input user input user events and user actions used interchangeably to the data processing system are inputs accepted by the input peripheral interface s . The data processing system may still further include one or more output peripheral interface s to output devices such as a printer facsimile device or the like. Output peripherals may also be available via an appropriate interface.

Data processing system will include communications interface s for communicating to another data processing system via analog signal waves digital signal waves infrared proximity copper wire optical fiber other wave spectrums or any reasonable communication medium. A MS may have multiple communications interfaces e.g. cellular connectivity 802.x etc . Other data processing system may be an MS. Other data processing system may be a service.

Data processing system programs also called control logic or processing code may be completely inherent in the processor s being a customized semiconductor or may be stored in main memory for execution by processor s as the result of a read only memory ROM load not shown or may be loaded from a secondary storage device into main memory for execution by processor s . Such programs when executed enable the data processing system to perform features of the present disclosure as discussed herein. Accordingly such data processing system programs represent controllers of the data processing system.

In some embodiments the disclosure is directed to a control logic program product comprising at least one processor having control logic software firmware hardware microcode stored therein. The control logic when executed by processor s causes the processor s to provide functions of the disclosure as described herein. In another embodiment this disclosure is implemented primarily in hardware for example using a prefabricated component state machine or multiple state machines in a semiconductor element such as a processor .

Those skilled in the art will appreciate various modifications to the data processing system without departing from the spirit and scope of this disclosure. A data processing system and more particularly a MS preferably has capability for many threads of simultaneous processing which provide control logic and or processing. These threads can be embodied as time sliced threads of processing on a single hardware processor multiple processors multi core processors Digital Signal Processors DSPs or the like or combinations thereof. Such multi threaded processing can concurrently serve large numbers of concurrent MS tasks. Concurrent processing may be provided with distinct hardware processing and or as appropriate software driven time sliced thread processing. Those skilled in the art recognize that having multiple threads of execution on an MS may be accomplished in different ways in some embodiments. This disclosure strives to deploy software to existing MS hardware configurations but disclosed software can be deployed as burned in microcode to new hardware of MSs.

Data processing aspects of drawings flowcharts are preferably multi threaded so that many MSs and applicable data processing systems are interfaced with in a timely and optimal manner. Data processing system may also include its own clock mechanism not shown if not an interface to an atomic clock or other clock mechanism to ensure an appropriately accurate measurement of time in order to appropriately carry out time related processing.

Further provided to data processing may be one or more math coprocessor s for providing a set of interfaces for very fast mathematical calculations. Those skilled in the art appreciate that optimal mathematical calculation e.g. floating point speeds are best accomplished in an interfaced customized hardware component.

Data processing system may also include one or more directed wave output interfaces for example to shoot using well known infrared or laser wave forms that are already aim able in nature. For example a smartphone can shoot other data processing systems with a directed infrared or laser wave form containing data. Data processing system may also include one or more directed wave input interfaces not shown for example to receive data from a remote shooting MS. A directed wave input interface is preferably maximized over the MS housing and may form the MS housing itself.

Data processing system will include one or more Inertial Measurement sensor s each called Inertial Measurement Unit IMU to detect MS yaw pitch and roll as well as IMU forces when the MS is in motion for example at the time of shooting. Sensor s include and are not limited to yaw pitch roll sensing accelerometer sensing gyroscopes for IMU sensing tri axial gyroscope tri axial accelerometer compass and any like sensor means for three dimensional or two dimensional MS posture and or motion sensing.

Data processing system may further include Electronic Distance Measurement EDM means device not shown for targeting with a known distance to the subject. When an EDM is used the MS of can transmit the known distance measurement along with other shoot action data for accurate target determination.

With reference now to depicted is an illustration describing one preferred embodiment of aiming a MS at another MS and shooting the MS with data. Consider a guided aim shooting scenario for example at a meeting i.e. guided by MS hardware indication or software graphic indication . Person A has a MS as shown laying on the table in front of him person B has a MS in a shirt pocket person C has a MS in his jacket pocket behind his leg person D does not have a MS with him and person E has a MS under the table in his left hand. The shooting person holds the MS as shown aims at the desired target i.e. MS known to be in jacket pocket of person C and performs a user action to shoot data to the MS of person C perhaps for a variety of reasons as disclosed. In some embodiments an aim indicator to facilitate aiming is manufactured as part of the MS housing so as to guide a user in how to aim the MS. In other embodiments the MS is placed into a mode by the user for displaying an aim graphic and subsequently depicts an aim indicator graphic e.g. arrow to facilitate aiming the MS by a user. Scenario demonstrates an embodiment wherein a plane of the MS and the top middle of the MS may be used to do a visually perceptible aim at another MS in order to shoot it. A VV is determined by comparing known aiming information of the shooting MS with anticipated end point information determined. Preferably the receiving MS determines if it is candidate for being a valid VV end point when using the aiming information received however other embodiments may involve the shooting MS or another data processing system to help make the determination. When MS shoots a non directional wave form e.g. RF waves sound etc all participating MSs in the vicinity may process the shoot attempt but only a valid VV end point targeted MS will continue processing the data.

The MS may also shoot infrared or laser at another MS but this requires a direct line of sight. Person C intentionally blocks the direct line of sight with his leg to show that his MS does indeed determine to be the valid target without a direct line of sight when using RF or another non directional wave form. Similarly the MS of person B or E although hidden from a line of sight from an aimed MS can also be successfully shot because non directional wave forms e.g. RF sound etc need no direct line of sight. Of course the MS of person A which is lying in plain sight on the table could alternately be shot with data using conventional infrared or laser assuming appropriate receptor means is on his MS. Thus non directional wave forms can potentially shoot data processing systems with a VV through walls windows objects people or other obstacles while directional wave forms e.g. laser infrared cannot. It is also advantageous to leverage RF wave forms already available to a MS rather than add unnecessary directional wave form functionality which may increase the size of a MS increase the MS cost etc.

Other positioning models may be used for simplification such as an overall Cartesian coordinate system represented by large X Y Z axis or polar coordinate system. A planar coordinate system at plane may also use a Cartesian coordinate system represented by North East Up axis or polar coordinate system.

Point s provide geodetic datum for reference from which measurements are made. In surveying and geodesy a datum is a set of reference points on the Earth s surface against which position measurements are made. There are hundreds of locally developed reference datums around the world usually referenced to some convenient local reference points. Converting between geodetic coordinates and Cartesian coordinates as well as from Cartesian coordinates to geodetic coordinates is well known by those skilled in the art. There are many techniques including those described in 

Planets other than earth can use similar models as described above and places in ambiguous space can use a manufactured globally referenced coordinate system provided MSs involved share or can transform the model for example a space station referenced coordinate system.

With reference now to depicted is a flowchart for describing a preferred embodiment of a procedure for inserting a Whereabouts Data Record WDR into a queue at a MS as was well described in parent applications. While is provided for memorable reference the reader should appreciate the full scope meaning processing and many embodiments possible. provides means for maintaining the most accurate location possible at any given time of the MS during MS travels. Whereabouts Data Records WDRs may result from a plurality of different location systems and methods in use at the MS. A WDR will contain all the information necessary to represent a location. An appropriate Whereabouts Timeliness Variable WTV along with movement determination may ensure location information is available when needed.

As discussed in parent applications e.g. Ser. No. 12 077 041 the MS contains the most accurate location information at any point in time during MS travels and is a chameleon in making use of the best location technology available at a particular time. For example accuracy is around 10 meters in low cost outdoor GPS use of satellites. The GPS receiver equipped MS uses broadcast signals sent from the satellites to measure the distance from each of the known location satellites e.g. satellites . Differential GPS DGPS can enhance GPS accuracy to as low as a half meter. DGPS typically uses one reference receiver where the exact position latitude longitude and elevation is already known with high accuracy. The reference receiver tracks the same satellites as the MS at the same time and stores similar location data. Data used to locate the MS and the reference receiver is processed to remove position errors. Additional reference receivers can be used to further improve accuracy. Survey grade GPS accuracy can be provided to 1 centimeter accuracy using a similar scheme to DGPS albeit with at least one highly accurate reference receiver and a highly accurate GPS receiver in the MS wherein data from each receiver is processed for precision and error removal.

Triangulating using Time Of Arrival TOA Time Difference Of Arrival TDOA Angle Of Arrival AOA Missing Part Triangulation MPT or the like can also provide high accuracies depending on the number of located reference antennas in use their distance from the MS at the time of location determination and the underlying mathematical model in use for vector space calculations. Assisted Direct Location Technology ADLT enhances location determination by using at least one other moving receiver i.e. another MS . MPT and ADLT are heterogeneous locating methods. Another heterogeneous locating method may use different wave forms and or frequencies to determine a single location. Recursive Whereabouts Determination RWD populates useful WDR measurements in process such as TOA TDOA AOA reference locations etc into new WDRs which can be processed for facilitating accurate determination of more accurate MS locations. Parent applications also describe locating a MS using other technologies e.g. graphical means physical address means touch means relative other MSs etc . In fact a high precision geodetic model may be used for all VV calculations i.e. no need for a local coordinate system .

Regardless of whether any of the above locating technologies are reflected in describing a current whereabouts the MS the present disclosure processing is at the mercy of the accuracy available in data describing current MS whereabouts.

A WDR takes on a variety of formats depending on the context of use. There are several parts to a WDR depending on use. There is an identity section which contains a MS ID field for identifying the WDR. Field can contain a null value if the WDR is for whereabouts information received from a remote source which has not identified itself. MSs do not require identities of remote data processing systems in order to be located. There is a core section which is required in WDR uses. The core section includes date time stamp field location field and confidence field . There is a transport section of fields wherein any one of the fields may be used when communicating WDR information between data processing systems. Transport fields include correlation field sent date time stamp field and received date time stamp field . Transport fields may also be communicated to send processing or received from receive processing. Other fields are of use depending on the MS or applications thereof however location technology field and location reference info field are of particular interest in carrying out additional novel functionality of the present disclosure. Communications reference information field may be valuable depending on communications embodiments in the LN expanse.

Some fields are multi part fields i.e. have sub fields . Whereabouts Data Records WDRs may be fixed length records varying length records or a combination with field s in one form or the other. Some WDR embodiments will use anticipated fixed length record positions for subfields that can contain useful data or a null value e.g. 1 . Other WDR embodiments may use varying length fields depending on the number of sub fields to be populated. Other WDR embodiments will use varying length fields and or sub fields which have tags indicating their presence. Other WDR embodiments will define additional fields to prevent putting more than one accessible data item in one field. In any case processing will have means for knowing whether a value is present or not and for which field or sub field it is present. Absence in data may be indicated with a null indicator 1 or indicated with its lack of being there e.g. varying length record embodiments .

When a WDR is referenced in this disclosure it is referenced in a general sense so that the contextually reasonable subset of the WDR of is used. For example when communicating WDRs between data processing systems a reasonable subset of WDR is communicated in preferred embodiments as described with flowcharts. When a WDR is maintained to the MS preferably most if not all fields are set for a complete record regardless if useful data is found in a particular field e.g. some fields may be null e.g. 1 . Most importantly Whereabouts Data Records WDRs are maintained to the MS for maintaining whereabouts of the MS. When the WDR contains a MS ID field matching the MS ID containing the WDR that WDR contains the location location field with a specified confidence field at a particular time date time stamp field for that MS. MS ID field is a unique handle to an MS as previously described. Depending on the installation MS ID field may be a phone physical or logical address name machine identifier serial number encrypted identifier concealable derivative of a MS identifier correlation pseudo MS ID or some other unique handle to the MS. An MS must be able to distinguish its own unique handle from other MS handles in field . MS Identifiers MS IDs of other MSs or unique correlations thereof are also maintained at a MS for awareness of locations and data of interest of MSs for example those in the vicinity.

Date Time stamp field contains a date time stamp of when the WDR record was completed by an MS for its own whereabouts prior to WDR queue insertion. It is in terms of the date time scale of the MS inserting the local WDR NTP derived or not . Date Time stamp field may also contain a date time stamp of when the WDR record was determined for the whereabouts of another MS but it should still be in terms of the date time scale of the MS inserting the local WDR NTP derived or not to prevent time conversions when needed and to promote consistent searches sorts etc. The date time stamp field should use the best possible granulation of time and may be in synch with other MSs and data processing systems according to NTP. A time zone day light savings time and NTP indicator is preferably maintained as part of field . The NTP indicator e.g. bit is for whether or not the date time stamp is NTP derived.

Location field depends on the installation of the present disclosure but can include a latitude and longitude cellular network cell identifier geocentric coordinates geodetic coordinates three dimensional space coordinates area described by GPS coordinates overlay grid region identifier or coordinates GPS descriptors altitude elevation e.g. in lieu of using field MAPSCO reference physical or logical network address including a wildcard e.g. ip addresses .. . particular address polar coordinates or any other two three dimensional location methods means used in identifying the MS location. Data of field is preferably a consistent measure e.g. all latitude and longitude for all location technologies. Some embodiments will permit using different measures to location field e.g. latitude and longitude for one address for another polar coordinates for another etc which will be translated to a consistent measure at appropriate processing times.

Confidence field contains a value for the confidence that location field accurately describes the location of the MS when the WDR is originated by the MS for its own whereabouts. Confidence field contains a value for the confidence that location field accurately describes the location of the MS that originated the WDR. A confidence value can be set according to known timeliness of processing communications and known mobile variables e.g. MS speed heading yaw pitch roll etc at the time of transmission. Confidence values should be standardized for all location technologies used to determine which location information is of a higher lower confidence when using multiple location technologies as determined by fields and for enabling determination of which data is of a higher priority to use in determining whereabouts. Confidence value ranges depend on the implementation. In a preferred embodiment confidence values range from 1 to 100 as discussed previously for denoting a percentage of confidence. 100 confidence indicates the location field is guaranteed to describe the MS location. 0 confidence indicates the location field is guaranteed to not describe the MS location. Therefore the lowest conceivable value for field should be 1. In most cases WDRs contain a confidence field up to 100.

Location Technology field contains the location technology used to determine the location of location field . An MS can be located by many technologies. Field also contains an originator indicator e.g. bit for whether the originator of the WDR was a Directly Located Mobile data processing system DLM or Indirectly Located Mobile data processing system ILM .

Location Reference Info field preferably contains one or more fields useful to locate a MS in processing. In other embodiments it contains data that contributed to confidence determination. Location Reference Info field may contain information useful to locate a MS in the future when the WDR originated from the MS for its own whereabouts. Field will contain selected triangulation measurements wave spectrum used and or particular communications interfaces signal strength s TDOA information AOA information or any other data useful for location determination. Field can also contain reference whereabouts information to use relative a TDOA or AOA. In one embodiment field contains the number of DLMs and ILMs which contributed to calculating the MS location to break a tie between using WDRs with the same confidence values. In another embodiment a tier of ILMs used to locate the MS is maintained so there is an accounting for the number of ILMs in the LN expanse between the currently located MS and a DLM. In other embodiments MS heading yaw pitch and roll or accelerometer values are maintained therein for example for antenna AOA positioning. Inertial Measurement Unit IMU values in general may be stored therein e.g. tri axial gyroscope tri axial accelerometer compass etc . When wave spectrum frequencies or other wave characteristics have changed in a transmission used for calculating a TDOA measurement appropriate information may be carried along for example to properly convert a time into a distance. Field should be used to facilitate correct measurements and uses if needed conversions have not already taken place.

Communications reference information field is a multipart record describing the communications session channel and bind criteria between the MS and MSs or service s that helped determine its location. In some embodiments field contains unique MS identifiers protocol used logon access parameters and useful statistics of the MSs which contributed to data of the location field

Speed field contains a value for the MS speed when the WDR is originated by the MS for its own whereabouts. Speed is maintained in any suitable units.

Heading field contains a value for the MS heading when the WDR is originated by the MS for its own whereabouts. Heading values are preferably maintained in degrees up to 360 from due North but is maintained in any suitable directional form.

Elevation field contains a value for the MS elevation or altitude when the WDR is originated by the MS for its own whereabouts. Elevation field may contain a value for elevation altitude of another MS when the WDR was originated elsewhere. Elevation or altitude is maintained in any suitable units.

Application fields contains one or more fields for describing application s at the time of completing or originating the WDR . Application fields may include field s for 

Correlation field is optionally present in a WDR when the WDR is in a transmission between systems. Field provides means for correlating a response to an earlier request or to correlate a response to an earlier broadcast. Correlation field contains a unique handle. Alternatively a MS ID is used for correlation.

Sent date time stamp field is optionally present in a WDR when the WDR is in transmission between systems. Field contains when the WDR was transmitted. A time zone day light savings time and NTP indicator is preferably maintained as part of field

Received date time stamp field contains when the WDR was received by the MS. A time zone day light savings time and NTP indicator is preferably maintained as part of field

Any fields of WDR which contain an unpredictable number of subordinate fields of data preferably use a tagged data scheme for example an X.409 encoding for a Token Length and Value called a TLV encoding . Any field of WDR may be converted a prior to being maintained to the MS or b after access at the MS or c when appropriate. Any field of WDR may be converted when sending receiving broadcasting or related processing to ensure a standard format. Other embodiments will store and access values of WDR field s which are already in a standardized format. WDR fields can be in any order and a different order when comparing what is in data transmitted versus data maintained. Some embodiments to WDRs maintained to a MS preserve transport fields and or with the WDR.

With reference now to depicted is a flowchart for describing preferred embodiments of shoot action configuration processing. Processing begins at block upon a valid user request at the MS continues to block where processing is initialized including access to the most current configuration settings may be initially defaulted block where the current configurations are presented to the user and to block for waiting for a user action In response to options presented at block . When a user action is detected processing continues to block .

If block determines the user selected to configure the shoot mode block interfaces with the user for placing the MS in one of the following shoot modes 

In some embodiments wherein the MS is appropriately equipped a shoot mode is available for each type of shoot method i.e. non directional wave form e.g. RF sound etc infrared or laser . In some uses a WDR is shot from the originating MS to a target MS and WDR In process Triggering Smarts WITS processing occurs so that permissions and charters govern processing some of which includes actions for pulling data from targeted data processing system s e.g. MS s pushing data to targeted data processing system s e.g. MS s probing data processing system s e.g. MS s for a response or data beaconing targeted data processing system s e.g. MS s playing an interactive game such as LBX tag spawning a Sudden Proximal User Interface SPUI at a data processing system e.g. MS or any other set of actions and processing already known for LBX permissions and charters. Determining a MS to be a valid VV end point indicates that that MS will see the WDR for subsequent WITS processing.

With reference now to depicted is an illustration for describing a preferred embodiment multithreaded architecture of peer interaction processing of a MS in accordance with the present disclosure as was well described in parent applications. While is provided for memorable reference the reader should appreciate the full scope meaning processing and many embodiments possible in particular for MS WDR and WITS processing.

With reference back to in other uses a WDR is shot from the originating MS to a target MS and Message Area Data Records MADRs are used to govern the outbound shoot event at the shooting MS and inbound shoot event at the shot MS thereby treating the shot as a generic application inbound or outbound event. In other uses both WITS processing and MADR processing are used for processing the shot WDR.

The specification is saved at block before continuing back to block for a configuration presentation refresh. If block determines the user did not select to configure a shoot mode processing continues to block .

If block determines the user selected to configure a default data source block interfaces with the user for specifying data source s to be defaulted for the shoot data packet so that the user need not specify at the time of shooting. Data source specifications include 

Predefined data source specification s are saved at block before continuing back to block . In some embodiments the user also specifies the data type for example how to typecast the data when shooting it. In some embodiments the user specifies which application sections of fields e.g. of are to be populated and how. If block determines the user did not select to configure a data source processing continues to block .

If block determines the user selected to configure a user action block interfaces with the user for specifying a particular user action to designate a particular shoot action. The user can specify any reasonable user interface action touch screen gesture voice command keystroke s etc to invoke a non directional wave form shoot action a laser shoot action if MS is equipped or an infrared shoot action if MS is equipped . If block determines the user did not select to configure a user action processing continues to block .

If block determines the user selected to manage an application then processing continues to block where any of a plurality of applications are managed. Block preferably displays which applications can be managed so that processing at block can determine which application was selected for being managed. Block is described by . Block continues back to block upon processing termination. If block determines the user did not select to manage an application processing continues to block .

If block determines the user selected to manage shoot related privileges or charters processing continues to block where the user is able to create delete alter or work with privileges and or charters. Privilege and charter configuration was well described in parent applications. Similarly any aspect of shoot processing disclosed can be privileged for proper interoperability between MSs and charters may or may not be managed for replacing complementing or enhancing functionality disclosed herein. Block continues back to block after configuration processing has been completed. The user may or may not have altered privilege or charter data e.g. viewed privileges or charters . If block determines the user did not select to manage privileges or charters processing continues to block .

If block determines the user selected to exit processing block terminates processing appropriately e.g. terminate access to data e.g. stop using database interface to SQL embodiment and processing terminates at block otherwise processing continues to block where other monitored user actions leaving block are appropriately handled before continuing back to block .

With reference now to depicted is an architectural illustration for discussing communications between any two mobile data processing systems of the present disclosure as was well described in parent applications. While is provided for memorable reference the reader should appreciate the full scope meaning processing and many embodiments possible. In the present context any two MSs can communicate with each other with the disclosed shoot methodologies. A shooting MS communicates location information automatically over an aimed non directional wave form RF sound etc path to a shot MS by way of a path . Paths and are the same for a VV in most point and shoot applications. Although impractical for most applications it is possible to use the technology disclosed to aim at a target many miles away wherein routers facilitate communicating VV information to the target MS for end point determination. Whereabouts information of sufficient confidence is automatically accessed at the source MS and appropriately used in data to be shot. Whereabouts information is preferably accessed from a local MS queue maintaining the highest confidence location of the MS at any particular time using one or more location technologies that may be available but an accurate location may be determined at the time of shooting. When a first MS shoots a second MS there is always Caller Location CLOC information carried with the initial shot data to accomplish VV end point determination.

With reference now to depicted is an illustration for discussing various access embodiments to a message repository of the present disclosure. A MS accesses the message repository also referred to as a message area via an access path by access to local data remote data or a combination thereof depending on embodiments. Any of the memory or storage embodiments described with may be used for repository . Access path may involve a local API a hardware interrupt interface processing at the MS a communication path to remote data perhaps over any of various topologies or any other method for getting access to the repository . Repository contains a centralized collection of presentation messaging information for carrying out operations of the present disclosure.

Present disclosure data records or any other disclosed data records may be maintained in an SQL database or maintained in record form by a data processing system. Appropriate indexes and or constraints are defined in a SQL embodiment. Depending on the embodiment some data record fields disclosed may be multi part fields i.e. have sub fields fixed length records varying length records or a combination with field s in one form or another. Some data record field embodiments will use anticipated fixed length record positions for subfields that can contain useful data or a null value e.g. 1 . Other embodiments may use varying length fields depending on the number of sub fields to be populated or may use varying length fields and or sub fields which have tags indicate their presence. Other embodiments will define additional data record fields to prevent putting more than one accessible data item in one field. Other embodiments may implement pointers in fields to memory e.g. memory pointer or storage locations e.g. file pointer and perhaps file offset therein which may or may not have been dynamically allocated. In any case processing will have means for knowing whether a value is present or not and for which field or sub field it is present. Absence in data may be indicated with a null indicator 1 or indicated with its lack of being there e.g. varying length record embodiments . Fields described may be converted a prior to storing or b after accessing or c by storage interface processing e.g. for standardized processing . Fields described may not be converted i.e. used as is . Any field may contain a join value e.g. SQL to one or more other data entities e.g. tables which contain a matching value e.g. in at least one column to associate additional data e.g. one or more other columns of data to any record field.

Handle field contains a unique handle to a particular MADR. Various embodiments include a user assigned name e.g. string a unique integer e.g. generated by a SQL Database DB unique sequence number generator or other unique data instance for accessing a particular MADR . Field is to contain a unique value across all MADRs regardless of embodiment for example when created or altered. Type field contains the type of message field of the MADR for example categorized in audio recording types video recording types text types executable types and application information types. There are many different message types depending on what formats will or can be supported in field . Some examples 

audio recording types WAV WaveForm WMA Windows Media Audio ALE Apple Lossless MP3 bit sample rate information or any combination of information describing an audio recording type for processing 

video recording types MPEG 1 MPEG 2 WMV MOV AVI pixel and or scan line information frame sampling rate information or any combination of information describing a video recording type for processing 

text types single byte characters double byte characters character set information font size appearance or any combination of information describing a text string for processing 

executable types Motorola MSB to LSB order Intel reverse byte order 16 bit 32 bit 64 bit stack size required linkable code libraries required run time variable settings or any combination of information describing an executable for processing or

application information types current location current date time calendar information reference current application in use e.g. game waymark or map term information see LRDRs or any combination of information describing application information. Application information also includes accessing status from an external application e.g. Twitter status Facebook status etc using LRDRs to skip handling the presentation e.g. do not process OGM and or determining the information to be presented for the nearest person s at the time of a distribution e.g. a call . Application information may be referenced in user designated destinations of a specified recording text for annunciation or other presentation data stream or as a single reference for an entire message output.

Some embodiments of type field simply carry a file extension or special qualifier which is recognized by an operating system for handling the MADR. Other embodiments define a plurality of fields formed together to determine a particular type. Message field contains or points to the message in the appropriate format as described by field and may be maintained to a file or suitable MS memory. In context of a particular message type message field may contain the substitution identifiers of U.S. Pat. No. 5 434 910 Method and system for providing multimedia substitution in messaging systems Johnson et al . Field may involve an executable that does no presentation e.g. MADR configured to perform desired processing . Field may be advertising content for example where a source shared communicated the MADR s to the MS for conditional presentation at the MS. Use field contains use information of the message of the MADR . A single message can have many uses e.g. multiple bits set . In a preferred embodiment field is a bit mask wherein specific bit positions indicate a particular event use. For example a bit set to 1 is enabled and a bit set to 0 is disabled. There may be bit settings for OGM OCM varieties of COM R e.g. COM for particular application to process at Remote MS varieties of COM L e.g. COM for particular application to process at Local MS e.g. a receiving or sending MS for inbound or outbound distributions or other uses. Varieties of COM R and COM L accommodate confirmation of delivery messaging for different applications such as email calendar address book phone advertising shoot or any other application where acknowledgement is desired for a related distribution e.g. delivery of another message or the inbound outbound event serves as a useful trigger for presentation. Various embodiments will granulate COM use settings differently. For example the calendar application can have bit settings for COM R cal e.g. MADRs for processing at a Remote receiving MS COM L in cal e.g. MADRs for processing at the Local MS for inbound calendar items COM L out cal e.g. MADRs for processing at the Local MS for outbound calendar items or for a preferred embodiment of COM R cal e.g. MADRs for processing at a Remote receiving MS COM L cal e.g. MADRs for processing at the Local MS for inbound or outbound calendar items or for COM cal e.g. MADRs for processing at any local remote MS or the use field may be removed from a MADR so that the use is completely specified via expression field . Any application like the Calendar example may also have different use field embodiments. In the preferred embodiment use field supports many types of events which result in MADR processing. Default field indicates whether or not the message of the MADR is a default message for processing i.e. True or False . There can be one default MADR for each of the uses e.g. described by field so that a default exists when all matching MADRs have expressions that evaluate to False. Originator intent field contains various originator instructions to be associated with the message which was not or could not be specified or communicated in type field . Field includes information for message presentation that can be applied differently to messages of the same type field . Field information includes specifications for an expiration of the MADR priority setting e.g. high or normal appearance or presentation information volume or volume override information data processing system control operation ghosting the message image like a watermark over a video recording or any other originator preference for affecting play presentation of the particular message to a user. A visual mode setting can be set here for the originator s intent of full screen dedicated user interface visual area newly spawned window pop up e.g. window with stolen focus title bar area of currently focused window use observer s preference or other visual method for presenting MADR information. An audio mode setting can also be set for the originator s intent of mix preempt or use observer s preference. Field may also include a prescription for which users groups of users authority levels of users or which specific privilege s configured can maintain distribute share manage view alter present or delete the MADR. Expression field contains an expression of conditions which can be determined at the data processing system sending and or receiving the message i.e. information . Delivery criteria field may contain information for how to deliver the message e.g. by email MS2MS etc and where to deliver the message to e.g. recipient s . Recipient groups e.g. MS ID group and recipient wildcarding is supported for delivering to a plurality of recipients. A prioritized attempt may also be specified wherein unsuccessful deliveries cause further delivery attempts. A null setting in field is resolved to the user of the MS where presentation is to occur. History field preferably contains a plurality of fields including creation date time stamp last changed date time stamp creator identity information updater identity information system address information where actions took place and any other information useful for forming useful history of why MADR data is the way it is. Identity information may be a specific identifier or a group identifier for example used in enforcing intent field for specific MS processing. Active field is preferably a Boolean Yes No indicating whether or not the MADR is active i.e. participates in being considered for automated processing . Filter join value field contains a null or a join link to at least one Event Filter Record EFR . Description field contains an optional user documentary e.g. text for the MADR . MADRs are operating system independent objects for being processed locally or remotely and are shared between systems based on permissions.

Event Filter Records EFRs may contain one or more records rows which are joined to one or more MADRs by matching filter join field with filter join field . A filter join type field contains the type of data being joined to the MADR s and data field contains data of the type described by field . For example data field is whereabouts information e.g. location when type field is WHEREABOUTS data field is keyword s information e.g. a string or delimiter separated text strings when type field is KEYWORDS and data field is scheduling information e.g. date time expressions when type field is DATETIME. There may be many supported type fields with corresponding data . Description field contains an optional user documentary e.g. text for the EFR . History field preferably contains a plurality of fields including creation date time stamp last changed date time stamp creator identity information updater identity information system address information where actions took place and any other information useful for forming useful history of why EFR data is the way it is.

In one embodiment EFR data is maintained as part of the MADR object itself in fields of intent field for originator author intent for the presentation that can be shared between systems based on permissions maintained by permissions and presented using permissions. A preferred embodiment separates out EFR data so that a plurality of MADRs can reference a single EFR. There may be MS applications which use EFRs for other purposes. Although EFRs extend MADR processing the MADR plus EFR together are viewed semantically as a single MADR object for processing.

Name field contains a name for the LRDR type field contains a type of LRDR for correct interpretation of field e.g. a plurality of applications sharing a waymark information repository encoding field contains the whereabouts encoding which can be parsed and processed as indicated by type field description field contains a user defined description for the LRDR preferably a text description which can be annotated annunciated unambiguously and other fields are not of immediate interest here. In some embodiments name field contains the description and field is not necessary. In some embodiments description information e.g. field is a recording e.g. made by a user for audio and or video presentation for describing LRDR information and a description type field e.g. additional field may be provided to facilitate interpreting different description formats in field . A user may ensure descriptions are unique if an application does not enforce unique descriptions. Map Term Data Records MTDRs of the parent applications can also be maintained as LRDRs and accessed appropriately when used. LRDRs provide the interface for activities of applications used to mark locations so MADR presentation processing can use those locations for useful functionality.

With reference now to depicted is the preferred embodiment BNF grammar from the parent applications in particular for memorable reference. An Expression of may be specified for field . Such an Expression or derivative embodiments thereof may be user configured specified preconfigured user selected choices at a data processing system configuration generated or defaulted set in accordance with other user configurations. Various embodiments will interpret at message access time the expression of field or a data processing system e.g. MS may internalize field at configuration time for efficient processing at a later time e.g. at block upon any configuration changes when the message is accessed. The reader should appreciate the full scope meaning processing and many embodiments possible as represented by .

With reference now to depicted is a LBX application fields implementation status table from the parent applications in particular for memorable reference. While facilitates discussing a few application examples of message processing any application involving a sender or shooter caller invoker submitter etc and recipient or shoot ee e.g. MS being shot invokee submittee etc may participate in using the message processing disclosed. MADRs will be processed similarly to the descriptions herein for every application with inbound or outbound event. Generic processing is involved for any application including the disclosed shoot application section . A shoot application section is used for shoot functionality. Presence indicates shooting a WDR and MADRs can be used for shoot application inbound and outbound processing. Shooting specific data is appropriately stored in the shoot application section for processing by the receiving data processing system s e.g. MS s and data which is being shot may be contained in any of the application sections e.g. as carried in fields .

With reference now to depicted is a table to facilitate explanation of message processing for ADs OGMs OCMs and generic application COM processing. Explanation table shows a processing result for a particular scenario including a select exemplary set of applications. Special applications are described in rows and generic applications are described in rows . Any application may be involved in MADR processing in a similar manner to rows .

AD application AD specific events are configured for when to access AD specific MADRs in repository for AD processing. ADs may be presented local to the data processing system hosting the repository or ADs may be presented at remote data processing systems. When an event occurs MADRs are accessed and any applicable MADRs with expression fields evaluating to True are presented according to the other MADR fields and the observing user s preferences. A COM may also be associated to inbound or outbound advertising information.

OGM application When a call goes unanswered at the receiving data processing system processing accesses OGM specific MADRs and any applicable MADRs with expression fields which evaluate to True are presented according to the other MADR fields. Typically a single OGM is presented to the caller and an opportunity is provided to the caller for leaving a recorded message. OGM processing is well known in the art however use of the message repository processing provides an improved method for customizing OGMs to specific callers. OGMs may be video in nature for video messaging between data processing systems e.g. MSs .

OCM application During an active call a user can perform an action to invoke OCM processing. If the user made the call it is assumed that the user caller has selected to automatically leave a recorded message at the callee s system for example after the callee s system has presented an OGM to the caller . When the user invokes OCM processing the active call thread releases user interface focus e.g. at the MS and continues to execute in the background for accessing OCM specific MADRs and then presenting OCM information. The user is free to perform other application processing i.e. use other thread s for other tasks at the data processing system MS while the active call thread automatically processes the OCM and then terminates the call. This saves the caller time from having to leave a message at a callee s system while freeing up the MS for other activities concurrently. If OCM processing is invoked during a received call the active call thread maintains user interface focus and the OCM is presented in parallel to the active call for both the caller and callee for example to both hear or see a recording. While the most common embodiment is for voice calls video calls also apply. The OCM will be presented visually as well as audibly provided the selected MADR provides visual information and the call involves a video session. Typically a single OCM is presented to a callee s data processing system.

Email application e.g. appfld.email.X A COM can be associated to inbound or outbound email. An email COM comes in two forms COM L for processing email COM L specific MADRs at the sender or recipient local system and COM R for processing specified email COM R MADR s at the remote system s . COM L MADRs are searched for each email sent or received at the local system e.g. MS . The SMS texting application is analogous preferably with out of band data i.e. not part of SMS text message to communicate COM R MADR information. Email descriptions are interchangeably applied to text messaging albeit with more simple text message distributions.

Calendar application e.g. appfld.calendar.X A COM can be associated to inbound or outbound calendar information e.g. meeting notice . A Calendar COM comes in the identical two forms COM L L for local for processing calendar COM L specific MADRs at the sender or recipient local system and COM R R for Remote for processing specified calendar COM R MADR s at the remote system s . COM L MADRs are searched for each calendar item sent or received at the local system e.g. MS .

Phone application e.g. appfld.phone.X A COM can be associated to inbound or outbound phone calls voice or video prior to OCM or OGM processing. A phone application COM comes in the identical two forms COM L for processing phone COM L specific MADRs at the sender or recipient local system and COM R for processing specified phone COM R MADR s at the remote system s . COM L MADRs are searched for each call made or received at the local system e.g. MS .

Shoot application e.g. appfld.shoot.X not shown in A COM can be associated to inbound or outbound shots. A shoot application COM comes in the identical two forms COM L for processing shoot COM L specific MADRs at the sender or recipient local system and COM R for processing specified shoot COM R MADR s at the remote system s . COM L MADRs are searched for each shot made or received at the local system e.g. MS .

For COM cases processing takes place for MADRs which have expression field evaluate to True. COM L e.g. indicated in field MADRs which have matching expressions field True are processed for inbound and outbound scenarios. The expression itself may be used to distinguish between whether inbound or outbound distributions are of consideration or what type of inbound or outbound event is of consideration. In some embodiments specific COM uses in field may indicate how to search MADRs for inbound distributions outbound distributions and COM R outbound distributions e.g. COM L in email COM L out email COM R email .

Generic application rows provide the comprehendible model for other MS applications and COM processing that applies. The advertise application e.g. appfld.advertise.X profile application e.g. appfld.profile.contents ab application e.g. appfld.ab.X emergency application e.g. appfld.emergency.X rfid application e.g. appfld.rfid.X statistics application appfld.statistics.X shoot application appfld.shoot.X and appliance application e.g. appfld.applicance.X incorporate COM L and COM R processing analogously. MADRs presented to the user or processed at a particular system have many different uses and applications. While MADRs support various presentation formats any executable can be processed thereby performing processing which may or may not present anything. In some embodiments the sender s data processing system automatically determines the appropriate COM R MADR s without user involvement and appends the data to the distribution without the sending user being burdened with user interface for specification.

Inbound and outbound distributions for other applications are involved with receiving or sending data within the context of a particular application. For example the presence of content within the WDR application fields section which is subordinate to an appfld section of fields is used to trigger MADR processor. Charters may be user configured to use AppTerm conditions for causing the same triggers and presentation actions can be configured when the AppTerm expressions evaluate to True. However a MADR is a presentation object with a content centric approach content centric in that an operating system independent object i.e. the MADR defines all necessary information for the presentation. Application configuration can be conveniently isolated in field . MADRs may be populated by an application installation and removed by an application uninstall. Field may be set by an application installation and unset by an application uninstall. WDRs are not to be the only transport of data between systems in context of the particular application. Other embodiments for communicating data between systems may be used. Continuing with some of the other examples and regardless of transmission embodiments an inbound outbound advertisement inbound outbound profile inbound outbound address book entity inbound outbound emergency communication inbound outbound rfid transmission inbound outbound statistics data entry inbound outbound appliance communication transmission or inbound outbound distribution of data in other applications can have associated objects i.e. MADRs for automated presentation messaging.

With reference now to depicted is a flowchart for a preferred embodiment of MADR configuration processing as was well described in parent applications. While is provided for memorable reference the reader should appreciate the full scope meaning processing and many embodiments possible for appropriate MADR maintenance and configuration. provides an interface for creating deleting modifying and managing MADR data in context of their specifications e.g. .

History field is to be appropriately updated to reflect user configurations made at block . While not explicitly shown field is used at block to enforce permissions privileges between the user using processing and the user who originated or last updated the EFR for what EFR alterations and management is permitted to be performed. Block provides errors to the user of processing when a needed privilege has not been granted.

If block determines the user did not select to manage EFRs then processing continues to block . Block starts the series of checking which particular application was selected for management from block options. If block determines the application to be managed is the advertising application block performs advertising application configuration for example data which may be found in section and processing continues to block . The user interfaces at block to set how the advertising application will present AD MADR information. A preferred embodiment of block configure a user s presentation preferences for all MADR presentations in particular since many of the MADRs for any application may contain advertisement information perhaps shared from another MS or system. Having block configure all MADR presentation reminds the user that advertising is involved despite there being useful MADR configurations that do not involve advertising. Block supports configuration outside of MADR data of a visual mode setting can be set here for the observer s preference of full screen dedicated user interface visual area newly spawned window pop up e.g. window with stolen focus title bar area of currently focused window user originator s intent or other visual method for presenting MADR information. An audio mode setting can also be set for the observer s preference of mix preempt or use originator s intent. Note that MADR presentation will compare an originator s intent configured in the MADR with the observer s preference for reconciling a best fit presentation of the MADR. Permissions govern authoritative reconciliation when there is a conflict between the originator s intent and the observer s preference. Block continues to block .

Block preferably accesses the most recent settings of Boolean variables for enabling MADR processing as a whole. Each Boolean variable data accessed by is preferably maintained to an application term referred to as AppTerm. An AppTerm was well defined in the parent applications and was well described in context of the BNF grammar of see . At blocks and Boolean variables are provided for enable disable of all MADR processing e.g. MADR srch enable disable certain application MADR processing e.g. MADR AD or enable disable certain subsets of application MADR processing e.g. MADR COM R cal for calendar . Blocks and preferably use permissions to enforce what subsets of processing can be enabled or disabled.

For example the user can enable or disable all processing involving functionality provided by the message repository for any of ADs OGMs OCMs and COMB for inbound and or outbound distributions in context of particular applications shoot advertising phone email address book calendar profile emergency rfid statistics appliance etc . This provides a user with the ability to enable or disable all of a category of message repository functionality as desired outside of activating deactivating specific MADR fields . Current setting s are accessed at block and preferably presented to the user. The user may change e.g. toggle the setting within context of the particular application of processing or leave the current settings as they are.

Block provides the user with ability to enable disable all MADR processing or any subset of AD and advertise application MADR processing. Processing continues to block where block processing terminates. If block determines the user did not select to manage the advertising application processing continues to block .

If block determines the application to be managed is the phone application block performs phone application configuration for example data which may be found in section as described in the parent applications. For example a user interfaces at block to set how the phone application will behave. Block preferably accesses the most recent settings and the user confirms or changes as desired. Thereafter block enables the user to specify how to request a desired OCM and additionally saves any changes before continuing to block . The user can specify which user action e.g. hot key touch screen action etc will request a default OCM which user action will request the best fit OCM and which user action will select a specific referenced OCM preferably using field . The user action specified may also indicate whether or not to wait for a recording delimiter prior to leaving the message for any of the requests. For example in a hot key user action embodiment a selects the default OCM a selects the best fit OCM and an key pressed while followed by character s or number s maintained in an embodiment of field selects the particular OCM. However when the capital lock key is on this indicates to wait for a delimiter prior to automatically leaving the message. Unique touch motions may also be used. There are many different user actions which can be configured depending on the MS user interface. Waiting for a delimiter may be implemented regardless e.g. no specific user action required or may not be implemented at all e.g. user waits for OGM . Depending on embodiments block enables the user to select desirable user interface actions for making an OCM request. Block interfaces with the user for managing Boolean variables for enable disable of all MADR processing e.g. MADR srch enable disable OGM MADR processing enable disable OCM MADR processing or enable disable certain subsets of phone application MADR processing e.g. MADR COM L phone . Thereafter block processing terminates at block . If block determines the user did not select to manage the phone application processing continues to block .

If block determines the application to be managed is the email application block performs configuration of the email application for example data which may be found in section as described in the parent applications. For example a user interfaces at block to set how the email application will behave. Block preferably accesses the most recent settings and the user confirms or changes as desired. Thereafter block interfaces with the user for managing Boolean variables for enable disable of all MADR processing e.g. MADR srch enable disable all email application MADR processing or enable disable certain subsets of email application MADR processing e.g. MADR COM R email . Thereafter block processing terminates at block . If block determines the user did not select to manage the email application processing continues to block .

If block determines the application to be managed is the calendar application block performs configuration of the calendar application for example data which may be found in section as described in the parent applications. For example a user interfaces at block to set how the calendar application will behave. Block preferably accesses the most recent settings and the user confirms or changes as desired. Thereafter block interfaces with the user for managing Boolean variables for enable disable of all MADR processing e.g. MADR srch enable disable all calendar application MADR processing or enable disable certain subsets of calendar application MADR processing. Thereafter block processing terminates at block . If block determines the user did not select to manage the calendar application processing continues to block .

If block determines the application to be managed is the shoot application block performs configuration of the shoot application for example data which may be found in section see discussions . For example a user interfaces at block to set how the shoot application will behave. Block preferably accesses the most recent settings and the user confirms or changes as desired. Thereafter block interfaces with the user for managing Boolean variables for enable disable of all MADR processing e.g. MADR srch enable disable all shoot application MADR processing or enable disable certain subsets of shoot application MADR processing e.g. MADR COM R shoot . Thereafter block processing terminates at block . If block determines the user did not select to manage the shoot application processing continues to block .

Block interfaces with the user to manage an other application analogously to applications above e.g. email calendar . Thereafter processing continues to block where block processing terminates. Block handles other applications such as those shown in including COM configurations for analogous processing. COM L app MADRs via field are utilized on inbound and outbound distributions at the local MS and COM R app MADRs via field are utilized on outbound distributions for being processed at the remote receiving MS for example as specified by the sending user i.e. for all applications app SMS texting advertise profile ab emergency rfid statistics appliance etc .

With reference now to depicted is a section description of the registered LBX shoot application fields. Shoot section includes subordinate sections including the following examples 

Shoot section information may contain useful information for LBX sharing and novel applications thereof with respect to a shoot application. For example a WDR received may be treated uniquely based on a shoot entry in progress WDR in process at receiving MS or sending MS or a shot entry last made in process shot at receiving MS or sending MS . Charters can use data above in AppTerm form as well. In some MS embodiments there are multiple shoot applications e.g. one each for infrared laser RF sound etc wherein the hierarchical section structure would be affected for supporting each shoot application with data specific for the particular application e.g. appfld.shoot.infrared for qualifying all infrared subordinate sections e.g. appfld.shoot.laser appfld.shoot.RF etc . Specific appfld sections can be enabled or disabled by the user as desired. Default processing will occur in shoot processing if not found when accessed.

With reference now to depicted is a flowchart for a preferred embodiment of a procedure for preferred MADR processing of an event for generic applications described by rows for a particular application such as email calendar advertise phone shoot profile ab emergency rfid statistics appliance etc. Special application rows are described elsewhere. Processing begins at block upon an inbound or outbound event e.g. at a MS for a particular application and continues to block where parameters are determined. Depending on implementation an inbound event may occur when a distribution is received when a distribution is acted upon e.g. seen by a user or as is appropriate in designating an inbound event preferably consistent across MS applications. Depending on implementation an outbound event may occur when a distribution is sent from the application when a distribution is transmitted from the MS or as is appropriate in designating an outbound event preferably consistent across MS applications. An alternate embodiment maintains separate bits to field for different varieties of COM types for distinguishing between a plurality of inbound or outbound event types for the same application. While demonstrates MADR processing of interest to this disclosure it should be understood that the transport used e.g. email transport for the associated distribution may also be used for carrying a MADR object to prevent two separate transmissions for example in the case of COM R processing. For example a MADR object can be attached as a special attachment to an email which is then sent with an email delivery API. There are other embodiments for sending the COM R MADR to a receiving system.

The app parameter indicates which application is causing invocation and the event parameter indicates which event occurred that is associated to the application. The invoking application is assumed to take care of the inbound outbound distribution on its own so that is for MADR processing. Other embodiments will support handling of the distribution e.g. to send it and the MADR in the same invoked interface and or transmission. The sender parameter is the sender of the application event e.g. phone call caller text message sender etc and the recipient parameter is the recipient of the application event e.g. callee text message recipient etc . In a preferred embodiment criteria is a pointer to a text stream email body calendar item body text message text stream derived from an active call etc which can be compared to a field e.g. keywords compare data for when the application event is to be associated with matching EFR s to distribution information associated to the event. However criteria can be any form which may be matched to EFR information. The CLOC parameter is CLOC information received with a distribution. Parameters may take on a variety of embodiments for passing the same information. The parameters sender recipient criteria and CLOC may or may not be null when is invoked. In one embodiment MADRs include additional fields for sender and recipient comparison information which can be used to access specific MADRs at block .

Thereafter block accesses all active and un expired MADRs with use field for the particular application and event. For example each COM L variety includes COM L email COM L calendar COM L phone COM L advertise COM L profile COM L ab COM L emergency COM L rfid COM L statistics COM L appliance COM L shoot etc and an event can be either inbound or outbound. Block preferably sorts the MADRs for ordered processing based on a select set of field settings in the MADRs. Block also uses Boolean variables set in to determine if any MADRs should be searched at all. Processing continues to block . In one embodiment block first accesses all expired MADRs checking data in field and expires them i.e. preferably inactivates or discards .

Block gets the next MADR for processing and block checks to see if all MADRs from block have been processed in which case processing continues to block otherwise processing continues to block . One MADR is preferably found if any are found e.g. a default but none may be found. When a MADR is marked a default with default field expression field probably null for this case is assumed to be True i.e. no field check necessary and processing will proceed to block via block . Otherwise block determines the Boolean result for expression field preferably in real time by evaluating conditions of the expression using stack processing and access to applicable terms. Thereafter if block determines expression field evaluated to True then block accesses any joined EFRs to the MADR in process. Block determines a no EFRs are joined b one or more EFR s joined do not match criteria and or CLOC information passed as parameters or c all EFR s joined match the criteria and CLOC information passed as parameters. Block compares location type EFRs to the CLOC parameter if not null compares the keyword s type EFRs to the criteria parameter and compares the scheduling information type EFRs to the criteria parameter if not null. The criteria parameter may include a type field for facilitating a match so multiple EFR types can be joined or type field is used for interpretation of both fields and the criteria parameter for a single joined type. Many types of criteria may be supported in EFRs. Location type EFRs clarify event handling for a certain location match. Keyword s types EFRs clarify event handling for certain associated keywords for example as contained in the application distribution e.g. email text message etc . Date time type EFRs are typically not used since expression field is used for qualifying this information anyway. Thereafter if block determines the MADR does indeed match the requirements of the application which invoked processing then block invokes a presentMADR procedure of with parameters passed for the MADR object e.g. or pointer thereof a constant of offline sender recipient and CLOC information if available and processing continues back to block . If block determines one or more EFRs do not match parameters then processing continues back to block . If block determines the expression evaluated to False then processing leaves block for block . When zero or more COM L MADRs are processed block checks to see if the application event is an outbound event. If the event is an outbound distribution processing continues to block otherwise processing continues to block where the application context invoker is returned to. Block accesses active COM R MADRs for the particular application e.g. COM R email and places them into a recognizable list a user can act upon block presents the list to the user of the MS of processing block interfaces with the user for list selections and block waits for particular user actions. Block preferably sorts the MADRs based on a select set of field settings in the MADRs. Block also uses Boolean variables set in to determine if any MADRs should be searched at all. One MADR is preferably found if any are found but none may be found. The user may examine any MADR data prior to making a selection at block for example by actions processed at block . If no MADRs are found the list is an empty list where the user can interface at block for exiting via block . When an action is detected block continues to block . If block determines the user selected to exit processing then the application context event detecting invoker of is returned to at block otherwise processing continues to block . If block determines the user selected one or more MADR s e.g. COM R then processing continues to block otherwise any other action at block is appropriately handled at block and processing continues back to block .

Block starts an iterative processing loop by getting each selected MADR and continuing to block . If block determines all selected COM R MADRs have not yet been processed processing continues to block otherwise processing continues to block for returning to the invoker of . Block interfaces with the user to specify and or confirm delivery criteria field for where to send present the message field information e.g. remote MS . When accessed at block COM R MADR fields may be set to null populated with a useful default or starter data or may already contain complete information. The user can confirm or specify different delivery criteria at block . In some embodiments the user can alter any MADR fields prior to sending preferably as governed by permissions. If the user decided to exit out of MADR processing at block as detected at block then processing continues back to block otherwise the MADR is delivered to the remote MS s by preparing send parameters at block and invoking send processing of at block before continuing back to block . Depending on settings in the application distribution for outbound processing may need to be invoked for a plurality of recipient MSs therefore an iterative loop is appropriately incorporated around blocks and for handling multiple recipients and for handling attempts for a prioritized retry. An alternate embodiment may handle multiple recipients in send processing invoked at block depending on a transport interface used. Parameters are prepared at block so a MADR is delivered in its entirety for processing at the receiving MS s . Other transport mechanisms may be utilized and of course cross application addressing may be used to map to a different addressing method. focuses on MADR processing. Various embodiments may not assume the inbound or outbound application distribution associated with COM processing is processed appropriately outside of processing. Preferably a CLOC parameter is passed whenever possible including via block e.g. block accesses MS whereabouts for setting the CLOC data .

Another embodiment may not interface with the user at block and instead use delivery field to deliver the MADR for processing at the specified receiving MS s . In this embodiment the receiving MSs are assumed to be the targets for presentation message information of the MADR sent.

With reference now to depicted is a flowchart for describing a preferred embodiment of a procedure for sending data to a remote MS for example to perform a remote action of presenting the MADR information to a user. Parent applications contain discussions relevant to MADR processing. The purpose is for the MS of processing e.g. a first or sending MS to transmit MADR data to other MSs e.g. at least a second or receiving MS for remote processing of the MADR information. The receiving MS may receive MADR data wirelessly by being within wireless range of the sending MS i.e. no intervening data processing systems or may receive over a peer to peer connection by way of data processing system s facilitating longer range data flow. Processing begins at block continues to block where the caller parameter s passed to processing are used for sending at least one data packet containing properly formatted data for sending and for being properly received and interpreted. Block may reformat parameters into a suitable data packet s format so the receiving MS can process appropriately see . Depending on the embodiment any reasonable supported identity is a valid target e.g. and may be derived from the delivery criteria . Thereafter block waits for an acknowledgement from the receiving MS if the communication embodiment in use utilizes that methodology. In one embodiment the send data packet is an unreliable datagram s that will most likely be received by the target MS. In another embodiment the send data packet s is reliably transported data which requires a final acknowledgement that it was received in good order. In any case block continues to block .

Block formats the data for sending in accordance with the specified delivery method along with necessary packet information e.g. source identity wrapper data CLOC etc and sends data appropriately. The targeted MS should recognize that the data is meant for it and receives it. Block waits for a synchronous acknowledgement if applicable to the send of block until either receiving one or timing out. Block will not wait if no ack response is anticipated in which case block sets status for block to got it . Thereafter if block determines an applicable ack response was received i.e. data successfully sent received or none was anticipated i.e. assume got it then processing continues to block for potentially processing a response. Block will process the response if it was anticipated for being received as determined by data sent at block . Thereafter block performs logging for success. If block determines an anticipated ack was not received then block logs the attempt. An alternate embodiment to block will log an error and may require a user action to continue processing so a user is confirmed to have seen the error. Both blocks and continue to block where the invoker is returned to for continued processing e.g. back to block .

With reference now to depicted is a flowchart for describing a preferred embodiment of processing for receiving execution data from another MS for example a MADR object. processing describes a Receive Execution Data RxED process worker thread. There may be many worker threads for the RxED process. Parent applications contain discussions relevant to MADR data processing.

A RxED thread processing begins at block continues to block where a process worker thread count RxED Ct is accessed and incremented by 1 using appropriate semaphore access e.g. RxED Sem and continues to block for retrieving from a receive queue the sent data perhaps a special termination request entry and only continues to block when the MADR data or record of data e.g. action for remote execution particular atomic command or termination record is retrieved. Block stays blocked on retrieving from a receive queue until data is retrieved in which case processing continues to block . If block determines a special entry indicating to terminate was not found in the receive queue processing continues to block . Block validates incoming data for this targeted MS before continuing to block . A preferred embodiment of receive processing already validated the data is intended for this MS by having listened specifically for the data or by having already validated it is at the intended MS destination e.g. block can continue directly to block no block and block required . If block determines the data is valid for processing then block checks the data for its purpose remote action particular command or MADR processing . If block determines the data received is for processing a remote action then processing continues to block as described in the parent applications. If block determines that the execution data is for processing MADR data then processing continues to block where the MADR is prepared for subsequent processing. Block accesses MADR fields and block evaluates expression field in context of the receiving MS. Privileges should be accessed at block for special terms which require permission. If expression field evaluates to True then the MADR data is so far assumed to be privileged for further processing. If the expression evaluates to False or is not able to be evaluated because of an undefined or unprivileged term then the MADR data is assumed to NOT be privileged for further processing and block need not pursue access further to privilege data. Thereafter block accesses privileges i.e. if Expression evaluated to True for eligible MADR processing to ensure the source has proper privileges for processing the MADR data at the MS of processing. Block recognizes the MADR for not being privileged if expression field did not evaluate to True at block . Expression field set to null implies a True evaluation result.

Thereafter if block determines the MADR data for execution is acceptable and privileged then block invokes the presentMADR procedure of at the MS of processing with parameters passed for the MADR e.g. a pointer thereof a constant of offline and optionally may be null sender receiver and CLOC information which may useful for presentation. Thereafter block checks if a response is needed. If block determines a response is to be sent back to the originating MS block completes a response to the originating MS of the data received at block and block sends broadcasts the response before continuing back to block for the next incoming execution request data. If block determines a response is not to be sent back to the originating MS then processing continues directly back to block . If block determines the MADR for processing is not acceptable privileged then processing continues back to block .

Referring back to block if it is determined that the data is not valid for the MS of processing processing continues back to block . Referring back to block if a worker thread termination request was found at the receive queue then block decrements the RxED worker thread count by 1 using appropriate semaphore access e.g. RxED Sem and RxED thread processing terminates at block . Block may also check the RxED Ct value and signal the RxED process parent thread that all worker threads are terminated when RxED Ct equals zero 0 .

For other acceptable receive processing methods are well known to those skilled in the art for hooking customized processing into application processing of sought data received e.g. mail application callback function API etc . Thus there are well known methods for processing data for receiving MADRs for processing from an originating MS for example when using email. Similarly as described above SMS text messages can be used to communicate data albeit at smaller data exchange sizes. The sending MS may break up larger portions of data which can be sent as parse able text to the receiving MS. It may take multiple SMS text messages to communicate the data in its entirety. Various embodiments will send MADR s along with an associated distribution.

Regardless of the type of receiving application those skilled in the art recognize many clever methods for receiving data in context of a MS application which communicates in a peer to peer fashion with another MS. are an embodiment of MS to MS communications referred to with the acronym MS2MS. Various MS2MS communication embodiments may include reliable transport protocol involving a one or more packets sends and acknowledgements between systems for a single send unreliable transport protocol involving one or more packets sends and acknowledgements between systems for a single send or on going communications processing which is subsequent to an initiation send of data between systems e.g. peer to peer application processing. In some embodiments the LBX service propagation architecture is leveraged for hopping data to the targeted peer MS wherein distance between an originating MS and a targeted MS is increased by intermediary MS s middle manning the transmission.

COM R event processing provides a user with useful confirmation of delivery status by sending a MADR object to a target remote system with an expression for checking presence of a previously sent distribution. If the previously sent distribution has been delivered acted upon or used as indicated by applicable AppTerm variables the sending user can be delivered a message in any of the variety of presentation types for the confirmation of delivery status. Similarly a confirmation of delivery status for a previously sent distribution not having been seen for a period of time as indicated by applicable AppTerm variables can be provided to the sending user in any of the variety of presentation types for the confirmation of delivery status. In some embodiments processing of blocks through can be invoked at any time by a user preferably with convenient user parameters for which MADRs to present in the list e.g. by application and or use and or any selections of MADR field s values . All COM R event processing can be accomplished with AD type MADR objects which are shared to target systems and triggered according to a plethora of configurable event options. COM R processing is provided for convenience within context of a particular application event.

Reconciliation includes setting MS configuration changes to make based on the originator s intent with the observer s preferences for any presentation characteristics e.g. appearance specifications volume adjustment specifications full screen presentation dedicated area presentation pop up window title bar area mix preempt etc preferably using privileges to govern what can and cannot be set with authority. Thereafter if block determines was invoked for an active phone call line channel information in parameter passed processing continues to block . If block determines the MADR cannot be presented appropriately for the active call line audio or video channel information e.g. using type field then block deactivates the MADR field and the invoker is returned to at block . An alternate embodiment of block includes error notification processing. If block determines the MADR to be presented is suitable for the active phone call line then block sets this invocation s subsequent processing logic for making use of the active call line channel information block saves current MS configurations determined for change at block block accesses available and suitable presentation interfaces at the MS block determines which interface is a best fit for the MADR to be presented and block checks if a suitable presentation interface was found. A MS should provide a variety of content presentation applications suitable for presenting MADR information. Some of these applications are prepackaged with the MS or post factory installed to the MS. For example a video presentation application may be installed or an audio application may be installed. A video presentation API may be installed or an audio API may be installed. When arrived to from block there is preferably a phone API available for presenting audio information on the active audio channel and there is preferably a video API for presenting video information on the active video call channel. A MS user may also install APIs or applications for certain presentation content types. Block accesses known useful applications interfaces depending on type field and any active channel information and block selects a best fit if there is more than one suitable application or interface perhaps using a user s precedence configuration for which application to select. Thereafter if block determines a suitable application or interface e.g. API was found processing continues to block .

Block optimizes parameters to the application or interface based on MADR field settings and block reconciliations makes any remaining MS configuration changes that are not supported with parameters to the application or interface and block invokes the application or interface with the parameters for presenting the MADR message field . Block will invoke for resolving any application information specifications for example to build the message for presentation and block will not invoke the application or interface if returns for skipping the presentation. Thereafter block restores configurations if any were modified at block saved at block and the invoker is returned to at block . If block determines a suitable application or interface was not identified for presenting the MADR at the MS then block makes configuration changes if any determined at block block presents field with custom processing and processing continues to block . Custom processing should be a last resort of presentation. The MS is preferably configured with suitable presentation applications or interfaces which can be determined at blocks . Suitable application or interfaces not already factory provided in the MS are preferably a plug in and use installation. Blocks may determine that the message type field cannot be handled and that an attempt at presenting MADR information with custom processing should be made.

Referring back to block if it is determined was not invoked for an active call i.e. offline then block accesses the MS observer s user s prompt configuration data and block reconciles the MS observer s user s configured prompt preferences with any MADR originator s intent field prompt configurations. Reconciliation includes setting prompt processing based on the originator s intent with the observer s preferences preferably using privileges to govern what can and cannot be set with authority. Thereafter reconciled prompt processing begins at block for checking to see if a prompt should be provided at all for the presentation.

If block determines a prompt is to be provided block provides the prompt and configured options to the user and block interfaces with the user for a response. When a user response is made processing continues to block . Some embodiments present description field sender information recipient information MADR type information and or any other useful data about the presentation. Applications event CLOC or any other useful information may also be presented in the prompt and may be enabled disabled for example for software debug purposes. A preferred embodiment presentation prompt presented at block may provide any of the following options depending on reconciliation at block .

If block determines the user did not select to continue with the presentation then block determines if the user qualified the cancellation for any of the options provided. If block determines the user selected to qualify canceling the presentation then block processes qualifications and the invoker is returned to at block . Block processes qualifications preferably as described here 

If block determines the user did not qualify the cancellation i.e. outright cancelled it then processing continues to block . Referring back to block if it is determined the user selected to continue with the presentation processing continues to block . Referring back to block if it is determined that no prompt was to be provided processing continues to block . If block determines that delivery criteria field is null then processing continues for MS local presentation at block . Block and subsequent processing is as described above except there is no active line channel information to be associated with the presentation.

If block determines delivery criteria is specified then processing continues to block . If block determines the MADR is to be sent using a well known transport layer interface e.g. SMTP then block prepares parameters e.g. appearance information for sending the MADR information block invokes the transport interface and processing continues to block . In effect the MADR is presented by sending it to the delivery criteria which may be a single recipient group of recipients or wildcard specification of recipients. If block determines delivery criteria is not destined for a well known transport layer interface the MADR is delivered to the remote MS s by preparing send parameters at block and invoking send processing of at block before continuing to block . Depending on settings in the application distribution for outbound processing may need to be invoked for a plurality of recipient MSs therefore an iterative loop is appropriately incorporated around blocks and for handling multiple recipients and for handling attempts for a prioritized retry. An alternate embodiment may handle multiple recipients in send processing invoked at block depending on a transport interface used. Parameters are prepared at block so a MADR is delivered in its entirety for processing at the receiving MS s . Other transport mechanisms may be utilized. Preferably a CLOC parameter is passed whenever possible including via block whereby whereabouts is accessed at block .

If block determines field is for audio only block prepares peripheral output interface parameters using block reconciliations and first invoking the procedure for resolving any specified application information. LRDR information may be used to skip presentation processing e.g. no presenting at MS whereabouts described by a LRDR therefore a skip return is checked for at block . After resolving any application information block finalizes the message and block invokes the peripheral BIOS interface for presenting the audio if no skip was to be processed. Block is capable of many format transformations in order to get the audio to a proper format to the interface invoked at block . Active call line channel audio play was preferably handled with an API in and active call information preferably need not be used at block however block can interface for audio output. Processing leaves block for block . If block determines field is not for audio only processing continues to block .

If block determines field is for video block prepares display interface parameters using block reconciliations and first invoking the procedure for resolving any specified application information. LRDR information may be used to skip presentation processing e.g. no presenting at MS whereabouts described by a LRDR therefore a skip return is checked for at block . After resolving any application information block finalizes the message and block invokes the video display interface for presenting the video if no skip was to be processed. In one embodiment the MS display buffer is written to for display to the MS. Block is capable of many format transformations in order to get the video to a proper format. Depending on processing and block reconciliations MS whereabouts information may be encoded as a ghosting image over the video of message field . Active call line channel video play was preferably handled with an API in and active call information preferably need not be used at block however block can interface for video output. Processing leaves block for block . If block determines field is not for video processing continues to block .

If block determines field is for text block prepares textual display parameters using block reconciliations and first invoking the procedure for resolving any specified application information. LRDR information may be used to skip presentation processing e.g. no presenting at MS whereabouts described by a LRDR therefore a skip return is checked for at block . After resolving any application information block finalizes the message and block presents text to the appropriate user interface object if no skip was to be processed. Block is capable of many format transformations in order to get the final form text. Active call line audio play was preferably handled with an API in and active call information preferably need not be used at block for example to annunciate the text during an active call however block can interface for audio output. Processing leaves block for block . If block determines field is not for text processing continues to block .

If block determines field is exclusively for an application information type block prepares presentation parameters using block reconciliations and first invoking the procedure for resolving the specified application information. LRDR information may be used to skip presentation processing e.g. no presenting at MS whereabouts described by a LRDR therefore a skip return is checked for at block . After resolving the application information block finalizes the message and block presents the message in accordance with other MADR fields if no skip was to be processed. Block is capable of many format transformations in order to get the target presentation format. Active call line play was preferably handled with an API in and active call information preferably need not be used at block for example to provide information during an active call however block can interface for desired output. Processing leaves block for block . If block determines field is not for an application information type processing continues to block where other MADR types if defined are processed appropriately and processing continues to block .

If block determines application information is for using LRDR information to potentially skip providing the presentation then processing continues to block for processing as described above with the following exceptions 

If block determines application information is not for checking to skip the presentation then processing continues to block .

If block determines application information is for accessing MS user status from an external application e.g. Facebook Twitter then processing continues to block for accessing the status preferably through an API. Other embodiments can force a user interface refresh from the external application e.g. load html page in order to access data therein for obtaining status. Thereafter if block determines useful status was found then block builds an informative message with the status and processing continues to block otherwise processing continues to block . If block determines application information is not for accessing MS user status from an external application then processing continues to block .

If block determines application information is for accessing information about MS users in the vicinity and in common with the MS of processing then processing continues to block for accessing locally maintained whereabouts information for the specified number of users in the vicinity of the MS of processing. Application information specifications for nearby in common person s include a number of nearby MS users 1 or more and a distance measurement in convenient units for how nearby e.g. 25 feet . Thereafter block accesses permissions granted to both the sender passed to processing if not null and each user found in the vicinity of the MS user of processing. Granted permissions are one embodiment for determining the in common condition. Other embodiments will access contact lists call history email history SMS history the like or combination thereof to determine the in common condition. Thereafter if block determines that the sought number e.g. 1 of in common MSs in the vicinity within specified distance are found then block builds an informative message with user identifier information for example to inform to call someone else nearby. Block preferably uses source section to build a message with the best identifier information depending on the message type field . Processing leaves block for block . If block determines the sought number of nearby person s in common have not yet been found then processing continues back to block for checking for additional MSs in the vicinity. Blocks and stay in a loop until MSs are identified or there are not enough of them in the vicinity meeting specifications. Block also builds a message indicating there is no status available and no people in common nearby that may help. If block determines application information is not for accessing MS user information for nearby person s in common then processing continues to block .

If block determines application information is for accessing the current MS date time information block accesses the current MS time and processing continues to block through block for building a message containing date time information. Thereafter processing continues to block . If block determines application information is not for accessing the current MS date time information then processing continues to block .

If block determines application information is for accessing MS user calendar information block accesses the current MS time and processing continues to block through block for accessing a calendar information scheduled for the current time. Thereafter if block determines a calendar entry matches the current time then block builds a message containing the informative scheduled calendar information and processing continues to block otherwise processing continues to block . If block determines application information is not for accessing the calendar information then processing continues to block . An alternate embodiment supports qualifying the application information for calendar access with identifier information identifying the owner of the calendar information to be accessed.

If block determines application information is for accessing the current application in use at the MS block accesses the currently focused application information e.g. title bar information application name description field information or other informative data block builds an informative message using the information found and processing continues to block . If no focused information could be determined then default a message is built at block e.g. message as to user is busy using MS . If block determines application information is not for accessing the current application in use then processing continues to block .

If block determines application information is for overriding a message with CLOC information block accesses a confident MS of processing whereabouts. Thereafter if block determines a confident whereabouts could not be determined then processing continues to block for normal processing of the field otherwise block overrides replaces any message in field with an informative message that the sender caller is nearby if the MS of processing is nearby the CLOC associated with the sender caller. A preferred embodiment allows qualifying with a specification for a distance in convenient units for how close to denote being nearby. Block will not override message field if CLOC is null or if the nearby condition is not true. If the CLOC is nearby the whereabouts determined at block then an informative message is built that the sender is nearby perhaps with how nearby using the qualifier specification in the message. Thereafter processing continues to block . If block determines application information is not for overriding a message with CLOC information then processing continues to block where other application information types if defined are resolved and processing continues to block . In one example a CLOC override is useful for letting a remote caller know they are within shouting range.

MS whereabouts e.g. at blocks etc. are determined using the MS GPS interface a WDR queue disclosed in the parent applications a location retrieval interface or any other MS resource for determining the location of the MS.

One embodiment defines a new use field containing what application information the LRDR is to be used for e.g. bit field mask like use field for presentation skipping and or location reporting and or specific map application use etc .

The sender or caller and recipient or callee can take on a variety of identifier embodiments. When provided in a form which should be transformed to another form for proper comparison or processing source section information can be used for cross application addressing to translate from one identifier form to another identifier form when necessary.

In an alternate embodiment MADRs do not contain an expression field . Permissions privileges in place between the sender caller and recipient callee are completely relied upon for governing what conditional processing is to take place. In another embodiment both the expression and privileges are used to determine what conditional processing is to take place preferably with privileges having precedence over expression evaluation. Wherever permissions are used herein they are enforced through the LBX model of identifiers or groups of identifiers e.g. field may carry group information .

Shoot action processing begins at block as the result of a user shoot action for example after the MS is put into an aim mode and or aim posture perhaps after ensuring a good location is known. may be invoked in context of a particular application for shoot processing or on behalf of an anticipated application outcome. Thereafter processing continues to block for accessing current system date time block for determining the current MS pointing aiming posture block for determining the current MS pointing aiming direction block for determining the Virtual Vector VV starting point and block for determining whether or not the WDR accessed at block is timely. Block accesses MS posture by accessing MS measurements yaw pitch roll and or IMU e.g. compass measurements e.g. at the time for the MS assumed pointer of the shoot action . Alternatively like MS accelerometer readings can be used to determine the same data. Block accesses a heading angle measurement for the MS assumed pointer direction using magnetic North as the standard reference. In many embodiments yaw and heading are identical when pointing a MS at a target and or pitch is not needed in a two dimensional target determination technique and or roll is not necessary for the aimed MS. Block preferably accesses a MS WDR queue which contains a timely confident and sufficiently accurate location of the MS at the time of the shoot action perhaps a location determined by a plurality of location technologies supported by the MS. Block may also access a single data area which maintains a timely and most recent MS location.

If block determines timely confident and sufficiently accurate MS whereabouts could not be determined block provides the user with an error and block logs useful statistics and shoot history information before the invoker caller of is returned to at block . Block preferably ensures the user is aware of the error reported e.g. visually and or audibly and may require the user to acknowledge the error before continuing to block . The user can manually get a location at the MS or may tweak a Whereabouts Timeliness Variable WTV for optimal location data being available to a shoot action.

If block determines timely confident and sufficiently accurate MS whereabouts was found i.e. VV starting point has good data block accesses shoot application variables needed to help determine shoot processing e.g. fields of section for performing the shoot action. data may be defaulted or set by a user application or system. Application variables may be defaulted at MS initial use and may be set with new values outside of the application context wherein the shoot action is performed or within the application context e.g. by the application by user interface actions up to the time of performing the shoot action or set at the time of performing the shoot action. Alternately shoot application variable information may be passed as parameters to the procedure of for access at block . Thereafter block accesses any in context application data e.g. other application section s of fields such as those of and may override shoot application variables of section as needed for the particular application context of processing. For example block may override appfld.shoot.fuzzyD with a determined EDM distance measurement when EDM means of the MS has been successfully used to determine a distance to the target. Thereafter block updates a WDR for outbound transmission prepared for an outbound broadcast by the MS of processing with data gathered by processing up to that point and block checks to see if predefined data was defined e.g. at block . WDR fields are set appropriately e.g. MS posture direction stored to field location to field confidence to field etc .

If block determines predefined data was configured for the shoot action the data is accessed at block block updates the WDR with the data and processing continues to block otherwise block continues directly to block . Block will override replace any identical data e.g. appfld sections in fields . Typically blocks and set appfld.shoot.params section data for certain appfld.shoot.purpose settings. Block may have to open a file for access or start using a database to get access to a database object such as column s from row s from table s . Optimally block will have internalized the predefined data for a quick access. Blocks through are strategically ordered for the best VV starting point descriptors associated with the shoot action and subsequent processing will not affect VV determination.

Block gets ID parameter information and performs a cross application addressing conversion if appropriate for example when an identifier from the shooting context does not match that of the desired WDR for transmission. Thereafter outbound WITS processing of is performed at block and block appropriately invokes MADRproc processing of before continuing to block . The criteria parameter can be set as a result of the application context processing of or an alternate embodiment passes criteria as a parameter to processing at block . The CLOC parameter is set with WDR location. Thereafter block determines if the ID parameter was NULL i.e. none specified when accessed at block . If block determines the ID was NULL then block broadcasts the WDR to MSs in the vicinity and processing continues to block . If block determines the ID was not null then block modifies the WDR for being targeted to a particular MS e.g. insert WDR into a MS targeted MS ID packet wrapper block sends the WDR and processing continues to block . Block preferably provides a visual and or audible indication to the user that the shot was made and processing continues to block . Targeting a MS with the sent WDR using a point and shoot methodology provides a more secure method for identifying the MS which is to be targeted with data. A VV end point will help confirm that the addressed MS is indeed the MS that was pointed to and shot.

As discussed in parent applications fields may contain appfld.loc.beacon.expr set with an expression to be evaluated at the receiving MS. A receiving MS which has granted the privilege of being identified to the MS of processing shall identify itself so that the user of the MS of processing will know where it is. Privileges are also granted for which conditions and terms may be specified. In a preferred embodiment the shot MS will perform the beacon after using expression evaluation processing. Beaconing includes embodiments of 

Aiming at and shooting a MS may prevent providing an expression at all for beaconing the MS. In one use an electronic tag game is accomplished with aiming and shooting. In other uses aiming at and shooting a MS further securely confirms the MS to be beaconed by the expression. In another embodiment charters are configured for handling the inbound WDR having appfld.loc.beacon.expr data so that any desired processing can be executed. The charter may have been created by either the shooting MS user or shot MS user and proper charter privileges must be in place.

With reference now to depicted is a flowchart for describing a preferred embodiment of WDR In process Triggering Smarts WITS processing as was well described in parent applications. While is provided for memorable reference the reader should appreciate the full scope meaning processing and many embodiments possible. As stated in parent applications Blocks and may perform any variety of WITS filtering for any reason to prevent further processing of a WDR . Block is modified herein to additionally invoke the procedure of to determine if processing is to continue to block i.e. returns TRUE or to complete at block i.e. returns FALSE . Thus returns a status for whether or not to ignore the WDR for further processing or to continue processing. Preferably is a function that returns a Boolean as a result True if subsequent block processing is to continue further for normal subsequent WDR processing False if block is to continue directly to block e.g. by way of block which determines to ignore the WDR . Block invokes to a check if the WDR was shot from another MS as the result of a shoot action b determine whether the WDR was aimed at the MS of processing if the WDR indicates it was shot c process the WDR if necessary outside of normal WDR processing and d return a Boolean result for whether or not the WDR is to be ignored from further WITS processing for example after determining the MS was not aimed at with the shot.

With reference now to depicted is a preferred embodiment set of command and operand candidates referenced in charters executed for shoot processing as was well described in parent applications. While are provided for memorable reference the reader should appreciate the full scope meaning processing and many embodiments possible. Shoot processing e.g. shot processing disclosed for with exploits the power of user permissible user configured automated LBX charter processing. Charters may be configured to handle shoot actions or special purpose shoot actions can specify atomic commands directly for invocation with a specified atomic operand and applicable parameters blocks and . Thus shoot actions can perform atomic commands of Send Notify Compose Find Invoke Copy Discard Move Store Connect Administrate Change or any other command for each operand of AutoDialNumber WebLink Email SMSMsg BroadcastEmail BroadcastSMSMsg Indicator Application Document File Content DatabaseObject Data Semaphore Directory ApplicationContext UserInterfaceObject UserInterfaceControl Input Output Alert Procedure Container ProgramObject Cursor Calendar AddressBook or any other operand along with applicable parameters.

With reference back to if block determines a shoot confirmation was requested i.e. appfld.shoot.confirm TRUE block waits for response from the target s otherwise block continues to block . For example a user may target one or more MSs with a single shoot action as configured in appfld.shoot.maxTargs and then want a confirmation that the intended target s are correct. Block continues to block when anticipated responses are detected or a reasonable waiting time elapses.

If block determines a timeout occurred block provides the user with an informative error e.g. number of replies if any out of total needed MS information for who replied etc before continuing to block . If block determines more than appfld.shoot.maxTargs responses were detected block provides the user with an informative error e.g. number of replies MS information for who replied etc before continuing to block . If block determines anticipated responses were returned block interfaces with the user with information from the response s e.g. MS information of who replied for confirming the shoot action to the target s or for canceling the shoot action. Thereafter a confirmation request is sent out at block by targeting the responders e.g. directed to each MS ID for confirming to perform the shoot action. Application data may be sent for processing at block to affect subsequent processing. Depending on user selection at block block may send out a cancellation request by targeting the responders e.g. directed to each MS ID for cancellation of the pending shot processing of for example after seeing that intended recipient s are not those that were targeted. Block continues to block .

When the user interfaces at block in context of a particular application of processing there are many novel processing embodiments. A SPUI may be spawned at the MS of processing for target confirmation and or automatically populating a user interface with the target information along with any application data up to that point or with data returned back from block . It may be the intent of the user of processing to cancel the shoot request at the MS of processing because all desired shoot processing is being handled at block . In one example the user of processing is currently using an application context where sorting is appropriate e.g. email inbasket or folder prioritized forthcoming calendar events address book contact information for forthcoming meeting events etc . The user shoots the MS of processing in order to sort entries by the identifier of the shot MS. See parent applications for sorting by location of MSs and using cross application addressing. The present disclosure enables aiming and shooting MSs that the sort functionality is to consider. The user may shoot a group of MSs or a plurality of MSs nearby each other to sort entries by those identifiers. In another example the user of processing is currently using an application context of a vicinity monitor discussed in parent applications or some other mapping application. Similarly the user shoots MS s in order to have them added to the vicinity monitor for monitoring or added to the map application for finding their location e.g. location data returned at block or WDR data accessed at block . There are many useful application contexts for conveniently identifying one or more MSs by simply aiming and shooting.

If block determines the WDR is a shot WDR i.e. a WDR shot by another MS then processing continues to block otherwise processing continues to block already described. A WDR is preferably determined to be shot when at least one field from section exists in fields on an inbound WDR. If block determines timely confident and sufficiently accurate MS whereabouts could not be determined at block or that the shot was not privileged block provides the user of the MS of processing with an error and processing continues to block for updating statistics and history information before continuing to block for returning FALSE to the caller so that the WDR will not be handled any further i.e. WDR was already determined to be inbound and shot therefore the MS of must be identified as a targeted MS and privilege granting MS in order to continue usual processing . Block preferably ensures the user is aware of the error reported e.g. visually and or audibly and may require the user to acknowledge the error e.g. warn user shots may be missed if timely confident and sufficiently accurate whereabouts cannot be determined or if necessary permissions privileges not configured e.g. user can take action to ensure this problem does not happen again before continuing to block . The user can manually get a location at the MS or may tweak a Whereabouts Timeliness Variable WTV for optimal location data being available when needed. In some embodiments permissions may be checked in processing when an ID is known at block in which case block continues to block for providing the shooting user with an error when it is known that the target MS has not granted a privilege to be shot.

If block determines timely confident and sufficiently accurate MS whereabouts was found i.e. VV end point has good data block accesses the WDR parameter to processing. Thereafter block uses the location from the WDR parameter i.e. the shot WDR to access a corresponding local Coordinate System CS such as one discussed in . The CS may be accessed local or remote to the MS preferably through an Application Programming Interface API . Thereafter block converts the WDR location into the local coordinate system using the CS e.g. API with CS as parameter and block checks date time information e.g. fields and of the WDR passed to processing.

If block determines the shooting MS and shot MS are both NTP synchronized block can calculate a distance based on time using the wave form e.g. in field used to transport the WDR and processing continues to block . If block determines the shooting MS and shot MS are not both NTP synchronized then a distance can be determined using the starting point i.e. shooting MS location and end point e.g. shot MS location by first accessing the local Coordinate System CS for the MS of processing uses location from block such as one discussed in or . The CS may be accessed local or remote to the MS preferably through an Application Programming Interface API . Thereafter block converts the WDR location into the local coordinate system using the CS e.g. API with CS as parameter and block checks if the local Coordinate Systems of the shooting MS and shot MS are the same.

If block determines the shooting MS and shot MS both are using the same CS block uses the Pythagorean theorem two dimensional embodiment Distance SQRT x x y y where end point is in terms of xand y and starting point is in terms of xand y three dimensional embodiment Distance SQRT x x y y z z where end point is in terms of x y and z and starting point is in terms of x yand z to calculate a distance between the points in the same CS otherwise block accesses transformation information to transform the end point e.g. shot MS location into coordinate terms of the starting point e.g. shooting MS location block performs the transformation and block can then calculate distance before continuing to block . Transformations of the neighboring CS were discussed with . In some embodiments blocks and are both calculated whenever possible to provide maximum information at block .

Block accesses distance information calculated up to that point to determine the best fit distance in light of an appfld.shoot.fuzzyD setting which may be present in the shot WDR. A user set fuzzyD has a low confidence and an EDM set fuzzyD has a high confidence. Distance determined at blocks and are dependent on WDR information used. Confidence values are used to determine priority and to assess a distance that should be relied upon in light of distance calculation confidence. A standard deviation may be determined for use at block . MSs substantially nearby each other may result in a zero 0 distance when starting using a global CS so aiming information relative receiving MS information may be relied upon e.g. AOA at receiving MS relative yaw from sending MS . Thereafter block converts local CS coordinates into Polar coordinates for easy angle determination after preferably translating the coordinates so that the starting point is at the origin e.g. two dimensional embodiment ARCTAN of y x three dimensional embodiment ARCCOS z SQRT x yand ARCCOS x SQRT x y block determines angles e.g. for comparison to yaw and pitch and block compares end point distance and angle determination of processing with the original posture direction distance and shoot parameters from the shot WDR passed to processing also in consideration of an appfld.shoot.fuzzyT value found in shoot parameters. Block also may be implemented in a two dimensional embodiment i.e. no elevation considered or a three dimensional embodiment. In any case block uses all data available to determine target feasibility. A receiving MS equipped with detecting AOA should populate field with useful data on receipt so that determining a valid target can be as simple as comparing at block an AOA at the receiving MS with aiming information in the WDR to processing. WDR field can contain information about the receiving MS as well as information about the sending MS. Block preferably rules out an obvious infeasible target first and then rules in a feasible target. Block continues to block when a target likelihood determination has been made.

If block determines the MS of is a feasible target of the shot WDR processing continues to block otherwise processing continues to block already described. If block determines the appfld.shoot.confirm variable is set to True block builds and sends a targeted acknowledgement response packet to the shot originator e.g. targeted MS ID packet wrapper with at least an identifier e.g. MS ID useful for identifying the MS of processing and a correlation for targeting a confirmation or cancellation response back to the MS of processing and block waits for a confirmation from the shooting user for whether or not to continue with shot processing. Thereafter if block determines the wait timed out e.g. no confirmation in reasonable time period processing continues to block . If block determines a confirmation was received processing continues to block to check the confirmation. In some embodiments block uses data in the WDR from the shot to prepare appropriate response data that is to be sent back at block . This provides a shooting user with a method to immediately pull data from a shot MS without involving charter or appfld.shoot.purpose processing.

If block determines the shooting user selected to cancel shot processing then processing continues to block otherwise block checks shoot parameters section for the intention of the shooting. If block determines that appfld.shoot.purpose is for usual processing block invokes and processing continues to block for returning to for usual WDR processing as well. Depending on embodiments of MADRs objects configured the criteria parameter may be set with any reasonable data accessed in processing. If block determines that appfld.shoot.purpose is for special shoot processing the procedure of FIG. is invoked at block and processing continues to block when the procedure returns to block . Parameters in addition to the shot WDR may be passed to processing in some embodiments. Returning back to block if it is determined that no confirmation was requested e.g. appfld.shoot.confirm FALSE then processing continues to block already described.

If block determines the purpose is specified as a particular application name e.g. appfld.shoot.purpose email such as any of those of including source profile email calendar address book phone emergency location rfid hotspot services statistics and other applications through then block continues to block where processing is handled appropriately and to block for returning to the caller. If block determines the purpose is not for a particular application processing continues to block . In the preferred embodiment block accesses the application data of fields for the requested processing. For example when the purpose source source section is accessed from WDR fields for populating local MS data which will be useful for cross application addressing when converting shooting MS identifier s when the purpose profile profile section is accessed for immediate compare against configured charters without regard for any permissions. Permissions are only validated for being a privileged shot candidate when the purpose email the present disclosure provides literal meaning to the words shoot me an email Email section is accessed for appfld.email.pending data which contains a current email item being sent to the MS of processing. The email item is deposited to the MS user s email inbasket with API as though it arrived by conventional delivery means. In some embodiments the email has an associated indicator that it was shot when the purpose calendar the present disclosure provides literal meaning to the words shoot me a meeting notice Calendar section is accessed for appfld.calendar.pending data which contains a current calendar item being sent to the MS of processing. The calendar item is deposited to the MS user s calendar application with API as though it arrived by conventional delivery means. In some embodiments the calendar item has an associated indicator that it was shot when the purpose ab the present disclosure provides literal meaning to the words shoot me your contact information Address Book section is accessed for appfld.ab.pending data which contains a current Address Book item being sent to the MS of processing. The Address Book item is deposited to the MS user s Address Book application with API as though it arrived by conventional delivery means. In some embodiments the address book item has an associated indicator that it was shot when the purpose phone the present disclosure provides literal meaning to the words shoot me a phone call Call processing at the MS of may use cross application addressing to accomplish the call and may access fields in section for governing call attributes. The MS of calls the shooting MS. In an alternate embodiment confirmation response processing returned to the shooting MS provides the shooting user at block with an option to call the shot MS wherein the shooting MS calls the shot MS when the user selects to make the call however a cancel request is sent to the shot MS since there is nothing remaining to do at the shot MS . In embodiments where a MS supports party calls shooting a plurality of MSs may result in initiating a conference call between the shooting MS and all shot MSs when the purpose emergency emergency section is accessed from WDR fields for communicating emergency information immediately to the shot MS s . Shooting a group of MS s communicates the emergency information to all of them when the purpose loc location section is accessed for appfld.loc.beacon data for applicable beacon processing as described in parent applications and other application sections through of for fields have relevant shot processing. Of course a plurality of MSs may be targeted with the same shoot action for example by adjustment of appfld.shoot.fuzzyT.

If block determines the purpose is to deliver a message block prepares the message from appfld.shoot.params for alerting the user of the MS of processing notifies the user at block with the message and then continues to block for returning to the caller. There are many embodiments for delivering audio and or video for alerting the user. If block determines the purpose is not for delivering a message processing continues to block .

If block determines the purpose is to perform an atomic command block prepares the command operand and parameters from appfld.shoot.params and then invokes the atomic command before continuing to block for returning to the caller. Some embodiments may support specifying multiple atomic commands in a single shot. Other embodiments may support a named charter section for being invoked. If block determines the purpose is not for invoking an atomic command see processing continues to block .

If block determines the purpose is to share whereabouts block updates local whereabouts information e.g. WDR information for the shooter before continuing to block for returning to the caller. In some embodiments an active vicinity monitor or active user interface which is impacted by the whereabouts update is also instantly updated for the shooter for example to show where the shooter is located. If block determines the purpose is not for sharing whereabouts processing continues to block .

If block determines the purpose is to alter a MS resource block updates the specified resource block notifies the user that a modification was made and who made it and processing continues to block for returning to the caller. Resources that may be modified include file data database object data Application Term AppTerm data clipboard data or any other MS system resource i.e. per privileges determined at block . Predefined data defined by can be shot with a special purpose handling of . If block determines the purpose is not for altering a resource processing continues to block .

If block determines the purpose is to share LBX configurations block updates the local MS configurations with a workable copy block notifies the user that the configurations arrived and are ready for customization and processing continues to block for returning to the caller. LBX configurations which may be shared include Privilege data Grant data Group data Charter data map term data e.g. as described in detail parent applications and Prefix Registry Record PRR data. Preferably the data received is placed into an inactive form which can be easily customized and then enabled for use. If block determines the purpose is not for sharing LBX configurations processing continues to block for handling any other special purposes before continuing to block for returning to the caller.

Block special purpose shot handling includes a plethora of useful applications including processing a directed RFID probe granting access to a propagated service setting configurations with ResourceMapper see parent applications in order to provide all permissions to one user specified in appfld.shoot.params that were provided to another user invoke a SPUI at the MS updating data also communicated in the Bump application described above accessing installed applications to communicate back to the shooting MS which applications are in common between MS users and many other applications.

Note that shot processing may occur for shooting data with infrared laser or other directional wave form in which case VV end point determination logic is not needed. Simply identifying the event as inbound the WDR as shot and permissions in place as needed is enough for processing as though the VV end point was already confirmed i.e. MS of processing is the target . Laser and infrared are directional wave forms and receiving the wave form is enough to designate being targeted. In some infrared embodiments the wave spectrum spreads out and therefore mathematically validating being a target with infrared may still be warranted as presented in processing. Also in directional wave form embodiments e.g. infrared and laser may only be involved in shooting data to be carried since none of the aiming information will be required except in some infrared embodiments with wave form spread .

Shoot action processing is very fast. In some embodiments the determined VV in processing is used to target the shooting MS starting point with a VV in order to respond to it at block . A VV vector can be used to validate a target of an initial request and to target a response. The VV limits communications to only the MS s which are intended for the communications.

Data processing systems in general can emulate processing so that MSs can aim and shoot them for intended processing. Such data processing systems may provide equivalent functionality in one form or another without departing from the spirit and scope of this disclosure.

In some embodiments lobbing arcing or curving a pointer to a target may be desirable in which case a VV is not desirable because it is a straight line. For example arc IMU measurements e.g. gyroscope forces are accessed at a block i.e. block continues to block and block continues to block . Historical information up to the date time stamp of block is used to estimate tri axial direction of the MS movement and tri axial acceleration of the MS movement in order to manufacture an estimated mathematical parabola to a particular location. Such parabola determination is well known in the art and calculations are made straightforward at block because forces can be decided by the programmer for how to transform IMU measurements to parabola arcing with respect to an implemented gravitational force. The straight line distance to the parabola end is estimated at block and then used at block to update appfld.shoot.fuzzyD with the value e.g. more confident than a user set value but less confident than an EDM determined value . Subsequent processing assumes a straight line VV using the estimated distance based on the estimated parabola deduced from historical IMU data up to the shoot action e.g. MS movement like casting a fishing rod and then shooting to release the line for casting .

While various embodiments of the present disclosure have been described above it should be understood that they have been presented by way of example only and not limitation. Thus the breadth and scope of the present disclosure should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

