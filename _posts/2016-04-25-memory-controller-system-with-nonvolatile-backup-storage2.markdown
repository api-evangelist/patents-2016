---

title: Memory controller system with non-volatile backup storage
abstract: The present invention is directed to computer storage systems and methods thereof. More specifically, embodiments of the present invention provide an isolated storage control system that includes both a non-volatile memory and a volatile memory. The non-volatile memory comprises a data area and a metadata area. In power failure or similar situations, content of the volatile memory is copied to the data area of the non-volatile memory, and various system parameters are stored at the metadata area. When the system restores its operation, the information at the metadata area is processed, and the content stored at the data area of the non-volatile memory is copied to the volatile memory. There are other embodiments as well.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09575686&OS=09575686&RS=09575686
owner: RAMBUS INC.
number: 09575686
owner_city: Sunnyvale
owner_country: US
publication_date: 20160425
---
The present application is a continuation of and claims priority to U.S. patent application Ser. No. 14 316 707 filed Jun. 26 2014 and incorporated by reference in its entirety herein for all purposes.

Over the last few decades the use of communication networks exploded. In the early days Internet popular applications were limited to emails bulletin board and mostly informational and text based web page surfing and the amount of data transferred was usually relatively small. Today Internet and mobile applications demand a huge amount of bandwidth for transferring photo video music and other multimedia files. For example a social network like Facebook processes more than 500 TB of data daily and that number is growing. With such high demands on data and data transfer existing data communication systems need to be improved to address these needs. Companies built large server farms where large numbers of computers together provide computational power to remote clients. Speed and reliability are two important aspects of server computers. For example servers often has mechanism for data backup in situations such as power failure.

Over the past conventional techniques have been proposed to improve computer reliability. Unfortunately these conventional techniques inadequate as explained below. Therefore improved system and methods for data reliability are desired.

The present invention is directed to computer storage systems and methods thereof. More specifically embodiments of the present invention provide an isolated storage control system that includes both a non volatile memory and a volatile memory. The non volatile memory comprises a data area and a metadata area. In power failure or similar situations content of the volatile memory is copied to the data area of the non volatile memory and various system parameters are stored at the metadata area. When the system restores its operation the information at the metadata area is processed and the content stored at the data area of the non volatile memory is copied to the volatile memory. There are other embodiments as well.

According to an embodiment the present invention provides a memory system that includes a non volatile memory which includes a data area and a metadata area. The metadata area is predefined to store system parameters. The system also includes a volatile memory. The system includes a backup power module. The system additionally includes a controller module which has a host interface and a plurality of registers. The controller module is configured to transferring data received from the host interface to the volatile memory. In a SAVE event the controller module is configured to cause the non volatile memory to store at least content of the plurality of registers and signature data at the metadata area and store content of the volatile memory at the data area. In a RESTORE event the controller module is configured to determine a validity of the content stored at the data area using at least the signature data and the controller module causes the content stored at the data area to be copied to the volatile memory if the content at the data area is determined to be valid.

a method for preserving volatile memory data for a memory system. The method includes defining a data area and a metadata area on a non volatile memory. The method also includes detecting a failure event. The method includes allocating at least a portion of the data area for storing a content of a volatile memory. The method includes storing a location of the portion of the data area at the metadata area. The method further includes storing operating parameters of the memory system at the metadata area. The operating parameters include information related to characteristics of the volatile memory. The method further includes storing the content of the volatile memory at the portion of the data area. The method additionally includes updating one or more signature data stored at the metadata area.

According to another embodiment the present invention provides a method for restoring operation and data for a memory system. The method includes obtaining a signature data stored at a metadata area of a non volatile memory which includes a metadata area and a data area. The method further includes comparing the signature data to a reference data to determine whether a previous backup event is valid. If the backup event is valid the following steps are performed 

It is to be appreciated that embodiments of the present invention provides numerous advantages over existing technologies. Among other things by storing both operating parameters of the memory system controllers and content of the volatile memory back and restore operations can be performed reliability and efficiently. In addition the memory systems according to embodiments of the present invention can be implemented and readily utilized by existing systems. For example from host system perspective a memory system according to embodiments of the present invention operates much like an existing volatile memory with the added benefit of providing backup functionality without additional inputs from the memory host system. There are other embodiments as well.

The present invention is directed to computer storage systems and methods thereof. More specifically embodiments of the present invention provide an isolated storage control system that includes both a non volatile memory and a volatile memory. The non volatile memory comprises a data area and a metadata area. In power failure or similar situations content of the volatile memory is copied to the data area of the non volatile memory and various system parameters are stored at the metadata area. When the system restores its operation the information at the metadata area is processed and the content stored at the data area of the non volatile memory is copied to the volatile memory. There are other embodiments as well.

As explained above providing reliability is an important aspect of data servers and other applications. For example power failure is a common scenario where unsaved information is lost. When information is stored in non volatile memory the amount of data loss is often small and sometimes negligible. With server applications where large amount of data if not all the data is stored in volatile memory e.g. RAM for speed data loss can be catastrophic in the event of power or system failure.

The following description is presented to enable one of ordinary skill in the art to make and use the invention and to incorporate it in the context of particular applications. Various modifications as well as a variety of uses in different applications will be readily apparent to those skilled in the art and the general principles defined herein may be applied to a wide range of embodiments. Thus the present invention is not intended to be limited to the embodiments presented but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

In the following detailed description numerous specific details are set forth in order to provide a more thorough understanding of the present invention. However it will be apparent to one skilled in the art that the present invention may be practiced without necessarily being limited to these specific details. In other instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring the present invention.

The reader s attention is directed to all papers and documents which are filed concurrently with this specification and which are open to public inspection with this specification and the contents of all such papers and documents are incorporated herein by reference. All the features disclosed in this specification including any accompanying claims abstract and drawings may be replaced by alternative features serving the same equivalent or similar purpose unless expressly stated otherwise. Thus unless expressly stated otherwise each feature disclosed is one example only of a generic series of equivalent or similar features.

Furthermore any element in a claim that does not explicitly state means for performing a specified function or step for performing a specific function is not to be interpreted as a means or step clause as specified in 35 U.S.C. Section 112 Paragraph 6. In particular the use of step of or act of in the Claims herein is not intended to invoke the provisions of 35 U.S.C. 112 Paragraph 6.

Please note if used the labels left right front back top bottom forward reverse clockwise and counter clockwise have been used for convenience purposes only and are not intended to imply any particular fixed direction. Instead they are used to reflect relative locations and or directions between various portions of an object.

Embodiments of the present invention provides an isolation storage controller iSC system that includes a non volatile DIMM memory NVDIMM that includes both volatile memory and non volatile memory where the non volatile memory is specifically configured to preserve information stored at the volatile memory in the event of power or other types of failures. The iSC system is capable of selectively backup and restore the content of the volatile memory and to determine the integrity of the information stored at the non volatile memory. For example non volatile memory is implemented using flash memory and volatile memory is implemented using SDRAM but it is to be understood that other types of components may be used as well.

The controller module is connected to other modules of the iSC system via its interfaces. The controller module iSC comprises a host Interface an SDRAM interface and a non volatile memory interface. In various implementations the host interface of the controller module connects to system memory host controller through a DIMM edge connector. Depending on the application other connections between the host interface and the host memory controller can be used as well. The SDRAM interface of the controller module connects to SDRAM . For example the SDRAM may include a number of memory modules and the controller module can be connected to the SDRAM via various types of bus lines. For example the host interface and SDRAM interface of the controller module perform load reduction memory buffer MB operation. Also other types of volatile memory device can be used as well.

The non volatile memory interface connects the controller module to a non volatile memory . Non volatile memory can be implemented using various types of devices such as flash memory solid state disk and or others. The non volatile memory is shown as a part of the iSC system but it can be implemented using external storage devices. For example the non volatile memory can be a part of the server storage and external to the iSC system .

In a specific embodiment the non volatile memory has a capacity greater than the volatile memory module and is thus able to preserve the entirety of information stored at the volatile memory module . The interface between the controller module and the non volatile memory is high speed and low latency. In a specific embodiment a SATA interface which can provide a bandwidth of 6 Gbps is used to implement the non volatile memory interface of the controller module . For example the SATA interface is used to preserve SDRAM content e.g. backup image during a system power failure situation. The non volatile memory interface of the controller module can be implemented using other types of bus interfaces as well such as PCI Express and others.

As shown in the controller module is electrically coupled to a power backup . Depending on the application the backup power may store enough power for sustaining the iSC system through short power failure. In certain embodiments the backup power has enough power to allow data stored at the volatile memory to be saved to the non volatile memory . In various embodiments the backup power is constantly recharged.

In addition to power failures there can be different types of situations or events that trigger backing up the content stored at the volatile memory to the non volatile memory. For example the backing up process is triggered by a predetermined SAVE event. When a SAVE event trigger e.g. due to system power failure or software initiated is received the controller module performs SDRAM reads and saves SDRAM content to the non volatile memory through its non volatile memory interface. Since the non volatile memory retains data without power the volatile memory content is preserved even when the system completely loses power. For example the backup power of the iSC system can be implemented as a temporary power source such as a super capacitor. The backup power supplies the power needed for the SAVE operation. Once the SAVE operation is complete the backup power is no longer needed.

It is to be appreciated that the non volatile memory operating in conjunction with the controller module is configured to store contents of the volatile memory and system settings and parameters. In a specific embodiment the non volatile memory has a storage capacity that is multiple size of the volatile memory and thus is capable of storing more than one instance of the volatile memory content.

The content stored at the non volatile memory can be restored back to the volatile memory. In various embodiments after system power is restored a RESTORE event trigger is sent to the controller module . The RESTORE operation restores volatile memory content using the saved image stored at the non volatile memory through the volatile and non volatile interfaces of the controller module . For example the SAVE and RESTORE operation performed by the iSC system does not need participation from the host system e.g. host memory controller . From system perspective the content of the volatile memory is intact and the non volatile memory appears to be non volatile. In addition system parameters and or settings may be loaded from the non volatile memory during the RESTORE operation.

It is desirable and sometimes necessary to have system or chip configuration parameters preserved over a loss of power to the system or chip. One such example is the CMOS RAM in a traditional PC design. It contains critical configuration parameters for system boot. Its content is preserved by a small button or rechargeable battery so it remains persistent over a power loss event.

The SAVE and RESTORE operations described above are a simplification. For reliability purposes many things happen when data are transferred between the non volatile memory and the volatile memory . When the non volatile memory saves the content of volatile memory the controller module also saves relevant system information and configuration parameters to the metadata field of the non volatile memory . When the controller module retrieves information from the non volatile memory to restore the volatile memory the controller module first processes the information stored at the metadata field of the non volatile memory .

It is to be appreciated that the preservation of configuration parameters and system information over a power loss event is important to the operation of the controller module and the iSC system as a whole. The SAVE and RESTORE operations are to be performed autonomously while the system host controller e.g. host memory controller may have lost its power and or is not yet operational. To accomplish this the iSC system uses a metadata scheme that does not require battery backup.

The controller module manages the non volatile memory and reserves a predetermined number of data blocks e.g. 512 byte sectors in the metadata area of the non volatile memory . According to various implementations the metadata area is hidden and not accessible for user data e.g. content of volatile memory or SDRAM images storage. Typically critical volatile memory parameters e.g. latencies frequencies organization etc. and important control and status data are saved to the metadata area of the non volatile memory . In contrast these parameters are typically stored in the chip registers of conventional systems. For example the metadata area is updated with various system and volatile memory parameters during system initialization at the beginning and the end of a SAVE or RESTORE operation or when power loss is detected.

To provide an example after a power on reset the controller module establishes communication with the non volatile memory and searches for valid metadata. If valid metadata is found the controller module restores its corresponding internal registers with the metadata content. It is to be appreciated that these registers of the controller module are effectively persistent as their content survives power loss events.

As explained above the system operates as an NVDIMM. Instead of the isolated controller implementation illustrated in other implementations as possible as well according to existing techniques. For example field programmable gate array FPGA can be used in implementing NVDIMM systems. It is to be appreciated that embodiments of the present invention offer numerous advantages over existing FPGA based implementations. For example since an FPGA does not have an integrated memory buffer of isolated controller FPGA based implementations rely on switches to share the command address and data buses with the host controller and C A command address buffer. Existing FPGA implementations also require additional program flash for the FPGA itself. As a result FPGA based implementations in comparison to isolated controllers according to embodiments of the present invention have higher number of components consume more power and take up more real estate on a space limited NVDIMM.

Additionally NVDIMM systems implemented according to embodiments of the present invention provides performance advantages over FPGA based NVDIMM systems. In FPGA implementations insertion of switches in the high speed command address and data paths causes degradation of signal integratity which consequently limits the maximum memory speeds or frequency that they can operate. As an example for DDR3 NVDIMM the FPGA based NVDIMM speeds is limited to DDR3 1333 or lower. In contrast isolated controller based NVDIMM systems according embodiments of the present invention can run at maximum speed of DDR3 1866 represents a 40 performance advantage over the FPGA based implementation in system memory access. There are other benefits as well.

As shown in the non volatile memory comprises a user data area and a metadata area . The metadata area is predefined with data fields for storing various parameters related to components e.g. controller module volatile memory etc. of the iSC system. The user data is configured to store one or more instances of volatile memory content. As explained above the non volatile memory may be implemented using an external storage and may thus store other information.

The controller module as shown in includes a table RAM sequence execution finite state machine FSM command execution FSM and a registers . The operation of the controller module is executed by the command execution FSM . Operation parameters and states of the FSMs of the controller module are stored at the registers and continuously updated as the controller module operates. In power failure or similar situations the controller module sends the content of the registers and other relevant information to the non volatile memory and non volatile memory stores them in the metadata area .

It is to be appreciated that the content of the metadata area helps restore functionalities of the iSC system. For example the controller module uses the metadata area to backup register values and various parameters needed to resume operation. In addition as explained below the metadata area has data blocks for checking validity of the content stored at the data area and the metadata area . According to various implementations the metadata area includes information from both the table ram and the registers .

Table 1 below shows the content stored at the metadata area according to an implementation. It is to be appreciated the metadata content may be implemented in other ways as well.

As shown in Table 1 the content includes status count address and management data. The Signature Low and Signature High data are used to validate metadata. For example the metadata area and the use thereof provide a fail safe mechanism for status register. Additionally the metadata area as defined in Table 1 can store debugging information. Among other things saving the content of debug registers in the metadata provides a benefit of making debug and workaround settings sticky and therefore the settings do not need to be re applied after power cycle or chip reset. Similar benefits apply to the control and address registers.

In an implementation two 16 bit registers are used to form a 32 bit NV Signature register. The Signature value in this register is stored as a part of the metadata saved after a successful SAVE or RESTORE operation. In a power on reset operation the Signature value is retrieved from metadata area of the non volatile memory and is compared to a hardwired value to determine if the metadata is valid. If the Signature and hence the metadata is valid the controller module loads the metadata into its internal control and status registers to restore the configuration for future SAVE and RESTORE operations. If the Signature is not valid the controller module initializes the SSD Flash memory and writes metadata to it. For example writing a value different from the hardwired value to the NV Signature register causes the next signature comparison to fail and render stored metadata invalid.

The information stored at the metadata area also facilitates selective storage of volatile memory content. The Start Address and End Address data are pointers defining the location where the content of volatile memory is stored. Depending on the implementation the data rea of the non volatile memory may store only a portion of the volatile memory content or multiple instance of the volatile memory content e.g. providing capability to restoring to earlier states and the Start Address and End Address allocate the storage space for these data.

Since multiple instances of the volatile memory content may be stored more than one sets of pointers may be needed. For example the LBA0 set of pointers are directed to the location of a first instance of volatile memory content while the LBA1 set of pointers are directed to the location of a second instance of volatile memory content and so on and so forth.

Often for debugging and logging purposes it may be advantageous to store information related to the operation conditions of the iSC system. For example the Scatchpad0 and Scatchpad1 data store information that may be used for firmware version control debugging and or other purposes. Similarly the NV Debug registers store debugging information which can be used to change operation and behavior of the iSC system.

The controller module interfaces the volatile memory and controls its operations. To do so effectively the controller module may rely on the specific characteristics parameters e.g. read and write speed frequency latency etc. and organization of the volatile memory. For example even for the same models each SDRAM memory chip may have different command clock and data delays to from the controller module. In various embodiments the controller module obtains performance information that is specific to the memory chip that it interfaces and adjust its operations accordingly. For example various parameters and characteristics are stored at SDRAM control . Accordingly training data registers Context Training store parameters of memory module at different contexts e.g. different voltage level frequency etc. .

In various embodiments contents are stored and or updated at the metadata area of the non volatile memory at the beginning of a SAVE or RESTORE execution as a baseline. It is then updated after the completion of the execution. This way the baseline status is retained even if a power failure occurs while an execution is in progress and the execution never completes. The baseline status for a SAVE or RESTORE operation is set to Fail to Complete . It is updated to Complete Successfully only after the operation is complete. This way there is no false positive if the operation was interrupted and never completed for any reason. It is to be appreciated that this operation prevents a false positive operation that can result in corrupted volatile memory image being restored and causing system crash.

At step a data area and a metadata area are defined on a non volatile memory. For example data area and the metadata area are illustrated in . It is to be appreciated that the non volatile memory may have other area or region for storing other types of data. In certain embodiments the data area is capable of storing more than one image data of the volatile memory.

At step a failure event is detected. For example the failure event can be power failure system failure power off operation or other events. As explained above the iSC system includes a backup power module that powers the system for backup operations through the failure event. In a specific embodiment the controller module senses a voltage drop which is an indication of potential power failure and the controller module initiates the backup process.

At step at least a portion of the data area for storing a content of a volatile memory is allocated. The controller module determines which area of the data area is to be used for storing content of the volatile memory.

At step the location of the portion of the data area is stored at the metadata area. For example the control module stores the location of backup data using predefined pointer registers at the metadata area.

At step operating parameters of the memory system are stored at the metadata area. The operating parameters comprises information related to characteristics of the volatile memory. For example operating parameters are stored at predefined locations of the metadata area according to Table 1 above. The characteristics of the volatile memory may include information such as latencies frequencies organization and others. For example the operating parameters may be empirically determined by the controller module through operating the volatile memory.

At step the content of the volatile memory is stored at the portion of the data area. For example the content of the volatile memory may be stored in its entirety as an image of the volatile memory. In certain embodiments only a portion of the volatile memory is stored.

At step one or more signature data is stored at the metadata area. For example the one or more signature data include one or more signature registers such as Signature Low and Signature High registers listed in Table 1. For example since the signature data is store after other storing process are performed validity of the signature data implies validity of other contents stored earlier.

At step the controller module interfaces the nonvolatile memory and obtains a signature data stored at a metadata area of a non volatile memory. As described above the non volatile memory comprises the metadata area and a data area. The controller module uses the signature data to determine the validity of information stored both at the metadata area and the data area of the non volatile memory.

At step the validity of the previous data backup is determined. More specifically the signature data is compared to a reference data. For example the reference data is hardwired. If the signature data is the same as the reference data the previous backup is valid. On the other hand if the signature data is different from the reference data the previous backup is invalid.

If the backup event is valid a restore process is performed. At step operating parameters are obtained from the metadata area of the non volatile memory. The operating parameters include register and status information for operating the controller module and or volatile memory parameters. The operating parameters allow the controller module and the non volatile memory to operate in optimal condition.

At step a controller module operates in accordance with the operating parameters. For example during a restoring operation the controller module resumes the operation of its FSMs by using the loading the register values and status information stored at the metadata area of the non volatile memory. For example the controller module rely on these operating parameters e.g. speed size location etc. for copying backup data stored at the data area of the non volatile memory to the volatile memory.

At step a first content stored at the data area is copied to the volatile memory. In a specific embodiment the nonvolatile memory stores more than one backup images of the volatile memory and the controller module selects one of the backup images to be used. For example the default operation may be to copy the latest backup image but it may be desirable to use an earlier version if the latest backup image is corrupted or otherwise unusable.

Now referring back to step . If the backup event is invalid the backup content stored at the nonvolatile memory is not to be used. At step the metadata area is initialized using at least a predetermine set of parameters. Since operations are performed by the controller module the controller module is initialized and operates from a default starting state. Accordingly corresponding parameters are stored at the metadata area of the nonvolatile memory.

At step the memory system is initialized. For example a set of default parameters is used to operate the controller module and other component of the iSC system. For example the set of default parameters include parameters for operating the controller module volatile memory non volatile memory interfacing the host controller and or other operations.

It is to be appreciated that the controller module for the memory system can be implemented in various ways. is a simplified diagram illustrating a controller module according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. As an example the memory controller module uses a data path illustrated in and can execute the processes illustrated in .

The controller module includes a buffer which provides a data path and electrical buffer. As shown in the buffer comprises a load reduction memory buffer. For example the buffer is integrated as a part of the controller module chip. The buffer is connected to the host interface and the volatile memory e.g. DRAM interface . Through the buffer data from a host system can be transmitted to the volatile memory. Additionally the buffer provides electrical buffer to reducing the loading power of on the I O thereby improving system efficiency and reliability.

The controller module further includes a memory controller . It is to be appreciated the memory controller is configured to operate when the host is not operating. For example in normal operation mode the host provides control functions for moving information back and forth between the host and the volatile memory in failure mode e.g. power down the host is incapable of providing control functions and the memory controller takes over and provides control function for moving information e.g. backing up information stored at the volatile memory to the non volatile memory . In various implementations the memory controller is configured to operate at a high speed to quickly move data from the volatile memory to the non volatile memory for backup. For example in failure mode the volatile memory has limited residual power or back up power provide by a backup power module for self refresh and keep data alive and the residual power of the volatile memory dictates the time window during which the memory controller can back information stored at the volatile memory. For example in failure mode the memory controller causes the data stored at the volatile memory to be transferred from the interface to the non volatile memory. In certain embodiments the memory controller can also reprogram the volatile memory. Additionally the memory controller may operate during normal operating mode for backing up data to the non volatile storage.

The controller provides save and restore functions. More specifically the controller is configured to receive indication of triggering event e.g. power failure power on etc. . Among other features the controller facilitates and coordinates save and restore processes with other controllers of the controller module .

The controller is connected to the driver . For example the driver comprises an advanced host controller interface AHCI driver which provides interfacing with the host. For example the driver provide driving functions for the host controller. According to various implementations the driver receives commands from the FSMs e.g. FSM and FSM to executable instructions for various controllers of the of the controller module . For example the commands include command execution and sequence execution. It is to be appreciated the driver may include other modules addition to or instead of the AHCI driver.

The driver is connected to the controller . The controller comprises a non volatile memory e.g. SSD flash interface. The controller provides controller and I O functions with the non volatile memory. For example during a SAVE event the content of the volatile memory is copied to the non volatile memory via the controller during a RESTORE event the content of the non volatile memory is copied to the non volatile memory also via the controller .

The drive is connected to the memory controller via Tx buffer and the Rx buffer . According to various embodiments the Tx buffer and the Rx buffer are data buffers implemented using high speed volatile memory devices e.g. SRAM . It is to be appreciated that the data buffers Tx buffer and the Rx buffer provide speed matching between the non volatile memory and the volatile memory. For example volatile memory typically operates much faster e.g. 20 times or higher than non volatile memory. To transfer data between non volatile memory and volatile memory data are first buffer at the Tx buffer and the Rx buffer so that the non volatile memory can transfer a block instead of a stream of data at a time. For example the Tx buffer and the Rx buffer allow for data throttling and burst mode operation. The Tx buffer and the Rx buffer can be used to keep the non volatile memory operating at a stable speed while conserving power consumption for the volatile memory.

The controller module additionally includes an SMBus . For example the SMBus is implemented as a serial bus operating in slave mode. Among other features the SMBus provide an interface for accessing the controller module and can be used for program and updating various functions of the controller module .

The register block comprises a number of registers and is used by various controllers e.g. controllers etc. and or other components. For example the registers are used to store various parameters and settings need for operating various controllers and components of the controller module . As an example the register block provides the function for the register module is .

It is to be appreciated that the controller module can be implemented in various ways and merely provides an simplified functional block diagram. Various components may be added removed replaced or modified.

While the above is a full description of the specific embodiments various modifications alternative constructions and equivalents may be used. Therefore the above description and illustrations should not be taken as limiting the scope of the present invention which is defined by the appended claims.

