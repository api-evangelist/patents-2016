---

title: Electrical transformer failure prediction
abstract: A computing device predicts a probability of a transformer failure. An analysis type indicator defined by a user is received. A worth value for each of a plurality of variables is computed. Highest worth variables from the plurality of variables are selected based on the computed worth values. A number of variables of the highest worth variables is limited to a predetermined number based on the received analysis type indicator. A first model and a second model are also selected based on the received analysis type indicator. Historical electrical system data is partitioned into a training dataset and a validation dataset that are used to train and validate, respectively, the first model and the second model. A probability of failure model is selected as the first model or the second model based on a comparison between a fit of each model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09652723&OS=09652723&RS=09652723
owner: SAS Institute Inc.
number: 09652723
owner_city: Cary
owner_country: US
publication_date: 20160606
---
The present application claims the benefit of 35 U.S.C. 119 e to U.S. Provisional Patent Application No. 62 171 521 filed on Jun. 5 2015 and to U.S. Provisional Patent Application No. 62 337 495 filed on May 17 2016 the entire contents of which are hereby incorporated by reference.

Transformers are an essential component of all electric grids in the United States with over 40 million distribution transformers in use across the United States. Transformers convert the high voltage running in the distribution lines to lower voltages safer for lines distributing electricity into homes and businesses. New transformers have an initial efficiency above 98 though this decreases with extended use. Many of the transformers used in the electric grid of the United States were commissioned in the 1960 s and 1970 s. Because of this electric power companies are increasingly concerned about the status of the transformers and how long the transformers will continue to perform before a failure or overload occurs.

One way to determine the longevity of a transformer is through frequent periodic site visits by maintenance personnel. This is costly and difficult to implement due to the large number of transformers and their distributed geographic locations. Remote monitoring is possible but the additional installation of monitoring equipment is cost prohibitive on all but the most critical transformers. As components of the electric grid age there will be an ever increasing demand on the maintenance teams responsible for the reliability of the system. By targeting specific components such as transformers that are likely to fail the maintenance teams may replace the failing component before it drastically loses efficiency or experiences a catastrophic failure. By targeting specific transformers the efficiency gained by replacing a failing unit or repairing an unhealthy transformer even one day sooner can save emissions produced burning the fossil fuel used to generate the electricity.

In another example embodiment a non transitory computer readable medium is provided having stored thereon computer readable instructions that when executed by a computing device cause the computing device to predict a probability of an electrical transformer failure. Historical electrical system data that includes a plurality of observations with a plurality of data points defined for each observation is received. Each data point of the plurality of data points is associated with a variable to define a plurality of variables. The received historical electrical system data is partitioned into a training dataset and a validation dataset. The validation dataset is different from the training dataset. An analysis type indicator defined by a user is received. A worth value for each of the plurality of variables is computed. Highest worth variables from the plurality of variables are selected based on the computed worth values. A number of variables of the highest worth variables is limited to a predetermined number based on the received analysis type indicator. A first model is selected based on the received analysis type indicator. The selected first model is trained using values from the training dataset of the selected highest worth variables to predict a probability of failure of a plurality of electrical transformers. The trained first model is validated using the validation dataset to statistically assess a fit by the trained first model to the historical electrical system data. A second model is selected based on the received analysis type indicator. The selected second model is trained using values from the training dataset of the selected highest worth variables to predict the probability of failure of the plurality of electrical transformers. The trained second model is validated using the validation dataset to statistically assess the fit by the trained second model to the historical electrical system data. The fit by the trained first model is compared to the fit by the trained second model. A probability of failure model is selected as the validated first model or the validated second model based on the comparison. Electrical system data for a transformer is received. The selected probability of failure model is executed with the received electrical system data to compute a probability of failure of the transformer. A failure probability for the transformer is updated based on the computed probability of failure.

In yet another example embodiment a computing device is provided. The system includes but is not limited to a processor and a non transitory computer readable medium operably coupled to the processor. The computer readable medium has instructions stored thereon that when executed by the computing device cause the computing device to predict a probability of an electrical transformer failure.

In an example embodiment a method of predicting a probability of an electrical transformer failure is provided.

Other principal features of the disclosed subject matter will become apparent to those skilled in the art upon review of the following drawings the detailed description and the appended claims.

Referring to a block diagram of a failure prediction device is shown in accordance with an illustrative embodiment. Failure prediction device may include an input interface an output interface a communication interface a non transitory computer readable medium a processor historical electrical system data a training dataset a validation dataset a model determination application a probability of failure model new electrical system data and a transformer status database . Fewer different and or additional components may be incorporated into failure prediction device .

Input interface provides an interface for receiving information from the user or another device for entry into failure prediction device as understood by those skilled in the art. Input interface may interface with various input technologies including but not limited to a keyboard a microphone a mouse a display a track ball a keypad one or more buttons etc. to allow the user to enter information into failure prediction device or to make selections presented in a user interface displayed on the display. The same interface may support both input interface and output interface . For example display comprising a touch screen provides user input and presents output to the user. Failure prediction device may have one or more input interfaces that use the same or a different input interface technology. The input interface technology further may be accessible by failure prediction device through communication interface .

Output interface provides an interface for outputting information for review by a user of failure prediction device and or for use by another application or device. For example output interface may interface with various output technologies including but not limited to display a speaker a printer etc. Failure prediction device may have one or more output interfaces that use the same or a different output interface technology. The output interface technology further may be accessible by failure prediction device through communication interface .

Communication interface provides an interface for receiving and transmitting data between devices using various protocols transmission technologies and media as understood by those skilled in the art. Communication interface may support communication using various transmission media that may be wired and or wireless. Failure prediction device may have one or more communication interfaces that use the same or a different communication interface technology. For example failure prediction device may support communication using an Ethernet port a Bluetooth antenna a telephone jack a USB port etc. Data and messages may be transferred between failure prediction device and a distributed computing system using communication interface .

Computer readable medium is an electronic holding place or storage for information so the information can be accessed by processor as understood by those skilled in the art. Computer readable medium can include but is not limited to any type of random access memory RAM any type of read only memory ROM any type of flash memory etc. such as magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disc CD digital versatile disc DVD . . . smart cards flash memory devices etc. Failure prediction device may have one or more computer readable media that use the same or a different memory media technology. For example computer readable medium may include different types of computer readable media that may be organized hierarchically to provide efficient access to the data stored therein as understood by a person of skill in the art. As an example a cache may be implemented in a smaller faster memory that stores copies of data from the most frequently recently accessed main memory locations to reduce an access latency. Failure prediction device also may have one or more drives that support the loading of a memory media such as a CD DVD an external hard drive etc. One or more external hard drives further may be connected to failure prediction device using communication interface .

Processor executes instructions as understood by those skilled in the art. The instructions may be carried out by a special purpose computer logic circuits or hardware circuits. Processor may be implemented in hardware and or firmware. Processor executes an instruction meaning it performs controls the operations called for by that instruction. The term execution is the process of running an application or the carrying out of the operation called for by an instruction. The instructions may be written using one or more programming language scripting language assembly language etc. Processor operably couples with input interface with output interface with communication interface and with computer readable medium to receive to send and to process information. Processor may retrieve a set of instructions from a permanent memory device and copy the instructions in an executable form to a temporary memory device that is generally some form of RAM. Failure prediction device may include a plurality of processors that use the same or a different processing technology.

Model determination application performs operations associated with defining probability of failure model from data stored in training dataset and validation dataset and or with creating updating transformer status database from new electrical system data using the defined probability of failure model . The defined probability of failure model may be used to determine a probability of failure of an electrical transformer as well as provide alert messaging related to the determined probabilities. Some or all of the operations described herein may be embodied in model determination application . The operations may be implemented using hardware firmware software or any combination of these methods.

Referring to the example embodiment of model determination application is implemented in software comprised of computer readable and or computer executable instructions stored in computer readable medium and accessible by processor for execution of the instructions that embody the operations of model determination application . Model determination application may be written using one or more programming languages assembly languages scripting languages etc. Model determination application may be integrated with other analytic tools. For example model determination application may be part of SAS Enterprise Miner developed and provided by SAS Institute Inc. of Cary N.C. USA that may be used to create highly accurate predictive and descriptive models based on analysis of vast amounts of data. Model determination application further may be part of SAS Enterprise Guide SAS Visual Analytics SAS LASR Analytic Server and or SAS Access Engine s also developed and provided by SAS Institute Inc. of Cary N.C. USA.

For example SAS Visual Analytics allows users to summarize data join data enhance the predictive power of their data and visualize data. Users can prepare data for exploration and mining quickly and easily. The highly visual drag and drop data interface of SAS Visual Analytics Explorer combined with the speed of the SAS LASR Analytic Server accelerates analytic computations to derive value from massive amounts of data. SAS Visual Analytics Designer enables users to quickly create reports or dashboards which can be viewed on a mobile device or on the web.

Model determination application may be integrated with other system processing tools to automatically process data to determine probabilities of failure or other status data associated with a plurality of electrical transformers and or to provide a warning or alert associated with the failure prediction using input interface output interface and or communication interface so that appropriate action can be initiated in response to the failure prediction.

Model determination application may be implemented as a Web application. For example model determination application may be configured to receive hypertext transport protocol HTTP responses and to send HTTP requests. The HTTP responses may include web pages such as hypertext markup language HTML documents and linked objects generated in response to the HTTP requests. Each web page may be identified by a uniform resource locator URL that includes the location or address of the computing device that contains the resource to be accessed in addition to the location of the resource on that computing device. The type of file or resource depends on the Internet application protocol such as the file transfer protocol HTTP H.323 etc. The file accessed may be a simple text file an image file an audio file a video file an executable a common gateway interface application a Java applet an extensible markup language XML file or any other type of file supported by HTTP.

Historical electrical system data may include for example a plurality of rows and a plurality of columns. The plurality of rows may be referred to as observations or records and the columns may be referred to as variables that are associated with an observation. The variables may define multiple dimensions. Values associated with two or more variables for the same observation may be referred to as a data point. For example each data point of a plurality of data points is defined in a first dimension using a first variable in a second dimension using a second variable etc. The first dimension may be referenced as an x dimension the second dimension may be referenced as a y dimension the third dimension may be referenced as a z dimension etc. When a goal is to render a graph with the data points the x dimension may define an x coordinate the y dimension may define a y coordinate and the z dimension may define a z coordinate. Each data point represents a group of values selected from all or a subset of the columns of historical electrical system data for a single observation. Historical electrical system data may be transposed. Historical electrical system data may include supervised data that indicates whether or not a failure occurred.

Historical electrical system data may be stored on computer readable medium or on one or more computer readable media of distributed computing system and accessed by failure prediction device using communication interface input interface and or output interface . Data stored in historical electrical system data may include sensor measurements or signal values captured by a sensor and or generated from the sensor measurements or signal values. The data stored in historical electrical system data may include any type of content represented in any computer readable format such as binary alphanumeric numeric string markup language etc. The content may include textual information graphical information image information audio information numeric information etc. that further may be encoded using various encoding techniques as understood by a person of skill in the art. The data stored in historical electrical system data may be captured at different time points periodically intermittently when an event occurs etc. One or more columns may include a time value.

Data stored in historical electrical system data may be generated as part of the Internet of Things IoT where things e.g. machines devices phones sensors can be connected to networks and the data from these things collected and processed within the things and or external to the things before being stored in historical electrical system data . For example the IoT can include sensors in many different devices and types of devices. Some of these devices may be referred to as edge devices and may involve edge computing circuitry. These devices may provide a variety of stored or generated data such as network data or data specific to the network devices themselves. Some data may be processed with an event stream processing engine ESP which may reside in the cloud or in an edge device before being stored in historical electrical system data .

Historical electrical system data may be stored in various compressed formats such as a coordinate format a compressed sparse column format a compressed sparse row format etc. Historical electrical system data further may be stored using various structures as known to those skilled in the art including a file system a relational database a system of tables a structured query language database etc. on failure prediction device or on distributed computing system . Failure prediction device and or distributed computing system may coordinate access to historical electrical system data that is distributed across a plurality of computing devices. For example historical electrical system data may be stored in a cube distributed across a grid of computers as understood by a person of skill in the art. As another example historical electrical system data may be stored in a multi node Hadoop cluster. For instance Apache Hadoop is an open source software framework for distributed computing supported by the Apache Software Foundation. As another example historical electrical system data may be stored in a cloud of computers and accessed using cloud computing technologies as understood by a person of skill in the art. The SAS LASR Analytic Server may be used as an analytic platform to enable multiple users to concurrently access data stored in historical electrical system data . Some systems may use SAS In Memory Statistics for Hadoop developed and provided by SAS Institute Inc. of Cary N.C. to read big data once and analyze it several times by persisting it in memory for the entire session. Some systems may be of other types and configurations.

Training dataset may be generated from historical electrical system data . Training dataset may be stored and accessed using the same or different mechanisms as those described with reference to historical electrical system data .

Validation dataset may be generated from historical electrical system data . Validation dataset may be stored and accessed using the same or different mechanisms as those described with reference to historical electrical system data .

New electrical system data may be received from electric meters and or electrical transformers deployed across a geographic region. New electrical system data may be stored and accessed using the same or different mechanisms as those described with reference to historical electrical system data . Historical electrical system data may be updated with new electrical system data either automatically for example after expiration of a timer or manually for example after a failure has occurred. Data stored in new electrical system data may be generated as part of the IoT before being stored in new electrical system data . Some data may be processed with an ESP which may reside in the cloud or in an edge device before being stored in new electrical system data .

Transformer status database may be generated from execution of probability of failure model with new electrical system data . Transformer status database may be stored and accessed using the same or different mechanisms as those described with reference to historical electrical system data .

Referring to example operations associated with model determination application are described. For example model determination application may be used to define probability of failure model from training dataset and validation dataset and to execute probability of failure model with new electrical system data to update transformer status database . Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of and D is not intended to be limiting. Although some of the operational flows are presented in sequence the various operations may be performed in various repetitions concurrently in parallel for example using threads and or distributed computing system and or in other orders than those that are illustrated. For example a user may execute model determination application which causes presentation of a first user interface window which may include a plurality of menus and selectors such as drop down menus buttons text boxes hyperlinks etc. associated with model determination application as understood by a person of skill in the art. The plurality of menus and selectors may be accessed in various orders. An indicator may indicate one or more user selections from a user interface one or more data entries into a data field of the user interface one or more data items read from computer readable medium or otherwise defined with one or more default values etc. that are received as an input by model determination application .

Referring to in an operation a first indicator is received that indicates historical electrical system data . For example the first indicator indicates a location and a name of historical electrical system data . As an example the first indicator may be received by model determination application after selection from a user interface window or after entry by a user into a user interface window. In an alternative embodiment historical electrical system data may not be selectable. For example a most recently created dataset may be used automatically.

Historical electrical system data may be provided by an electric utility company for electric meters and or transformers. Historical electrical system data may include usage data from the electric meters and or transformers as well as data associated with the electric meters and or transformers such as customer information location information weather information meter attribute information meter maintenance information meter event information meter interval usage transformer attribute information etc. Different utilities may provide different types and combinations of data.

Customer information may include a customer number a meter number a meter route number a meter cycle number a meter install date a meter status code a meter location indicator a cutoff code a status code service dates a service start date a service end date an associated transformer identifier ID a critical care indicator an address a customer age a time at the residence a duration as a customer a customer sex a customer marital status a customer number of residents etc. The meter location indicator may indicate whether or not the meter is located above the ground underground or on the ground.

Location information may include a customer ID a meter number a geographic information system GIS latitude a GIS longitude a low side configuration a low side voltage a rated kilovolt amperes kVA value a high side configuration a transformer installation date a nominal voltage a phase designation a transformer work order a circuit section a line fuse code indicating a size type of fuse regulating amperes on the transformer an installed status indicating on or off a critical load indicator a region indicator a dwelling type a circuit location ID etc.

Weather information may include a minimum temperature a maximum temperature a mean temperature a current temperature a mean dewpoint etc. Meter attribute information may include a meter serial number a meter name a meter type a delay tolerant mobile sensor networks ID a transformer identifier a minimum voltage rating a maximum voltage rating a rated kVA value a total kVA rating value a transformer configuration indicator etc. For illustration the transformer configuration indicator may indicate that the transformer is configured as a phase locked loop piezoelectric transformer PLL a single phase transformer SNG a delta wye transformer WYE a close delta transformer CDT an open delta transformer ODT etc.

Meter maintenance information may include a service type of a most recent service maintenance performed on the meter one or more service dates an install date an out date on which the meter was last taken offline one or more critical care flags that indicate that service cannot be interrupted usually indicates usage for medical life support work order information describing maintenance or service performed on the meter i.e. may be an order number referencing a work order database etc.

Meter interval usage may include time and date kilowatt hour kWh usage values time of use flags peak demand times etc. Meter interval usage information may include a channel ID a time period type i.e. days a start time consumption an end time consumption a TOU Bins a kWh value a validation status a last update time a usage value a number of intervals a number of estimated intervals a demand peak value a demand peak time an estimated usage etc.

Transformer attribute information may include an age a type a size a configuration an in service date etc.

Meter event information may include a detection of an event that occurs on a meter such as a time change event a power outage event a phase error event a reverse rotation event a tamper event a notification event an unknown event an out of range event etc. Meter event information may include a customer ID a meter number an event code a date and time value a reported date and time value an event description an event group etc. Event times may be measured at second or even sub second frequency. Events from a meter signal the operational status of the meter.

Event information is captured when an event occurs and may include a meter identifier ID i.e. serial number name meter number address etc. recording the event the date and time of the event an event type an event sub type etc. Example event types include a time change event type a power off event type a power outage event type a phase error event type a reverse rotation event type a tamper event type a notification event type an unknown event type out of range event type etc. These events can signify unexpected events outages from expected service events on off indicators . For illustration Table 1 includes illustrative event types and an associated data source Source and event sub type Type .

In comparison usage load data may be measured and recorded periodically such as every 15 minutes. For each Meter ID a frequency count of a number of times each event occurs may be calculated. The frequency counts may be summed into values representing a current month count a 3 month count a 6 month count a 12 month count etc. for each event.

Data generated by a meter may be delivered through channels that provide particular measures. Table I provides illustrative channels.

In an operation a second indicator is received that indicates training dataset . For example the second indicator indicates a location and a name of training dataset . Training dataset may or may not already exist. If training dataset already exists it may be overwritten in an operation . As an example the second indicator may be received by model determination application after selection from a user interface window or after entry by a user into a user interface window. In an alternative embodiment training dataset may not be selectable. For example a default dataset may be created and used automatically.

The second indicator further may indicate any rules associated with selecting training dataset from historical electrical system data . For example the second indicator may indicate that all or only a subset of the variables stored in historical electrical system data be used to define training dataset . For example the second indicator indicates a list of variables to use by name column number etc. In an alternative embodiment the second indicator may not be received. For example all of the variables may be used automatically.

In addition or in the alternative the second indicator may indicate that only a subset of the observations stored in historical electrical system data be used to define training dataset . For example a number or a percentage of observations may be defined by the second indicator. A subset of the data points may be created from historical electrical system data by sampling. The second indicator may further indicate a sampling algorithm to use to select the subset of the observations. An example sampling algorithm is uniform sampling though other random sampling algorithms may be used.

In an operation a third indicator is received that indicates validation dataset . For example the third indicator indicates a location and a name of validation dataset . Validation dataset may or may not already exist. If validation dataset already exists it may be overwritten in operation . As an example the third indicator may be received by model determination application after selection from a user interface window or after entry by a user into a user interface window. In an alternative embodiment validation dataset may not be selectable. For example a default dataset may be created and used automatically.

The third indicator further may indicate any rules associated with selecting validation dataset from historical electrical system data . For example the third indicator may indicate that all or only a subset of the variables stored in historical electrical system data be used to define validation dataset . For example the third indicator indicates a list of variables to use by name column number etc. In an alternative embodiment the third indicator may not be received. For example all of the variables may be used automatically.

In addition or in the alternative the third indicator may indicate that only a subset of the observations stored in historical electrical system data be used to define validation dataset . For example a number or a percentage of observations may be defined by the third indicator. A subset of the data points may be created from historical electrical system data by sampling. The third indicator may further indicate a sampling algorithm to use to select the subset of the observations. The third indicator further may indicate that the validation dataset includes all of the observations from historical electrical system data not selected for inclusion in training dataset .

Training dataset and validation dataset may be selected to include a common set of variables with distinct observations. In an illustrative embodiment historical electrical system data may be divided into training dataset and validation dataset .

In an operation historical electrical system data is read and validated. For example missing values may be identified and replaced as needed.

In an operation the validated historical electrical system data supplemented with additional computed values. In an illustrative embodiment the type and number of transformations may be determined based on the variables included in the validated historical electrical system data . For example log values log 10 values inverse values square root values square values exponential values etc. may be computed for various variables associated with one or more event included in the validated historical electrical system data .

As additional examples the individual counts for each meter for one or more events may be computed for various time intervals such as for the last month the last two months the last 3 months the last six months the last year etc. A transformer may have many meters assigned to it. A meter count may be computed indicating a number of meters assigned to a transformer and the transformed historical electrical system data supplemented with this information for each transformer. Corresponding counts and values for a transformer are computed from the meter data associated with the meters connected to that transformer.

For example the percent the transformer is busy may be computed from the load and usage data from the meter data associated with the meters connected to that transformer and is referred to as a transformer utilization T. The kilowatt kW reading from the individual meters may be converted to match the kWh and adjusted by the power factor PF determined by each utility. Additionally the transformer rating T may also be determined. This may be done by adding a phase rating of the transformer provided by the transformer attributes. For illustration transformer utilization may be computed using ratedkVA ratedkVA2 ratedkVA3 PF 0.9 kWh 4 PF 100 where ratedkVA ratedkVA2 ratedkVA3 are the rated kVA for each meter assigned to the respective transformer. Transformed historical electrical system data further may be supplements with a number of intervals for which T 100 for various time periods i.e. last month the last two months the last 3 months the last six months the last year .

Additional values computed for the meters and summed for the transformer servicing them to supplement the validated historical electrical system data include 

In operation the supplemented historical electrical system data is partitioned to define training dataset and validation dataset based on the second indicator and the third indicator respectively.

In an operation a fourth indicator is received that indicates an analysis type. As an example the fourth indicator may be received by model determination application after selection from a user interface window or after entry by a user into a user interface window. For example the analysis type may be selectable between basic intermediate advanced and best overall . Of course other indicator may be used to indicate the analysis type. As another example numerical indicators such as 1 2 3 or 4 may be used.

In an operation statistics are computed for the variables included in training dataset . The statistics are used to define an input variable s worth and or importance. The variables from training dataset are rated to evaluate for inclusion when training one or more models. For example minimum maximum mean standard deviation and skewness values may be computed for one or more of the variables included in training dataset . Chi square statistics further may be computed for the variables included in training dataset . For example r squared and or chi squared rating values may be computed to determine the input variable s worth and or importance. For illustration a variable rating can be performed using binary variable splits for maximizing the chi squared or r squared values. The result is a decision tree representing a segmentation of the data created by applying a series of simple rules. Each rule assigns an observation to a segment based on the value of one input. One rule is applied after another resulting in a hierarchy of segments within segments. The hierarchy is called a tree and each segment is called a node. The original segment contains the entire data set and is called the root node of the tree. A node with all its successors forms a branch of the node that created it. The final nodes are called leaves. For each leaf a decision is made and applied to all observations in the leaf. The solution allows variables to override the automatic selection process by allowing rejected variable as an input variable. R squared rating values may be computed by rating variables and their interactions sequential leaves and branches based on minimizing an error probability while chi squared rating values may be computed by rating variables and their interactions based on maximizing the chi squared value.

In an operation variables are selected from the supplemented historical electrical system data based on the analysis type selected and the computed worth for each variable. For example if the analysis type is 1 basic the 100 highest worth variables may be selected. If the analysis type is 2 intermediate the 200 highest worth variables may be selected. If the analysis type is 3 advanced the 500 highest worth variables may be selected. If the analysis type is 4 best overall the 100 highest worth variables may be selected to define a type 1 model the 200 highest worth variables may be selected to define a best type 2 model and the 500 highest worth variables may be selected to define a best type 3 model. A fewer or a greater number of analysis types may be defined. Additionally different number of variables may be defined for each analysis type.

If the analysis type is 1 basic the 100 highest worth variables may be selected from the supplemented historical electrical system data associated with the weather information and the meter interval usage data. If the analysis type is 2 intermediate the 200 highest worth variables may be selected from the supplemented historical electrical system data associated with the meter event information the meter interval usage data and the transformer attribute information. If the analysis type is 3 advanced the 500 highest worth variables may be selected from the supplemented historical electrical system data associated with the customer information location information weather information meter attribute information meter maintenance information meter event information meter interval usage transformer attribute information etc.

In an operation a determination is made concerning whether or not analysis type 1 or 4 was selected in operation . When analysis type 1 or 4 was selected processing continues in an operation . When analysis type 1 or 4 was not selected processing continues in an operation .

In an operation a forward regression model is trained using values from training dataset of the highest worth variables selected for analysis type 1. The forward regression model predicts a probability that a failure binary ordinal or nominal target will occur as a function of one or more independent variables. The forward regression model chooses variables from training dataset and the highest worth variables one at a time in a stepwise process. The stepwise process adds one variable at a time to the linear equation until the variable contributions are insignificant. The forward regression model also excludes variables with no predictive ability or variables that are highly correlated with other predictor variables from the analytic analysis.

In an operation the trained forward regression model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit. Summary statistical values that statistically assess the model s fit include a misclassification rate a percent correct a maximum absolute error a mean error a mean square error a sum of squared errors a mean of the squared errors a square root of the mean of the squared errors etc.

In an operation the trained forward regression model and statistical values associated with the statistical assessment of the model s fit are stored in computer readable medium and or on distributed computing system as a best type 1 model.

In an operation a determination is made concerning whether or not analysis type 1 was selected in operation . When analysis type 1 was selected processing continues in an operation . When analysis type 1 was not selected processing continues in operation .

In operation the best type 1 model is stored as probability of failure model in computer readable medium and or on distributed computing system .

Referring to in an operation a fourth indicator is received that indicates new electrical system data . For example the fourth indicator indicates a location and a name of new electrical system data . As an example the fourth indicator may be received by model determination application after selection from a user interface window or after entry by a user into a user interface window. In an alternative embodiment new electrical system data may not be selectable. For example a most recently created dataset may be used automatically.

In an operation new electrical system data is validated and supplemented in a manner similar to that described in operations and with reference to historical electrical system data . New electrical system data may include similar measured and computed values as described with reference to historical electrical system data except that new electrical system data does not include an indication of whether or not a failure has occurred.

In an operation the stored probability of failure model is executed with all or a portion of new electrical system data . Execution of probability of failure model computes a probability of failure for each transformer included in all or the portion of new electrical system data . For illustration the portion of new electrical system data used may be any data included in new electrical system data that has not previously been evaluated using the stored probability of failure model .

In an operation transformer status database is updated with the newly computed probability of failure for each transformer. As part of updating transformer status database reports may be updated and output. For example statistical results associated with the update may be stored on one or more devices and or on computer readable medium in a variety of formats as understood by a person of skill in the art. For example identifying transformer outages and transformers with the highest outage frequency or duration may be provided in an outage summary report. Identifying transformers with overload occurrences and dissecting the overload by the contributing meters can be used by field engineers and analysts to determine appropriate actions.

Transformer status database further may be output to display to printer to speaker etc. In an illustrative embodiment an alert message may be sent to another device using communication interface printed on printer or another printer presented visually on display or another display presented audibly using speaker or another speaker when a probability of failure value exceeds an alarm threshold. Various alarm levels may be defined based on the probability of failure value. The alert message may indicate that a maintenance crew be dispatched to repair replace the associated transformer within a time period based on the probability of failure value.

Referring to a map of electrical transformer locations is shown in accordance with an illustrative embodiment. An indicator may indicate a location and the probability of failure of a plurality of transformers within a geographic region.

Referring to a load graph for an electrical meter connected to a transformer as a function of time is shown in accordance with an illustrative embodiment. Referring to a load graph for a transformer as a function of time is shown in accordance with an illustrative embodiment. For illustration by double clicking on a transformer on the map of the load energy demand on a transformer is presented as shown in . The load from each meter can also be viewed as shown in to provide a visual root cause in a case of an overload. Simultaneously a transformer location may be provided as well as a location of the meters to which the transformer is connected.

Referring to a failure probability graph for an electrical system as a function of a probability of failure is shown in accordance with an illustrative embodiment. For example transformers with a probability of failure that exceeds a predefined threshold may be included in the failure probability graph. In a count of transformers with a probability of failure greater than 83 is shown.

Referring to a failure probability table for an electrical system is shown in accordance with an illustrative embodiment. For example the failure probability table may provide a visualization of transformer status database that can be sorted by various variable values.

Referring to a failure probability graph for an electrical system as a function of a meter count for an SNG type transformer is shown in accordance with an illustrative embodiment. A first meter type indicator indicates a 37 kVA rated SNG type transformer a second meter type indicator indicates a 250 kVA rated SNG type transformer a third meter type indicator indicates a 47 kVA rated SNG type transformer a fourth meter type indicator indicates a 167 kVA rated SNG type transformer a fifth meter type indicator indicates a 100 kVA rated SNG type transformer a sixth meter type indicator indicates a 75 kVA rated SNG type transformer a seventh meter type indicator indicates a 50 kVA rated SNG type transformer and an eighth meter type indicator indicates a 25 kVA rated SNG type transformer. A size of each meter type indicator indicates a number of transformers of that type where first meter type indicator indicates a single transformer of that type and seventh meter type indicator indicates 30 transformers of that type. The illustrative results of show probabilities of failure averaged for each kVA rating of the SNG type transformer.

Referring to an incident cause graph for an electrical system as a function of an incident type is shown in accordance with an illustrative embodiment. After responding to a repair replace transformer alert a cause of the failure may be determined and entered into transformer status database . Illustrative causes of a transformer failure may include ants customer error overload lightning unknown etc.

Referring again to processing continues in operation to continue processing new electrical system data as new data is received periodically when instructed by a user etc.

Referring to in an operation a determination is made concerning whether or not analysis type 2 or 4 was selected in operation . When analysis type 2 or 4 was selected processing continues in an operation . When analysis type 2 or 4 was not selected processing continues in an operation .

In an operation a decision tree model is trained using values from training dataset of the highest worth variables selected for analysis type 2. The decision tree model creates a tree structure of simple rules representing a segmentation of data. Each rule assigns an observation to a segment based on a value of a single input. One rule is applied after another resulting in a hierarchy of segments within segments. The decision tree model removes variables with a lowest worth until all variables that provide no significant contribution are eliminated.

In an operation the trained decision tree model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit by computing one or more of the summary statistical values.

In an operation a stepwise regression model is trained using values from training dataset of the highest worth variables selected for analysis type 2. The stepwise regression model chooses variables from the highest worth variables selected for analysis type 2 one at a time in a stepwise process starting with a highest rated variable. The stepwise process adds one variable at a time to the linear equation until the variable contributions are insignificant. The stepwise regression model seeks to exclude variables with no predictive ability or variables that are highly correlated with other predictor variables from the analytic analysis.

In an operation the trained stepwise regression model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit by computing one or more of the summary statistical values.

In an operation a logistic regression model is trained using values from training dataset of the highest worth variables selected for analysis type 2. Target variables for the logistic regression model are integers usually binary for example that indicate a success or a failure. Training dataset is first submitted to a decision tree that creates a NODE ID variable that is passed as input to the logistic regression model. The NODE ID variable is created to enable variable interaction models so that each variable is not treated as an independent entity.

In an operation the logistic regression tree model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit by computing one or more of the summary statistical values.

In an operation the trained decision tree model the trained stepwise regression model and the logistic regression tree model are compared. A validation error can be computed for each trained model based on the results generated using validation dataset . For illustration the validation error may be one or more of the summary statistical values computed for each model.

In an operation a best type 2 model is selected based on the comparison. For example the best type 2 model selected is the model of the trained decision tree model the trained stepwise regression model and the logistic regression tree model having the smallest validation error.

In an operation the selected best type 2 model and statistical values associated with the statistical assessment of the model s fit including the validation error are stored in computer readable medium and or on distributed computing system .

In an operation a determination is made concerning whether or not analysis type 2 was selected in operation . When analysis type 2 was selected processing continues in an operation . When analysis type 2 was not selected processing continues in an operation .

In operation the best type 2 model is stored as probability of failure model in computer readable medium and or on distributed computing system . Processing continues in operation to process new electrical system data as new data is received periodically when instructed by a user etc.

In operation a second decision tree model is trained using values from training dataset of the highest worth variables selected for analysis type 3.

In an operation the trained second decision tree model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit by computing one or more of the summary statistical values.

In an operation a backward regression model is trained using values from training dataset of the highest worth variables selected for analysis type 3. The backward regression model is a linear regression model that eliminates variables by removing one variable at a time until the r squared value computed in operation drops significantly. For example a statistical significance test using the r squared value embedded within the modeling process rejects variables whose worth does not meet a predefined significance level p such as p 0.05.

In an operation the trained backward regression model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit by computing one or more of the summary statistical values.

In an operation a neural network model is trained using values from training dataset of the highest worth variables selected for analysis type 3. The neural network model conducts limited searches to find an optimal feed forward network.

In an operation the neural network model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit by computing one or more of the summary statistical values.

In an operation the trained second decision tree model the trained backward regression model and the neural network model are compared in a manner similar to that described referring to operation .

In an operation a best type 3 model is selected based on the comparison. For example the best type 3 model selected is the model of the trained second decision tree model the trained backward regression model and the neural network model having the smallest validation error.

In an operation a determination is made concerning whether or not analysis type 4 was selected in operation . When analysis type 4 was selected processing continues in an operation . When analysis type 4 was not selected processing continues in an operation .

In operation an ensemble model is created from the best type 1 model the best type 2 model and the best type 3 model. An ensemble model is a collection of models regarded as one combined model. The ensemble predicts a target value as an average or a vote of the predictions of the individual models. The different individual models can give different weights to the average or vote. The ensemble model may average a posterior probability of the target values determined by each model. Alternatively the ensemble model may classify a case into the class that most of the individual models select.

In an operation the created ensemble model is validated using validation dataset to compare the model s predictions to the known target values and to statistically assess the model s fit by computing one or more of the summary statistical values.

In an operation the created ensemble model and the best type 3 model are compared in a manner similar to that described referring to operation .

In an operation the best model of the created ensemble model and the best type 3 model having the smallest validation error is stored as probability of failure model in computer readable medium and or on distributed computing system . Processing continues in operation to process new electrical system data as new data is received periodically when instructed by a user etc.

In operation the selected best type 3 model is stored as probability of failure model in computer readable medium and or on distributed computing system . Processing continues in operation to process new electrical system data as new data is received periodically when instructed by a user etc.

The operations of may be distributed between one or more applications that are integrated or that are independent. The operations of further may be performed using different devices. For example a first computing device may determine probability of failure model and a second computing device may update transformer status database using the determined probability of failure model .

Referring to a block diagram of a failure prediction stream processing system is shown in accordance with an illustrative embodiment. In an illustrative embodiment stream processing system may include an electrical data publishing system an ESP device a second failure prediction device a status monitoring system and a network . Each of electrical data publishing system ESP device second failure prediction device and status monitoring system may be composed of one or more discrete devices in communication through network .

Electrical data publishing system includes a plurality of electrical data publishing devices. For illustration electrical data publishing system includes a first publishing device a second publishing device a third publishing device a fourth publishing device a fifth publishing device and an npublishing device N. Each electrical data publishing device includes is integrated with and or communicates with one or more sensors that produce sensor signal values referred to as measurement data values. A sensor may measure a physical quantity in an environment to which the sensor is associated and generate a corresponding measurement datum that typically is associated with a time that the measurement datum is generated. The environment to which the sensor is associated for monitoring includes a power usage at a location. Example sensors include a pressure sensor a temperature sensor a position or location sensor a voltage sensor a current sensor a frequency sensor a phase angle sensor a humidity sensor a dewpoint sensor etc. that may be mounted to various components used as part of the system such as an electrical meter.

The electrical data publishing system publishes the sensor measurements to ESP device . ESP device receives the sensor measurements in an event stream and may validate transform and or supplement the sensor measurement values included in the event stream before sending events to second failure prediction device . Second failure prediction device receives the events and updates a probability of transformer failure using the received events. Status monitoring system receives updated status data and outputs the updated status. The status monitoring system may include transformer status database a system control operator display system a post failure analysis device a failure notification device an incident cause database etc. that present illustrative output as shown in . Status monitoring system and second failure prediction device may be integrated into a single computing device.

ESP device and second failure prediction device may be integrated into a single computing device. In an alternative embodiment ESP device further may update the probability of transformer failure using the received sensor measurements.

Network may include one or more networks of the same or different types. Network can be any type of wired and or wireless public or private network including a cellular network a local area network a wide area network such as the Internet or the World Wide Web etc. Network further may comprise sub networks and consist of any number of communication devices.

The one or more computing devices of electrical data publishing system may include computers of any form factor such as a server computer a desktop a smart phone a laptop a personal digital assistant an integrated messaging device a tablet computer etc. Referring to electrical data publishing system can include any number and any combination of form factors of computing devices that may be organized into subnets. The computing devices of electrical data publishing system send and receive signals through network to from another of the one or more computing devices of electrical data publishing system and or to from ESP device . The one or more computing devices of electrical data publishing system may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art.

ESP device can include any form factor of computing device. For illustration represents ESP device as a server computer. In general a server computer may include faster processors additional processors more disk memory and more RAM than a client computer and support multi threading as understood by a person of skill in the art. ESP device sends and receives signals through network to from the devices of electrical data publishing system and or to from second failure prediction device and or to from status monitoring system . ESP device may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art. ESP device may be implemented on a plurality of computing devices of the same or different type. Stream processing system further may include a plurality of ESP devices. For example ESP device may subscribe to a first event stream published by a first ESP device and publish a second event stream for example to second failure prediction device . For further illustration the first ESP device may be associated with a first subset of the devices of electrical data publishing system a second ESP device may be associated with a second subset of the devices of electrical data publishing system etc.

Second failure prediction device can include any form factor of computing device. For illustration represents second failure prediction device as a server computer. Second failure prediction device sends and receives signals through network to from ESP device and or to from status monitoring system . Second failure prediction device may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art.

Status monitoring system may include a plurality of status monitoring devices. For illustration status monitoring system includes a first status monitoring device a second status monitoring device a third status monitoring device and an nstatus monitoring device N. Referring to the one or more computing devices of status monitoring system may include computers of any form factor such as a smart phone a desktop a server computer a laptop a personal digital assistant an integrated messaging device a tablet computer etc. Status monitoring system can include any number and any combination of form factors of computing devices. The computing devices of status monitoring system send and receive signals through network to from ESP device and or to from second failure prediction device . The one or more computing devices of status monitoring system may communicate using various transmission media that may be wired and or wireless as understood by those skilled in the art.

Referring to a block diagram of first publishing device is shown in accordance with an example embodiment. First publishing device is an example computing device of electrical data publishing system . First publishing device may include a second input interface a second output interface a second communication interface a second computer readable medium a second processor an electrical data publishing application and measurement database . Fewer different and additional components may be incorporated into first publishing device . The devices of electrical data publishing system may be geographically dispersed from each other and or co located. Each first publishing device of electrical data publishing system may include the same or different components and combinations of components.

Second input interface provides the same or similar functionality as that described with reference to input interface of failure prediction device though referring to first publishing device . Second output interface provides the same or similar functionality as that described with reference to output interface of failure prediction device though referring to first publishing device . Second communication interface provides the same or similar functionality as that described with reference to communication interface of failure prediction device though referring to first publishing device . Data and messages may be transferred between first publishing device and ESP device using second communication interface . Second computer readable medium provides the same or similar functionality as that described with reference to computer readable medium of failure prediction device though referring to first publishing device . Second processor provides the same or similar functionality as that described with reference to processor of failure prediction device though referring to first publishing device .

Electrical data publishing application performs operations associated with generating and or receiving measurement data from a sensor and publishing the measurement data in an event stream to ESP device directly or indirectly through an intermediate device such as the first ESP device. Electrical data publishing application may receive sensor measurements from one or more sensors of various types at various data rates that are either periodic or on command. Electrical data publishing application further may compute additional measurement data using the received measurement data. The operations may be implemented using hardware firmware software or any combination of these methods. Referring to the example embodiment of electrical data publishing application is implemented in software comprised of computer readable and or computer executable instructions stored in second computer readable medium and accessible by second processor for execution of the instructions that embody the operations of electrical data publishing application . Electrical data publishing application may be written using one or more programming languages assembly languages scripting languages etc. Electrical data publishing application may be implemented as a Web application.

As used herein measurement database may include any type of content represented in any computer readable format such as binary alphanumeric numeric string markup language etc. The content may include textual information graphical information image information audio information numeric information etc. that further may be encoded using various encoding techniques as understood by a person of skill in the art. Measurement database may be implemented using various formats as known to those skilled in the art including a file system a relational database a system of tables a structured query language database etc.

Referring to a block diagram of ESP device is shown in accordance with an illustrative embodiment. ESP device may include a third input interface a third output interface a third communication interface a third computer readable medium a third processor an ESP application and events . Fewer different or additional components may be incorporated into ESP device .

Third input interface provides the same or similar functionality as that described with reference to input interface of failure prediction device though referring to ESP device . Third output interface provides the same or similar functionality as that described with reference to output interface of failure prediction device though referring to ESP device . Third communication interface provides the same or similar functionality as that described with reference to communication interface of failure prediction device though referring to ESP device . Data and messages may be transferred between ESP device and electrical data publishing system second failure prediction device and or status monitoring system using third communication interface . Third computer readable medium provides the same or similar functionality as that described with reference to computer readable medium of failure prediction device though referring to ESP device . Third processor provides the same or similar functionality as that described with reference to processor of failure prediction device though referring to ESP device .

ESP device receives events that include measurement data received from electrical data publishing system . Third computer readable medium may provide the electronic storage medium for events .

ESP application performs operations associated with coordinating and controlling the performance of analytics on events streamed from electrical data publishing system and with sending the processed event data to second failure prediction device and or status monitoring system based on a subscription request. ESP application may embed an ESP engine ESPE with its own dedicated thread pool or pools into its application space where the main application thread can do application specific work and the ESPE processes event streams at least by creating an instance of a model into processing objects. The operations may be implemented using hardware firmware software or any combination of these methods.

Referring to the example embodiment of ESP application is implemented in software comprised of computer readable and or computer executable instructions stored in third computer readable medium and accessible by third processor for execution of the instructions that embody the operations of ESP application . ESP application may be written using one or more programming languages assembly languages scripting languages etc. ESP application for example may be implemented as a Web application. For illustration ESP application may be the SAS Event Stream Processing Engine developed and provided by SAS Institute Inc. of Cary N.C. USA.

Referring to example operations associated with ESP application are described. ESP application defines how incoming event streams from electrical data publishing systems events are transformed into meaningful outgoing event streams consumed by second failure prediction device and or status monitoring system . Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting. A user can interact with one or more user interface windows presented to the user in a display under control of ESP application independently or through a browser application in an order selectable by the user. Although some of the operational flows are presented in sequence the various operations may be performed in various repetitions concurrently and or in other orders than those that are illustrated. For example a user may execute ESP application which causes presentation of a first user interface window which may include a plurality of menus and selectors such as drop down menus buttons text boxes hyperlinks etc. associated with ESP application as understood by a person of skill in the art. As further understood by a person of skill in the art various operations may be performed in parallel for example using a plurality of threads.

In an operation ESP application defines and starts an ESPE thereby instantiating an ESPE at ESP device . For example referring to the components of an ESPE executing at ESP device are shown in accordance with an illustrative embodiment. ESPE may include one or more projects . A project may be described as a second level container in an engine model managed by ESPE where a thread pool size for the project may be defined by a user. A value of one for the thread pool size indicates that writes are single threaded. Each project of the one or more projects may include one or more continuous queries that contain data flows which are data transformations of incoming event streams. The one or more continuous queries may include one or more source windows and one or more derived windows .

The engine container is the top level container in a model that manages the resources of the one or more projects . In an illustrative embodiment for example there is a single ESPE for each instance of ESP application and ESPE has a unique engine name. Additionally the one or more projects may each have unique project names and each query may have a unique continuous query name and begin with a uniquely named source window of the one or more source windows . ESPE may or may not be persistent.

Continuous query modeling involves defining directed graphs of windows for event stream manipulation and transformation. A window in the context of event stream manipulation and transformation is a processing node in an event stream processing model. A window in a continuous query can perform aggregations computations pattern matching and other operations on data flowing through the window. A continuous query may be described as a directed graph of source relational pattern matching and procedural windows. The one or more source windows and the one or more derived windows represent continuously executing queries that generate updates to a query result set as new event blocks stream through ESPE . A directed graph for example is a set of nodes connected by edges where the edges have a direction associated with them.

An event object may be described as a packet of data accessible as a collection of fields with at least one of the fields defined as a key or unique identifier ID . The event object may be created using a variety of formats including binary alphanumeric XML etc. Each event object may include one or more fields designated as a primary ID for the event so ESPE can support operation codes opcodes for events including insert update upsert and delete. Upsert opcodes update the event if the key field already exists otherwise the event is inserted. For illustration an event object may be a packed binary representation of one or more sensor measurements and may include both metadata and measurement data associated with a timestamp value. The metadata may include an opcode indicating if the event represents an insert update delete or upsert a set of flags indicating if the event is a normal partial update or a retention generated event from retention policy management and a set of microsecond timestamps. For example the set of microsecond timestamps may indicate a sensor data generation time a data receipt time by first publishing device a data transmit time by first publishing device a data receipt time by ESP device etc.

An event block object may be described as a grouping or package of one or more event objects. An event stream may be described as a flow of event block objects. A continuous query of the one or more continuous queries transforms the incoming event stream made up of streaming event block objects published into ESPE into one or more outgoing event streams using the one or more source windows and the one or more derived windows . A continuous query can also be thought of as data flow modeling.

The one or more source windows are at the top of the directed graph and have no windows feeding into them. Event streams are published into the one or more source windows and from there the event streams are directed to the next set of connected windows as defined by the directed graph. The one or more derived windows are all instantiated windows that are not source windows and that have other windows streaming events into them. The one or more derived windows perform computations or transformations on the incoming event streams. The one or more derived windows transform event streams based on the window type that is operators such as join filter compute aggregate copy pattern match procedural union etc. and window settings. As event streams are published into ESPE they are continuously queried and the resulting sets of derived windows in these queries are continuously updated.

ESP application may be developed for example using a modeling application programming interface API that provides a set of classes with member functions. As an example the SAS ESP Engine developed and provided by SAS Institute Inc. of Cary N.C. USA provides a modeling API that provides a set of classes with member functions. These functions enable ESP application to embed ESPE possibly with dedicated thread pools into its own process space. Alternatively ESPE can be embedded into the process space of an existing or a new application. In that case a main application thread is focused on its own chores and interacts with the embedded ESPE as needed.

Referring to in an operation the engine container is created. For illustration ESPE may be instantiated using a function call that specifies the engine container as a manager for the model. The function call may include the engine name for ESPE that is provided by a user or a developer and may be unique to ESPE .

In an operation the one or more continuous queries are instantiated by ESPE as a model. The one or more continuous queries may be instantiated with a dedicated thread pool or pools that generate updates as new event block objects stream through ESPE . For illustration the one or more continuous queries may be created to validate transform and or supplement the sensor measurement values received from electrical data publishing system . For further illustration the one or more continuous queries may be created to score the validated transformed and or supplemented sensor measurement values through instantiation of probability of failure model .

To create a continuous query input event structures that are schemas with keys that flow into the one or more source windows may be identified. Output event structures that are also schemas with keys generated by the one or more source windows and or the one or more derived windows may also be identified. For example the block of code below illustrates creation of a compute window that normalizes a City field that is created for events in that window 

ESPE may analyze and process events in motion or event streams. Instead of storing events and running queries against the stored events ESPE may store queries and stream events through them to allow continuous analysis of data as it is received. The one or more source windows and the one or more derived windows may be created based on the relational pattern matching and procedural algorithms that transform the input event streams into the output event streams to model simulate score test predict etc. based on the continuous query model defined and application to the streamed data.

In an operation a publish subscribe pub sub capability is initialized for ESPE . In an illustrative embodiment a pub sub capability is initialized for each project of the one or more projects . To initialize and enable pub sub capability for ESPE a port number is provided. Pub sub clients can use a host name of ESP device and the port number to establish pub sub connections to ESPE . For example a server listener socket is opened for the port number to enable electrical data publishing system second failure prediction device and or status monitoring system to connect to ESPE for publish subscribe services. The host name of ESP device and the port number to establish pub sub connections to ESPE may be referred to as the host port designation of ESPE executing at ESP device .

Publish subscribe is a message oriented interaction paradigm based on indirect addressing. Processed data recipients second failure prediction device and or status monitoring system specify their interest in receiving information from ESPE by subscribing to specific classes of events while information sources electrical data publishing system publish events to ESPE without directly addressing the data recipients. ESPE coordinates the interactions and processes events . In some cases the data source receives confirmation that the published information has been received by a data recipient.

A publish subscribe API may be described as a library that enables an event publisher such as first publishing device to publish event streams into ESPE or an event subscriber to subscribe to event streams from ESPE . For illustration one or more publish subscribe APIs may be defined. As an example a version of the SAS ESP Engine provided by SAS Institute Inc. can provide a C publish subscribe API and a Java publish subscribe API. Using the publish subscribe API electrical data publishing application may publish event streams into a running event stream processor project source window of ESPE and a subscribing device of the status monitoring system may subscribe to a project source window of ESPE . The publish subscribe API provides cross platform connectivity and endianness compatibility between ESP application and other networked applications.

Referring again to operation initializes the publish subscribe capability of ESPE . In an operation the one or more projects are started. The one or more started projects may run in the background on ESP device . In an operation a connection request is received from a computing device of electrical data publishing systems for example from first publishing device for a source window to which data will be published.

In an operation an event block object is received from one or more computing devices of electrical data publishing systems for example from first publishing device . An event block object containing one or more event objects is injected into a source window of the one or more source windows from an instance of electrical data publishing application . The unique ID assigned to the event block object by first publishing device is maintained as the event block object is passed between the one or more source windows and or the one or more derived windows of ESPE . A unique embedded transaction ID further may be embedded in the event block object as the event block object is processed by a continuous query. The received event block objects may be stored as events for example in a RAM or cache type of third computer readable medium .

In an operation the event block object is processed through the one or more continuous queries . For example processing details are described above referring for example to operations and or of . In an operation the processed event block object is output to one or more subscribing device of second failure prediction device and or status monitoring system .

ESPE maintains the event block containership aspect of the received event blocks from when the event block is published into a source window and works its way through the directed graph defined by the one or more continuous queries with the various event translations before being output to subscribing devices. Subscribing devices can correlate a group of subscribed event block objects back to a group of published event block objects by comparing the unique ID of the event block object that a publisher such as first publishing device attached to the event block object with the event block ID received by the subscribing device.

In an operation a determination is made concerning whether or not processing is stopped. If processing is not stopped processing continues in operation to continue receiving the one or more event streams containing event block objects from the one or more devices of electrical data publishing system . If processing is stopped processing continues in an operation . In operation the started projects are stopped. In operation ESPE is shutdown.

Referring to a block diagram of a second failure prediction device is shown in accordance with an example embodiment. Second failure prediction device may be similar to failure prediction device except that second failure prediction device may not be used to define probability of failure model . Instead a different computing device may define probability of failure model for example by performing operations to and operations to . Data and messages may be transferred between second failure prediction device and ESP device and or status monitoring system using communication interface .

Second failure prediction device may include a failure prediction application . Failure prediction application instantiates probability of failure model determined from the operations of performed previously. Failure prediction application performs operations associated with receiving events from ESP device and computing a probability of failure for one or more transformers based on new electrical system data included in the received events and instantiation of probability of failure model . Failure prediction application may update transformer status database . The operations may be implemented using hardware firmware software or any combination of these methods. Referring to the example embodiment of failure prediction application is implemented in software comprised of computer readable and or computer executable instructions stored in computer readable medium and accessible by processor for execution of the instructions that embody the operations of failure prediction application . Failure prediction application may be written using one or more programming languages assembly languages scripting languages etc. Failure prediction application may be implemented as a Web application.

Referring to a block diagram of first status monitoring device is shown in accordance with an example embodiment. First status monitoring device is an example computing device of status monitoring system . For example each of first status monitoring device second status monitoring device third status monitoring device and nstatus monitoring device N is an instance of a status monitoring device.

First status monitoring device may include a fourth input interface a fourth output interface a fourth communication interface a fourth computer readable medium a fourth processor a status monitoring application and transformer status database . Fewer different and additional components may be incorporated into first status monitoring device . The devices of status monitoring system may be geographically dispersed from each other and or co located. Each status monitoring device of status monitoring system may include the same or different components or combination of components.

Fourth input interface provides the same or similar functionality as that described with reference to input interface of failure prediction device though referring to first status monitoring device . Fourth output interface provides the same or similar functionality as that described with reference to output interface of failure prediction device though referring to first status monitoring device . Fourth communication interface provides the same or similar functionality as that described with reference to communication interface of failure prediction device though referring to first status monitoring device . Data and messages may be transferred between first status monitoring device and ESP device and or second failure prediction device using fourth communication interface . Fourth computer readable medium provides the same or similar functionality as that described with reference to computer readable medium of failure prediction device though referring to first status monitoring device . Fourth processor provides the same or similar functionality as that described with reference to processor of failure prediction device though referring to first status monitoring device .

Status monitoring application performs operations associated with outputting data from transformer status database . The operations may be implemented using hardware firmware software or any combination of these methods. Referring to the example embodiment of status monitoring application is implemented in software comprised of computer readable and or computer executable instructions stored in fourth computer readable medium and accessible by fourth processor for execution of the instructions that embody the operations of status monitoring application . Status monitoring application may be written using one or more programming languages assembly languages scripting languages etc. Status monitoring application may be implemented as a Web application.

Referring to example operations associated with electrical data publishing application are described. Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting.

In an operation ESPE is queried for example to discover projects continuous queries windows window schema and window edges currently running in ESPE . The engine name and host port to ESPE may be provided as an input to the query and a list of strings may be returned with the names to the projects to the continuous queries to the windows to the window schema and or to the window edges of currently running projects on ESPE . The host is associated with a host name or Internet Protocol IP address of ESP device . The port is the port number provided when the pub sub capability is initialized by ESPE . The engine name is the name of ESPE . The engine name of ESPE and host port to ESP device may be read from a storage location on second computer readable medium may be provided on a command line or otherwise input to or defined by electrical data publishing application as understood by a person of skill in the art.

In an operation publishing services are initialized. In an operation the initialized publishing services are started which may create a publishing client for the instantiated electrical data publishing application . The publishing client performs the various pub sub activities for the instantiated electrical data publishing application . For example a string representation of a URL to ESPE is passed to a Start function. For example the URL may include the host port designation of ESPE executing at ESP device a project of the projects a continuous query of the continuous queries and a window of the source windows . The Start function may validate and retain the connection parameters for a specific publishing client connection and return a pointer to the publishing client. For illustration the URL may be formatted as dfESP . If electrical data publishing application is publishing to more than one source window of ESPE the initialized publishing services may be started to each source window using the associated names project name continuous query name window name .

In an operation a connection is made between electrical data publishing application and ESPE for each source window to which data is published. To make the connection the pointer to the created publishing client may be passed to a Connect function. If electrical data publishing application is publishing to more than one source window of ESPE a connection may be made to each started window using the pointer returned for the respective Start function call.

In an operation a measurement data value is received from sensor for example through second communication interface or second input interface . In an operation an event block object is created by electrical data publishing application that includes the received measurement data value and a time value associated with a time the measurement data value was generated by sensor . The measurement data value may be processed before inclusion in the event block object for example to change a unit of measure convert to a different reference system etc. The event block object may include a plurality of measurement data values measured at different times and or by different sensors.

In an operation the created event block object is published to ESPE using the pointer returned for the respective Start function call to the appropriate source window. Electrical data publishing application passes the created event block object to the created publishing client where the unique ID field in the event block object has been set by electrical data publishing application possibly after being requested from the created publishing client. In an illustrative embodiment electrical data publishing application may wait to begin publishing until a Ready callback has been received from the created publishing client. The event block object is injected into the source window continuous query and project associated with the started publishing client.

In an operation a determination is made concerning whether or not processing is stopped. If processing is not stopped processing continues in operation to continue receiving measurement data from one or more sensors and creating and publishing event block objects that include the measurement data. If processing is stopped processing continues in an operation . In operation the connection made between electrical data publishing application and ESPE through the created publishing client is disconnected and each started publishing client is stopped.

Referring to example operations associated with failure prediction application are described. Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting.

Similar to operation in an operation ESPE is queried for example to discover names of projects of continuous queries of windows of window schema and of window edges currently running in ESPE . The host name of ESP device the engine name of ESPE and the port number opened by ESPE are provided as an input to the query and a list of strings may be returned with the names to the projects continuous queries windows window schema and or window edges.

In an operation subscription services are initialized. In an operation the initialized subscription services are started which may create a subscribing client on behalf of failure prediction application at second failure prediction device . The subscribing client performs the various pub sub activities for failure prediction application . For example a URL to ESPE may be passed to a Start function. The Start function may validate and retain the connection parameters for a specific subscribing client connection and return a pointer to the subscribing client. For illustration the URL may be formatted as dfESP .

In an operation a connection is made between failure prediction application and ESPE through the created subscribing client. To make the connection the pointer to the created subscribing client may be passed to a Connect function and a mostly non busy wait loop created to wait for receipt of event block objects.

In an operation an event block object is received by failure prediction application . In an operation the received event block object is processed based on the operational functionality provided by failure prediction application . For example failure prediction application may extract sensor measurement data from the received event block object and store the extracted sensor measurement data in historical electrical system data . In addition failure prediction application may perform one or more of operations and or of . Failure prediction application further may send the resulting data to status monitoring system .

In an operation transformer status database may be updated with new failure prediction values for one or more transformers.

In an operation a determination is made concerning whether or not processing is stopped. If processing is not stopped processing continues in operation to continue receiving event block objects. If processing is stopped processing continues in an operation . In operation the connection made between failure prediction application and ESPE through the subscribing client is disconnected and the subscribing client is stopped.

Referring to example operations associated with status monitoring application are described. Additional fewer or different operations may be performed depending on the embodiment. The order of presentation of the operations of is not intended to be limiting.

In an operation new transformer status data is identified. For example new transformer status data may be received from second failure prediction device . As another option new transformer data may be identified by monitoring updates to transformer status database .

In an operation the identified new transformer status data is output. For example statistical results may be stored on one or more devices and or on fourth computer readable medium in a variety of formats as understood by a person of skill in the art. The statistical results further may be output to a display a printer a speaker another computing device etc. as described with reference to failure prediction device . In an illustrative embodiment an alert message may be sent to another device using fourth communication interface printed on the printer presented visually on the display presented audibly using the speaker when a failure is predicted above a predefined threshold. Status monitoring application further may send the identified new transformer status data to the system control operator display system the failure notification device and or the post failure analysis device to respond as needed to the failure. Illustrative displays are presented in .

Stream processing system and or failure prediction device identify factors critical to identify transformer overloads improve methods to anticipate transformer failures enhance regular equipment maintenance schedules and or reduce unscheduled maintenance except during unplanned incidents like storms.

The word illustrative is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as illustrative is not necessarily to be construed as preferred or advantageous over other aspects or designs. Further for the purposes of this disclosure and unless otherwise specified a or an means one or more . Still further using and or or in the detailed description is intended to include and or unless specifically indicated otherwise.

The foregoing description of illustrative embodiments of the disclosed subject matter has been presented for purposes of illustration and of description. It is not intended to be exhaustive or to limit the disclosed subject matter to the precise form disclosed and modifications and variations are possible in light of the above teachings or may be acquired from practice of the disclosed subject matter. The embodiments were chosen and described in order to explain the principles of the disclosed subject matter and as practical applications of the disclosed subject matter to enable one skilled in the art to utilize the disclosed subject matter in various embodiments and with various modifications as suited to the particular use contemplated.

