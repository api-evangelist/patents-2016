---

title: Performance of secure mobile applications
abstract: A request for a first resource by a user is received. In response to receiving the request for a first resource, a second resource is determined based on the first resource and a resource usage pattern of the user. A response to the request for the first resource is provided. The response includes the first resource and the second resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09426241&OS=09426241&RS=09426241
owner: International Business Machines Corporation
number: 09426241
owner_city: Armonk
owner_country: US
publication_date: 20160211
---
The present invention relates generally to the field of computer applications and more particularly to improved performance of mobile device applications.

A mobile application is a computer program designed to run on mobile devices such as smartphones and tablet computers. Mobile application development for mobile devices requires consideration of the constraints of mobile devices as compared with personal computers. Mobile devices typically have less powerful processors than personal computers and have user interface constraints such as a smaller screen. For access and interaction with enterprise systems mobile device user interfaces rely on back ends to support data routing security authentication and authorization. This functionality is typically supported by various middleware components such as application servers.

A request for a first resource by a user is received. In response to receiving the request for a first resource a second resource is determined based on the first resource and a resource usage pattern of the user. A response to the request for the first resource is provided. The response includes the first resource and the second resource.

Embodiments of the present invention recognize that society relies heavily on mobile phones and mobile applications. Embodiments of the present invention recognize that companies and organizations in various business industries such as the financial industry use mobile application performance to gain a competitive advantage and otherwise distinguish themselves from competitors. Embodiments of the present invention recognize that current secure mobile applications generally operate by requiring a user to authenticate and interact with the application user interface prior to requesting each resource content from a location remote from the mobile device which is a time consuming process for the user. Embodiments of the present invention further recognize that no current improvements focus on efficiently retrieving and displaying requested content.

Embodiments of the present invention provide for improved performance of secure mobile applications by using past mobile application usage by a user to predict and request content that may be requested by the user in the future.

The present invention will now be described in detail with reference to the Figures. is a functional block diagram of a computing environment generally designated in accordance with an embodiment of the present invention. provides only an illustration of one implementation and does not imply any limitations with regard to the environments in which different embodiments may be implemented. Those skilled in the art may make many modifications to the depicted environment without departing from the scope of the invention as recited by the claims.

In the illustrated embodiment distributed data processing environment includes mobile device and server device . Mobile device and server device are interconnected through network . In an embodiment distributed data processing environment may additionally include any other computing device connected to network .

In an embodiment network may be a local area network LAN a telecommunications network a wide area network WAN such as the Internet or any combination of the three and can include wired wireless or fiber optic connections. In general network may be any combination of connections and protocols supports communications between mobile device server device and any other computing device connected to network in accordance with embodiments of the present invention.

In an embodiment mobile device may generally be any electronic device or combination of electronic devices capable of executing computer readable program instructions. In example embodiments mobile device may be a mobile phone personal digital assistant tablet computer personal computer or workstation. In an embodiment mobile device may be a computer system utilizing clustered computers and components e.g. database server devices application server devices that act as a single pool of seamless resources when accessed by elements of distributed data processing environment such as in a cloud computing environment. Mobile device may include components as depicted and described with respect to .

In the illustrated embodiment mobile device includes mobile application application filter and device cache . In an alternative embodiment mobile application or application filter may be located on another networked computing device not shown and mobile application or application filter may access and communicate with mobile device including device cache through network .

In an embodiment mobile application may be a computer program application or subprogram of a larger program that communicates with application filter for retrieving accessing and utilizing a resource requested by mobile application . For example mobile application may be a web browser calendar weather application stock market application banking application or music application. To further illustrate where mobile application is a banking application e.g. for transferring money among bank accounts of a user mobile application may for example request a bank account balance as a resource. In an embodiment mobile application may be connected to one or more user interface devices not shown to allow a user to utilize mobile application e.g. to indicate a particular resource to retrieve and display .

A user interface is the information such as graphic text and sound a program presents to a user and the control sequences the user employs to control the program. There are many types of user interfaces. For example the user interface may be a graphical user interface GUI . A GUI is a type of user interface that allows users to interact with electronic devices such as a keyboard and mouse through graphical icons and visual indicators such as secondary notations as opposed to text based interfaces typed command labels or text navigation. GUIs were introduced for computers in response to the perceived steep learning curve of command line interfaces which required commands to be typed on the keyboard. The actions in GUIs may be performed by a user through direct manipulation of the graphical elements.

In an embodiment application filter may be a computer program application or subprogram of a larger program that communicates with mobile application device cache and server device for retrieving a resource requested by mobile application . In an embodiment application filter monitors all resource requests from mobile application and all responses e.g. a requested resource to mobile application from server device or any other networked computing device not shown . In an embodiment application filter may be integrated with mobile application e.g. as an application programming interface API plug in add on extension .

In an embodiment device cache may be memory capable of storing resources e.g. data instructions addresses for utilization by mobile application including resources predicted by learning application to be requested by mobile application in the future potential resources . Device cache may be used to reduce the time taken to access a resource as compared with accessing a resource from a main memory e.g. memory depicted and described with respect to . In an embodiment device cache may be organized as a hierarchy of multiple memory levels. In an embodiment device cache may be cache depicted and described with respect to .

In an embodiment server device may generally be any electronic device or combination of electronic devices capable of executing computer readable program instructions. In example embodiments server device may be a workstation personal computer personal digital assistant or mobile phone. In an embodiment server device may be a computer system utilizing clustered computers and components e.g. database server devices or application server devices that act as a single pool of seamless resources when accessed by elements of distributed data processing environment such as in a cloud computing environment. In an embodiment mobile device may include components as depicted and described with respect to .

In the illustrated embodiment server device includes learning application and learning repository . In an alternative embodiment learning application or learning repository may be located on mobile device . In yet another alternative embodiment learning application or learning repository may be located on another computing device not shown connected to network .

In an embodiment learning application may be a computer program application or subprogram of a larger program that communicates with mobile device and learning repository for retrieving a resource requested by mobile application and for predicting and retrieving a resource that may be requested from mobile application in the future. In an embodiment functions for predicting potential resources for future use include monitoring resource requests from mobile application and determining for each resource requested by mobile application the frequency at which the resource is requested and the sequence in which the resource is requested relative to other requested resources. As an example where mobile application is a banking application learning application may determine that where the account balance of account A is requested a subsequent request to transfer money from account B to account A has been made 10 times or 80 of the time or twice as often as a subsequent request to transfer money from account C to account A.

In an embodiment learning application determines the resource information on a per user basis. In other words learning application determines the resource information of each user of mobile application independently from the resource information of other users of mobile application . In an embodiment learning application determines resource frequencies and sequences from all requests made from a user of mobile application or alternatively from the current log in session of a user of mobile application .

In an embodiment learning repository contains the resource information determined by learning application . In an embodiment learning repository stores the resource information on a per user basis. In other words learning repository stores the resource information for each user of mobile application independently from the resource information for other users of mobile application . In an embodiment the resource information includes frequency and sequence information for a resource with respect to all requests for the resource from mobile application as well as frequency and sequence information for the resource with respect to the current log in session of mobile application . The stored resource information may be accessed and updated by learning application for each user of mobile application in accordance with embodiments of the present invention.

In an embodiment learning repository may be implemented using any non volatile storage media known in the art. For example learning repository may be implemented with a tape library optical library one or more independent hard disk drives or multiple hard disk drives in a redundant array of independent disks RAID . Learning repository may be implemented using any suitable storage architecture known in the art. For example learning repository may be implemented with a relational database or an object oriented database.

Learning application receives a request for a resource step . In other words learning application receives a request from mobile application to retrieve a resource. In an embodiment application filter receives the resource request from mobile application and application filter forwards the resource request to learning application in response to determining that there is not a local resource matching the requested resource i.e. device cache does not contain a resource matching the requested resource . In an embodiment the resource request is initially made to mobile application by a user through the user interface of mobile application .

Learning application determines potential resources step . In other words learning application determines one or more resources potential resources in addition to the requested resource that are likely to be subsequently requested by the user of mobile application . In an embodiment learning application updates the resource information associated with the requested resource in learning repository predictive resource information and learning application determines the potential resources based on the resource information associated with the requested resource.

In an embodiment predictive information includes the frequency at which the requested resource is requested by the user of mobile application and the sequences in which the resource has been requested relative to other resources requested by the user of mobile application . In an embodiment predictive resource information includes frequency and sequence information for the resource with respect to all requests for the resource from the user of mobile application as well as frequency and sequence information for the resource with respect to requests from the current log in session of the user of mobile application .

As an example where resource D is requested by mobile application if learning application determines that following a request for resource D resource E is thereafter requested 75 of the time and that following a request for resource E resource G is thereafter requested 60 of the time then learning application may determine that resources E and G are potential resources that are likely to be requested by the user of mobile application following the request for resource D.

Learning application requests resources and enriches the response step . In other words learning application forwards the resource request which includes a request for the originally requested resource as well as the determined potential resource determined in step to the resource source not shown and retrieves the originally requested resource and the potential resource. In an embodiment upon receiving the response from the resource source learning application prior to forwarding the response to mobile device enriches the response information with an indication that there is a potential resource associated with the originally requested resource. In other words in addition to the requested resource learning application attaches to the response information an indication of each potential resource that has been additionally requested from the resource source by learning application . In an embodiment the indication is an HTTP header that has been pre defined for the system. For example where mobile application is a banking application and the potential resource being requested by learning application is a bank account balance the HTTP header may be Cache Control preload account balance.jsp .

Learning application transfers the enriched response and the resources step . In other words learning application transfers the response information which includes the originally requested resource and the one or more indications of a potential resource to mobile device . In an embodiment application filter receives the response and determines if the response includes an indication of a potential resource associated with the originally requested resource e.g. an HTTP header attached to the response . If the response includes an indication of a potential resource a separate thread may be started to retrieve the indicated potential resource from server device and store the potential resource in device cache until the resource is requested by mobile application . In an embodiment application filter then removes the header from the response and transfers the response and originally requested resource information to mobile application .

Memory and persistent storage are computer readable storage media. In an embodiment memory includes random access memory RAM not shown . In general memory may include any suitable volatile or non volatile computer readable storage media. Cache is a fast memory that enhances the performance of processors by holding recently accessed data and data near recently accessed data from memory .

Program instructions and data used to practice embodiments of the present invention may be stored in persistent storage and in memory for execution by one or more of the respective processors via cache . In an embodiment persistent storage includes a magnetic hard disk drive. Alternatively or in addition to a magnetic hard disk drive persistent storage may include a solid state hard drive a semiconductor storage device read only memory ROM erasable programmable read only memory EPROM flash memory or any other computer readable storage media that is capable of storing program instructions or digital information.

The media used by persistent storage may also be removable. For example a removable hard drive may be used for persistent storage . Other examples include optical and magnetic disks thumb drives and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit includes one or more network interface cards. Communications unit may provide communications through the use of either or both physical and wireless communications links. Program instructions and data used to practice embodiments of the present invention may be downloaded to persistent storage through communications unit .

I O interface s allows for input and output of data with other devices that may be connected to each computer system. For example I O interface may provide a connection to external devices such as a keyboard keypad a touch screen and or some other suitable input device. External devices can also include portable computer readable storage media such as for example thumb drives portable optical or magnetic disks and memory cards. Software and data used to practice embodiments of the present invention can be stored on such portable computer readable storage media and can be loaded onto persistent storage through I O interface s . I O interface s also connect to display .

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Modifications and variations of the presented embodiments will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The terminology used herein was chosen to best explain the principles of the embodiment to best explain the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the Figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The terminology used herein was chosen to best explain the principles of the embodiment the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

