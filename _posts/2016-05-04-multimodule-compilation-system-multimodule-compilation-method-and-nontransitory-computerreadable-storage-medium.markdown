---

title: Multi-module compilation system, multi-module compilation method, and non-transitory computer-readable storage medium
abstract: Provided is a multi-module compilation system for generating execution codes for each of modules in a module system. The multi-module compilation system may include a module identifier configured to analyze a program code of the module system and to identify target modules that execute the program code, a module code generator configured to divide the program code into module codes for each of the target modules and to generate the module codes, and a compiler configured to compile the module codes and to generate execution codes for each of the target modules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524148&OS=09524148&RS=09524148
owner: LUXROBO
number: 09524148
owner_city: 
owner_country: KR
publication_date: 20160504
---
This application claims the priority benefit of Korean Patent Application No. 10 2016 0027222 filed on Mar. 7 2016 in the Korean Intellectual Property Office the disclosure of which is incorporated herein by reference for all purposes.

One or more example embodiments relate to a multi module compilation system a multi module compilation method and a non transitory computer readable storage medium.

Recently various module based systems have been suggested for the purpose of education hobbies research or production. Modules included in such module based systems may each perform a specific function and be connected to another to form a module assembly. The modules may be electrically connected to one another to exchange energy signals or data. A user may manufacture a module system to achieve a specific purpose by assembling modules according to a provided manual or in a creative manner.

The above module system according to a related art needs to individually update a program to operate the module system for each module to change a purpose of use or to upgrade to a better version. To this end modules included in the module system need to be separated as individual units and a task for updating is required for each of the separated modules which may cause great inconvenience physically and a considerable amount of time.

Also it is impossible to develop programs for an operation of the entire module system according to the related art all at once and programs need to be developed and compiled individually for each module. Accordingly it is difficult to perform development.

An aspect provides a module system and an update method for the module system that may update data of each of a plurality of modules included in the module system.

Another aspect also provides a multi module compilation system and a multi module compilation method that may generate from a program code for an entire module system execution codes for each of a plurality of modules that are included in the module system and that are connected to a network.

According to an aspect there is provided a multi module compilation system for generating execution codes for each of a plurality of modules included in a module system. The multi module compilation system includes a module identifier configured to analyze a program code of the module system and to identify target modules that execute the program code a module code generator configured to divide the program code into module codes for each of the target modules and to generate the module codes and a compiler configured to compile the module codes and to generate execution codes for each of the target modules.

According to another aspect there is provided a multi module compilation method performed by a computer or a mobile device to generate execution codes for each of a plurality of modules included in a module system. The multi module compilation method includes analyzing a program code of the module system and identifying target modules that execute the program code dividing the program code into module codes for each of the target modules and generating the module codes and compiling the module codes and generating execution codes for each of the target modules.

According to another aspect there is provided a non transitory computer readable storage medium storing a compiler program for generating execution codes for each of a plurality of modules included in a module system. When the compiler program is executed by a computer or a mobile device the non transitory computer readable storage medium may perform a method including analyzing a program code of the module system and identifying target modules that execute the program code dividing the program code into module codes for each of the target modules and generating the module codes and compiling the module codes and generating execution codes for each of the target modules.

Additional aspects of example embodiments will be set forth in part in the description which follows and in part will be apparent from the description or may be learned by practice of the disclosure.

In a module system and an update method for the module system according to an example embodiment data of a plurality of modules included in the module system may be updated all at once instead of individually and thus it is possible to perform updating for the modules simply and efficiently in time.

In a multi module compilation system and a multi module compilation method according to an example embodiment execution codes for each of a plurality of modules included in a module system may be quickly and effectively generated from a program code for the entire module system. Thus it is possible to simply and efficiently update each of the modules by generating codes for each of the modules from the program code and compiling the codes.

In addition to utilize the module system with the same modules for other uses updating for the module system may be performed all at once by modifying a program for the entire module system and by generating execution codes for each of the modules through multi module compiling without a need to individually redevelop firmware of each of the modules in the module system. Also it is possible to reuse modules included in a module system for a variety of purposes.

Hereinafter example embodiments will be described in detail with reference to the accompanying drawings so that inventive concept may be readily implemented by one of ordinary skill in the art. Example embodiments may however be embodied in many different forms and should not be construed as being limited to the embodiments set forth herein. In the drawings certain parts not directly relevant to the description are omitted to enhance the clarity of the drawings.

The terminology used herein is for the purpose of describing particular example embodiments only and is not intended to be limiting of example embodiments. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise.

It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements components or a combination thereof but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

Also the following example embodiments are provided so that this disclosure will be thorough and complete and will fully convey the concept of the disclosure to one of ordinary skill in the art. In the drawings shapes and sizes of elements may be exaggerated for clarity.

Hereinafter example embodiments will be described in detail with reference to the accompanying drawings.

Referring to a module system according to an example embodiment includes a plurality of modules for example modules and that may communicate with each other. The module system may update the modules through all at once.

In example embodiments the term module refers to a functional unit to perform a specific function of a module. The modules may be connected over a network to communicate with each other and may be physically separated from each other or disposed in the same physical space.

In example embodiments the terms master and sub are used to distinguish various modules from each other in describing the modules and thus should not be construed as indicating a functional master slave relationship.

In example embodiments the terms update used herein refers to an update of data associated with an operation of each module and update data may be at least one of firmware of a module an operating system OS of a module and data for operating a module.

The module system may include a master module and at least one sub module for example sub modules and connected to a network to perform a data communication with the master module .

The master module may be communicably connected to an external device for example a computer or a mobile device. The computer may include for example a laptop computer a desktop computer or a workstation and the mobile device may include for example a mobile phone a personal digital assistant PDA a smartphone or a tab book. The master module may be communicably connected to the external device to transmit and receive data to and from the external device or to receive update data for the sub modules through . The master module may perform a communication with the external device using one of a universal serial bus USB scheme an infrared data association IrDA scheme a wireless fidelity Wi Fi scheme a ultra wideband UWB scheme a Bluetooth scheme a ZigBee scheme a code division multiple access CDMA scheme a wideband CDMA WCDMA scheme a long term evolution LTE scheme and an LTE advanced LTE A scheme. In other words the master module may be connected to the external device via a wire using a USB. Also the master module may be wirelessly connected directly to the external device using Wi Fi or may be wirelessly connected to the external device using an access point AP .

The sub modules through may be connected to a network to perform a data communication with the master module and may each include a micro controller unit MCU as a central processing unit CPU of which firmware is to be updated. The MCU may include a bootloader area for booting the MCU and a user code area in which firmware is stored in an inner memory for example a flash memory. In the following description the sub modules through may also be referred to as a sub communication module a power source module a motor module a button module a sensor module and a display module respectively. The module system may also include a camera module as a sub module. The sensor module may be configured to sense various types of physical information for example an infrared sensor a tactile sensor a touch sensor an image sensor a ultrasonic sensor a fingerprint recognition sensor an optical sensor an acoustic sensor a pressure sensor a temperature sensor an acceleration sensor a gyro sensor or a voice recognition sensor.

The sub modules through may be connected via a network bus to transmit and receive data to and from the master module . In the example embodiment the network bus may employ a broadcasting scheme that allows a module corresponding to a destination address of data transmitted through the network bus to receive the data. The network bus may include various wired and wireless communication schemes for example a serial communication scheme a local area network LAN scheme a controller area network CAN scheme a USB scheme an IrDA scheme a Wi Fi scheme a Bluetooth scheme a ZigBee scheme a CDMA scheme a WCDMA scheme an LTE scheme or an LTE A scheme and may enable a heterogeneous communication.

In the example embodiment the network bus may be a CAN bus. When a CAN communication is used plug and play between modules and a broadcasting network may be easily implemented and a system control speed and a safety may be enhanced with a high reliability.

The master module may transmit through the network bus update data required for updating to a target sub module requiring updating of an MCU among the sub modules through .

The power source module is provided to supply power to the entire module system . The power source module may be electrically connected to the master module and the other sub modules that is the sub modules and to supply power required for an operation of a module to the master module and the sub modules and . The power source module may be connected to an external power source to supply power to the module system or may include a lithium Li ion battery to supply power charged in the Li ion battery.

Each of the modules through may include a block shaped housing case and neighboring modules may be physically connected directly to each other or may be connected using a separate connector. Also the power source module may be separated from the master module or may be formed integrally with the master module in a single housing.

In the external device communicably connected to the module system an integrated development environment IDE may be provided to generate an execution code of each of the modules through in the module system . The IDE may include a user interface UI a module code generator a compiler and a module communicator . For example in the IDE a user may generate or modify a program for an operation of each of the modules through in the module system . The UI may be either a character user interface CUI or a graphical user interface GUI or may be an interface switchable between the CUI and the GUI. The IDE may support an object oriented programming development environment for example JAVA or C .

The module code generator may divide a program code written in the UI into program codes for each of the modules through may modify the program codes for each of the modules through and may generate an update data code corresponding to each of the modules through using the compiler . The generated update data code may be transmitted via the module communicator to the master module of the module system that is connected using a wired or wireless scheme to perform the communication .

Referring to a module system according to an example embodiment may receive data from an external device using a master module . Each of the master module and sub modules and included in the module system has an address value as a unique identifier. The identifier may be a medium access control MAC address or a unique serial number assigned to each of modules in manufacturing of each of the modules. For example the master module may have an address value of 001 and the sub module hereinafter also referred to as the sub communication module may have an address value of 002. Similarly the sub modules and may have address values of 003 004 005 006 and 007 respectively. To transmit specific data to the motor module of the master module in the module system the external device may transmit a data packet obtained by adding 004 that is an address value of the motor module to the specific data. The master module of the module system may receive the data packet may convert the data packet according to a protocol of a network bus and may transmit the converted data packet through the network bus to the sub modules through connected to the network bus . In the example embodiment the network bus may employ a broadcasting scheme that allows a module corresponding to a destination address of data transmitted through the network bus to receive the data. The network bus may include various wired and wireless communication schemes for example a serial communication scheme a LAN scheme a CAN scheme a USB scheme an IrDA scheme a Wi Fi scheme a Bluetooth scheme a ZigBee scheme a CDMA scheme a WCDMA scheme an LTE scheme or an LTE A scheme and may enable a heterogeneous communication.

In the example embodiment the network bus may be a CAN bus. When a CAN communication is used plug and play between modules and a broadcasting network may be easily implemented and a system control speed and a safety may be enhanced with a high reliability.

Each of the sub modules through may compare a target address value included in the data packet to an address value of each of the sub modules through and may determine whether the data packet is transferred to each of the sub modules through . In the example embodiment because the target address value of the data packet is 004 the motor module may determine that the data packet is transmitted to the motor module and may receive the data packet. On the contrary the other sub modules that is the sub modules and may not receive the data packet because the target address value of the data packet transmitted through the network bus is different from an address value of each of the sub modules and .

The arbitration field may include an identification ID address including address information of a module to which the data frame is to be transmitted a memory address of the module and a command CMD information . The CMD information may include information about a beginning or ending of updating of the target module and information about a command for the target module. The control field may include data length code DLC information including a number of bytes of data included in the data field . The data field may be a position of useful data transmitted to the target module. Because the data frame includes the ID address for the target module and the data field as shown in the target module corresponding to the ID address may receive the data field .

Referring to a module system according to another example embodiment may include a first module system and a second module system that is communicably connected to the first module system .

The first module system may be the same as the module system of and may include a master module and sub modules that is a sub communication module a power source module a motor module a button module a sensor module and a display module . The master module may be communicably connected to an external device . The master module and the sub modules through may be connected to a network bus of a broadcasting scheme for example a CAN bus.

The second module system may include sub modules and hereinafter also referred to as a sub communication module a camera module and a power source module . The sub communication module may be communicably connected to the sub communication module of the first module system via a wire or wirelessly.

The power source module is provided to supply power to the entire second module system . The power source module may be electrically connected to the other sub modules that is the sub modules and and may supply power required for an operation of each of the sub modules and to the sub modules and . Each of the sub modules and may include a block shaped housing case and neighboring modules may be physically connected directly to each other or may be connected using a separate connector. Also the power source module may be separated from the sub communication module or may be formed integrally with the sub communication module in a single housing.

In the same manner as that of the first module system the sub modules and of the second module system may be connected to a network bus of a broadcasting scheme. Each of the sub modules and may have an address value as a unique identifier. The identifier may have a MAC address or may be a unique serial number assigned to each of modules in manufacturing of each of the modules. For example the sub communication module may have an address value of 008 the power source module may have an address value of 009 and the camera module may have an address value of 010. 

Because the sub communication module may be communicably connected to the sub communication module of the first module system the first module system and the second module system may exchange data with each other. For example the first module system and the second module system may wirelessly exchange data with each other using the sub communication modules and . In this example even though the first module system and the second module system are physically spaced apart and are disconnected the first module system and the second module system may share data generated during processing of tasks while performing the tasks independently of each other. Also the first module system and the second module system may mutually transmit and receive messages and accordingly it is possible to construct a system enabling organic cooperation. In this example the network bus of the first module system and the network bus of the second module system may be networks of the same broadcasting scheme and may be for example CAN buses.

Each of the sub communication module of the first module system and the sub communication module of the second module system may transmit receive and store in advance address values of modules included in a counterpart module system corresponding to each of the first module system and the second module system . For example the sub communication module of the first module system may analyze addresses of the modules and included in the second module system and may recognize as if the first module system and the second module system are connected. Similarly the sub communication module of the second module system may also analyze addresses of the modules through included in the first module system and may recognize as if the first module system and the second module system are connected.

For example to transmit specific data for example a message to the camera module of the second module system the external device may transmit a data packet obtained by adding 010 that is the address value of the camera module to the specific data to the master module of the first module system . When the data packet is received from the external device the master module may convert the data packet according to a protocol of the network bus and may transmit the converted data packet via the network bus to the sub modules through connected to the network bus . In this example because an address value of each of the sub modules through is different from 010 that is a target address value of the data packet the sub modules and may not receive the data packet. However because the sub communication module knows in advance address information including 008 009 and 010 of the sub modules and included in the second module system the sub communication module may recognize that the camera module of the second module system connected to the sub communication module has the address value of 010. Even though the target module address that is 010 of the data packet is different from an address value of 002 of the sub communication module the sub communication module may receive the data packet and may transmit the data packet to the sub communication module of the second module system . A communication between the sub communication modules and may be performed using one of a USB scheme an IrDA scheme a Wi Fi scheme a UWB scheme a Bluetooth scheme a ZigBee scheme a CDMA scheme a WCDMA scheme an LTE scheme and an LTE A scheme.

The master module may receive an update data code for the sub modules and in the second module system from the external device and may store the update data code. The master module may transmit the received update data code to the second module system through the sub communication modules and . Thus data may be updated for each module in the second module system that is physically separated from the master module of the first module system .

Hereinafter an updating operation performed by the module communicator will be described with reference to . Update data codes generated for each module by the compiler are binary machine language codes. In operation the module communicator receives an update data code of each of N modules from the compiler . In operation the module communicator adds a module address of each of the N modules to be updated to a communication header of a data frame including the update data codes. For example a portion of a unique serial number or a MAC address of a module may be added as a module address to the communication header in operation .

In operation the module communicator may encode the data frame according to a communication protocol between the module communicator and the master module . For example each data to be transmitted may be encoded to comply with a wireless communication protocol for example Wi Fi or Bluetooth or a wired communication protocol for example a USB. To transmit update data codes of a plurality of modules the module communicator may upload the update data codes to a first in first out FIFO memory in operation . In other words the module communicator may store an encoded update data code for each module in an internal memory using a FIFO scheme and may transmit the update data code to the master module . For example to transmit the update data codes for each of the N modules the module communicator primarily transmits to the master module an update data code for a first module of the module system in operation . The update data code for the first module may be a data code first uploaded to the FIFO memory.

The first module may receive the update data code from the master module via the network bus . In this example for integrity verification the module communicator may retransmit the update data code to the master module and the master module may retransmit the update data code that is received again to the first module in operation . The first module may compare the update data codes that are received twice and may verify integrity in operation . In an example when an error does not occur during operation the first module may generate a completion message and may transmit the completion message to the master module . In another example when an error occurs during operation the first module may generate an error message and may transmit the error message to the master module . In this example the master module may transmit the error message to the module communicator and may request the module communicator to retransmit data of a corresponding portion with the error. The module communicator may retransmit the data of the corresponding portion with the error. The master module may transmit a completion message to the module communicator to notify that updating of the first module is completed without an error.

The module communicator may delete the update data code for the first module from the FIFO memory and may upload an update data code for a next module in operation . Also the module communicator may transmit an update data code for a second module uploaded second to the FIFO memory to the master module in operation . Similarly for integrity verification the module communicator may retransmit the update data code for the second module in operation . The second module of the module system may compare the update data codes that are received twice and may verify integrity in operation . In an example when an error does not occur during operation the second module may generate a completion message and may transmit the completion message to the master module . In another example when an error occurs during operation the second module may generate an error message and may transmit the error message to the master module . In this example the master module may transmit the error message to the module communicator and may request the module communicator to retransmit data of a corresponding portion with the error. The module communicator may retransmit the data of the corresponding portion with the error. The master module may transmit a completion message to the module communicator to notify that updating of the second module is completed without an error.

In the same manner as that described above the module communicator may determine that an update data code for an N th module does not have an error after transmitting the update data code to the N th module and may complete updating for each of the modules in the module system .

Hereinafter an updating operation performed by the master module will be described with reference to .

Referring to while performing a specific process based on firmware of the master module of the module system in operation the master module determines whether data is received from the module communicator in operation . The master module may receive update data codes for each of modules in the module system from the module communicator . For example when the master module receives data in operation the master module may decode a communication protocol in operation and may interpret content of the received data. The received data may be an update command for a module of the module system in operation . For example when the received data is not the update command in operation the master module may perform a separate task based on a corresponding command in operation . When the received data is the update command in operation the master module may check the number N of modules to be updated in operation .

In operation the master module may send an update request message for a first module via the network bus . The first module may receive the update request message normally and may transmit an update ready message in response to the update request message and the master module may receive the update ready message normally in operation . In response to the update ready message being received the master module may primarily transmit an update data code for the first module in operation . In this example for integrity verification the master module may retransmit the update data code to the first module in operation . In operation the first module may verify integrity. In an example when an error does not occur during operation the master module may transmit an update request message to a second module in operation and may update the second module through the same process as that of the first module. In another example when an error occurs during operation the first module may transmit an error message to the master module in operation . In this example the master module may retransmit the update data code for the first module in operation .

When the master module fails to receive the update ready message for the first module in operation and a predetermined period of time elapses in operation the master module may transmit an update error message to the module communicator in operation and may perform an original main process of the master module in operation .

Referring to while performing a specific process based on firmware in operation the sub modules and of the module system determine whether data is received from the master module in operation . Each of the sub modules through may receive an update data code from the master module . For example when data is received in operation each of the sub modules through decodes a communication protocol in operation and interprets content of the received data. For example when the network bus of the module system is a CAN bus each of the sub modules through may delete a header associated with the communication protocol from the data received from the master module and may determine whether a CMD for example the CMD field of of the received data corresponds to an update request message. When the received data is determined not to correspond to an update command in operation each of the sub modules through may perform a separate task based on a corresponding command in operation . When the received data is determined to correspond to the update command in operation each of the sub modules through may stop a process being performed and may allow a program counter to jump to a bootloader in operation .

In operation each of the sub modules through may transmit an update ready message indicating that each of the sub modules through is ready for updating to the master module . In operation each of the sub modules through may parse an update data code received from the master module in a user code area. In this example to verify integrity of the update data code each of the sub modules through may receive the update data code again from the master module in operation and may perform a verification process by comparing the parsed update data code to the update data code that is received again in operation . In an example when an error occurs during operation each of the sub modules through may transmit an error message to the master module in operation and the master module may retransmit an update data code of each of the sub modules through in operation . In another example when an error does not occur during operation each of the sub modules through may restart by resetting software of each of the sub modules through in operation .

According to the example embodiments described above a master module may transmit update data associated with an operation of a sub module however there is no limitation thereto. For example the master module may also update data associated with an operation of the master module.

As described above in a module system and an update method for the module system according to an example embodiment updating for a plurality of modules included in the module system may be performed all at once instead of individually and thus it is possible to update data for each of the modules simply and efficiently in time update.

Also various modules included in the module system may be coupled and connected using various schemes and thus it is possible to construct a module system for diverse purposes. For example a module system for surveillance may be constructed by combining a power source module a camera module and a master module or a mobile module system may be constructed by combining a power source module a camera module a master module and a motor module. In addition to utilize a module system with the same modules for other uses updating for the entire module system may be performed all at once without a need to individually develop and update data of each of the modules in the module system.

Thus it is possible to reuse the modules of the module system and to easily construct a module system for various purposes by simply changing existing data of the module system.

Referring to a module based robot system according to an example embodiment is an application of the module system of and has the same basic configuration as the configuration of the module system of . Accordingly hereinafter a feature of the module based robot system will be described.

The module based robot system may include a plurality of modules for example modules and that may communicate with each other. The module based robot system may update data of each of the modules through .

The module based robot system may include a master module and at least one sub module for example sub modules and hereinafter also referred to as a power source module a button module a sub communication module and a motor module respectively that are connected to a network to perform a data communication with the master module . In the example embodiment the master module the power source module the button module the sub communication module and the motor module may be communicably connected in sequence to form the module based robot system . Each of the modules and includes a body case and a cover case that covers the body case in a case with a standardized rectangular parallelepiped shape. The body case includes an MCU to perform a specific function of each of the modules through . Each of the modules through may include a coupler for coupling to a neighboring module a bus pin electrically connected to a neighboring module for a data communication and a power supply pin for supplying power in four sides. The master module the power source module the button module and the sub communication module may be coupled adjacent to each other by couplers . In this example a bus pin and a power supply pin formed in one module may be in contact with a bus pin and a power supply pin formed in another module coupled to the module respectively. Accordingly between the coupled modules power may be supplied and data may be exchanged by forming a network. In the example embodiment the motor module may be connected to the sub communication module by a separate connector instead of the coupler . The connector may include a power supply line and a data line for transmission and reception of data.

The coupler is provided to connect two neighboring modules to each other. In the example embodiment the coupler may include a coupling pin disposed in a side of the body case and a magnet configured to pull the coupling pin using magnetic force. Due to the coupling pin and the magnet two neighboring modules may pull toward each other by magnetic force and may be coupled. In the example embodiment the coupling pin and the magnet are described as an example of the coupler however there is no limitation thereto. Accordingly another type of a coupler may be used. For example the body case may include a protrusion and a concave portion that accommodates the protrusion and two neighboring modules may be coupled by inserting a protrusion of one module into a concave portion of the other module.

The master module may be communicably connected to an external device for example a computer or a mobile device. The computer may include for example a laptop computer a desktop computer or a workstation and the mobile device may include for example a mobile phone a PDA a smartphone or a tab book. In the example embodiment the master module may be connected to the computer or the mobile device for a Wi Fi communication to transmit and receive data to and from the external device for example a computer or a mobile device of a user or to receive update data for the sub modules through . Also the master module may be connected to the computer or the mobile device for the communication using one of a USB scheme an IrDA scheme a Wi Fi scheme a UWB scheme a Bluetooth scheme a ZigBee scheme a CDMA scheme a WCDMA scheme an LTE scheme and an LTE A scheme.

The sub modules through may be connected via a network bus to transmit and receive data to and from the master module . In the example embodiment the network bus may employ a broadcasting scheme that allows a module corresponding to a destination address of data transmitted through the network bus to receive the data.

The network bus may include various wired and wireless communication schemes for example a serial communication scheme a LAN scheme a CAN scheme a USB scheme an IrDA scheme a Wi Fi scheme a Bluetooth scheme a ZigBee scheme a CDMA scheme a WCDMA scheme an LTE scheme or an LTE A scheme and may enable a heterogeneous communication.

In the example embodiment the network bus may be a CAN bus. When a CAN communication is used plug and play between modules and a broadcasting network may be easily implemented and a system control speed and a safety may be enhanced with a high reliability.

The master module may transmit data required for updating to a target sub module requiring updating of an MCU among the sub modules through through the network bus .

As described above in a module based robot system according to an example embodiment updating for a plurality of modules connected to a network may be performed all at once instead of individually and thus it is possible to update data for each of the modules simply and efficiently in time.

Also various modules included in a module system may be coupled and connected using various schemes and thus it is possible to construct a robot system for diverse purposes. For example a robot system for surveillance may be constructed by combining a power source module a camera module and a master module or a mobile robot system may be constructed using a power source module a camera module a master module and a motor module. In addition to utilize a module based robot system with the same modules for other uses updating for the entire robot system may be performed all at once without a need to individually develop and update data of each of the modules in the robot system.

Referring to a multi module compilation system according to an example embodiment is provided to generate execution codes for each of a plurality of modules for example modules and included in a module system . In the example embodiment the modules through may be connected to each other over a network.

The multi module compilation system may be mounted in a computer or a mobile device. The computer may include for example a laptop computer a desktop computer or a workstation and the mobile device may include for example a mobile phone a PDA a smartphone or a tab book.

The module system may update each of the modules through that may communicate with each other. The module system has the same configuration as the configuration of the module system of .

The module system may include a master module and at least one sub module for example sub modules through connected over a network to perform a data communication with the master module .

The master module may be communicably connected to an external device for example a computer or a mobile device. The computer may include for example a laptop computer a desktop computer or a workstation and the mobile device may include for example a mobile phone a PDA a smartphone or a tab book. More specifically the master module may be communicably connected to a module communicator of the computer or the mobile device. Accordingly the master module may transmit and receive data to and from an external device for example a computer or a mobile device of a user or may receive update data for the sub modules through . The master module may perform a communication with the computer or the mobile device using one of a USB scheme an IrDA scheme a Wi Fi scheme a UWB scheme a Bluetooth scheme a ZigBee scheme a CDMA scheme a WCDMA scheme an LTE scheme and an LTE A scheme. In other words the master module may be connected to the module communicator via a wire using a USB. Also the master module may be wirelessly connected directly to the module communicator using Wi Fi or may be wirelessly connected to the module communicator using an AP.

The sub modules through may be connected to a network to perform a data communication with the master module and may each include an MCU as a CPU capable of being updated. The MCU may include a bootloader area for booting the MCU and a user code area in which firmware is stored in an inner memory for example a flash memory. In the example embodiment the sub modules through may also be referred to as a sub communication module a power source module a motor module a button module a sensor module and a display module respectively. The module system may also include a camera module as a sub module.

The sub modules through may be connected via a network bus to transmit and receive data to and from the master module . In the example embodiment the network bus may employ a broadcasting scheme that allows a module corresponding to a destination address of data transmitted through the network bus to receive the data. The network bus may include various wired and wireless communication schemes for example a serial communication scheme a LAN scheme a CAN scheme a USB scheme an IrDA scheme a Wi Fi scheme a Bluetooth scheme a ZigBee scheme a CDMA scheme a WCDMA scheme an LTE scheme or an LTE A scheme and may enable a heterogeneous communication.

In the example embodiment the network bus may be a CAN bus. When a CAN communication is used plug and play between modules and a broadcasting network may be easily implemented and a system control speed and a safety may be enhanced with a high reliability.

The master module may transmit update data required for updating to a target sub module requiring updating of a CPU among the sub modules through through the network bus .

The power source module is provided to supply power to the entire module system . The power source module may be electrically connected to the master module and the other sub modules that is the sub modules and to supply power required for an operation of a module to the master module and the sub modules and . Each of the modules through may include a block shaped housing case and neighboring modules may be physically connected directly to each other or may be connected using a separate connector. Also the power source module may be separated from the master module or may be formed integrally with the master module in a single housing.

The multi module compilation system may include a module identifier an event analyzer a module code generator and a compiler . The module identifier may identify a target module that executes a program code to operate the module system . At least a portion of the program code may be written in an object oriented programming language for example C C or JAVA . For example when an entire program code is associated with the motor module and the button module of the module system the module identifier may analyze the entire program code and may recognize the motor module and the button module as target modules of a program.

The event analyzer may analyze a program code for the entire module system and may analyze various events occurring in the target modules and .

The various events may include a communication data packet transmitted between modules of the module system an operation command transmitted from one module to another module or transmission and reception of a message and general data. Also the events may include a change in an operation for example a change in a specific condition in an operation of a module regardless of another module. For example when the entire program code is associated with an operation of the motor module based on an on off operation of the button module the event analyzer may recognize an occurrence of an event between the motor module and the button module in the entire program code.

The module code generator may analyze a correlation between a target module recognized by the module identifier and an event analyzed by the event analyzer may divide the entire program code into module codes for each of target modules and may generate the module codes. For example when the module system includes four modules that is the master module the motor module the power source module and the display module a user may develop a program code for the entire module system operating in interconnection with the four modules. The module code generator may analyze the entire program code developed by the user and may divide the entire program code into a first module code for an operation of the master module a second module code for an operation of the motor module a third module code for an operation of the power source module and a fourth module code for an operation of the display module and may generate module codes. In the example embodiment the event analyzer and the module code generator are separated from each other however there is no limitation thereto. For example the module code generator may include the event analyzer . In this example the module code generator may divide the entire program code into module codes for each of the target modules and based on a correlation between the target modules and and events occurring in the target modules and and may generate the module codes.

The compiler may compile the module codes generated by the module code generator and may generate a machine language code as an execution code for each of the target modules. The compiler may compile a high level language for example C C or JAVA and may generate the machine language code that is a binary code suitable for an MCU of the target module. The generated machine language code may be transmitted to the master module of the module system through the module communicator as a communicator.

The multi module compilation system may include a code database DB configured to store the program code or the module codes generated by the module code generator . Accordingly a user may reuse or reference module codes for each module generated in advance for programming development.

The multi module compilation system may provide an application programming interface API that may be used by a user to write the program code.

For example the multi module compilation system may include a UI that provides a UI allowing a user to generate and edit the entire program code for the module system . The UI may include a display configured to receive an input of a user through a mouse or a keyboard connected to a computer and to display corresponding content. The UI may be used interchangeably with for example a CUI or a GUI. Thus a user may write a program code using a keyboard personally or may write a program code by selecting a graphic image and selecting a pre generated standard code. Also the user may connect change or edit object images of a program target module on the display to generate a new program code.

In addition the multi module compilation system may further include a module recognizer not shown configured to automatically recognize a type and a number of modules included in the module system when the multi module compilation system is communicably connected to the module system via the module communicator .

Referring to a GUI according to an example embodiment may display modules and included in a module system on a display device using computer graphics. Also the GUI may receive a user input using a mouse a keyboard or a touch by a user s finger and may connect or recombine modules to generate the entire program code for the module system .

The GUI may include a main window a module selection window and a menu window . The main window may be used to select and edit modules of a module system and to set a function of each of the modules. The module selection window may display various types of modules of a module system as icons and the menu window may display various menus associated with generation storage or editing of a program code file. Also edit icons may be displayed on the main window and may be used to select or delete a module or to return to a previous edit state. For example when a user desires to perform programming by adding a new module the user may select a new module from the module selection window and a class variable for the new module may be declared in a program code. Also when a module is selected from the main window an action list of actions that may be performed by each module may be displayed. In this example the displayed action list may be basically provided as a standard list and a user may update the action list by adding an action item for each module or may directly perform programming by switching to a CUI environment even though an action item is not provided in the action list.

In the example embodiment the button module and the motor module may be connected to each other in a real world and accordingly a list of actions associated with a button click may be displayed as an action list of the button module on the main window . When a user selects the button click a button click event handler to set content about an event that is to occur when a button of the button module is clicked may be generated in a button class of the program code. Also in the button click event handler content about an operation of the module system to be performed in response to the button click may be programmed. For example to perform programming to rotate a motor of the motor module between 0 degrees and 180 degrees in response to the button of the button module being clicked a user may write a program for transmission a target rotation angle to the motor module in the button click event handler generated in the button class. In view of the motor module a program for 180 degree rotation of the motor of the motor module when an event in which the motor module receives information about the target rotation angle from the button module occurs may be written in a motor event handler in a class associated with the motor module .

For example when the module system is connected to the UI through the module communicator the module recognizer not shown may automatically recognize the type and the number of the modules included in the module system . In this example when the module system includes the master module the button module and the motor module that are not yet connected to a network in the real world as shown in the module recognizer may recognize only the master module that is communicably connected to the module communicator . Accordingly the master module may be displayed on the main window . In another example when the module system includes the master module the button module and the motor module that are connected via network connectors and in the real world as shown in the module recognizer may recognize the master module that is communicably connected to the module communicator and may also recognize the button module and the motor module that are connected over a network to the master module . In addition connection structures of the modules and in the module system may be recognized. Accordingly all of the master module the button module and the motor module may be displayed on the main window and virtual network connection lines and indicating the connection structures of the modules and may also be displayed. In the program code class variables of the recognized modules and may automatically be declared similarly to a plug and play scheme.

When the module system is communicably connected to the module communicator the module recognizer may receive an execution code stored in each of the modules and of the module system and may transmit the execution code to the UI . Thus a user may review and modify an execution code stored currently in each of the modules and of the module system.

The operations of the multi module compilation method will be described with reference to . In operation a user generates a program code to operate an entire module system in an external device for example a computer or a mobile device. The module system includes a plurality of modules connected to a network. In this example the user may call a program code that is written and stored in advance in the code DB and may reuse or edit the program code to write a new program code. In operation a code generator generates program codes for each of modules of the module system by analyzing and reconstructing a program code for the entire module system . In operation the generated program codes are transmitted to the module system and the module system updates a new program code to each of the modules.

Operations performed by the code generator of will be further described with reference to . In operation the code generator for example a module code generator analyzes a program code for the entire module system written by a user and identifies a target module that executes the program code. In operation the code generator analyzes a type and a number of events occurring in the target module by analyzing the program code for the entire module system . For example in operation the code generator may analyze an event based on a type of target modules and messages transmitted and received between the target modules.

In operation the code generator analyzes a correlation between the event and each of the target modules. In operation the code generator generates codes for each of the target modules by dividing and reconstructing the program code. In operation the code generator compiles the codes and generates execution codes for each of the modules. The execution codes may be binary machine language codes and may be executed in the target modules.

The multi module compilation method may further include automatically recognizing a type and a number of modules included in a module system when the module system is communicably connected to a computer or a mobile device and displaying the recognized type and the recognized number of the modules on the computer or the mobile device.

An event analyzing operation performed by a code generator will be further described with reference to . In the example embodiment for convenience of understanding a module system including three modules in total for example a master module as a first module a motor module as a second module and a button module as a third module will be described. For example when a button of the button module is clicked a user may perform programming for 180 degree rotation of a motor of the motor module as a first event in a GUI or CUI environment. In this example the code generator analyzes a program code for the entire module system counts the number N of modules used in the program code in operation and counts the number K of events in operation . For convenience of understanding in the example embodiment a single event that is the first event as an event occurring in a module will be described.

In operation the code generator determines a correlation between an n th module and a k th event in an order of the first module to an N th module and in an order of the first event to a K th event. In the example embodiment whether the first event and the master module as the first module correlate to each other is determined first. When it is determined that the first event and the master module do not correlate to each other whether the first event and the button module as the second module correlate to each other is determined. When the first event and the button module are determined to correlate to each other the code generator analyzes a code block related to the button module and the first event in the program code and generates a related program code in a program module portion corresponding to the button module in operation .

The code generator proceeds to a next event in operation and determines whether the next event and the button module correlate to each other in operation . When it is determined that an additional related event does not occur in operation the code generator proceeds to a next module that is the third module in operation and determines whether the first event and the motor module as the third module correlate to each other in operation . When the first event and the motor module are determined to correlate to each other the code generator analyzes a code block related to the motor module and the first event in the program code and generates a related program code in a program module portion corresponding to the motor module in operation .

In operation the code generator generates program codes for each of the N modules by analyzing a correlation between each of the N modules and each of the K events in the program code in the same scheme as that described above. In the example embodiment because the master module as the first module does not correlate to the first event a firmware program stored in advance in the first module remains unchanged. Thus during updating for each module the first module does not need to update the firmware program. On the contrary because the second module and the third module correlate to the first event a portion of a firmware program of each of the second module and the third module may change in comparison to a firmware program stored in advance in each of the second module and the third module. Thus during updating for each module firmware programs of the second module and the third module may be updated.

Referring to because the master module the button module and the motor module are disconnected from each other a class of the master module communicating with an IDE system may be represented in a program code for a module system in the IDE system.

When the master module the button module and the motor module are connected as shown in B a class of the button module and a class of the motor module may be generated in addition to the class of the master module communicating with the IDE system in a program code for a module system in the IDE system as shown in . Also a program code for an action of the button module a program code for an action of the motor module and a program code for an event occurring when the button of the button module is clicked may be generated in the class of the master module . In other words a program code defining an available action of each of the sub modules and communicably connected to the master module may be generated. For example referring to a program code for rotation of the motor of the motor module between 0 degrees and 180 degrees when the button of the button module is clicked may be generated in a program code .

In the example embodiment the button module and the motor module may be connected to each other in a real world and accordingly a list of actions associated with a button click may be displayed as an action list of the button module on the main window . When a user selects the button click a button click event handler to set content about an event that is to occur when a button of the button module is clicked may be generated in a button class of the program code. Also in the button click event handler content about an operation of the module system to be performed in response to the button click may be programmed. For example to perform programming to rotate a motor of the motor module between 0 degrees and 180 degrees in response to the button of the button module being clicked a user may write a program for transmitting a target rotation angle to the motor module in the button click event handler generated in the button class. In view of the motor module a program for 180 degree rotation of the motor of the motor module when an event in which the motor module receives information about the target rotation angle from the button module occurs may be written in a motor event handler in a class associated with the motor module .

When the program code for the entire module system is completed a code generator may analyze the program code and a correlation between a target module and an event for the target module and may divide and reconstruct the program code to generate a program code for the button module shown in and a program code for the motor module shown in .

Referring to the program code for the button module may include a module template code that is basically generated and an additional code that is additionally generated by the code generator. The additional code may include a definition area indicating definition of a message to be transferred upon an occurrence of a first event and a message area indicating the message to be transferred upon an occurrence of the first event. Referring to the program code for the motor module may include a module template code that is basically generated and an additional code that is additionally generated by the code generator. The additional code may include an area indicating an initial position of the motor an ID reception setting area an area indicating a condition in which a message associated with the first event is received and an operation area of an operation needing to be performed by the motor module when the condition is satisfied.

As described above in a multi module compilation system and a multi module compilation method according to an example embodiment execution codes for each of a plurality of modules included in a module system may be quickly and effectively generated from a program code for the entire module system. Thus it is possible to simply and efficiently update firmware of each of the modules in the module system by generating codes for each of the modules from the program code and compiling the codes.

In addition to utilize the module system with the same modules for other uses updating for the module system may be performed all at once by modifying a program for the entire module system and by generating execution codes for each of the modules through multi module compiling without a need to individually redevelop firmware of each of the modules in the module system.

The example embodiments have been disclosed for illustrative purposes those skilled in the art will understand that the example embodiments can be carried out in other specific forms without changing the technical idea or essential features of the example embodiments. Thus it should be understood that the foregoing example embodiments are provided for illustration only and are not to be construed in any way as limiting the disclosure.

The scope of the disclosure is defined by the claims other than the detailed description and all modifications and variations derived from the meaning and scope of the claims and their equivalents should be interpreted as fall in the scope of the disclosure.

