---

title: Endpoint parameter management architecture for audio mixers
abstract: The present disclosure describes a system using an audio mixer for managing endpoint parameters of an input audio device and an output audio device. The system includes a data terminal, multiple endpoints, and the audio mixer, where the data terminal provides multiple data files including configuration parameters of endpoints. The endpoints include a first endpoint and a second endpoint. The audio mixer is configured to receive the data files from the data terminal, process the data files to obtain a first set of configuration parameters corresponding to the first endpoint and a second set of configuration parameters corresponding to the second endpoint, convert the first set and the second set of configuration parameters into a predefined common data format, and organize the predefined common data structure into a generic data structure.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09628206&OS=09628206&RS=09628206
owner: ClearOne Inc.
number: 09628206
owner_city: Salt Lake City
owner_country: US
publication_date: 20160103
---
This application claims priority and the benefits of the earlier filed Provisional U.S. A No. 62 099 470 filed on 3 Jan. 2015 which is incorporated by reference for all purposes into this specification.

This disclosure relates to the management of devices for systems that may be configured to include large numbers of inputs and outputs of various types. More specifically this disclosure invention relates to the end point parameter management architecture for audio routing and mixing systems and or multi channel data acquisition systems.

Audio mixers are commonly used for combining also called mixing routing and changing the level timbre and or dynamics of multiple audio data streams or signals received from different types of audio devices or computing devices. During operation the audio mixers process different audio device types e.g. microphone output audio line input audio line Telco VoIP etc. each being associated with a large number of configurable parameters. As a result over a span of different audio device types the audio mixers typically identify and control a massive number of parameters which demand a complex software code for being handled and in turn cause the processing speed and performance of the audio mixers to significantly deteriorate. Further if the number of device types and the parameters corresponding to each of those device types change for different product models or SKUs i.e. stock keeping units each of which identifies a distinct product model or product type of audio mixers then the corresponding software code needs to be changed and recompiled for each model. This adds to the burden of managing a code library for different product SKUs.

The disclosed invention also has applicability in other environments as well. Multi channel data acquisition systems have a limited use in multi vendor and multi device environments. For example a HVAC heating and air conditioning system provides various information about its input and output airflows that needs to be managed with the input from temperature sensors. A further extension of this system could be combining the data from these systems with for example a commercial and or residential security lighting audio and video system. But as previously discussed an impossible burden arises when dealing with such disparate systems from multiple vendors.

Therefore there exists a need for systems and methods implementing a robust endpoint parameter management architecture which is simple efficient and flexible to use configure and control for audio mixers and or multi channel data acquisition.

This disclosure describes systems and methods for implementing an endpoint parameter management architecture for audio mixers. In one aspect the present disclosure provides a system using an audio mixer with a processor and a memory in communication with a data storage for managing endpoint parameters of one or more input audio devices and one or more output audio devices. The system comprises a data terminal a plurality of endpoints connected to one or more input audio devices and output audio devices and the audio mixer. The data terminal provides a plurality of data files including configuration parameters of endpoints. The plurality of endpoints include a first endpoint having a first endpoint type and a second endpoint having a second endpoint type. The audio mixer is in communication with the data terminal and the plurality of endpoints. The audio mixer is configured to receive the plurality of data files from the data terminal process the plurality of data files to obtain a first set of configuration parameters corresponding to the first endpoint and a second set of configuration parameters corresponding to the second endpoint convert the first set of configuration parameters and the second set of configuration parameters into a predefined common data format and organize said converted first set and second set of configuration parameters into a generic data structure being compatible with both the first endpoint type and the second endpoint type.

Other and further aspects and features of the disclosure will be evident from reading the following detailed description of the embodiments which are intended to illustrate not limit the present disclosure.

This disclosure describes systems and methods for implementing an enhanced endpoint parameter management module for multichannel data processing and transmission systems that are designed to connect to different types of data sources and sinks and describes a device configured to implement a novel endpoint parameter management architecture for audio mixers. This disclosure describes numerous specific details in order to provide a thorough understanding of the present invention. One skilled in the art will appreciate that one may practice the present invention without these specific details. Additionally this disclosure does not describe some well known items in detail in order not to obscure the present invention.

In various embodiments of the present disclosure definitions of one or more terms that will be used in the document are provided below.

In one embodiment an endpoint refers to one or more devices e.g. microphone speaker calling devices such as mobile phone video phone and internet phone etc. or computing devices e.g. desktop PC personal digital assistant server mainframe computer mobile computing device internet appliance etc. that are capable of exchanging audio and or data streams either independently or in combination with video textual or symbolic data in a communication session.

In another embodiment an endpoint could also refer to a device like a thermocouple a pressure sensor a light sensor a magnetic field detector an automotive instrument panel a commercial and or residential audio video lighting system that accepts commands to turn on or off a Blu Ray video player that accepts commands to play a disc or stop media playback or computing devices described above that capable of exchanging analog and or digital data streams either independently or in combination video textual symbolic data or other data streams in a communication session.

Embodiments are disclosed in the context of an audio mixer system capable of managing parameters of a plurality of endpoints that may include a first endpoint and a second endpoint. Other embodiments may be applied in the context of various use cases involving configuration parameters management. For example another embodiment could be a multi channel data acquisition system. Another embodiment could be a control system designed to ingest commands from a lighting control panel from one vendor and translate those commands into a different command format so that they could be understood by lighting control endpoints from a different vendor using a different command format and syntax. Yet another embodiment is a CAN bus control system for automotive control that allows sensors from one vendor to send commands that are translated into a format that can be understood by an automotive instrument panel from a different vendor. And yet another embodiment is an HVAC heating and air conditioning system from one vendor and a master system such as a StreamNet audio video system from ClearOne s NetStreams division. And yet another embodiment is a commercial and or residential indoor and outdoor lighting appliance security audio and video control system that connects multiple vendor products. Disclosed embodiments are in the context of an audio mixer and or multi channel data acquisition system capable of receiving organizing and converting endpoint configuration parameters and or data structures in data files. The numerous references in the disclosure to the device for an audio mixer and or multi channel data acquisition are intended to cover any and or all devices capable of performing respective operations on endpoints in an environment relevant to the applicable context regardless of whether or not the same are specifically provided.

One embodiment of the disclosed invention describes a system that may comprise an audio mixer receiving one or more input audio streams . . . N collectively input audio streams from input endpoints . . . N collectively input endpoints respectively and generate output audio streams . . . N collectively output audio streams being supplied to output endpoints . . . N collectively output endpoints respectively.

Another embodiment of the disclosed invention describes a system that may comprise a multi channel data acquisition system receiving one or more input analog and or digital data streams . . . N collectively input data streams from input endpoints . . . N collectively input endpoints respectively and generate output analog and or digital data streams streams . . . N collectively output data streams being supplied to output endpoints . . . N collectively output endpoints respectively.

The audio mixer and or multi channel data acquisition may be in communication with a data terminal over a network not shown . The network may comprise for example one or more of the Internet Wide Area Networks WANs Local Area Networks LANs analog or digital wired and wireless telephone networks e.g. a PSTN Integrated Services Digital Network ISDN a cellular network and Digital Subscriber Line xDSL radio television cable satellite and or any other delivery or tunneling mechanism for carrying data. The network may comprise multiple networks or sub networks each of which may comprise for example a wired or wireless data pathway. The network may comprise a circuit switched voice network a packet switched data network or any other network that is able to carry electronic communications. For example the network may comprise networks based on the Internet protocol IP or asynchronous transfer mode ATM and may support voice using for example VoIP Voice over ATM or other comparable protocols used for voice data communications. In some embodiments the network may comprise a cellular telephone network configured to enable exchange of audio data either alone or in combination with textual data audio data video data or any combination thereof between the input endpoints and the output endpoints .

The data terminal may be any computing device known in the art related art or developed later and may comprise or be coupled with one or more hardware devices either wirelessly or in a wired fashion for enabling a user to dynamically interact with other users user devices or other devices via the audio mixer and or multi channel data acquisition connected to the network. For example the data terminal may be coupled with the input endpoints the output endpoints an imaging device including but are not limited to a video camera a webcam a scanner or any combination thereof a display device e.g. a monitor a screen etc. and data input devices e.g. a keyboard a touchscreen a stylus a mouse etc. . The data terminal may be compatible with any other device not shown connected to the network to process and exchange audio video textual symbolic data analog and or digital data streams with each other or any other compatible devices. The data terminal may be or include a multipoint control unit MCU configured to create a logical representation of one or more hardware devices such as the input endpoints and the output endpoints to provide endpoint information e.g. endpoint type endpoint number or identifier functional parameters parameter numbers or identifiers etc. to the audio mixer and or multi channel data acquisition . In another embodiment the data terminal or an included MCU may be configured to establish a communication bridge or channel with the input endpoints output endpoints or any other compatible network devices. In yet another embodiment the data terminal or an included MCU may be configured to store and manage the audio and or data streams being processed by the audio mixer and or multi channel data acquisition . In still another embodiment the data terminal or an included MCU may be configured to request services from or deliver services to or both various devices connected to the network. In some embodiments the audio mixer and or multi channel data acquisition may be connected as a peripheral device or integrated to the data terminal .

The audio mixer and or multi channel data acquisition may be preconfigured or dynamically configured to implement a novel endpoint parameter management architecture that is independent of the types of endpoints and related parameter data structures e.g. command formats or software codes. The audio mixer and or multi channel data acquisition may be configured to convert communications which may include instructions commands queries data etc. from the data terminal into a generic data structure discussed below in greater detail to make these communications compatible with the audio mixer and or multi channel data acquisition and vice versa through the endpoint parameter management architecture. Consequently the audio mixer and or multi channel data acquisition may allow implementation of the data terminal to employ different technologies protocols or software codes using a proprietary technology managed by different organizations e.g. a third party vendor.

The endpoint parameter management architecture may organize the parameters received in any data structure e.g. a command format known in the art related art or developed later which may be compatible with the audio mixer and or multi channel data acquisition and received from any endpoint type into a common generic data structure or command format. Accordingly the endpoint parameter management architecture may offer a single command format or a single data structure that may enable faster command processing independent of the input command or parameter set thereby improving the configuration parameter response in complex or large systems. The endpoint parameter management architecture may further provide intuitive user commands sent over serial communications path that access the generic data structure. Such intuitive user commands enable endpoint configuration parameters to be accessible modifiable compatible either alone or in any combination thereof with the audio mixer and or multi channel data acquisition without changing or recompiling the software codes upon being implemented on the audio mixer and or multi channel data acquisition for handling the configuration parameters. Therefore the use of such architecture may significantly improve human readability of serial commands to allow the use of sophisticated serial commands and reduce the complexity of the software codes for handling the parameters.

The audio mixer and or multi channel data acquisition may be implemented as a standalone and dedicated device including hardware and installed software where the hardware may be closely matched to the requirements and or functionality of the software. Alternatively the audio mixer and or multi channel data acquisition may be implemented as a software application or a device driver. In some embodiments the audio mixer and or multi channel data acquisition may enhance or increase the functionality and or capacity of the network to which it is connected. In some other embodiments the audio mixer and or multi channel data acquisition may be configured to expose its computing environment or operating code to the user and may comprise related art I O devices such as camera speaker scanner keyboard display or any combination thereof. The audio mixer and or multi channel data acquisition may however comprise software firmware or other resources that support remote administration and or maintenance of the endpoint parameter management architecture.

In some embodiments the audio mixer and or multi channel data acquisition either in communication with any of the networked devices such as the data terminal or independently may have voice along with video and data communication capabilities e.g. unified communication capabilities by being coupled to or including various imaging devices e.g. cameras printers scanners medical imaging systems etc. various audio devices e.g. microphones music players recorders audio input devices speakers audio output devices telephones speaker telephones etc. various video devices e.g. monitors projectors displays televisions video output devices video input devices camcorders etc. lighting control panel systems CAN bus control systems HVAC heating and air conditioning systems commercial and or residential indoor and outdoor lighting appliance security audio and video control system or any other type of hardware in any combination thereof. In some embodiments the audio mixer and or multi channel data acquisition may comprise or implement one or more real time protocols and non real time protocols known in the art related art or developed later to facilitate communication of audio and other data streams between the input endpoints and the output endpoints or any other compatible network devices.

The audio mixer and or multi channel data acquisition may be powered by an external power supply unit such as an external battery or a controlled AC supply that may be electrically connected to the audio mixer and or multi channel data acquisition from the data terminal the input endpoints or the output endpoints via a suitable wired link such as via a USB cable or wireless link to draw power for operation.

In some embodiments the audio mixer and or multi channel data acquisition may be operatively connected or integrated with any network appliance not shown configured to establish a network between the audio mixer and or multi channel data acquisition and any endpoint or a computing device such as the data terminal . At least one of the audio mixer and or multi channel data acquisition and the network appliance may be capable of operating as or providing an interface to assist exchange of software instructions and or audio streams between the audio mixer and or multi channel data acquisition and the data terminal .

In some embodiments the network appliance may be preconfigured or dynamically configured to include or control the audio mixer and or multi channel data acquisition integrated with other devices. For example the audio mixer and or multi channel data acquisition may be integrated with the data terminal or any other computing device not shown connected to the network. The data terminal may comprise a module not shown which may enable the audio mixer and or multi channel data acquisition being introduced to the network appliance thereby enabling the network appliance to invoke or control the audio mixer and or multi channel data acquisition as a service. Examples of the network appliance may include but are not limited to a DSL modem a wireless access point a set top box a router a base station and a gateway having a predetermined computing power sufficient for implementing the audio mixer and or multi channel data acquisition .

In some embodiments the audio mixer and or multi channel data acquisition may be installed on or integrated with one or more devices e.g. input endpoints or output endpoints . In some other embodiments the audio mixer may be integrated with any number of devices in a distributed fashion such as being integrated with or installed on the audio devices e.g. the input endpoints or the output endpoints and the data terminal . In a further embodiment the audio mixer and or multi channel data acquisition may include one or more processors and various types of memory and storage devices that are typically found in a variety of user communication devices and user computing devices known in the art related art or developed later. In another embodiment the audio mixer and or multi channel data acquisition may be installed on integrated or operatively associated with a server not shown connected to the network. The server may be implemented as any of a variety of computing devices including for example a general purpose computing device multiple networked servers arranged in clusters or as a server farm a mainframe or so forth.

In some embodiments the audio mixer and or multi channel data acquisition may include in whole or in part a software application working alone or in conjunction with one or more hardware resources. Such software applications may be executed by the processor s on different hardware platforms or emulated in a virtual environment. Aspects of the audio mixer and or multi channel data acquisition may leverage known related art or later developed off the shelf software. Other embodiments may comprise the audio mixer and or multi channel data acquisition being integrated or in communication with a mobile switching center network gateway system Internet access node application server IMS core service node or some other communication systems including any combination thereof.

The audio mixer and or multi channel data acquisition may include a variety of known related art or later developed interface s including software interfaces e.g. an application programming interface a graphical user interface etc. hardware interfaces e.g. cable connectors a keyboard a card reader a barcode reader a biometric scanner an interactive display screen etc. or both.

The audio mixer and or multi channel data acquisition may operate in communication with the storage unit which may comprise any computer readable medium known in the art related art or developed later including for example a processor or multiple processors operatively connected together volatile memory e.g. RAM non volatile memory e.g. flash etc. disk drive etc. or any combination thereof. In some embodiments the storage unit may be installed on integrated with or operatively connected to the data terminal . In some other embodiments the storage unit may be installed on integrated with or operatively connected to a server not shown a network appliance not shown or any other networked device.

In some embodiments the storage unit may include one or more databases and an endpoint parameter management EPM module . The one or more databases may be sub divided into further databases for storing electronic files and data. The storage unit may have one of many database schemas known in the art related art or developed later. For example a database may have a relational database schema involving a primary key attribute and one or more secondary attributes. In some embodiments the audio mixer and or multi channel data acquisition may perform one or more operations but not limited to reading writing indexing encoding decoding manipulating and updating the audio and or data streams and may communicate with various networked computing devices such as the data terminal which may be separately located or integrated with the input endpoints or the output endpoints or both.

The EPM module may be implemented as a field programmable gate array FPGA an erasable programmable logic device EPLD a system on a chip SOC or any other type of device known in the art related art or developed later. In other embodiments the EPM module may be implemented as a software application or device driver. The EPM module may receive configuration parameters e.g. GAIN FINE MUTE RAMP RATE etc. in various command formats from the data terminal via any of the suitable interface s where the configuration parameters may correspond to various types of endpoints such as the input endpoints or output endpoints . For example the EPM module may receive the configuration parameters via a serial bus such as a Universal Serial Bus USB from the data terminal .

The EPM module may be configured to organize the configuration parameters associated with each audio device type into a predefined data structure which may be converted into a generic data structure or command format that is compatible with the audio mixer and or multi channel data acquisition and any endpoint that exchanges a command pair with the audio mixer and or multi channel data acquisition . The command pair may include 1 a set of configuration parameters received by the audio mixer and or multi channel data acquisition from an endpoint such as the input endpoint and 2 a parameter response received by the endpoint such as the input endpoint in response to the receipt of the set of configuration parameters from the audio mixer and or multi channel data acquisition .

Such generic data structure may be based on various predefined or dynamically defined categories or parameter fields associated with each of the endpoints such as the input endpoints or the output endpoints . In one example the generic data structure or command format may be based on endpoint type EPT endpoint number EPN block number BN and parameter number PN .

EPT may refer to a formal name given to an audio and or data device type or endpoint type e.g. a microphone an output line VoIP Voice over IP etc. by the EPM module . Each of such endpoint types may be referenced by a number and a text abbreviation in a table and stored in the databases . For example in a table illustrated in a microphone may be referenced by a number 1 and a text abbreviation MIC in the first row . Similarly an input line e.g. a serial bus providing an audio stream to the audio mixer may be referenced by 2 and INPUT in the second row and an output line e.g. a serial bus carrying an audio stream generated by the audio mixer may be referenced by 3 and OUTPUT in the third row .

EPN may refer to a specific number of the endpoint type referenced in the databases .The endpoint number EPN may be referenced in text or numeric form in a table which is stored in the database. For example if there are 5 microphones then each of them may be identified individually by their EPN e.g. from to . Therefore as illustrated in a table of microphones to may be referenced by MIC MIC MIC MIC and MIC in the text format or by 1 1 1 2 1 3 1 4 and 1 5 in numeric format.

Further all configuration parameters associated with an endpoint type may be organized into blocks of similar function or function type with a corresponding number in a table which may be stored in the databases . As such BN may refer to a parameter block number to which a particular configuration parameter belongs. For example as illustrated in a table of a function type or block name LEVEL may be associated with a block number 1. Similarly the block names AEC NC and FILTER may be associated with block numbers 2 3 and 4 respectively.

PN may refer to a number or name associated with each parameter within a specific block number BN . Each configuration parameter may be identified and collected with other parameters of similar functionality and associated under one of the Block Numbers such as those mentioned above. For example as illustrated in table of multiple parameters may be represented by name and a number within a Block Name LEVEL associated with a number 1. Examples of such parameters may include but not limited to GAIN FINE represented by number 1 MUTE represented by number 2 RAMP RATE represented by number 3 and PHAN PWR represented by number 4 and so on.

With the above in mind illustrates a generic data structure having a single or only one command format hereinafter referred to as a base command format may be developed using EPT EPN BN and PN to represent the configuration parameters associated with any endpoint type. As example we can create a configuration parameter GAIN FINE for a microphone that is illustrated by Table in which shows a configuration parameter being represented in both text and numeric formats in the base command format. As illustrated EPT is a first microphone shown as MIC in text and 1 numerically where the first 1 may refer to the first microphone. Further BN is shown as LEVEL in text and 1 numerically. Similarly PN is shown as MUTE in text and 1 numerically. Such base command format provides a compact numeric format to represent configuration parameters from any endpoint type and may be useful for a low level machine to machine connection e.g. over Ethernet. On the other hand the text version of the base command format is more intuitive for direct user control and easy human comprehension.

The base command format may be implemented using any suitable programming language known in the art related art or developed later. For example the EPM module may implement the base command format contained in a single object class in C programming language. Further each endpoint may be defined based on its configuration parameters arranged in the base command format in a separate table which may be saved as an endpoint structure file or endpoint data file e.g. in comma separated value or CSV format by the EPM module .

The base command format may allow for its modification by incorporating corresponding updates in the individual endpoint structure files such as those shown in without any changes in the software code for the EPM module or the base command format. The individual tables defining endpoints in the endpoint structure files also allow to enhance readability of user generated commands sent over a serial communications path e.g. a serial bus from the data terminal or any other networked device to the audio mixer and or multi channel data acquisition for accessing the base command format. Therefore all digital audio and or data mixing parameters or configuration parameters of each endpoint can be organized into a single endpoint data structure using just four categories or parameter fields of the base command format illustrated in .

During operation the EPM module may receive the user generated commands to access a base command format corresponding to an endpoint e.g. an input endpoint or an output endpoint. Such access may allow a user to add or create delete or modify any value in the base command format. The EPM module may receive the user generated commands in a COMMAND FORMAT TABLE and convert it into an equivalent table in a command data file which may be in a CSV format however any other suitable file format known in the art related art or developed later may be implemented. The command data file may allow easy portability of user generated commands across different models or varieties of audio mixers compatible with the base command format without individual software coding on each audio mixer and automate implementation of user desired configuration on different audio mixers by the command data file including the user generated commands in the COMMAND FORMAT TABLE being executed by respective EPM modules.

The EPM module may execute the command data file to access a COMMAND FORMAT TABLE that is used to identify a legal command type and format received from the data terminal . The EPM module may receive the same serial command in three different command formats as shown in equations 1 2 and 3 from the data terminal . In some embodiments the EPM module may receive such serial command in different command formats from the server. EP MIC 1 LEVEL GAIN FINE 5 1 MIC 1 GAIN 5 2 EP 1 1 1 1 5 3 

The command formats shown in equations 1 2 and 3 for the same serial command may be provided by a user to the audio mixer and or multi channel data acquisition via e.g. a serial port such as a USB port on the data terminal over any commercial terminal emulator application. Equations 1 2 and 3 show different representations in which a single command can be written and entered by the user.

The EPM module uses the command format table as shown in to identify a command and its format to determine if the format is legal or correct. In the table the equation 1 is represented in the first row the equation 2 is represented in the second row and the equation 3 is represented in the third row of the table . Therefore the command format table may allow the user to add or create delete or modify the base command format. Further the conversion of the command format table into a command data file allows the received serial command to be represented in any of the various formats known in the art related art or developed later compatible with the EPM module by simply having the EPM module to update command data file without any change in the software code of the EPM module for the changes made in the command format table . Such direct change in the serial command based on update in the command data files may provide significant flexibility to make the command formats user configurable with absolutely no changes necessary in the software code of the EPM module . It may also enable to introduce new types of serial commands from the data terminal while maintaining the audio mixer and or multi channel data acquisition to be compatible with the data terminal and or other network device such as input endpoints .

Once the correctness of the received command formats is validated by the EPM module using the command format table the EPM module may provide a command translation table being indexed based on specific row numbers of the command format table . The command translation table as illustrated in may organize the configuration parameters received with various command formats and correspondingly the associated endpoint types into a predefined data structure that is common for all command formats received by the EPM module . The command translation table such as the table may enable the EPM module to translate and place fields of the received serial command s into appropriate fields of an internal communications packet illustrated in . The internal communications packet may interface directly with the base command format stored in the databases . The internal communications packet such as the packet may represent a machine level or low level communications packet that may be used directly by the EPM module for further processing.

Once a valid command format has been identified in the command format table by the specific row number then that same row number identifies the correct row to be used in the second table i.e. the command translation table in order to correctly form the internal communications packet . The same row number is then used to index to an appropriate row in a third table known as a response format table as shown in table of so that the EPM module can extract and convert specific fields of the internal communications packet to a predefined response format for being reviewed by a user via the data terminal or the server.

The EPM module may use the response format table to convert the low level communications packet into a user desired command format being preconfigured or dynamically configured at the audio mixer and or multi channel data acquisition . The converted user desired command format may allow a user to review the base command format that has been added or modified based on the user generated commands previously received through execution of the command data file by the EPM module . Therefore the converted user desired command format may represent any serial command which has different command formats or different data structures in a predefined common user format having a generic data structure for being reviewed on a mixer connected output device e.g. a monitor either directly or via a serial port such as a USB port of the data terminal . In some embodiments the mixer connected output device may integrated with the data terminal .

Other embodiments of the present invention will be apparent to those skilled in the art after considering this disclosure or practicing the disclosed invention. The specification and examples above are exemplary only with the true scope of the present invention being determined by the following claims.

