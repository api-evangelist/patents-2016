---

title: Conditional declarative policies
abstract: Methods, systems, and media for producing a firewall rule set are provided herein. Exemplary methods may include receiving a declarative policy associated with a computer network security policy; collecting information from at least one external system of record; generating a firewall rule set using the declarative policy and information, the firewall rule set including addresses to or from which network communications are permitted, denied, redirected or logged, the firewall rule set being at a lower level of abstraction than the declarative policy; and provisioning the firewall rule set to a plurality of enforcement points of a distributed firewall, the firewall selectively policing network communications among workloads using the firewall rule set.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09621595&OS=09621595&RS=09621595
owner: vArmour Networks, Inc.
number: 09621595
owner_city: Mountain View
owner_country: US
publication_date: 20160510
---
This application is a continuation of U.S. patent application Ser. No. 14 673 640 filed on Mar. 30 2015 now U.S. Pat. No. 9 380 027 issued on Jun. 28 2016 and entitled Conditional Declarative Policies which is incorporated by reference in its entirety herein.

The present technology pertains to computer security and more specifically to computer network security.

A hardware firewall is a network security system that controls incoming and outgoing network traffic. A hardware firewall generally creates a barrier between an internal network assumed to be trusted and secure and another network e.g. the Internet that is assumed not to be trusted and secure.

Attackers breach internal networks to steal critical data. For example attackers target low profile assets to enter the internal network. Inside the internal network and behind the hardware firewall attackers move laterally across the internal network exploiting East West traffic flows to critical enterprise assets. Once there attackers siphon off valuable company and customer data.

Some embodiments of the present technology include methods for producing a firewall rule set which may include receiving a declarative policy associated with a computer network security policy collecting information from at least one external system of record generating a firewall rule set using the declarative policy and information the firewall rule set including addresses to or from which network communications are permitted denied redirected and or logged the firewall rule set being at a lower level of abstraction than the declarative policy and provisioning the firewall rule set to a plurality of enforcement points of a distributed firewall the firewall selectively policing network communications among workloads using the firewall rule set.

Various embodiments of the present technology include systems for producing a firewall rule set comprising a processor and a memory communicatively coupled to the processor the memory storing instructions executable by the processor to perform a method comprising receiving a declarative policy associated with a computer network security policy collecting information from at least one external system of record generating a firewall rule set using the declarative policy and information the firewall rule set including addresses to or from which network communications are permitted denied redirected and or logged the firewall rule set being at a lower level of abstraction than the declarative policy and provisioning the firewall rule set to a plurality of enforcement points of a distributed firewall the firewall selectively policing network communications among workloads using the firewall rule set.

In some embodiments the present technology includes non transitory computer readable storage media having embodied thereon a program the program being executable by a processor to perform a method for producing a firewall rule set the method comprising receiving a declarative policy associated with a computer network security policy collecting information from at least one external system of record generating a firewall rule set using the declarative policy and information the firewall rule set including addresses to or from which network communications are permitted denied redirected and or logged the firewall rule set being at a lower level of abstraction than the declarative policy and provisioning the firewall rule set to a plurality of enforcement points of a distributed firewall the firewall selectively policing network communications among workloads using the firewall rule set.

While this technology is susceptible of embodiment in many different forms there is shown in the drawings and will herein be described in detail several specific embodiments with the understanding that the present disclosure is to be considered as an exemplification of the principles of the technology and is not intended to limit the technology to the embodiments illustrated. The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the technology. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises comprising includes and or including when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof. It will be understood that like or analogous elements and or components referred to herein may be identified throughout the drawings with like reference characters. It will be further understood that several of the figures are merely schematic representations of the present technology. As such some of the components may have been distorted from their actual scale for pictorial clarity.

Information technology IT organizations face cyber threats and advanced attacks. Firewalls are an important part of network security. Firewalls control incoming and outgoing network traffic using a rule set. A rule for example allows a connection to a specific Internet Protocol IP address allows a connection to a specific IP address if the connection is secured e.g. using Internet Protocol security IPsec blocks a connection to a specific IP address redirects a connection from one IP address to another IP address logs communications to and or from a specific IP address and the like. Firewall rules at a low level of abstraction indicate specific IP address and protocol to which connections are allowed and or not allowed.

Managing a firewall rule set is a difficult challenge. Some IT security organizations have a large staff e.g. dozens of staff members dedicated to maintaining firewall policy e.g. firewall rule set . A firewall rule set can have tens of thousands or even hundreds of thousands of rules.

Some embodiments of the present technology allow IT security organizations to generate and maintain a firewall rule set at a high level of abstraction. Abstraction is a technique for managing complexity by establishing a level of complexity on which an IT security staff member interacts with the system suppressing the more complex details below the current level. As explained below desired network behavior can be specified in a high level description e.g. a declarative statement such as block high risk traffic from going to high value assets and dynamically compiled to produce a low level firewall rule set. For example a firewall rule set includes IP addresses and is symbolically represented as 10.0.0.310.1.2.3 10.0.2.310.1.2.3 etc.

Network also referred to as a computer network or data network is a telecommunications network that allows computers to exchange data. For example in network networked computing devices pass data to each other along data connections e.g. network links . Data is transferred in the form of packets. The connections between nodes are established using either cable media or wireless media. For example network includes at least one of a local area network LAN wireless local area network WLAN wide area network WAN metropolitan area network MAN and the like. In some embodiments network includes the Internet.

Data center is a facility used to house computer systems and associated components. Data center for example comprises computing resources for cloud computing services or operated for the benefit of a particular organization. Data center equipment for example is generally mounted in rack cabinets which are usually placed in single rows forming corridors e.g. aisles between them. Firewall creates a barrier between data center and network by controlling incoming and outgoing network traffic based on a rule set.

Optional core switch router is a high capacity switch router that serves as a gateway to network and provides communications between ToR switches and and between ToR switches and and network . ToR switches and connect physical hosts and respectively together and to network optionally through core switch router . For example ToR switches use a form of packet switching to forward data to a destination physical host of physical hosts and only transmit a received message to the physical host for which the message was intended.

Physical hosts are computing devices that act as computing servers such as blade servers. Computing devices are described further in relation to .

Hypervisor also known as a virtual machine monitor VMM is software running on at least one of physical hosts and hypervisor runs VMs . A physical host of physical hosts on which hypervisor is running one or more virtual machines is also referred to as a host machine. Each VM is also referred to as a guest machine.

For example hypervisor allows multiple OSes to share a single physical host of physical hosts . Each of OSes appears to have the host machine s processor memory and other resources all to itself. However hypervisor actually controls the host machine s processor and resources allocating what is needed to each operating system in turn and making sure that the guest OSes e.g. virtual machines cannot disrupt each other. OSes are described further in relation to .

VMs also include applications . Applications are programs designed to carry out operations for a specific purpose. Applications include at least one of web application also known as web apps web server transaction processing database and like software. Applications run using a respective OS of OSes .

Hypervisor optionally includes virtual switch . Virtual switch is a logical switching fabric for networking VMs . For example virtual switch is a program running on a physical host of physical hosts that allows a VM of VMs to communicate with another VM.

Hypervisor also includes virtual firewall enforcement points . Virtual firewall also referred to as distributed firewall enforcement points are a firewall service that provides network traffic filtering and monitoring for VMs . Virtual firewall enforcement points control network traffic to and from a VM of VMs using a rule set. A rule for example allows a connection to a specific IP address allows a connection to a specific IP address if the connection is secured e.g. using IPsec denies a connection to a specific IP address redirects a connection from one IP address to another IP address e.g. to a honeypot or tar pit logs communications to and or from a specific IP address and the like. Each address is virtual physical or both. Connections are incoming to the respective VM outgoing from the respective VM or both. Redirection is described further in related United States Patent System and Method for Threat Driven Security Policy Controls U.S. Pat. No. 9 294 442 issued Mar. 22 2016 which is hereby incorporated by reference in its entirety.

In some embodiments logging includes metadata associated with action taken by the physical and or virtual firewall enforcement point such as the permit deny and log behaviors. For example for a Domain Name System DNS request metadata associated with the DNS request and the action taken e.g. permit forward deny block redirect and log behaviors are logged. Activities associated with other application layer protocols e.g. Dynamic Host Configuration Protocol DHCP Domain Name System DNS File Transfer Protocol FTP Hypertext Transfer Protocol HTTP Internet Message Access Protocol IMAP Post Office Protocol POP Secure Shell SSH Secure Sockets Layer SSL Transport Layer Security TLS and the like and their respective metadata may be additionally or alternatively logged.

In some embodiments a policy table includes a source a destination and an action. Each source and destination can be described at a high level. For example each source and destination is at least one of a PCI non PCI high value high risk running a particular OS at a particular geographic location associated with sensitive data having a particular application life cycle and the like workload. Workloads are described further below. The action for example is to permit forward deny block or redirect communication. In various embodiments a policy table additionally includes application metadata and is a next generation firewall NGFW policy table for enforcing security policies at the application level. For example an HTTP packet including a get request for varmour.com is reasonably determined to be going to varmour.com.

A declarative policy reflects a security intent of the responsible IT security organization. Declarative policies may be roughly divided into three types compliance security and tenant policies. Compliance policies reflect requirements from government industry and the like. By way of non limiting example a compliance policy is a Payment Card Industry Data Security Standard PCI DSS requirement that PCI compliant assets e.g. physical host VM or both are not allowed to communicate with non PCI assets. Other examples include geolocation based policies e.g. sensitive data is not allowed outside of Switzerland and data sensitivity e.g. sensitive compartmented information SCI workloads can only be accessed by U.S. citizens . In some embodiments determinations e.g. of citizenship include access of an external system of record e.g. associated with Human Resources HR systems at compile time and dynamic re compile time.

PCI DSS is a proprietary information security standard for organizations that handle branded credit cards from the major card brands including Visa MasterCard American Express Discover and Japan Credit Bureau. The standard includes an in scope out of scope requirement that assets that store process and forward credit card information are not allowed to communicate with assets that do not e.g. symbolically PCInon PCI .

In various embodiments at compile time an external system of record e.g. IT asset management database is accessed for a current snapshot of which assets are PCI and non PCI. For example one or more attributes such as a tag label identifier or other metadata may be associated with each asset denoting whether the asset is a PCI or non PCI asset e.g. an asset is tagged as in or out of scope for PCI . The location of a PCI and or non PCI asset is subject to change. PCI assets may be managed by hypervisors ranging from the same hypervisor to different hypervisors running on different physical hosts geographically remote from each other. For example changes occur when an entire virtual machine is moved from one physical host to another physical host such as during a data center failover for disaster recovery.

Security policies do not necessarily reflect government or industry mandated requirements but rather security best practices. By way of non limiting examples security policies include do not allow high risk assets to communicate with high value assets e.g. symbolically high riskhigh value and do not allow pre production assets to communicate with production assets e.g. symbolically pre productionproduction . Assets include a physical host VM or both. Examples of high risk assets include a test development system a security compromised system and the like. Examples of high value assets include enterprise resource planning ERP systems point of sale POS systems and the like. In some embodiments high risk assets high value assets and the like are denoted by one or more attributes.

In some embodiments declarative policies alternatively or additionally refer to application life cycle states. For example application life cycle states include requirements design construction testing debugging deployment maintenance and the like. In various embodiments life cycle states are denoted by one or more attributes. Life cycle states are subject to change. For example today s test system is tomorrow s production system. In various embodiments determinations e.g. of application life cycle state include access of an external system of record e.g. application lifecycle management system at compile time.

Tenant policies reflect a request from application developers to access particular services. Whereas security and compliance risk policies are generally negative e.g. communication is prohibited application or tenant policies are generally positive e.g. certain communications are requested because application developers typically think in terms of the services used by an application. By way of non limiting example for a new email server the applications developer requests access to at least one DNS Simple Mail Transfer Protocol SMTP and Lightweight Directory Access Protocol LDAP services. Optionally at least one of Internet Message Access Protocol IMAP Post Office Protocol POP Messaging Application Programming Interface MAPI and Secure Sockets Layer SSL services is offered.

At step information e.g. attributes is collected from external systems of record. External systems of record include one or more of an HR database change management database application lifecycle management system IT asset management database custom database and the like. By way of non limiting example external systems of record are at least one of Microsoft Active Directory AD ServiceNow VMware vCenter Apache CloudStack OpenStack and the like.

At step the declarative policy is compiled using the information from external systems of record to produce a firewall rule set. Compilation is described further in relation to .

At step the low level firewall rule set is optionally checked and corrected for example for at least one of existence e.g. is a group of PCI assets defined consistency conflicts e.g. is an asset defined as both a PCI and non PCI asset irrelevant redundant overlapping e.g. rule does not contribute to security policy and the like.

At step the firewall rule set is provided to at least one of a hardware firewall and a distributed firewall enforcement point. For example the firewall rule set is automatically pushed out to the at least one of a hardware firewall and a distributed firewall enforcement point. In some embodiments the firewall rule set is provided to an enforcement point EP and or enforcement point inspector EPi . EP and EPi are described further in related United States Patent Application Methods and Systems for Orchestrating Physical and Virtual Switches to Enforce Security Boundaries application Ser. No. 14 677 827 which is hereby incorporated by reference in its entirety. The at least one hardware firewall and distributed firewall enforcement point to which the firewall rule set is deployed is determined when the declarative policy is compiled as described further in relation to .

Method repeats at Step or Step . In this way the declarative policy is dynamically evaluated to remain up to date with changes to the physical hosts and or VMs. In some embodiments dynamic re compilation also referred to as refresh of method is at least one of manual and automated. For example the IT security staff member triggers compilation and evaluation by providing indicia e.g. clicking on a commit button provided in a GUI . A subsequent manual refresh may be received from the IT security staff member for example when a new workload e.g. VM is added because attributes of the current and new workloads change. By way of further non limiting example refresh automatically occurs after a configurable time interval having a default value. Another example is that refresh automatically or manually occurs when a change to underlying values occur e.g. which system s are high risk changes .

At Step the declarative policy is processed to produce at least one compiled rule. The declarative policy can be evaluated and selectively applied at compile time. For example some declarative policies such as compliance policies which are always adhered to are always applied compiled. Other policies are selectively applied using conditions e.g. time and at least one attribute. For example a declarative policy may be in force between 9 00 AM and 5 00 PM so the declarative policy is definitely applied compiled if the compile time is between 9 00 AM and 5 00 PM and otherwise the declarative policy is not compiled or compiled anyway e.g. do not care .

By way of further non limiting example a declarative policy is applied compiled using attack relevance e.g. using the workload operating system such as communication destined for Microsoft Windows specific services are not applied compiled when coming at a Linux host . Another non limiting example is risk scoring asset value e.g. a different level of security is provided to a high value asset such as a core order processing system as opposed to a non high value asset such as a test development system .

In some embodiments a declarative policy tagged labelled such that the compiler can determined under which conditions if any the declarative policy is applied. An Extensible Markup Language XML style tagging system may be used including tags for at least one of workload names time value and the like.

In some embodiments a compiled rule is a collection of access attributes. For example access attributes include at least one of source IP address source port destination IP address destination port destination protocol and action e.g. permit forward deny block redirect etc. . An Internet Protocol IP address is a numerical label assigned to each device e.g. physical host VM printer and the like participating in a computer network that uses the Internet Protocol for communication. A port is a software construct serving as a communications endpoint in a physical host s and or VM s operating system. A port is generally associated with an IP address of a physical host and or VM and the protocol type of the communication.

At Step one or more workloads are received. A workload is an instance of a VM. In some embodiments the received workloads are received from an external system of record such as a system for managing VMs e.g. VMware vCenter Apache CloudStack OpenStack and the like .

At Step workload attributes are collected. In some embodiments workload attributes are collected from at least one of an external system of record and analysis of network behavior e.g. an SMTP server communicates using various protocols such as SMTP IMAP DNS and the like . Workload attributes are associated with a workload and include at least one of application name application risk application owner time created business owner business purpose asset value PCI non PCI relative confidentiality of associated data device configuration and or posture e.g. OS version patch level system type etc. Internet Protocol IP address DNS name compliance related attributes e.g. for the Health Insurance Portability and Accountability Act of 1996 HIPAA Federal Information Security Management Act of 2002 FISMA etc. and the like. Application risk is the risk associated with the workload. For example high risk workloads include telnet FTP and the like. Low risk workloads include Secure Shell SSH . In some embodiments application risk is a number range such as low risk is 0 and high risk is 5. Application risk can be any other range of whole and or fractional numbers to denote high to low and low to high application risk.

In various embodiments a network topology is determined from information provided by at least one at least one of an external system of record and analysis of network behavior. Using the determined network topology at least one appropriate hardware and or distributed firewall enforcement point to deploy the firewall rule set is determined.

Time created can be a date and time stamp from which an age of the workload can be determined e.g. one month old one week old created yesterday created today etc. . Owner can denote role responsibilities of the owner such is an employee IT administrator developer no owner associated and the like.

In some embodiments attributes are qualitative and subsequently quantified . By way of example and not limitation asset value is high medium or low PCI property is PCI or non PCI and production status is pre production or production.

At step a workload score for each workload is computed using the workload attributes. In some embodiments each workload attribute is quantified e.g. expressed as a whole and or fractional number within a predefined range of numbers and any range of numbers can be used. Values of the workload attributes are evaluated to determine a numerical score associated with the workload. For example a sum average weighted average and the like is calculated using the workload attribute values to produce the score. The range of score values can be any range of numbers for example the score can be in the range of 0 to 99.

At Step the score is compared to a predetermined threshold also referred to as a limit . Although greater than is shown in other comparisons e.g. greater than or equal to equal to less than and less than or equal to may be used. The predetermined threshold is a number above which the associated workload is considered high risk. The predetermined threshold can be any number in the range of score values such as 75 in a range of 0 to 99. Using the comparison the associated workload is determined to be high risk or not e.g. low risk . In response to a high risk determination method continues to Step . In response to a not high risk determination method optionally continues to Step where a different workload is identified.

At Step at least one of IP addresses port numbers and the like associated with the workload are identified.

At Step a low level firewall rule set is generated using the identified at least one of IP addresses port numbers and the like and the compiled rule. For example a firewall rule includes the identified IP addresses as a source IP address and or destination IP address a source port a destination port a destination protocol and action e.g. permit forward deny block redirect etc. in accordance with the compiled rule. In some embodiments the firewall rule allows a connection to a specific IP address allows a connection to a specific IP address if the connection is secured e.g. using IPsec denies a connection to a specific IP address redirects a connection from one IP address to another IP address logs communications to and or from a specific IP address and the like. By way of further non limiting example the firewall rule set is symbolically represented as 10.0.0.310.1.2.3 10.0.2.310.1.2.3 etc.

Various embodiments of the present invention offer the benefits of preventing East West lateral spread e.g. by controlling traffic between assets enabling higher utilization of cloud servers e.g. different tenants VMs can operate in the same physical host and or rack of physical hosts adapting to changes in physical and virtual asset allocation e.g. through dynamic re compilation and empowering IT security staff to control firewalls using intent and desired outcome e.g. by generating low level firewall rules from a high level declarative policy .

Declarative policies according to some embodiments advantageously do not require definition of the enforcement point e.g. hardware and or distributed firewall enforcement point . Instead the enforcement point to which the firewall rule set is deployed is determined as described in relation to .

The components shown in are depicted as being connected via a single bus . The components may be connected through one or more data transport means. Processor unit s and main memory are connected via a local microprocessor bus and the mass data storage peripheral device s portable storage device and graphics display system are connected via one or more input output I O buses.

Mass data storage which can be implemented with a magnetic disk drive solid state drive or an optical disk drive is a non volatile storage device for storing data and instructions for use by processor unit s . Mass data storage stores the system software for implementing embodiments of the present disclosure for purposes of loading that software into main memory .

Portable storage device operates in conjunction with a portable non volatile storage medium such as a flash drive floppy disk compact disk digital video disc or Universal Serial Bus USB storage device to input and output data and code to and from the computer system in . The system software for implementing embodiments of the present disclosure is stored on such a portable medium and input to the computer system via the portable storage device .

User input devices can provide a portion of a user interface. User input devices may include one or more microphones an alphanumeric keypad such as a keyboard for inputting alphanumeric and other information or a pointing device such as a mouse a trackball stylus or cursor direction keys. User input devices can also include a touchscreen. Additionally the computer system as shown in includes output devices . Suitable output devices include speakers printers network interfaces and monitors.

Graphics display system include a liquid crystal display LCD or other suitable display device. Graphics display system is configurable to receive textual and graphical information and processes the information for output to the display device.

Peripheral device s may include any type of computer support device to add additional functionality to the computer system.

The components provided in the computer system in are those typically found in computer systems that may be suitable for use with embodiments of the present disclosure and are intended to represent a broad category of such computer components that are well known in the art. Thus the computer system in can be a personal computer PC hand held computer system telephone mobile computer system workstation tablet phablet mobile phone server minicomputer mainframe computer wearable or any other computer system. The computer may also include different bus configurations networked platforms multi processor platforms and the like. Various operating systems may be used including UNIX LINUX WINDOWS MAC OS PALM OS QNX ANDROID IOS CHROME and other suitable operating systems.

Some of the above described functions may be composed of instructions that are stored on storage media e.g. computer readable medium . The instructions may be retrieved and executed by the processor. Some examples of storage media are memory devices tapes disks and the like. The instructions are operational when executed by the processor to direct the processor to operate in accord with the technology. Those skilled in the art are familiar with instructions processor s and storage media.

In some embodiments the computing system may be implemented as a cloud based computing environment such as a virtual machine operating within a computing cloud. In other embodiments the computing system may itself include a cloud based computing environment where the functionalities of the computing system are executed in a distributed fashion. Thus the computing system when configured as a computing cloud may include pluralities of computing devices in various forms as will be described in greater detail below.

In general a cloud based computing environment is a resource that typically combines the computational power of a large grouping of processors such as within web servers and or that combines the storage capacity of a large grouping of computer memories or storage devices. Systems that provide cloud based resources may be utilized exclusively by their owners or such systems may be accessible to outside users who deploy applications within the computing infrastructure to obtain the benefit of large computational or storage resources.

The cloud is formed for example by a network of web servers that comprise a plurality of computing devices such as the computing system with each server or at least a plurality thereof providing processor and or storage resources. These servers manage workloads provided by multiple users e.g. cloud resource customers or other users . Typically each user places workload demands upon the cloud that vary in real time sometimes dramatically. The nature and extent of these variations typically depends on the type of business associated with the user.

It is noteworthy that any hardware platform suitable for performing the processing described herein is suitable for use with the technology. The terms computer readable storage medium and computer readable storage media as used herein refer to any medium or media that participate in providing instructions to a CPU for execution. Such media can take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical magnetic and solid state disks such as a fixed disk. Volatile media include dynamic memory such as system RAM. Transmission media include coaxial cables copper wire and fiber optics among others including the wires that comprise one embodiment of a bus. Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk a hard disk magnetic tape any other magnetic medium a CD ROM disk digital video disk DVD any other optical medium any other physical medium with patterns of marks or holes a RAM a PROM an EPROM an EEPROM a FLASH memory any other memory chip or data exchange adapter a carrier wave or any other medium from which a computer can read.

Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to a CPU for execution. A bus carries the data to system RAM from which a CPU retrieves and executes the instructions. The instructions received by system RAM can optionally be stored on a fixed disk either before or after execution by a CPU.

Computer program code for carrying out operations for aspects of the present technology may be written in any combination of one or more programming languages including an object oriented programming language such as JAVA SMALLTALK C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present technology has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. Exemplary embodiments were chosen and described in order to best explain the principles of the present technology and its practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Aspects of the present technology are described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present technology. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The description of the present technology has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. Exemplary embodiments were chosen and described in order to best explain the principles of the present technology and its practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

