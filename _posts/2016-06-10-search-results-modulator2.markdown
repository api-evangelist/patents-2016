---

title: Search results modulator
abstract: When a user conducts a search for content using one or more of the many search engines known in the art, embodiments of the present invention may receive results returned to the user's browser by the search engine, and may then proceed to filter, organize, modify, or enhance those results and/or their presentation by performing various editing and/or presentation operations on the search results, based on information relating to the user's prior interactions with the search results and the user's interests and preferences. Search results may also be modulated based on information about the way other users have responded to or interacted with each of the search results in the past.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09626445&OS=09626445&RS=09626445
owner: 
number: 09626445
owner_city: 
owner_country: 
publication_date: 20160610
---
This application claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application No. 62 174 805 entitled Search Results Modulator filed Jun. 12 2015.

Embodiments of the present invention relate to systems and methods for presenting and interacting with search results received from an Internet search engine. More particularly embodiments of the present invention relate to systems and methods for performing editing or various presentation related operations on search results received from a search engine before the search results are delivered to a user s browser.

A great number of new applications and websites leverage the breadth of the World Wide Web to deliver requested or desirable information to users and many of them do so with the help of popular search engines. Despite the availability of a vast wealth of user information conventional search engines fail to meaningfully incorporate this information into the display of search results. For example search engine users regularly repeat the same searches over time or they perform similar searches comprising overlapping search results. Existing search engines however do not incorporate information about the users prior interactions with their search results. They do not remember which results users liked disliked found useful etc. As a result users may be forced to unnecessarily repeat their research efforts.

User information in this context may include individual user interactions interests and preferences as well as the collective interactions interests and preferences of many users. User information may also include for example identifications of particular web pages documents or other information resources that users believe are useful or interesting. Similarly user information may include identifications of information resources that users believe are not useful or interesting. Further user information may include semantic information about information resources that associates certain resources with other related information resources. For example co pending U.S. patent application Ser. No. 14 664 166 entitled Deriving Semantic Relationships Based on Empirical Organization of Content by Users describes embodiments for deriving semantic relationships among information resources based on user actions.

It would be beneficial if users could interface with popular search engines in a manner that more precisely leverages user information to identify filter modify and present search results in a more productive manner.

This summary is provided to introduce certain concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify essential features of the claimed subject matter nor is it intended to limit in any way the scope of the claimed invention.

Embodiments of the present invention are directed to methods of capturing filtering enhancing modifying organizing presenting and interacting with search results received from an Internet search engine. For purposes of this description search results means the set of content items e.g. web pages documents images videos etc. that is returned to a user from a search engine as a result of a query. Each content item in the set may be individually selected by a user for further study. The invention includes a search results modulator which according to some embodiments interfaces with a browser framework also referred to as a browser and modulates the display of search results received from a search engine.

When a user conducts a search for content using one or more of the many search engines known in the art embodiments of the present invention may receive results returned to the user s browser by the search engine and may then proceed to filter and enhance those results and or their presentation by performing various editing and or presentation operations on the search results based on information relating to the user s prior interactions with the search results and the user s interests and preferences which may for example include results the user likes dislikes etc. . Search results may also be modulated based on information about the way other users have responded to or interacted with each of the search results in the past.

Some embodiments may perform editing and or presentation operations before search engine results are delivered to a user s browser.

Other embodiments may perform editing and or presentation operations after search engine results are delivered to a user s browser possibly in the same window. For example the search results can be rewritten in place.

Still other embodiments may perform editing and or presentation operations after search engine results are delivered to a user s browser but not in the same window.

The above summaries of embodiments of the present invention have been provided to introduce certain concepts that are further described below in the Description of the Embodiments. The above summarized embodiments are not necessarily representative of the claimed subject matter nor do they span the scope of features described in more detail below. They simply serve as an introduction to the subject matter of the invention.

Embodiments of the present invention will be described with reference to the accompanying drawings wherein like parts are designated by like reference numerals throughout and wherein the leftmost digit of each reference number refers to the drawing number of the figure in which the referenced part first appears.

The Search Results Modulator System may also include a search assistant . Search assistant may comprise a software module e.g. written in JavaScript or another programming language supported by browser framework and it may run within browser framework or it may run externally and interface with browser framework using application program interfaces APIs according to well known techniques. Search assistant may also be a permanent component of browser framework or it may be temporarily installed into and uninstalled from browser framework after executing e.g. as a plug in add on or extension . Accordingly search assistant may be a software module that is separate and distinct from browser framework or it may be partially or fully integrated with other functionality of browser framework . In an embodiment search assistant may load other software into browser framework at runtime. For purposes of this description such other software is considered a part of search assistant .

User computer may be connected to network e.g. the Internet which in turn may connect user computer to search engine e.g. a search engine provided by Google Microsoft Yahoo etc. .

In embodiments illustrated by a user of user computer may use browser framework to conduct Internet searches using search engine . In response to Internet searches search assistant may receive results returned by search engine and may filter and or enhance those results and or their presentations via browser framework . Such filtering and enhancing may include various editing and or presentation operations on the search results based on the user s interests preferences and previous interactions with the search results.

User computer may be connected to network which in turn may connect user computer to search engine . Network may also connect user computer to search assistant engine which is connected to data repository .

Search assistant engine may reside on a server computer of the type described with respect to may assist search assistant with processing operations and may provide additional information about search results to a user of search engine . Search assistant engine may store additional information in data repository which may include any type of data store e.g. a relational database NoSQL database in memory data store etc. . In embodiments data repository may reside on the same server as search assistant engine or on another server.

In embodiments illustrated by a user of user computer may use browser framework to conduct Internet searches using search engine . Search assistant may receive results returned by search engine and filter and or enhance those results and or their presentations via browser framework . Such filtering and enhancing may include various editing and or presentation operations on the search results based on the user s interests preferences and previous interactions with the search results.

The editing and or presentation operations may also be based on prior interactions with the search results by other users. In such embodiments search assistant may query search assistant engine for additional information based on the search results. Search assistant engine may then retrieve the additional information from data repository and transmit at least some of the information to search assistant for processing. Further when a user interacts with the search results or indicates his interests or preferences search assistant may receive this information and transmit it to search assistant engine for storage in data repository .

In embodiments data repository can store content items that have been uploaded and or saved by users. For example users may save search results to data repository for later access and retrieval. Users may also upload other content items i.e. content items not presented as search results to data repository and such content items may be used to supplement search results.

Having described several architectural embodiments of a search results modulator system attention will now shift to the functionality of the search assistant item of and or item of . Such functionality will be described with respect to three primary aspects 1 how the search assistant receives e.g. intercepts search results 2 how the search assistant presents edits and filters the search results and 3 how the search assistant receives and stores additional information about the search results e.g. user interactions .

In embodiments search assistant or may interface with browser framework or e.g. using conventional APIs to capture search results received from search engine or .

Before the search results are presented to the user search assistant or may parse search results received by browser framework or to identify individual search results. As described below search assistant or may also distinguish the search results from other information such as advertisements which may be received by browser framework or from search engine or or from search assistant engine .

Search assistant or may identify individual search results for several reasons. First in order for some embodiments of the invention to operate on particular search results e.g. by highlighting hiding or adding additional content to search results at least some of the search results must be identifiable as distinct objects. In other words embodiments of search assistant or may identify the information associated with one or more of the search results and may then identify the graphical boundaries of those search results based on how they appear in the search results page as described below. This may be especially complex where the graphical dimensions of search results vary according to for example the length of a URL title and or textual description snippet included in each search result. Some search results may also include additional information such as a thumbnail image that search assistant or may also consider.

Second in order to operate on particular search results based on stored information about the results some embodiments must be able to uniquely identify the results in order to query a data repository such as data repository . In an embodiment search assistant or may uniquely identify a search result by its uniform resource locator URL . For example co pending U.S. patent application Ser. No. 14 664 166 describes embodiments for identifying content items including search results based on their URLs and also for handling situations in which the same content item may have multiple URLs. Such techniques can also be used with this invention. In the same or an alternative embodiment search assistant or may uniquely identify a search result according to its canonical tag. A canonical tag is a means by which web page authors may notify search engines and other tools that a primary URL identifies a web page regardless of how many different URLs are associated with the same web page or content. For example an author may insert the HTML tag to indicate that the current URL and www.example.com the canonical URL are associated with the same web page or content Search assistant or may therefore interpret the canonical tag associated with a particular search result and then query data repository based on the canonical URL.

In other embodiments particularly non Web embodiments search assistant or may uniquely identify a search result according to some other component known in the art. For example if a search result is a document search assistant or can identify the document based on its pathname in a file system or its title author and date or a checksum or similar value computed based on the document s raw content.

In still other embodiments the search assistant or may identify properties of individual search results e.g. title keywords last modified date etc. . In such embodiments search assistant or does not need to uniquely identify the search results but rather it can use certain properties of a search result to query a data repository such as data repository or as a check against a set of rules. For example search assistant or may be configured to operate on search results that contain certain words.

Depending on the type of data contained in a search result and the information space from which the result is obtained different methods for identifying a result and or its properties will be applicable.

Unfortunately there is no singular convention for delivering search results as part of a search results page to browser framework or . In other words search results generally do not arrive from a search engine in individual packages or clearly demarcated segments. Instead they are included in markup language instructions e.g. HTML code that instruct browser framework or to present search results and any additional information e.g. advertisements in a format that is specific to the search engine. The format may also be specific to browser framework or .

Embodiments of the invention include at least two approaches for parsing the markup language instructions hereinafter the markup to identify individual search results and to graphically distinguish them from other information in the results page. In one approach search assistant or may identify the particular search engine that a user has chosen to query. Search assistant or may for example identify the search engine by querying browser framework or for the URL in its address bar or by reading identifying information in the markup. Then search assistant or can iterate through each line of markup to identify search results based on known formatting conventions for that particular search engine. For example search assistant or can search the markup for specific tags e.g. HTML tags that are known to indicate search results.

In another approach search assistant or may parse the markup regardless of format to identify search results and to graphically distinguish them from other information in the results page. Even though the markup may generally include numerous segmented components there typically is no map or known markers from which search assistant or can quickly distinguish search results from each other or from advertisements and other components within the results page. Thus in embodiments search assistant or may dynamically analyze the markup to determine the hierarchical structure of a results page. Particularly search assistant or may look for parallel components i.e. components that match the pattern of items in a list based on the reoccurrence of formatting clues.

For example search assistant or can analyze the structure of the markup e.g. the HTML Document Object Model to look for patterns. The markup will often include a hierarchy of elements. Elements are the building blocks of a document or web page and may be defined in a number of ways depending on the markup language. In HTML elements are identified with opening and closing tags e.g. and . Elements may encapsulate other elements and may also have ancestors i.e. elements higher up the same branch of the hierarchy siblings i.e. elements at the same level of the hierarchy and descendants i.e. elements lower down the same branch of the hierarchy .

Next search assistant or can identify a sub hierarchy for each of the identified ancestors i.e. the structure that includes each of the ancestors descendants . In the sub hierarchy of A includes elements E D and D while the sub hierarchy of A includes elements A S and S and each of their descendants. The sub hierarchy of A includes all elements since A is the root. Each of these sub hierarchies can be referred to as ancestor trees of element E.

For each ancestor search assistant or can identify its siblings and their corresponding sub hierarchies. In the siblings of A are S and S while the sibling of A is S. A has no siblings since it is the root of the hierarchy. The sibling sub hierarchies can be referred to as sibling trees i.e. they are the sibling trees of the ancestor trees of element E.

The search assistant or can next compare each ancestor tree of element E with its corresponding sibling trees and generate a similarity score based on how closely the ancestor tree resembles its sibling trees. Referring to for example search assistant or may compare the A ancestor tree with the S and S sibling trees. It may also compare the A ancestor tree with the S sibling tree.

The similarity score can be based on a number of factors including the degree of resemblance between the structures of the ancestor tree and its sibling trees and also the number of similar sibling trees. For example an ancestor tree with 10 similar siblings may receive a higher similarity score than an ancestor tree with only 2 similar siblings.

Search assistant or can determine the structural resemblance between an ancestor tree and its sibling trees according to a variety of factors. In embodiments search assistant or may look at the depth of respective hierarchies of a tree i.e. the number of levels or length of the longest branch in the tree . For example an ancestor tree with 4 levels of elements may have a low structural similarity to a sibling tree with only 2 levels of elements. Search assistant or may also consider uniformity of depth i.e. the degree to which each of a tree s branches are the same length . In other words even if an ancestor tree and a sibling tree have the same depth they may not be structurally similar if the ancestor tree has 4 branches that are 4 levels deep while the sibling tree has only 1 branch that is 4 levels deep.

Other factors include the number of descendants and uniformity of descendants at each level of the hierarchy. In other words search assistant or may consider the extent to which each tree fans out at successive levels of the hierarchy and how uniformly this occurs. Search assistant or may also consider other factors when comparing tree structures without departing from the scope of this invention.

In the structure of the A ancestor tree is identical to the structures of the S and S sibling trees while the structure of the A ancestor tree is very different from the structure of the S sibling tree. The A ancestor tree would therefore receive a higher similarity score than the A ancestor tree. After search assistant or determines all of the similarity scores it can identify the ancestor associated with the highest similarity score. That ancestor and its siblings are the elements most likely to represent individual search results with each of their descendants representing components of search results . In the A ancestor tree would have the highest similarity score and therefore the A ancestor tree and the S and S sibling trees would most likely represent individual search results.

In embodiments search assistant or can additionally or alternatively compare ancestor trees to sibling trees by analyzing the properties of the elements within the trees. For example similar trees may incorporate the same HTML CSS styles thereby establishing common formatting e.g. header level font bolding color size etc. among the trees. Accordingly the A ancestor tree and its S and S sibling trees might also be identified as individual search results based on common properties.

Once all of the search results have been identified search assistant or may determine whether any of the search results should be modified or filtered in some manner as further described below.

There are many ways to modify or filter search results to improve the quality of a search. The goal of this description is not to list every possible type of modification but rather to identify some exemplary approaches to filtering and modifying search results along with some justifications as to why those approaches may be beneficial to a user.

One such approach is premised on the notion of emphasizing e.g. highlighting bolding underlining or deemphasizing e.g. graying out removing or hiding search results that a user may or may not be interested in respectively. Similarly emphasis may be provided for results that may have some particular significance to the user. For example a user may have previously indicated that he likes a particular search result by bookmarking or saving a corresponding URL. For example co pending U.S. patent application Ser. No. 14 664 166 entitled Deriving Semantic Relationships Based on Empirical Organization of Content by Users describes embodiments in which users can save content items to personal folders. The relationships among content items within those personal folders may be used to suggest content items to other users. In conjunction with such embodiments search assistant or may highlight search results corresponding to content items that a user has previously saved to at least one personal folder and or provide additional information as suggestions. Alternatively in some embodiments search assistant or may remove or hide search results corresponding to content items that a user has already saved.

Some other embodiments in which one or more search results may be emphasized or deemphasized by search assistant or include the following i emphasizing search results that a user previously indicated that he liked or were helpful but did not necessarily save the search results ii deemphasizing search results that a user previously indicated that he did not like or did not find helpful iii emphasizing search results that other users have liked or found useful iv deemphasizing search results that other users have disliked or found not to be helpful v emphasizing search results that are very popular based on for example the number of times the search results pages are known to have been visited by other users and vi in conjunction with co pending U.S. patent application Ser. No. 14 664 166 emphasizing search results that are determined to be suggestions for content items the user has previously saved or deemphasizing search results that are determined to be poor suggestions for content items the user has previously saved.

In the above embodiments and others search results may alternatively or additionally be emphasized or deemphasized based on the content of the search results. For example a user might establish criteria for content he wishes to see or exclude and or search assistant or can learn such criteria based on the user s prior interactions search history etc. Then if the content of a search result e.g. the full text keywords title snippet images domain etc. matches any of the criteria the search result can be emphasized or deemphasized accordingly.

In embodiments of the invention user preferences for search results and or content can be obtained explicitly e.g. a user clicks on a button to indicate that he did not like a search result and or passively e.g. a user ignored a search result on one or more prior occasions . Further it should be understood that the scope of this invention is not limited to any particular types of user information or how that user information is collected or maintained.

In embodiments of the invention search assistant or can add additional information to be displayed in conjunction with the search results. The additional information can be presented for example in empty white space surrounding the search results in a tooltip that appears when the user hovers over the corresponding search result or in any other suitable manner.

Some embodiments in which additional information can be appended to the display include the following i append suggestions see co pending U.S. patent application Ser. No. 14 664 166 for individual search results e.g. provide a tooltip of one or more suggested content items for each search result ii append suggestions see co pending U.S. patent application Ser. No. 14 664 166 based on a set of search results e.g. provide one or more content items that are suggestions for a whole page of search results iii append user interface elements e.g. buttons sliders text boxes etc. to permit the user to operate e.g. save hide share indicate preferences such as liking or disliking etc. on one or more search results and iv append supplementary information about the search results e.g. the number of users that have saved visited etc. each search result or a rating or score for each search result based on any available metrics or other available information for the search results .

In addition to emphasizing deemphasizing and appending additional information about search results embodiments of the invention can also reorganize the presentation of search results based on for example the popularity of the search results or other available metrics information e.g. based on domains criteria preferences or user information . In an embodiment search assistant or can reorganize the search results into one or more folders based on the folder recommendation embodiments described in co pending U.S. patent application Ser. No. 14 664 166.

In embodiments regardless of how search results will be presented or additional information will be added search assistant or can modify the original markup and cause browser framework or to display the search results in accordance with the modified markup. For example search assistant or can append new information e.g. by adding a new Cascading Style Sheet or CSS classes to one or more search results. The browser framework or will then provide or update the display to reflect the appended information.

In addition to adding modifying and or reorganizing information to be displayed by browser framework or embodiments of the invention can capture additional information for example about the user s search terms his interaction with search results and or his interaction with other information appended to the search results display. Search assistant or may then store captured information locally and or in a data repository such as data repository and search assistant or and or search assistant engine may later use this information in the same or a different form when processing search results.

In an embodiment search assistant or may add triggers e.g. JavaScript code to any received search results such that when a user selects a particular search result the trigger returns information to search assistant or about the selected search result and or the user s search terms. For example triggers may be appended to search results in the same way as other information.

Computing device may comprise any device known in the art that is capable of processing data and or information such as any general purpose and or special purpose computer including as a personal computer workstation server minicomputer mainframe supercomputer computer terminal laptop tablet computer such as an iPad wearable computer mobile terminal Bluetooth device communicator smart phone such as an iPhone Android device or BlackBerry a programmed microprocessor or microcontroller and or peripheral integrated circuit elements an ASIC or other integrated circuit a hardware electronic logic circuit such as a discrete element circuit and or a programmable logic device such as a PLD PLA FPGA or PAL or the like etc. In general any device on which a finite state machine resides that is capable of implementing at least a portion of the methods structures API and or interfaces described herein may comprise computing device . Such a computing device can comprise components such as one or more network interfaces one or more processors one or more memories containing instructions and logic one or more input output I O devices and one or more user interfaces coupled to the I O devices etc.

Memory can be any type of apparatus known in the art that is capable of storing analog or digital information such as instructions and or data. Examples include a non volatile memory volatile memory Random Access Memory RAM Read Only Memory ROM flash memory magnetic media hard disk solid state drive floppy disk magnetic tape optical media optical disk compact disk CD digital versatile disk DVD and or RAID array etc. The memory device can be coupled to a processor and or can store instructions adapted to be executed by processor such as according to an embodiment disclosed herein.

Input output I O device may comprise any sensory oriented input and or output device known in the art such as an audio visual haptic olfactory and or taste oriented device including for example a monitor display projector overhead display keyboard keypad mouse trackball joystick gamepad wheel touchpad touch panel pointing device microphone speaker video camera camera scanner printer vibrator tactile simulator and or tactile pad optionally including a communications port for communication with other components in computing device .

Instructions and logic may comprise directions adapted to cause a machine such as computing device to perform one or more particular activities operations or functions. The directions which can sometimes comprise an entity called a kernel operating system program application utility subroutine script macro file project module library class object or Application Programming Interface etc. can be embodied as machine code source code object code compiled code assembled code interpretable code and or executable code etc. in hardware firmware and or software. Instructions and logic may reside in processor and or memory .

Network Interface may comprise any device system or subsystem capable of coupling an information device to a network. For example network interface can comprise a telephone cellular phone cellular modem telephone data modem fax modem wireless transceiver Ethernet circuit cable modem digital subscriber line interface bridge hub router or other similar device.

Processor may comprise a device and or set of machine readable instructions for performing one or more predetermined tasks. Processor can comprise any one or a combination of hardware firmware and or software. Processor can utilize mechanical pneumatic hydraulic electrical magnetic optical informational chemical and or biological principles signals and or inputs to perform the task s . In certain embodiments a processor can act upon information by manipulating analyzing modifying converting transmitting the information for use by an executable procedure and or an information device and or routing the information to an output device. Processor may comprise a central processing unit CPU local controller remote controller parallel controller and or distributed controller etc. Processor may also comprise a general purpose device such as a microcontroller and or a microprocessor. In certain embodiments processor may comprise a dedicated purpose device such as an Application Specific Integrated Circuit ASIC or a Field Programmable Gate Array FPGA that has been designed to implement in its hardware and or firmware at least a part of an embodiment disclosed herein.

User interface may comprise any device and or means for rendering information to a user and or requesting information from the user. User interface may include for example at least one of textual graphical audio video animation and or haptic elements. A textual element can be provided for example by a printer monitor display projector etc. A graphical element can be provided for example via a monitor display projector and or visual indication device such as a light flag beacon etc. An audio element can be provided for example via a speaker microphone and or other sound generating and or receiving device. A video element or animation element can be provided for example via a monitor display projector and or other visual device. A haptic element can be provided for example via a very low frequency speaker vibrator tactile stimulator tactile pad simulator keyboard keypad mouse trackball joystick gamepad wheel touchpad touch panel pointing device and or other haptic device etc. User interface can include one or more textual elements such as for example one or more letters number symbols etc. User interface can include one or more graphical elements such as for example an image photograph drawing icon window title bar panel sheet tab drawer matrix table form calendar outline view frame dialog box static text text box list pick list pop up list pull down list menu tool bar dock check box radio button hyperlink browser button control palette preview panel color wheel dial slider scroll bar cursor status bar stepper and or progress indicator etc. A textual and or graphical element can be used for selecting programming adjusting changing specifying etc. an appearance background color background style border style border thickness foreground color font font style font size alignment line spacing indent maximum data length validation query cursor type pointer type auto sizing position and or dimension etc. User interface can include one or more audio elements such as for example a volume control pitch control speed control voice selector and or one or more elements for controlling audio play speed pause fast forward reverse etc. User interface can include one or more video elements such as for example elements controlling video play speed pause fast forward reverse zoom in zoom out rotate and or tilt etc. User interface can include one or more animation elements such as for example elements controlling animation play pause fast forward reverse zoom in zoom out rotate tilt color intensity speed frequency appearance etc. User interface can include one or more haptic elements such as for example elements utilizing tactile stimulus force pressure vibration motion displacement temperature etc.

The present invention can be realized in hardware software or a combination of hardware and software. The invention can be realized in a centralized fashion in one computer system or in a distributed fashion where different elements are spread across several computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suitable.

The present invention can be embedded in a computer program product such as a computer readable storage medium or device which when loaded into a computer system is able to carry out the different methods described herein. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or indirectly after either or both of the following a conversion to another language code or notation or b reproduction in a different material form.

Although the present disclosure provides certain embodiments and applications other embodiments apparent to those of ordinary skill in the art including embodiments that do not provide all of the features and advantages set forth herein are also within the scope of this disclosure.

The foregoing disclosure has been set forth merely to illustrate the invention and is not intended to be limiting. It will be appreciated that modifications variations and additional embodiments are covered by the above teachings and within the purview of the appended claims without departing from the spirit and intended scope of the invention. Other logic may also be provided as part of the exemplary embodiments but are not included here so as not to obfuscate the present invention. Since modifications of the disclosed embodiments incorporating the spirit and substance of the invention may occur to persons skilled in the art the invention should be construed to include everything within the scope of the appended claims and equivalents thereof.

