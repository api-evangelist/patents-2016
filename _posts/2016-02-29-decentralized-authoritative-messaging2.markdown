---

title: Decentralized authoritative messaging
abstract: A secure chat client is described that allows users to exchange encrypted communications via secure chat rooms, as well as one-to-one communications. In particular, the secure chat client allows users to create, configure, and manage secure chat rooms. Furthermore, the secure chat client provides users with the ability to recover secure messages when they obtain a new device or otherwise lose communications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09590956&OS=09590956&RS=09590956
owner: Wickr Inc.
number: 09590956
owner_city: San Francisco
owner_country: US
publication_date: 20160229
---
This application claims priority to U.S. Provisional Patent Application No. 62 269 887 entitled Decentralized Authoritative Messaging filed Dec. 18 2015 which is incorporated herein by reference in its entirety.

Companies today are faced with the challenge of providing communication tools to support an increasingly mobile workforce. Enterprises who value the privacy and secrecy of their sensitive communications should consider who sits in the middle of their electronic communications. Between foreign governments and infrastructure providers the opportunity to capture unprotected text messages chat rooms phone calls and emails deliberately is real. Thus there is a need for a secure communications tool that allows enterprises to collaborate via secure chat rooms and one to one communications to accommodate a mobile workforce.

The present disclosure describes a system and method for creating and managing secure chat rooms. Secure chat rooms allow groups of users such as team members or departments to collaborate on projects and share information. In some aspects sharing information may include confidential or proprietary information. The present disclosure describes a secure messaging app that provides users the ability to exchange encrypted communications via secure chat rooms as well as one to one communications.

In order to create a secure chat room a user accesses the secure messaging app and elects to create a new room. The user creating the room is a room administrator by default. However the user may designate one or more room administrators. Additionally the user may configure one or more parameters for the secure chat room including a title of the room a description of the room and a Time to Live parameter for messages. Next the user may add participants to the secure chat room. Once the user has set the parameters for the secure chat room the user s secure messaging app may generate a group identifier for the secure chat room. The parameters and group identifier may be bundled and transmitted to the secure room s participants via an encrypted message that instructs the receivers secure messaging apps to create a secure room. The room creator will store the information for the secure chat room in an encrypted format in a local database on the user s device.

In response to receiving the encrypted message the participants secure messaging app may decrypt the message and begin creating and configuring the secure chat room in accordance with the information provided by the room creator. In particular the participants secure message app may use the one or more parameters set by the room creator to set the room title the room description the Time to Live for messages and display the list of participants. After creating the secure chat room the receivers secure messaging app may store the secure room information and transaction information for the secure chat room in the receivers local databases. The secure room information and transaction information may be stored in a block chain format such that each participant of the secure chat room documents all commands and communications. In this regard the secure chat room is managed in a distributed manner by all the participants of the room and not centrally on a server.

Once the secure chat room is created participants may exchange encrypted communications for the chat room. Further room administrators may update one or more parameters of the secure chat room after the room is created. However the updates to one or more secure chat room parameters may cause a participants secure messaging app to not recognize a received communication. For example a secure messaging app may not recognize a sender of a communication after the participant list has been changed. Alternatively a secure messaging app may not recognize an updated group identifier of a received communication.

To handle these situations and others like them the participant s secure messaging app transmits a request to the sender of the unrecognized message to obtain additional information. The request may include a group identifier and a message identifier for the sender s reference.

In response to the request the sender may use the group identifier and message identifier to provide the sender with additional information. The additional information may include details for the participant to retrieve and decrypt the encrypted message. For example the details may include metadata the message identifier and the message encryption key. In this regard the participant may obtain the encrypted message from a security platform using the metadata and message identifier and decrypt the message using the message encryption key. Accordingly the participant may subsequently update the secure chat room information including transaction information in response to successfully decrypting the message.

If a participant is missing communications or fails to recognize a message the participant may send a recover lost communications request to another participant to obtain secure chat room communications over a certain period of time. For example the participant may send the recover lost communications message to the last sender to provide a communication to the secure chat room. In response to the recover lost communications message the sender may determine which communications the requester was a participant for. Accordingly the sender may generate a communication information array providing details for the requester to retrieve the messages from the security platform. In some embodiments the recover lost communications message may come from an administrator and the sender will provide the requester with the secure chat room s entire history.

While the examples described herein are described with respect to restoring a user s account to a new device the systems and processes may be applicable to other techniques.

The present disclosure can be implemented in numerous ways including as a process an apparatus a system a composition of matter a computer program product embodied on a non transitory computer readable storage medium and or a processor such as a processor configured to execute instructions stored on and or provided by a memory coupled to the processor. These implementations or any other form that the present disclosure may take may be referred to as techniques. In general the order of the steps of disclosed processes may be altered within the scope of the present disclosure. Unless stated otherwise a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein the term processor refers to one or more devices circuits and or processing cores configured to process data such as computer program instructions.

A detailed description of one or more embodiments of the present disclosure is provided below along with accompanying figures that illustrate the principles of the present disclosure. The present disclosure is described in connection with such embodiments but the present disclosure is not limited to any embodiment. The scope of the present disclosure is limited only by the claims and the present disclosure encompasses numerous alternatives modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the present disclosure. These details are provided for the purpose of example and the present disclosure may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the present disclosure has not been described in detail so that the present disclosure is not unnecessarily obscured.

Typically secure communications are exchanged using secure message datagrams which encapsulate a sender s message. The datagram also allows information such as encryption information hardware binding information message security controls and decryption information for multiple receivers as applicable to securely travel with the message. The secure message datagram also provides cross platform support so that users may communicate regardless of their operating systems e.g. Linux iOS and Windows smart phone platforms e.g. iPhone Android Windows Blackberry etc. and device types e.g. mobile smart phones tablets laptops desktops etc. . Using the techniques described herein only intended accounts on intended devices are able to decrypt the messages. Thus for example the security platform is unable to decrypt messages. As will further be described in more detail below using the techniques described herein message participants can maintain a forward secret secure messaging channel whether communicating synchronously e.g. where all participants are online or otherwise able to communicate with platform or asynchronously e.g. where at least one participant is offline or otherwise not in communication with platform .

As shown in security platform may be implemented on server . Server may include a processor memory user directory and the security platform . In this regard server may be a stand alone server a corporate server or a server located in a server farm or cloud computing environment. In some embodiments the server may be a cloud service provider running a virtual machine configured to provide security platform to an enterprise as a Software as a Service SaaS .

Processor may be any conventional processor capable of interacting with memory user directory and security platform . In this regard processor may include a processor multiprocessors a multicore processor or any combination thereof. Alternatively processor may be a dedicated controller such as an Application Specific Integrated Circuit ASIC or Field Programmable Gate Array FPGA .

Memory stores information accessible by processor including instructions and data that may be executed or otherwise used by the processor . Memory may be any type of media capable of storing information accessible by the processor including a non transitory computer readable medium or any other suitable medium that stores data that may be read with the aid of an electronic device such as a hard drive solid state drive memory card flash drive ROM RAM DVD or other optical disks as well as other write capable and read only memories. Memory may include short term or temporary storage as well as long term or persistent storage. According to some embodiments memory may include a storage area network SAN accessible by the security platform .

User directory may be any database or table capable of providing directory services. For example user directory may include a corporate directory that include employees first and last names usernames email address phone numbers department information etc. Alternatively user directory may be a database or table to maintain user information for users of security platform . In this regard user directory may be encrypted. In some embodiments user directory may serve as a secure directory that includes a table of hashed usernames a table of appIDs and a table of deviceIDs for a secure messaging app. Accordingly user directory may be used to share information about users systems networks services and applications. According to some embodiments the user directory may include a Lightweight Directory Access Protocol LDAP .

Although illustrates processor memory user directory and security platform as being located on server processor and memory may comprise multiple processors and memories that may or may not be stored within the same physical housing. For example memory may be a hard drive or other storage media located in a server farm of a data center. Accordingly references to a processor a computer or a memory will be understood to include references to a collection of processors or computers or memories that may or may not operate in parallel. Further the user directory may be located in a separate physical housing from processing engine and memory . Moreover security platform may be distributed across multiple servers.

Security platform may be configured to facilitate the exchange of communications for users of a secure messaging app. As used herein communications and messages may take a variety of forms including text messages chat room messages control messages commands e mails documents audiovisual files Short Message Service messages SMSes voice calls i.e. VOIP and video calls. Additionally the content of the messages and or communications may pertain to electronic transactions such as credit card security password protection directories and storage drive protection video on demand security online gaming gambling electronic distribution of music videos documents online learning systems databases cloud storage and cloud environments bank transactions voting processes military communications security of medical records communication between medically implanted devices and doctors etc. The exchange of messages and or communications is explained in further detail below.

Security platform may provide encrypted communications that easily integrate into and secure existing systems while providing compliant and secure communications. In this regard security platform may integrate with existing identity systems such as user directory . Further security platform may include built in support for enterprise data retention and support systems.

Security platform may also include database . Database may be a relational database that stores information in a variety of tables. In this regard database may include a record for each user of platform to allow users to find other users and communicate with other users. Accordingly database may include a table of hashed usernames a table of public keys and reference values a table of appIDs and a table of deviceIDs . Each user record may include a hashed username in table a pool of ECDH public components and associated reference values in table app ID s in table and deviceID s in table . Additionally each user record may store privacy mode and privacy list entries to control with whom the user may communicate. Additionally database may include a table of messages . That is the security platform may store messages for a predetermined time in table . For example when a message is received the security platform may store the message in the table of messages and provide an alert such as a push notification to the receiver. Accordingly a receiver may access the security platform to obtain his or her messages stored in table . In preferred embodiments table may store messages for 30 days however this may be adjusted as needed based on industry standards and or to comply with regulatory schemes.

While a database is shown in other techniques can be used to store the information used by platform to facilitate exchange of messages. For example the table of messages may be stored in a separate storage such as memory instead of being stored within database . Alternatively the information contained in the database may be divided between database and user directory . In this regard database and user directory may interface to exchange information. Further additional information can be securely stored on platform whether in database or another appropriate location such as user verification information and user verification settings.

Security platform may include one or more interface s for communicating with client devices and . As one example platform may provide an application programming interface API configured to communicate with apps installed on client devices. Platform may also provide other types of interfaces such as a web interface or stand alone software programs for desktops and laptops running on various Operating Systems OSes . The web interface may allow users of client devices to exchange messages securely whether with one another or other users without the need for a separately installed messaging application. The standalone software program may allow users to exchange secure messages via software that is downloaded by each user. According to some embodiments platform may make available a master clock time available via the one or more interface s . The master clock time may be used by client apps to enforce secure time to live TTL values of messages. The TTL values can be used to enforce e.g. on behalf of a message sender time constraints on message access e.g. by a receiver .

Users of client devices such as client devices may communicate securely with one another using the techniques described herein. For example client devices may make use of the security platform and the techniques described herein via a secure messaging app not shown . As shown in client devices may be mobile devices such as a laptop smart phone or tablet or computing devices such as desktop computers or servers. As noted above the secure messaging app described herein allows cross platform communications thereby allowing users of various devices to communicate seamlessly. Further each user may have different instances of the messaging app across multiple devices. That is the user of device may be able to receive messages on both device as well as on any other devices that the user may have that includes a copy of the secure messaging app such as a laptop. In some embodiments client devices may be the users personal devices i.e. a bring your own device BYOD scenario . Alternatively client devices may include other types of devices such as game consoles camera video recorders video players e.g. incorporating DVD Blu ray Red Laser Optical and or streaming technologies smart TVs and other network connected appliances as applicable.

Communications between users of client devices may be exchanged via network . Network may include various configurations and use various protocols including the Internet World Wide Web intranets virtual private networks local Ethernet networks private networks using communication protocols proprietary to one or more companies cellular and wireless networks e.g. WiFi instant messaging HTTP and SMTP and various combinations of the foregoing.

As will be described in more detail below processor may perform a plurality of tasks on behalf of security platform . Furthermore whenever platform is described as performing a task either a single component or a subset of components or all components of platform or enterprise server may cooperate to perform the task. For example platform may designate one of the keys in a pool of ECDH public components received from a user of a device as a reserve key. Another task performed by platform may include facilitating the addition of new keys to a user s pool of public components as they are used. Yet another task performed by platform may include dynamically adjusting the size of a user s pool of public components as needed.

Processor may be any conventional processor capable of interacting with the components of client device . For example processor may include a processor multiprocessors multicore processor a dedicated controller such as an ASIC or an FPGA or any combination thereof. Memory may store information accessible by processor including instructions and data that may be executed or otherwise used by the processor and or crypto accelerator . For example memory may store instructions such as app . In preferred embodiments app may be a secure messaging app that provides users with the ability to transmit and receive encrypted communications. Encrypted communications may include direct communications e.g. one to one communications between a sender and receiver group chats or secure chat room communications. Data stored by memory may include database . Database may be encrypted via an encryption algorithm such as Advanced Encryption Standard AES and a 256 bit key referred to hereinafter as a local storage key. In some embodiments database may be used to store information related to secure messaging app . For example database may index communications transmitted and received by the secure messaging app including a message identifier a hash of the sender s username a hash of the sender s appID a hash of the receiver s username a hash of the receiver s appID the message encryption key and a timestamp of the message. According to another example database may store information related to secure chat rooms. In this regard the database may create a block chain of transactions for the secure chat room. Each transaction in the block chain may include the message identifier a group identifier the hash of the sender s username the hash of the sender s appID the hash of the receiver s username the hash of the receiver s appID a message type the message encryption key and the timestamp of the message. The message type may specify whether the message is a control message or a standard communication. Control messages are either authoritative control messages or non authoritative control messages. Authoritative control messages originate from room administrators and modify a state of the secure chat room. For example authoritative control messages may include commands such as creating the secure chat room modifying the secure chat room e.g. changing the TTL or deleting the secure chat room. Secure chat room participants other than the room administrator may send non authoritative control messages. For instance when a participant opts to leave a secure chat room his or her secure messaging app will send a non authoritative control message indicating that the user has left the secure chat room. Control messages may be stored by participants of the secure chat room regardless of the TTL set for the secure chat room. That is control messages may not be deleted by secure chat room participants secure message apps according to the TTL set for the secure chat room. As will be discussed in greater detail below these control messages may be used by participants should any confusion arise regarding the state of the secure chat room. Alternatively all control messages for a secure chat room may be maintained in a block chain until the next authoritative control message is received. After receiving an authoritative control message participants apps may purge all previous control messages including earlier authoritative and non authoritative control messages. Standard communications may include content for the secure chat room including for example text images video audio and other multimedia content. Standard communications are maintained in the block chain according to the TTL set for the secure chat room. For example if the secure chat room has a TTL of 24 hours standard communications may be deleted from the block chain 24 hours after the transaction has been created. Additionally each transaction in the block chain may be signed using a secret shared amongst the room participants. In this way a record of the secure chat room is maintained by each participant and not centrally on the security platform or another server. Accordingly memory may be any type of media capable of storing the information above including a non transitory computer readable medium or any other suitable medium that stores data that may be read with the aid of an electronic device such as a hard drive solid state drive memory card flash drive ROM RAM DVD or other optical disks as well as other write capable and read only memories. Memory may include short term or temporary storage as well as long term or persistent storage.

Display may be any electronic device capable of visually presenting information. In mobile devices such as smart phones and tablets display may be a touchscreen display. In this regard display may be integrated with I O unit to detect user inputs as well as output data. In computing devices display may be an output such as a VGA DVI or HDMI output configured to connect to a monitor. I O unit may be capable of receiving input from a user. As noted above the I O unit may work with touchscreen displays to receive input from a user. Alternatively the I O unit may be an interface capable of interacting with input and output devices such as keyboards mice monitors printers etc.

Crypto accelerator may be dedicated hardware software or a combination thereof that is capable of performing cryptographic operations such as key generation random number generation encryption decryption signature generation signature verification etc. In preferred embodiments crypto accelerator is a dedicated processor configured to perform cryptographic operations on behalf of processor . In this regard app may make use of crypto accelerator to provide the secure communication functions described in greater detail below.

Network interface may be dedicated hardware software or a combination thereof that is capable of connecting client device to network . In this regard network interface may include various configurations and use various communication protocols including Ethernet TCP IP ATM cellular and wireless communication protocols e.g. 802.11 LTE instant messaging HTTP and SMTP and various combinations of the foregoing.

In order to send and receive secure communications both the sender and receiver need to have a copy of the app running on their respective devices. In this regard illustrates an exemplary process for transmitting encrypted communications using the app . The method begins in bock with the sender s app obtaining the intended receiver s public information. Obtaining the intended receiver s public information may include transmitting a request to the security platform or another secure directory for the intended receiver s public information. In response to receiving the request the security platform or secure directory responds with the intended receiver s public information. In this regard the public information may include at least one of the receiver s app ID user level signing public key signed app level signing public key a signed ephemeral ECDH public component an identifier of the ephemeral ECDH public component and the receiver s device key. In preferred embodiments the security platform may randomly select one of the signed ephemeral ECDH public components from a pool of public components that the receiver has previously uploaded to security platform . Further the security platform will delete the selected ephemeral ECDH public component so it is not used for any subsequent communications. If the receiver has multiple instances of the app installed on different devices the sender s app will receive a unique signed app level signing public key signed ephemeral ECDH public component identifier of the ephemeral ECDH public component and device key for each instance of app in block . The multiple instance information may be provided in an arrayed response by the security platform.

In block the sender s app authenticates the public information received from the security platform. In this regard the user level signing public key received from security platform is used to verify a signature attached to the app level signing public key. If the receiver has multiple instances of the app the sender s app will authenticate the app level public key for each of the receiver s apps. When the signature attached to the app level public key is successfully validated the sender s app uses the app level signing public key to validate the signatures appended to the received ephemeral ECDH public component.

After authenticating the receiver s public information the sender begins composing their message to the receiver in block . While the sender is preparing the message the sender s app generates a random 256 bit message key in block . According to some embodiments the sender s app may use the crypto accelerator described above to generate the message key. In preferred embodiments the message key is a symmetric key generated by applying multiple rounds of a hash function to a set of pseudorandom bytes derived from the sender s device. The pseudorandom bytes may be obtained from appropriate sources such as ephemeral environmental noise obtained from device drivers and other kernel operations. Once the message is composed and the message key generated the sender s app will encrypt the message in block . The secure messaging app may encrypt the message via the crypto accelerator using a symmetric encryption algorithm. In some embodiments the secure messaging app encrypts the message using the Advanced Encryption Standard AES .

In block the sender s app generates a pair of ephemeral ECDH components. The pair of ephemeral ECDH components is generated using ECC. In block the sender s app derives a key encrypting key using the receiver s ephemeral ECDH public component and the ephemeral ECDH private component generated by the sender s app. In preferred embodiments the key encrypting key is a 256 bit key derived using ECDH.

In block the message key is encrypted using the key encrypting key. In preferred embodiments the message key is encrypted by the crypto accelerator using AES and the key encrypting key. Next in block the sender s app encrypts the encrypted message key again using the receiver s device key obtained with the receiver s public information. Preferably the encrypted message key is encrypted by the crypto accelerator using AES and the receiver s device key. Encrypting the message key with an ephemeral component generated by the receiver s app and the device key provides a twice encrypted message key that effectively binds the message to the receiver s secure messaging app and device.

In block the sender s app determines whether the receiver has multiple instances of the app installed on a plurality of devices. If so the sender s app repeats blocks and for each instance of the receiver s app. In this regard each instance will receive a twice encrypted message key that is unique to that instantiation of the secure messaging app. Accordingly each instance will only be able to decrypt the twice encrypted message key that has been encrypted with the app s unique device key and ephemeral public component.

When twice encrypted message keys have been generated for each of the receiver s instantiations of the app the sender s app begins preparing a datagram in block . The datagram includes a payload and a header. The payload comprises the encrypted message while the header includes destination entries for each of receiver s apps. That is the sender s app addresses the message in a one to many manner. For instance the sender addresses the message to the receiver but the sender s app composes a datagram that is addressed to each of the receiver s apps. Accordingly each destination entry includes the twice encrypted message key specific to that app the ephemeral ECDH key identifier unique to the receiver s app and the sender s signed ephemeral public component.

Once the datagram is assembled the sender s app will transmit the datagram to the receiver in block . In preferred embodiments the sender s app may transmit the datagram to the security platform. Accordingly the security platform will notify receivers that they have new messages waiting for them. Alternatively the sender and receiver may communicate in a peer to peer setting. According to these embodiments the sender s app may transmit the datagram directly to the receiver in block .

In block the receiver s secure messaging app decrypts the twice encrypted message key using the device key associated with the receiver s device. Next the receiver s secure messaging app uses the ECDH component identifier to retrieve the ephemeral ECDH private component that corresponds to the public component used to generate the key encrypting key in block . Next in block the receiver s secure messaging app derives the key encrypting key using the retrieved ephemeral private component and the sender s ephemeral public component that was received in the datagram. After deriving the key encrypting key the receiver s secure messaging app decrypts the encrypted message key in block to obtain a decrypted message key. In block the decrypted message key is used to decrypt the message contained in the sender s datagram. In preferred embodiments the message is decrypted via a symmetric encryption decryption scheme such as AES. Finally the decrypted message is provided to the receiver in block . The decrypted message may be encrypted locally on the receiver s device using a local storage key. In this regard the secure messaging app encrypts messages at rest on the receiver s device. The local storage key may be a 256 bit key that is used to encrypt data on the receiver s device using a symmetric encryption algorithm such as AES. Thus the secure messaging app secures data both in transit and at rest.

In addition to providing secure communications the app may provide secure chat rooms that allow groups of people to communicate securely. shows an exemplary process for creating a secure chat room.

The process begins in block when a user referred to hereinafter as a room administrator or room admin creates a secure room. Creating a secure room may be similar to creating a secure message to a receiver. That is the room administrator may select a New Secure Room icon. Alternatively the room administrator may be able to create a new secure room from a drop down menu. In other alternatives the app may prompt the user as to whether he or she would like to create a secure room when creating a new message.

Once the secure room is created the room administrator may set the secure room s preferences in block . Setting the secure room s preferences may include assigning room administrator privileges to other participants of the secure chat room. Additionally or alternatively setting the room preferences may include assigning the secure chat room a title adding a description of the room and or setting a Time to Live TTL for messages submitted to the chat room. The TTL for messages may specify how long participants can view messages in the group chat. According to preferred embodiments the TTL may be specified by the room administrator and apply to all chats submitted to the secure chat room. Alternatively the TTL may be set by the sender of a communication. In some embodiments the TTL may be set for the secure chat room but senders may have the option to change the TTL for individual communications.

After setting the room preferences the room administrator may add participants to the secure room in block . Adding participants to the secure room may include selecting usernames from a directory. For example if the app is used by an enterprise participants may be added to a group chat from the enterprise s corporate directory. Alternatively the participants may be added based on an external unique identifier such as a telephone number or an email address. If the external users do not have a copy of the app they may be prompted to obtain a copy from a third party.

In block the room administrator s app generates a group identifier for the secure chat room. In preferred embodiments the group identifier may be a hash of the room title and description. Alternatively the group identifier may be a random identifier generated by a pseudorandom number generator. In this regard the group identifier may be any unique identifier used by the secure messaging apps to identify which chat room received communications belong to. Next the sender s app generates secure room information in block . The secure room information may include the room preferences set by the room administrator and the group identifier generated by the sender s app.

In block a Create Secure Room control message is transmitted to participants of the secure chat room. In this regard the Create Secure Room message may include a command instructing the participants apps to create a secure room. Further the Create Secure Room message may include the secure room information and metadata that identifies the participants of the secure chat room. In preferred embodiments hashed usernames of the secure chat room s participants are included in the metadata. The Create Secure Room command the secure room information and the metadata are transmitted to room participants in the payload of the secure datagram described above. That is the Create Secure Room command the secure room information and the metadata may be encrypted with a random message key which is encrypted using information unique to each room participant. Accordingly participants of the secure chat room may be able to decrypt the random Create Secure Room message using the techniques described above.

When the user wishes to create a new secure chat room a Create a Room window is displayed. The Create a Room window includes a plurality of fields for the user Alice Adams to set preferences for the secure chat room. For example field may be a Title Field where the user may enter a title for the secure chat room. Field may be a Purpose Field so that a user may enter a brief description of the room. According to some embodiments the Purpose Field may be optional. Additionally the window may include a TTL Field that allows the room administrator to set a TTL for the communications of the secure chat room. illustrates field as a drop down menu displaying a plurality of options for the length with which communications will be available to room participants. While the TTL is displayed as a drop down menu additional interfaces such as radio buttons or a sliding bar may be used to define the TTL value for the secure chat room. Additionally the TTL may set to a plurality of values. For example the TTL may be turned off or set to either 10 minutes 1 hour 1 day 1 week or 30 days. In this regard the TTL may be configured based on user needs.

Field is a search field to allow the user to add participants to the secure chat room. According to preferred embodiments field may allow users to search for participants based on username phone number email address or other unique identifying information. Field may list the participants of the secure chat room. The participants may be listed alphabetically. Alternatively room administrators may be listed first with chat room participants listed thereafter in alphabetical order. Icon may be used to distinguish room administrators from other participants. In this regard icon may appear next to all users who have been delegated room administrator privileges. Field may be a directory listing all users in alphabetical order. In this regard users may use field to select participants for the secure chat room. Once the user has set all the chat room preferences and selected the chat room participants the user may select button to create the secure chat room. In response to selecting button the Create a Secure Room message will be sent to all chat room participants.

In response to receiving the Create a Secure Room message a receiver s app may create a secure room based on the information contained therein. illustrates an exemplary process for receiving an invitation to a secure chat room. In block the participant receives the Create Secure Room message from the room creator. As noted above receiving the Create Secure Room message may be in response to the participant receiving an alert such as a push notification from the security platform. In response to receiving the alert the participant s app may connect to the security platform and download the Create Secure Room message. Alternatively the receiver s app may receive the Create Secure Room message directly from the sender via a peer to peer communication. In block the receiver s app decrypts the received Create Secure Room message using the techniques described above with respect to .

Once the Create Secure Room message is decrypted the receiver s app extracts the secure room information from the Create Secure Room message in block . Next in block the receiver s app obtains a list of participants from the metadata included in Create Secure Room message. As noted above the list of participants may include hashed usernames for the participants of the secure chat room. Accordingly the receiver s app may compare the hashed username to usernames stored in the directory to display the participant s actual name. If the hashed username does not appear in the directory the receiver s app may just display the username or other identifying information until the app is able to resolve the user s name to the username.

In block the receiver s app creates the secure chat room. In particular the receiver s app may use the secure room information and list of participants received in the Create Secure Room message to create and configure the secure chat room. Configuring the secure chat room may include displaying the title at the top of the chat room displaying a room description below the room s title and setting the TTL for the chat room. This information may be displayed in the secure chat room or available through a series of menu options.

After creating the secure chat room the receiver s app may store the secure room information locally in the receiver s database in block . In preferred embodiments the receiver s app creates a block chain for the secure chat room. As noted above the block chain may index each transaction for the secure chat room with the first entry in the block chain being the Create Secure Room message. In some embodiments the block chain may be verified by other participants of the secure chat room before being stored in the receiver s database. That is participants may corroborate each block chain entry within a predetermined time frame. After it is stored locally in the receiver s database the secure room information may be encrypted using the receiver app s local storage key in block . Additionally metadata associated with the secure chat room may also be encrypted with the local storage key.

After creating the secure chat room participants may send and receive messages to the secure chat room using the techniques described above. For example sending a message to a secure chat room may be similar to the techniques described above with respect to with the addition of a group identifier being added to the message. Similarly a receiving app may decrypt messages and use the group identifier to associate the received message with the secure chat room associated with the group identifier. illustrates an example of a secure chat room . Similar to above secure chat room displays user information in field . Field displays the user s secure chat rooms and field illustrates that Test Room is selected. Accordingly when different secure chat rooms are selected different rooms may be highlighted. Similarly field shows the user s messages while field lists the user s individual communications. Continuing the example above secure chat room shows that Alice Adams is the user and she belongs to three secure chat rooms and is participating in three one to one communication sessions. Furthermore shows that Test Room is selected.

Test Room is displayed is displayed in secure chat room . In particular secure chat room includes the room title in field a search field the TTL status in field and the participants of secure chat room in field . Search field provides users with the ability to do a text search for communications made in the secure chat room. Further selecting field may change the display to list all the participants in the secure chat room. The text of the secure chat room is displayed in . Further a text box is provided so that the user Alice Adams may enter messages and submit them to the secure chat room.

The techniques described above discuss creating and configuring a secure chat room as well as sending encrypted communications to the secure chat room. In this regard the app needs to be able to distinguish one to one communications from those that belong to secure chat rooms and deliver those messages that belong to secure chat rooms to the appropriate secure chat room. illustrate an exemplary process for handling received messages.

In block the receiver s app receives a message. As noted above this may include downloading the message from the security platform in response to receiving an alert or alternatively receiving the message directly from the sender. In block the receiver s app decrypts the message using the techniques described above with respect to .

In block the receiver s app determines whether the received message is for a secure chat room or whether it is a one to one communication between the receiver and another user. For example the receiver s app may determine from the message type field whether the message is intended for a secure chat room. In other examples the receiver s app may determine if a group identifier is included in the message. If a group identifier is included in the message then the receiver s app may determine that the message is a chat room message. If the received message is not for a secure chat room then the receiver s app provides the decrypted message as a one to one communication in block .

If the message is destined for a secure chat room then the receiver s app determines whether the received message belongs to an existing room or group in block . In this regard the receiver s app may compare the received group identifier to group identifiers maintained in the device s local database to determine which group if any the message belongs to. If the receiver s app determines that the message does not belong to an existing room or group in block the process proceeds to block where the receiver s app may send a request to the sender s app for additional information. The request for additional information may include identifying information for the sender s reference such as the group identifier and message identifier.

If the group identifier belongs to an existing secure chat rom the process proceeds to block where the receiver s app determines whether the message is from a participant of the secure chat room. For example the receiver s app may compare the sender of the message to the participant list stored on the receiver s device. If the sender does not appear on the sender s list then the process proceeds to block where the receiver s app transmits a request for additional information to the sender.

When the receiver s app determines that the message is from a secure chat room participant the process proceeds to block where the received message is associated with the existing room and or group. Accordingly the decrypted message is provided to the secure chat room in block . Providing the decrypted message may include displaying the text of the message or rendering content that was provided in the message. Further the message may be recorded in the local database on the participant s device. In preferred embodiments the communications is recorded as a transaction in a block chain stored in the participant s device as discussed above.

When the participant s app makes a request to the sender s app for failing to recognize the received message the sender may respond with the information requested by the receiver in block . This response may include transaction history for the secure chat room as well as details for how the participant s app may retrieve the message. That is the sender s app may retrieve metadata the message identifier and the message encryption key from their local database and provide it participant via an encrypted communication. In some embodiments the sender s app may provide metadata and message identifier s for all of the control messages for the secure chat room to the participant s app such that the participant s app may determine the state of the secure chat room. Alternatively the sender s app may provide metadata and message identifier s for both control messages and standard communications to allow the participant s app to determine the state of the secure chat room and update communications if necessary.

In block the receiver s app may retrieve the message s using the details contained in the sender s response. According to preferred embodiments the receiver s app may provide the information received from the sender to the security platform. For example the receiver s app may provide the metadata and message identifier s to the security platform. The security platform may then provide the receiver with the message s that correspond to the information received from the sender. In block the receiver s app validates the information contained in the messages obtained from the security platform to obtain the state of the secure chat room. For example the receiver s app may validate the sender the message identifier and the message key. As noted above the sender may provide the receiver with the message encryption key to decrypt the message. In these embodiments the receiver s app would not have to perform the steps required to decrypt the message encryption key since the receiver app is already in possession of the key needed to decrypt the message. Accordingly the message is decrypted using the message key received from the sender and provided to the secure chat room in block .

Turning to an exemplary process for responding to a receiver s request for additional information is shown. In block the sender would receive the request from a receiver regarding a sent message. As noted above the request may include the group identifier and the message identifier. Accordingly the sender s app extracts the group identifier and the message identifier from the receiver s request in block . In block the sender s app retrieves the additional information requested from the receiver from his or her local database based on the extracted information. The information retrieved by the sender s app provides details such that the receiver s app may obtain the referenced message s from the security platform. In this regard the information may include metadata the message identifier and the message encryption key. Alternatively the sender s app may provide information to the receiver s app to obtain updated state information of the secure chat room. Once the information is retrieved by the sender s app it is provided to the receiver via an encrypted message in block .

Periodically the settings and preferences of the secure chat room may need to be updated. For example the TTL may change or participants may be added or removed from the secure chat room. illustrates an exemplary process for making changes to a secure chat room.

In block a receiver app receives a control message updating at least one secure room parameter. The secure room parameters may include updating the TTL or the participant list. In block the receiver app verifies that the control message was sent by a room administrator. This verification may include comparing the sender to the participant list maintained on the receiver s device. If the sender is not a room administrator then the control message is discarded in block . However if the control message originated from a room administrator the process proceeds to block where the secure room parameters are updated on the receiver s device. For example the TTL of the messages in the secure chat room may change. In another example the participant list may be updated. That is participants may be added or removed from the secure chat room. According to preferred embodiments the secure chat room may display a message in the chat room reflecting the updated room parameters. For instance the secure chat room may display that the TTL has changed from one value to another or that certain participants have been added to or removed from the room.

Additionally participants of secure chat rooms may need to catch up on missed communications especially in response to the conditions discussed above. Alternatively users may update their device periodically or get a new device if their old device were lost or stolen. Accordingly participants need a way to catch up or recover and restore chat room messages to their new devices. shows an exemplary process for restoring chat room messages to participants devices.

In block a Recover Lost Communications message is received from a requester. According to some embodiments the recovery message is transmitted in response to being unable to recognize a message. As discussed above a message may be received from a user that does not appear on a participant list or the receiver s app may be unable to resolve the group identifier. Alternatively a recovery message may be transmitted when the requester received a message for a secure chat room. In this regard the requester sends the recovery message to the sender of the received message. Alternatively the requester may be an administrator of the security platform.

In block the sender s app determines which communications the requester was a participant. In preferred embodiments determining whether the requester was a participant in the secure chat room may include going through the block chain stored locally in the sender s local database to determine when the requester was a participant in the secure chat room. In embodiments where the requester is an administrator all communications of the secure chat room may be provided to the requesting device.

In block a communication information array is generated including information identifying the messages that are to be provided to the requester. As noted above this may include messages that the requester was a participant for or the entirety of the secure chat room history. The communication information array includes at least the message identifier s the group identifier and the message encryption key s for each message being provided to the requester. According to some embodiments the communication information array does not include control messages because the requester knows state of room from the most recent communication.

In block the communication information array is transmitted to the requester. Accordingly the requester may use the information in the communication information array to obtain the messages from the security platform. Further the requester may use the message encryption keys provided in the communication information array to decrypt the messages. In this regard the requester may be able to recover and restore secure communications transmitted to the secure chat room.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the present disclosure is not limited to the details provided. There are many alternative ways of implementing the present disclosure. The disclosed embodiments are illustrative and not restrictive.

